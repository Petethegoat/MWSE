{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>The Morrowind Script Extender makes additional functions available for use in Morrowind scripts, beyond those provided by the game's construction set.</p> <p>These extra functions allow modders to add features and behavior to scripts that would otherwise be impractical or impossible.</p> <p>Morrowind Modding Community Discord</p> <p>If you are looking for MWSE scripting advice or discussions, try the Morrowind Modding Community Discord.</p>"},{"location":"#installation","title":"Installation","text":"<p>Before running Morrowind with MWSE enabled, download these prerequisites:</p> <ul> <li>Visual Studio x86 2022 Redistributable. Note that you will need the x86 version, even if you already have the x64 redistributable installed.</li> <li>Morrowind Code Patch modifies the game executable, and MWSE assumes you have at least the base patches performed for its own modifications.</li> <li>Morrowind Graphic Extender XE (MGE XE) allows MWSE to be loaded, and provides additional functionality.</li> </ul> <p>Once these are installed, run MWSE-Update.exe in your Morrowind install folder. MGE XE comes bundled with MWSE's updater to make this process simpler. This updater downloads the latest automated build from GitHub. These can be downloaded manually if the updater fails.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>The Morrowind Script Extender is open source software that welcomes contributions in the forms of ideas, bug fixes, documentation, and new features. There is a separate guide for documentation contributions found here.</p>"},{"location":"#requirements","title":"Requirements","text":""},{"location":"#visual-studio","title":"Visual Studio","text":"<p>Contributing to MWSE requires a copy of Visual Studio 2022, with the following features enabled:</p> <ul> <li>Workloads:<ul> <li>Desktop development with C++</li> </ul> </li> </ul>"},{"location":"#luajit","title":"LuaJIT","text":"<p>LuaJIT needs to be compiled once, and is included in the project. To compile, use Tools &gt; Visual Studio Command Prompt and run the following:</p> <pre><code>cd deps\\LuaJIT\\src\nmsvcbuild.bat\n</code></pre>"},{"location":"#github","title":"GitHub","text":"<p>Code contributions are managed via GitHub.</p>"},{"location":"#discord","title":"Discord","text":"<p>Communication of features, designs, and requests are handled on Discord. See the #mwse channel in the Morrowind Modding Community Discord.</p>"},{"location":"#authors","title":"Authors","text":"<p>The following individuals have contributed to the Morrowind Script Extender.</p> <ul> <li>Anthony Garcia</li> <li>C3pa</li> <li>Charles Cooley (cdcooley)</li> <li>Cody Erekson (Fliggerty)</li> <li>FreshFish</li> <li>Grant McDorman</li> <li>Greatness7</li> <li>Hrnchamd</li> <li>Merzasphor</li> <li>Michael Wallar (NullCascade)</li> <li>OperatorJack</li> <li>Pete Goodfellow (Petethegoat)</li> <li>Pierre Steeg</li> <li>Sebastien Levy (MetaBarj0)</li> <li>Tim Peters</li> <li>Timeslip</li> </ul>"},{"location":"apis/debug/","title":"Debug","text":""},{"location":"apis/debug/#debug","title":"debug","text":"<p>This is an extension of Lua Debug library.</p>"},{"location":"apis/debug/#functions","title":"Functions","text":""},{"location":"apis/debug/#debugclearlogcacheforfile","title":"<code>debug.clearLogCacheForFile</code>","text":"<p>Clears any prefix information from cache for use with <code>debug.log</code>. This is useful if your file loads dynamically via <code>dofile</code>, and is subject to change during development.</p> <pre><code>debug.clearLogCacheForFile(file)\n</code></pre> <p>Parameters:</p> <ul> <li><code>file</code> (string?): The path to the file. If omitted, the calling file will have its associated log cache removed.</li> </ul>"},{"location":"apis/debug/#debuglog","title":"<code>debug.log</code>","text":"<p>Logs a message to <code>MWSE.log</code> file. The output format is <code>[path] \"msg\" = msg</code>, where the <code>path</code> is the path and line at which the function was called.</p> <pre><code>local value = debug.log(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The message to log.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (string)</li> </ul>"},{"location":"apis/dofile/","title":"Dofile","text":""},{"location":"apis/dofile/#dofile","title":"dofile","text":"<p>Reads, loads, and excutes a lua file at a given path. Similar to the <code>require</code> and <code>include</code> functions, <code>dofile</code> allows the use of periods as a path delimiter. Unlike <code>require</code>, a path relative to Morrowind.exe may be given.</p> <pre><code>dofile(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string)</li> </ul>"},{"location":"apis/event/","title":"Event","text":""},{"location":"apis/event/#event","title":"event","text":"<p>The event library helps to instruct mwse to call a given function when a specific action is taken in the game.</p>"},{"location":"apis/event/#functions","title":"Functions","text":""},{"location":"apis/event/#eventclear","title":"<code>event.clear</code>","text":"<p>Removes all callbacks registered for a given event.</p> <pre><code>event.clear(eventId, filter)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventId</code> (string): Optional.</li> <li><code>filter</code> (userdata, string, number): Optional.</li> </ul>"},{"location":"apis/event/#eventisregistered","title":"<code>event.isRegistered</code>","text":"<p>Returns true for a function previously registered to an event with <code>event.register()</code>.</p> <pre><code>local result = event.isRegistered(eventId, callback, { filter = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventId</code> (string)</li> <li><code>callback</code> (function)</li> <li><code>options</code> (table): Optional.<ul> <li><code>filter</code> (userdata, string, number): Optional. Allows searching for a callback function registered with the specified filter.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/event/#eventregister","title":"<code>event.register</code>","text":"<p>Registers a function to be called when an event is raised.</p> <pre><code>event.register(eventId, callback, { doOnce = ..., filter = ..., priority = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventId</code> (string)</li> <li><code>callback</code> (function)</li> <li><code>options</code> (table): Optional.<ul> <li><code>doOnce</code> (boolean): Default: <code>false</code>. If this option is set to <code>true</code>, the function registered will be executed only once, and automatically unregistered thereafter.</li> <li><code>filter</code> (userdata, string, number): Optional. This parameter allows selectively executing the callback function only when a specific condition is met. The exact behavior depends on each event.</li> <li><code>priority</code> (number): Optional. Event callback with higher priority is executed before callback with lower priority. Typically used to make certain mods compatible.</li> </ul> </li> </ul>"},{"location":"apis/event/#eventtrigger","title":"<code>event.trigger</code>","text":"<p>Triggers an event. This can be used to trigger custom events with specific data.</p> <pre><code>local resultPayload = event.trigger(eventId, payload, { filter = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventId</code> (string)</li> <li><code>payload</code> (table): Optional.</li> <li><code>options</code> (table): Optional.<ul> <li><code>filter</code> (userdata, string, number): Optional. Assigning a filter will make the event callbacks with filters matching this one to be executed first. All the other unfiltered callbacks are executed after.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>resultPayload</code> (table): This is the modified payload after all the callback functions registered on the triggered event are executed. Returning <code>true</code> from a callback function will set both <code>payload.block</code> and <code>payload.claim</code> to <code>true</code>. After an event has been claimed by a certain function (by setting the <code>claim</code> in eventData to <code>true</code>) no other registered callback functions will be executed on this event trigger. This is useful if you wish to implement blocking system for your event. In addition, this can be used to the same effect as some MWSE's events allow changing some of the <code>eventData</code> values to modify the behavior of the vanilla mechanics.</li> </ul>"},{"location":"apis/event/#eventunregister","title":"<code>event.unregister</code>","text":"<p>Unregisters a function previously registered for an event with <code>event.register()</code>.</p> <pre><code>event.unregister(eventId, callback, { filter = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventId</code> (string)</li> <li><code>callback</code> (function)</li> <li><code>options</code> (table): Optional.<ul> <li><code>filter</code> (userdata, string, number): Optional. If a callback function was registered with a filter, the same filter needs to be passed to <code>event.unregister</code> to successfully unregister the callback function.</li> </ul> </li> </ul>"},{"location":"apis/include/","title":"Include","text":""},{"location":"apis/include/#include","title":"include","text":"<p>Loads the given module. This functions identically to <code>require</code>, but will return <code>nil</code> instead of erroring if the module couldn't be found. If there is another error is found inside the included file, it will still cause an error in the <code>include</code>ing file.</p> <p>The function starts by looking into the <code>package.loaded</code> table to determine whether <code>modname</code> is already loaded. If it is, then <code>include</code> returns the value stored at <code>package.loaded[modname]</code>. Otherwise, it tries to find a loader for the module.</p> <p>Intended use case for this function is for making interoperability between mods.</p> <pre><code>local result = include(modname)\n</code></pre> <p>Parameters:</p> <ul> <li><code>modname</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table, nil)</li> </ul> Example: Example <p>How to check whether a user has an optional module installed.</p> <pre><code>local optionalModule = include(\"optionalModule.file\")\n\nif optionalModule then\n    -- do stuff with the optinalModule\n    optionalModule.foo(\"bar\")\nelse\n    mwse.log(\"[MyMod] To enjoy all of this mod's features, please install optionalModule.\")\n    -- do some other stuff\nend\n</code></pre>"},{"location":"apis/json/","title":"Json","text":""},{"location":"apis/json/#json","title":"json","text":"<p>Provides support for interacting with json data through an extended dkjson module.</p>"},{"location":"apis/json/#properties","title":"Properties","text":""},{"location":"apis/json/#jsonnull","title":"<code>json.null</code>","text":"<p>You can use this value for setting explicit null values.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/json/#jsonversion","title":"<code>json.version</code>","text":"<p>Current version of dkjson.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/json/#functions","title":"Functions","text":""},{"location":"apis/json/#jsondecode","title":"<code>json.decode</code>","text":"<p>Decode string into a table.</p> <pre><code>local result = json.decode(s, position, nullValue)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> <li><code>position</code> (number): Default: <code>1</code>.</li> <li><code>nullValue</code> (string, nil): Default: <code>nil</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/json/#jsonencode","title":"<code>json.encode</code>","text":"<p>Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles.</p> <pre><code>local result = json.encode(object, state)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (table)</li> <li><code>state</code> (table?)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/json/#jsonloadfile","title":"<code>json.loadfile</code>","text":"<p>Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json.</p> <pre><code>local result = json.loadfile(fileName)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fileName</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/json/#jsonquotestring","title":"<code>json.quotestring</code>","text":"<p>Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions.</p> <pre><code>local result = json.quotestring(s)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/json/#jsonsavefile","title":"<code>json.savefile</code>","text":"<p>Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode.</p> <pre><code>json.savefile(fileName, object, config)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fileName</code> (string)</li> <li><code>object</code> (table)</li> <li><code>config</code> (table): Optional.</li> </ul>"},{"location":"apis/lfs/","title":"Lfs","text":""},{"location":"apis/lfs/#lfs","title":"lfs","text":"<p>LuaFileSystem is a Lua library developed to complement the set of functions related to file systems offered by the standard Lua distribution. This library has been further extended by MWSE.</p>"},{"location":"apis/lfs/#functions","title":"Functions","text":""},{"location":"apis/lfs/#lfsattributes","title":"<code>lfs.attributes</code>","text":"<p>Returns a table with the file attributes corresponding to filepath (or nil followed by an error message and a system-dependent error code in case of error). If the second optional argument is given and is a string, then only the value of the named attribute is returned (this use is equivalent to lfs.attributes(filepath)[request_name], but the table is not created and only one attribute is retrieved from the O.S.). if a table is passed as the second argument, it (result_table) is filled with attributes and returned instead of a new table. The attributes are described as follows; attribute mode is a string, all the others are numbers, and the time related attributes use the same time reference of os.time: dev, mode, nlink, access, modification, change, size, permissions.</p> <pre><code>local attributes, error = lfs.attributes(path, request, resultTable)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path, relative to the current directory, to get attributes for.</li> <li><code>request</code> (string): Optional. The specific attribute to look for. If provided, the return value becomes the requested value (or nil) instead of a table.</li> <li><code>resultTable</code> (table): Optional. If provided, this table will be reused as the result table. If not provided, a new table is created.</li> </ul> <p>Returns:</p> <ul> <li><code>attributes</code> (table, string, number, nil): All attributes in a table, the value of a specific attribute if one was requested, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfschdir","title":"<code>lfs.chdir</code>","text":"<p>Changes the current working directory to the given path. Note that this is global. Do not use this function without restoring the previous directory at the end of your logic. Failure to do so can cause unrecoverable errors.</p> <pre><code>local success, error = lfs.chdir(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to change to.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfscurrentdir","title":"<code>lfs.currentdir</code>","text":"<p>Changes the current working directory to the given path.</p> <pre><code>local path, error = lfs.currentdir()\n</code></pre> <p>Returns:</p> <ul> <li><code>path</code> (string, nil): The current working directory, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfsdir","title":"<code>lfs.dir</code>","text":"<p>Creates a Lua iterator over the entries of a given directory. This can be used to create a for loop of directories. Be wary that current and parent directory markers may be available in the results.</p> <pre><code>lfs.dir(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to iterate over.</li> </ul>"},{"location":"apis/lfs/#lfsdirectoryexists","title":"<code>lfs.directoryexists</code>","text":"<p>Simple check to determine if a directory exists.</p> <pre><code>local success = lfs.directoryexists(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to determine existance of.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): true if the directory exists.</li> </ul>"},{"location":"apis/lfs/#lfsfileexists","title":"<code>lfs.fileexists</code>","text":"<p>Simple check to determine if a file exists.</p> <pre><code>local success = lfs.fileexists(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to determine existance of.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): true if the file exists.</li> </ul>"},{"location":"apis/lfs/#lfslink","title":"<code>lfs.link</code>","text":"<p>Creates a link. This is a hard link by default.</p> <pre><code>local success, error = lfs.link(old, new, symlink)\n</code></pre> <p>Parameters:</p> <ul> <li><code>old</code> (string): The object to link to.</li> <li><code>new</code> (string): The name of the link.</li> <li><code>symlink</code> (boolean): Optional. If true, the link will be symbolic instead.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfslock","title":"<code>lfs.lock</code>","text":"<p>Locks a file or a part of it. This function works on open files; the file handle should be specified as the first argument.</p> <pre><code>local success, error = lfs.lock(filehandle, mode, start, length)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filehandle</code> (ioFile): The file handle to lock.</li> <li><code>mode</code> (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive lock.</li> <li><code>start</code> (number): Optional. The starting point of the file to lock.</li> <li><code>length</code> (number): Optional. The length of the file, relative to start, to lock.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true if the operation was successful, or nil in the case of an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.</li> </ul>"},{"location":"apis/lfs/#lfslock_dir","title":"<code>lfs.lock_dir</code>","text":"<p>Creates a lockfile (called lockfile.lfs) in path if it does not exist and returns the lock. If the lock already exists checks if it's stale, using the second parameter (default for the second parameter is INT_MAX, which in practice means the lock will never be stale. The lock object has a method to free it.</p> <pre><code>local success, error = lfs.lock_dir(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to lock.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (lfsLock, nil): The lock object to manage, or nil in the case of an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.</li> </ul>"},{"location":"apis/lfs/#lfsmkdir","title":"<code>lfs.mkdir</code>","text":"<p>Creates a new directory.</p> <pre><code>local success, error = lfs.mkdir(dirname)\n</code></pre> <p>Parameters:</p> <ul> <li><code>dirname</code> (string): The name of the new directory.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfsrmdir","title":"<code>lfs.rmdir</code>","text":"<p>Removes an existing directory. Unless using the recursive parameter, only empty directories can be removed.</p> <pre><code>local success, error = lfs.rmdir(dirname, recursive)\n</code></pre> <p>Parameters:</p> <ul> <li><code>dirname</code> (string): The name of the directory to remove.</li> <li><code>recursive</code> (boolean): Default: <code>false</code>. If true, all contents of the directory will be removed as well.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfssetmode","title":"<code>lfs.setmode</code>","text":"<p>Sets the writing mode for a file.</p> <pre><code>local success, errorOrOldMode = lfs.setmode(file, mode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>file</code> (ioFile): The file to set mode for.</li> <li><code>mode</code> (string): The file's new mode. Can be either \"binary\" or \"text\".</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>errorOrOldMode</code> (string): If succesful, this will be the previous file mode used. In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfstouch","title":"<code>lfs.touch</code>","text":"<p>Set access and modification times of a file. Both access and modified times are measured in seconds, matching the OS time function.</p> <pre><code>local success, error = lfs.touch(path, accessTime, modifiedTime)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to touch.</li> <li><code>accessTime</code> (number): Optional. The new access time to set.</li> <li><code>modifiedTime</code> (number): Optional. The new last modified time to set</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true in case of success, or nil on an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue.</li> </ul>"},{"location":"apis/lfs/#lfsunlock","title":"<code>lfs.unlock</code>","text":"<p>Unlocks a file or a part of it. This function works on open files; the file handle should be specified as the first argument.</p> <pre><code>local success, error = lfs.unlock(filehandle, mode, start, length)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filehandle</code> (ioFile): The file handle to unlock.</li> <li><code>mode</code> (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive unlock.</li> <li><code>start</code> (number): Optional. The starting point of the file to unlock.</li> <li><code>length</code> (number): Optional. The length of the file, relative to start, to unlock.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean, nil): true if the operation was successful, or nil in the case of an error.</li> <li><code>error</code> (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.</li> </ul>"},{"location":"apis/lfs/#lfswalkdir","title":"<code>lfs.walkdir</code>","text":"<p>An iterator that visits all files in a directory tree.</p> <pre><code>local iterator = lfs.walkdir(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The root path of the directory tree.</li> </ul> <p>Returns:</p> <ul> <li><code>iterator</code> (fun(): string, string, string)</li> </ul> Example: Logging all the files present in Data files\\meshes folder <pre><code>for filePath, dir, fileName in lfs.walkdir(\"data files\\\\meshes\\\\\") do\n    -- Here filePath would look like:\n    -- data files\\meshes\\o\\Contain_Trama_Shrub_01.nif\"\n\n    -- dir:\n    -- data files\\meshes\\o\\\n\n    -- fileName:\n    -- Contain_Trama_Shrub_01.nif\n    mwse.log(\n        \"%s, %s, %s\",\n        filePath,\n        dir,\n        fileName\n    )\nend\n</code></pre>"},{"location":"apis/lpeg/","title":"Lpeg","text":""},{"location":"apis/lpeg/#lpeg","title":"lpeg","text":"<p>Provides pattern-matching based on Parsing Expression Grammars (PEGs).</p> <p>The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at:  http://www.inf.puc-rio.br/~roberto/lpeg/</p> <p>There is also a copy in the MWSE repo at: deps/lpeg/lpeg.html</p>"},{"location":"apis/lpeg/#functions","title":"Functions","text":""},{"location":"apis/lpeg/#lpegb","title":"<code>lpeg.B</code>","text":"<p>Returns a pattern that matches only if the input string at the current position is preceded by pattern p.</p> <p>Pattern p must match only strings with some fixed length, and it cannot contain captures.</p> <p>Like the and predicate, this pattern never consumes any input, independently of success or failure.</p> <pre><code>local result = lpeg.B(p)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The input pattern.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegc","title":"<code>lpeg.C</code>","text":"<p>Create a simple capture pattern, which captures the substring of the subject that matches pattern p.</p> <p>The captured value is a string. If p has other captures, their values are returned after this one.</p> <pre><code>local result = lpeg.C(p)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to capture against.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcarg","title":"<code>lpeg.Carg</code>","text":"<p>Create an argument capture.</p> <p>This pattern matches the empty string and produces the value given as the nth extra argument given  in the call to lpeg.match.</p> <pre><code>local result = lpeg.Carg(n)\n</code></pre> <p>Parameters:</p> <ul> <li><code>n</code> (number): The argument to produce.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcb","title":"<code>lpeg.Cb</code>","text":"<p>Create a back capture.</p> <p>This pattern matches the empty string and produces the values produced by the most recent group capture named name (where name can be any Lua value).</p> <p>Most recent means the last complete outermost group capture with the given name. A Complete capture means that the entire pattern corresponding to the capture has matched. An Outermost capture means that the capture is not inside another complete capture.</p> <p>In the same way that LPeg does not specify when it evaluates captures, it does not specify whether it reuses values previously produced by the group or re-evaluates them.</p> <pre><code>local result = lpeg.Cb(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (any): The group capture to produce.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcc","title":"<code>lpeg.Cc</code>","text":"<p>Create a constant capture.</p> <p>This pattern matches the empty string and produces all given values as its captured values.</p> <pre><code>local result = lpeg.Cc(...)\n</code></pre> <p>Parameters:</p> <ul> <li><code>...</code> (any): Optional. The values to produce.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcf","title":"<code>lpeg.Cf</code>","text":"<p>Create a fold capture.</p> <p>If pattern p produces a list of captures C1 C2 ... Cn, this capture will produce the value  function f(...f(f(C1, C2), C3)..., Cn), that is, it will fold (or accumulate, or reduce) the  captures from p using function f.</p> <p>This capture assumes that p should produce at least one capture with at least one value (of any  type), which becomes the initial value of an accumulator. (If you need a specific initial value,  you may prefix a constant capture to p.) For each subsequent capture, LPeg calls f with this accumulator as the first argument and all values produced by the capture as extra arguments; the  first result from this call becomes the new value for the accumulator. The final value of the  accumulator becomes the captured value.</p> <pre><code>local result = lpeg.Cf(p, f)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to fold with f.</li> <li><code>f</code> (function): The function to use to fold p.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcg","title":"<code>lpeg.Cg</code>","text":"<p>Create a group capture.</p> <p>It groups all values returned by pattern p into a single capture. The group may be anonymous (if no name is given) or named with the given name (which can be any non-nil Lua value).</p> <p>An anonymous group serves to join values from several captures into a single capture. A named group has a different behavior. In most situations, a named group returns no values at all. Its values are only relevant for a following back capture or when used inside a table capture.</p> <pre><code>local result = lpeg.Cg(p, name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to capture with.</li> <li><code>name</code> (any): Optional. The name of the group.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcmt","title":"<code>lpeg.Cmt</code>","text":"<p>Create a match-time capture.</p> <p>Unlike all other captures, this one is evaluated immediately when a match occurs (even if it is  part of a larger pattern that fails later). It forces the immediate evaluation of all its nested captures and then calls function f.</p> <p>The given function gets as arguments the entire subject, the current position (after the match of  pattern p), plus any capture values produced by p.</p> <p>The first value returned by f defines how the match happens. If the call returns a number,  the match succeeds and the returned number becomes the new current position. (Assuming a subject s and current position i, the returned number must be in the range [i, len(s) + 1].) If the call  returns true, the match succeeds without consuming any input. (So, to return true is equivalent to  return i.) If the call returns false, nil, or no value, the match fails.</p> <p>Any extra values returned by f become the values produced by the capture. </p> <pre><code>local result = lpeg.Cmt(p, f)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to capture with.</li> <li><code>f</code> (function): The function to call to evaluate matches.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcp","title":"<code>lpeg.Cp</code>","text":"<p>Create a position capture.</p> <p>It matches the empty string and captures the position in the subject where the match occurs. The  captured value is a number.</p> <pre><code>local result = lpeg.Cp()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegcs","title":"<code>lpeg.Cs</code>","text":"<p>Create a substitution capture, which captures the substring of the subject that matches pattern p, with substitutions.</p> <p>For any capture inside p with a value, the substring that matched the capture is replaced by the  capture value (which should be a string). The final captured value is the string resulting from all replacements.</p> <pre><code>local result = lpeg.Cs(p)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to capture with.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegct","title":"<code>lpeg.Ct</code>","text":"<p>Create a table capture.</p> <p>This capture returns a table with all values from all anonymous captures made by pattern p inside  this table in successive integer keys, starting at 1. Moreover, for each named capture group  created by p, the first value of the group is put into the table with the group name as its key.  The captured value is only the table.</p> <pre><code>local result = lpeg.Ct(p)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to capture with.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpeglocale","title":"<code>lpeg.locale</code>","text":"<p>Return a table with patterns for matching some character classes according to the current locale.</p> <p>The table has fields named alnum, alpha, cntrl, digit, graph, lower, print, punct, space, upper, and xdigit, each one containing a correspondent pattern. Each pattern matches any single character  that belongs to its class.</p> <p>If called with an argument table, then it creates those fields inside the given table and returns  that table. </p> <pre><code>local result = lpeg.locale(t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table): Optional. The table to update.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/lpeg/#lpegmatch","title":"<code>lpeg.match</code>","text":"<p>Attempt to match the given pattern against the subject string.</p> <p>If the match succeeds, return the index in the subject of the first character after the match, or the captured values (if the pattern captured any value).</p> <p>An optional numeric argument init makes the match start at that position in the subject string. As usual in Lua libraries, a negative value counts from the end.</p> <p>Unlike typical pattern-matching functions, match works only in anchored mode; that is, it tries to match the pattern with a prefix of the given subject string (at position init), not with an arbitrary substring of the subject. So, if we want to find a pattern anywhere in a string, we must either write a loop in Lua or write a pattern that matches anywhere. This second approach is easy and quite efficient; see examples in the full documentation for details.</p> <pre><code>local result = lpeg.match(p, subject, init)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The pattern to match.</li> <li><code>subject</code> (string): The string to match against.</li> <li><code>init</code> (number): Optional. Start the match at this position in subject.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul> Example: Simple Match <p>Create a pattern that matches a word followed by the end of the string, and use it to match strings.</p> <pre><code>local lpeg = require(\"lpeg\")\n\nlocal function onLoaded(e)\n\n    -- matches a word followed by end-of-string\n    local p = lpeg.R(\"az\")^1 * -1\n\n    mwse.log(p:match(\"hello\"))      --&gt; 6\n    mwse.log(lpeg.match(p, \"hello\"))  --&gt; 6\n    mwse.log(p:match(\"1 hello\"))      --&gt; nil\n\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/lpeg/#lpegp","title":"<code>lpeg.P</code>","text":"<p>Converts the given value into a proper lpeg pattern.</p> <p>If the argument is a pattern, it is returned unmodified.</p> <p>If the argument is a string, it is translated to a pattern that matches the string literally.</p> <p>If the argument is a non-negative number n, the result is a pattern that matches exactly n characters.</p> <p>If the argument is a negative number -n, the result is a pattern that succeeds only if the input string has less than n characters left: lpeg.P(-n) is equivalent to -lpeg.P(n). See the unary minus operation in the full documentation for details.</p> <p>If the argument is a boolean, the result is a pattern that always succeeds or always fails (according to the boolean value), without consuming any input.</p> <p>If the argument is a table, it is interpreted as a grammar. See Grammars in the full documentation for details.</p> <p>If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.</p> <pre><code>local result = lpeg.P(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (pattern, string, number, boolean, table, function): The value to convert to a pattern.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegr","title":"<code>lpeg.R</code>","text":"<p>Returns a pattern that matches any single character belonging to one of the given ranges.</p> <p>Each range is a string xy of length 2, representing all characters with code between the codes of x and y (both inclusive).</p> <p>As an example, the pattern lpeg.R(\"09\") matches any digit, and lpeg.R(\"az\", \"AZ\") matches any ASCII letter.</p> <pre><code>local result = lpeg.R(p)\n</code></pre> <p>Parameters:</p> <ul> <li><code>p</code> (pattern): The input pattern.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul> Example: Simple Match <p>Create a pattern using lpeg.R that matches a word followed by the end of the string.</p> <pre><code>local lpeg = require(\"lpeg\")\n\nlocal function onLoaded(e)\n\n    -- matches a word followed by end-of-string\n    local p = lpeg.R(\"az\")^1 * -1\n\n    mwse.log(p:match(\"hello\"))      --&gt; 6\n    mwse.log(lpeg.match(p, \"hello\"))  --&gt; 6\n    mwse.log(p:match(\"1 hello\"))      --&gt; nil\n\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/lpeg/#lpegs","title":"<code>lpeg.S</code>","text":"<p>Returns a pattern that matches any single character that appears in the given string.</p> <p>As an example, the pattern lpeg.S(\"+-*/\") matches any arithmetic operator.</p> <p>Note that, if s is a character (that is, a string of length 1), then lpeg.P(s) is equivalent to  lpeg.S(s) which is equivalent to lpeg.R(s..s). Note also that both lpeg.S(\"\") and lpeg.R() are  patterns that always fail.</p> <pre><code>local result = lpeg.S(s)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string): The input string.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegsetmaxstack","title":"<code>lpeg.setmaxstack</code>","text":"<p>Set a limit for the size of the backtrack stack used by LPeg to track calls and choices.</p> <p>The default limit is 400. Most well-written patterns need little backtrack levels and therefore you seldom need to change this limit; before changing it you should try to rewrite your pattern to avoid the need for  extra space. Nevertheless, a few useful patterns may overflow. Also, with recursive grammars, subjects with deep recursion may also need larger limits.</p> <pre><code>lpeg.setmaxstack(max)\n</code></pre> <p>Parameters:</p> <ul> <li><code>max</code> (number): The new stack size.</li> </ul>"},{"location":"apis/lpeg/#lpegtype","title":"<code>lpeg.type</code>","text":"<p>If the given value is a pattern, return the string \"pattern\". Otherwise return nil.</p> <pre><code>local result = lpeg.type(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (any): The item to evaulate.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern, nil)</li> </ul>"},{"location":"apis/lpeg/#lpegv","title":"<code>lpeg.V</code>","text":"<p>Create a non-terminal (a variable) for a grammar.</p> <p>The created non-terminal refers to the rule indexed by v in the enclosing grammar. See Grammars in the full documentation for details.</p> <pre><code>local result = lpeg.V(v)\n</code></pre> <p>Parameters:</p> <ul> <li><code>v</code> (string): The index of the desired rule.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/lpeg/#lpegversion","title":"<code>lpeg.version</code>","text":"<p>Return a string with the running version of lpeg.</p> <pre><code>local result = lpeg.version()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/math/","title":"Math","text":""},{"location":"apis/math/#math","title":"math","text":"<p>This library is an interface to the standard C math library. This library has been further extended by MWSE. The functions implemented by MWSE are listed here. It provides all its functions inside the table math.</p>"},{"location":"apis/math/#properties","title":"Properties","text":""},{"location":"apis/math/#mathepsilon","title":"<code>math.epsilon</code>","text":"<p>The machine epsilon available for double-precision numbers. This is the difference between 1.0 and the next representable value using lua numbers.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathfepsilon","title":"<code>math.fepsilon</code>","text":"<p>The machine epsilon available for single-precision numbers. This is the difference between 1.0 and the next representable value for many Morrowind structures.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathfhuge","title":"<code>math.fhuge</code>","text":"<p>The machine maximum available value for single-precision numbers. This is the maximum representable value for any floating-point Morrowind structures.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathnfhuge","title":"<code>math.nfhuge</code>","text":"<p>The machine minimum available value for single-precision numbers. This is the minimum representable value for any floating-point Morrowind structures.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#functions","title":"Functions","text":""},{"location":"apis/math/#mathclamp","title":"<code>math.clamp</code>","text":"<p>Returns a value, limited by upper and lower bounds.</p> <pre><code>local result = math.clamp(value, min, max)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> <li><code>min</code> (number)</li> <li><code>max</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathisclose","title":"<code>math.isclose</code>","text":"<p>This function compares <code>a</code> and <code>b</code> and returns true if they are close together. This can be useful when comparing floating-point numbers with some degree of tolerance.</p> <pre><code>local result = math.isclose(a, b, absoluteTolerance, relativeTolerance)\n</code></pre> <p>Parameters:</p> <ul> <li><code>a</code> (number): First value.</li> <li><code>b</code> (number): Second value.</li> <li><code>absoluteTolerance</code> (number): Default: <code>math.epsilon</code>. The absolute difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 0.01.</li> <li><code>relativeTolerance</code> (number): Default: <code>1e-09</code>. The relative difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 1%.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathlerp","title":"<code>math.lerp</code>","text":"<p>Performs linear interpolation between values v0 and v1. Returns a value that is t percent between them.</p> <pre><code>local result = math.lerp(v0, v1, t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>v0</code> (number): First value.</li> <li><code>v1</code> (number): Second value.</li> <li><code>t</code> (number): The decimal percentage used to calculate a point between v0 and v1.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathremap","title":"<code>math.remap</code>","text":"<p>Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut].</p> <p>For example, a value of 7 remapped from [0,10] to [0,100] would be 70.</p> <pre><code>local result = math.remap(value, lowIn, highIn, lowOut, highOut)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> <li><code>lowIn</code> (number)</li> <li><code>highIn</code> (number)</li> <li><code>lowOut</code> (number)</li> <li><code>highOut</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/math/#mathround","title":"<code>math.round</code>","text":"<p>Rounds a number to a given count of digits.</p> <pre><code>local result = math.round(value, digits)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> <li><code>digits</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mge.macros/","title":"Mge.macros","text":""},{"location":"apis/mge.macros/#mgemacros","title":"mge.macros","text":"<p>Access to MGE's macro functions.</p>"},{"location":"apis/mge.macros/#functions","title":"Functions","text":""},{"location":"apis/mge.macros/#mgemacrosdecreasefov","title":"<code>mge.macros.decreaseFOV</code>","text":"<p>Triggers the MGE \"Decrease FOV\" macro.</p> <pre><code>mge.macros.decreaseFOV()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosdecreaseviewrange","title":"<code>mge.macros.decreaseViewRange</code>","text":"<p>Triggers the MGE \"Decrease View Range\" macro.</p> <pre><code>mge.macros.decreaseViewRange()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosdecreasezoom","title":"<code>mge.macros.decreaseZoom</code>","text":"<p>Triggers the MGE \"Decrease Zoom\" macro.</p> <pre><code>mge.macros.decreaseZoom()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosdisablemusic","title":"<code>mge.macros.disableMusic</code>","text":"<p>Triggers the MGE \"Disable Music\" macro.</p> <pre><code>mge.macros.disableMusic()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshaggleless1","title":"<code>mge.macros.haggleLess1</code>","text":"<p>Triggers the MGE \"Haggle Less 1\" macro.</p> <pre><code>mge.macros.haggleLess1()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshaggleless10","title":"<code>mge.macros.haggleLess10</code>","text":"<p>Triggers the MGE \"Haggle Less 10\" macro.</p> <pre><code>mge.macros.haggleLess10()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshaggleless100","title":"<code>mge.macros.haggleLess100</code>","text":"<p>Triggers the MGE \"Haggle Less 100\" macro.</p> <pre><code>mge.macros.haggleLess100()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshaggleless1000","title":"<code>mge.macros.haggleLess1000</code>","text":"<p>Triggers the MGE \"Haggle Less 1,000\" macro.</p> <pre><code>mge.macros.haggleLess1000()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshaggleless10000","title":"<code>mge.macros.haggleLess10000</code>","text":"<p>Triggers the MGE \"Haggle Less 10,000\" macro.</p> <pre><code>mge.macros.haggleLess10000()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshagglemore1","title":"<code>mge.macros.haggleMore1</code>","text":"<p>Triggers the MGE \"Haggle More 1\" macro.</p> <pre><code>mge.macros.haggleMore1()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshagglemore10","title":"<code>mge.macros.haggleMore10</code>","text":"<p>Triggers the MGE \"Haggle More 10\" macro.</p> <pre><code>mge.macros.haggleMore10()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshagglemore100","title":"<code>mge.macros.haggleMore100</code>","text":"<p>Triggers the MGE \"Haggle More 100\" macro.</p> <pre><code>mge.macros.haggleMore100()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshagglemore1000","title":"<code>mge.macros.haggleMore1000</code>","text":"<p>Triggers the MGE \"Haggle More 1,000\" macro.</p> <pre><code>mge.macros.haggleMore1000()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacroshagglemore10000","title":"<code>mge.macros.haggleMore10000</code>","text":"<p>Triggers the MGE \"Haggle More 10,000\" macro.</p> <pre><code>mge.macros.haggleMore10000()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosincreasefov","title":"<code>mge.macros.increaseFOV</code>","text":"<p>Triggers the MGE \"Increase FOV\" macro.</p> <pre><code>mge.macros.increaseFOV()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosincreaseviewrange","title":"<code>mge.macros.increaseViewRange</code>","text":"<p>Triggers the MGE \"Increase View Range\" macro.</p> <pre><code>mge.macros.increaseViewRange()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosincreasezoom","title":"<code>mge.macros.increaseZoom</code>","text":"<p>Triggers the MGE \"Increase Zoom\" macro.</p> <pre><code>mge.macros.increaseZoom()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmoveback3pcam","title":"<code>mge.macros.moveBack3PCam</code>","text":"<p>Triggers the MGE \"Move Back 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveBack3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmovedown3pcam","title":"<code>mge.macros.moveDown3PCam</code>","text":"<p>Triggers the MGE \"Move Down 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveDown3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmoveforward3pcam","title":"<code>mge.macros.moveForward3PCam</code>","text":"<p>Triggers the MGE \"Move Forward 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveForward3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmoveleft3pcam","title":"<code>mge.macros.moveLeft3PCam</code>","text":"<p>Triggers the MGE \"Move Left 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveLeft3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmoveright3pcam","title":"<code>mge.macros.moveRight3PCam</code>","text":"<p>Triggers the MGE \"Move Right 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveRight3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosmoveup3pcam","title":"<code>mge.macros.moveUp3PCam</code>","text":"<p>Triggers the MGE \"Move Up 3rd Person Camera\" macro.</p> <pre><code>mge.macros.moveUp3PCam()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosnexttrack","title":"<code>mge.macros.nextTrack</code>","text":"<p>Triggers the MGE \"Next Track\" macro.</p> <pre><code>mge.macros.nextTrack()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosresetenablezoom","title":"<code>mge.macros.resetEnableZoom</code>","text":"<p>Triggers the MGE \"Reset Enable Zoom\" macro.</p> <pre><code>mge.macros.resetEnableZoom()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrosshowlastmessage","title":"<code>mge.macros.showLastMessage</code>","text":"<p>Triggers the MGE \"Show Last Message\" macro.</p> <pre><code>mge.macros.showLastMessage()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostakescreenshot","title":"<code>mge.macros.takeScreenshot</code>","text":"<p>Triggers the MGE \"Take Screenshot\" macro.</p> <pre><code>mge.macros.takeScreenshot()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostoggleblending","title":"<code>mge.macros.toggleBlending</code>","text":"<p>Triggers the MGE \"Toggle Blending\" macro.</p> <pre><code>mge.macros.toggleBlending()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglecrosshair","title":"<code>mge.macros.toggleCrosshair</code>","text":"<p>Triggers the MGE \"Toggle Crosshair\" macro.</p> <pre><code>mge.macros.toggleCrosshair()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostoggledistantland","title":"<code>mge.macros.toggleDistantLand</code>","text":"<p>Triggers the MGE \"Toggle Distant Land\" macro.</p> <pre><code>mge.macros.toggleDistantLand()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglefpscounter","title":"<code>mge.macros.toggleFpsCounter</code>","text":"<p>Triggers the MGE \"Toggle FPS Counter\" macro.</p> <pre><code>mge.macros.toggleFpsCounter()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglegrass","title":"<code>mge.macros.toggleGrass</code>","text":"<p>Triggers the MGE \"Toggle Grass\" macro.</p> <pre><code>mge.macros.toggleGrass()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglelightingmode","title":"<code>mge.macros.toggleLightingMode</code>","text":"<p>Triggers the MGE \"Toggle Lighting Mode\" macro.</p> <pre><code>mge.macros.toggleLightingMode()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostoggleshaders","title":"<code>mge.macros.toggleShaders</code>","text":"<p>Triggers the MGE \"Toggle Shaders\" macro.</p> <pre><code>mge.macros.toggleShaders()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostoggleshadows","title":"<code>mge.macros.toggleShadows</code>","text":"<p>Triggers the MGE \"Toggle Shadows\" macro.</p> <pre><code>mge.macros.toggleShadows()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglestatustext","title":"<code>mge.macros.toggleStatusText</code>","text":"<p>Triggers the MGE \"Toggle Status Text\" macro.</p> <pre><code>mge.macros.toggleStatusText()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostoggletransparencyaa","title":"<code>mge.macros.toggleTransparencyAA</code>","text":"<p>Triggers the MGE \"Toggle Transparency AA\" macro.</p> <pre><code>mge.macros.toggleTransparencyAA()\n</code></pre>"},{"location":"apis/mge.macros/#mgemacrostogglezoom","title":"<code>mge.macros.toggleZoom</code>","text":"<p>Triggers the MGE \"Toggle Zoom\" macro.</p> <pre><code>mge.macros.toggleZoom()\n</code></pre>"},{"location":"apis/mge/","title":"Mge","text":""},{"location":"apis/mge/#mge","title":"mge","text":"<p>The mge library accesses MGE XE functionality, including control over shaders. Many older functions have been deprecated.</p>"},{"location":"apis/mge/#properties","title":"Properties","text":""},{"location":"apis/mge/#mgecamera","title":"<code>mge.camera</code>","text":"<p>Allows control of MGE camera features.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeCameraConfig)</li> </ul>"},{"location":"apis/mge/#mgedistantlandrenderconfig","title":"<code>mge.distantLandRenderConfig</code>","text":"<p>Allows control of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeDistantLandRenderConfig)</li> </ul>"},{"location":"apis/mge/#mgerender","title":"<code>mge.render</code>","text":"<p>Allows control of render features.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeRenderFeatures)</li> </ul>"},{"location":"apis/mge/#mgeshaders","title":"<code>mge.shaders</code>","text":"<p>Allows control of shaders.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeShadersConfig)</li> </ul>"},{"location":"apis/mge/#mgeweather","title":"<code>mge.weather</code>","text":"<p>Allows control of MGE weather features.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeWeatherConfig)</li> </ul>"},{"location":"apis/mge/#functions","title":"Functions","text":""},{"location":"apis/mge/#mgeenabled","title":"<code>mge.enabled</code>","text":"<p>Determines if the MGE XE interface is enabled.</p> <pre><code>local enabled = mge.enabled()\n</code></pre> <p>Returns:</p> <ul> <li><code>enabled</code> (boolean)</li> </ul>"},{"location":"apis/mge/#mgegetlightingmode","title":"<code>mge.getLightingMode</code>","text":"<p>Returns the lighting mode used by MGE XE. These values map to <code>mge.lightingMode.*</code> constants.</p> <pre><code>local mode = mge.getLightingMode()\n</code></pre> <p>Returns:</p> <ul> <li><code>mode</code> (number): Maps to the <code>mge.lightingMode.*</code> constants.</li> </ul>"},{"location":"apis/mge/#mgegetuiscale","title":"<code>mge.getUIScale</code>","text":"<p>Returns the GUI scaling used by MGE XE.</p> <pre><code>local scale = mge.getUIScale()\n</code></pre> <p>Returns:</p> <ul> <li><code>scale</code> (number)</li> </ul>"},{"location":"apis/mge/#mgegetversion","title":"<code>mge.getVersion</code>","text":"<p>Gets the MGE version. Returns a table with keys <code>major</code>, <code>minor</code>, and <code>patch</code>.</p> <pre><code>local result = mge.getVersion()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/mge/#mgeloadconfig","title":"<code>mge.loadConfig</code>","text":"<p>Reloads the MGE config file. This is primarily an internal function and shouldn't be called casually.</p> <pre><code>mge.loadConfig()\n</code></pre>"},{"location":"apis/mge/#mgereloaddistantland","title":"<code>mge.reloadDistantLand</code>","text":"<p>Reloads the MGE distant land. This is a blocking call that can take some seconds.</p> <pre><code>mge.reloadDistantLand()\n</code></pre>"},{"location":"apis/mge/#mgesaveconfig","title":"<code>mge.saveConfig</code>","text":"<p>Saves the MGE config file. This is primarily an internal function and shouldn't be called casually.</p> <pre><code>mge.saveConfig()\n</code></pre>"},{"location":"apis/mge/#mgesavescreenshot","title":"<code>mge.saveScreenshot</code>","text":"<p>Saves a screenshot.</p> <pre><code>mge.saveScreenshot({ path = ..., captureWithUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>path</code> (string)</li> <li><code>captureWithUI</code> (boolean): Default: <code>false</code>. If set to <code>true</code>, the screenshot will include the user interface.</li> </ul> </li> </ul>"},{"location":"apis/mge/#mgesetlightingmode","title":"<code>mge.setLightingMode</code>","text":"<p>Sets the lighting mode used by MGE XE. The values passed can be used from the <code>mge.lightingMode.*</code> constants.</p> <pre><code>mge.setLightingMode(mode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mode</code> (number): Maps from the <code>mge.lightingMode.*</code> constants.</li> </ul>"},{"location":"apis/mge/#mgesetuiscale","title":"<code>mge.setUIScale</code>","text":"<p>Sets the GUI scaling used by MGE XE.</p> <pre><code>mge.setUIScale(scale)\n</code></pre> <p>Parameters:</p> <ul> <li><code>scale</code> (number)</li> </ul>"},{"location":"apis/mwscript/","title":"Mwscript","text":""},{"location":"apis/mwscript/#mwscript","title":"mwscript","text":"<p>Warning</p> <p>This API is deprecated. See below for more information about what to use instead.</p> <p>The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated. Avoid using it if at all possible.</p>"},{"location":"apis/mwscript/#functions","title":"Functions","text":""},{"location":"apis/mwscript/#mwscriptactivate","title":"<code>mwscript.activate</code>","text":"<p>Use <code>tes3reference:activate()</code> or <code>tes3.setAIActivate()</code> instead. Wrapper for the <code>Activate</code> mwscript function.</p> <pre><code>mwscript.activate({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> </ul> </li> </ul>"},{"location":"apis/mwscript/#mwscriptadditem","title":"<code>mwscript.addItem</code>","text":"<p>Use <code>tes3.addItem()</code>, <code>tes3inventory:addItem()</code>, or depending on your needs <code>tes3mobileActor:equip()</code> instead. Wrapper for the <code>AddItem</code> mwscript function.</p> <pre><code>local executed = mwscript.addItem({ reference = ..., item = ..., count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string): The item to be added.</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to be added.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaddsoulgem","title":"<code>mwscript.addSoulGem</code>","text":"<p>use <code>tes3.addItem()</code> with the <code>soul</code> parameter instead. Wrapper for the <code>AddSoulGem</code> mwscript function.</p> <pre><code>local executed = mwscript.addSoulGem({ reference = ..., creature = ..., soulgem = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>creature</code> (tes3creature, string): The creature to be stored in the soul gem.</li> <li><code>soulgem</code> (tes3misc, string): The soul gem to store the soul in.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaddspell","title":"<code>mwscript.addSpell</code>","text":"<p>Use <code>tes3.addSpell()</code> or <code>tes3spellList:add()</code> instead. Wrapper for the <code>AddSpell</code> mwscript function.</p> <pre><code>local executed = mwscript.addSpell({ reference = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>spell</code> (tes3spell, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaddtolevcreature","title":"<code>mwscript.addToLevCreature</code>","text":"<p>Use <code>tes3leveledCreature:insert()</code> instead. Wrapper for the <code>AddToLevCreature</code> mwscript function.</p> <pre><code>local executed = mwscript.addToLevCreature({ list = ..., creature = ..., level = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>list</code> (tes3leveledCreature, string): Leveled creature list to add a creature to.</li> <li><code>creature</code> (tes3actor, string): Creature to add to the list.</li> <li><code>level</code> (number): Default: <code>0</code>. Minimum level for the creature to spawn.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaddtolevitem","title":"<code>mwscript.addToLevItem</code>","text":"<p>Use <code>tes3leveledItem:insert()</code> instead. Wrapper for the <code>AddToLevItem</code> mwscript function.</p> <pre><code>local executed = mwscript.addToLevItem({ list = ..., item = ..., level = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>list</code> (tes3leveledItem, string): Leveled item list to add a creature to.</li> <li><code>item</code> (tes3item, string): Item to add to the list.</li> <li><code>level</code> (number): Default: <code>0</code>. Minimum level for the item to spawn.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaddtopic","title":"<code>mwscript.addTopic</code>","text":"<p>Use <code>tes3.addTopic()</code> instead. Wrapper for the <code>AddTopic</code> mwscript function.</p> <pre><code>local executed = mwscript.addTopic({ topic = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>topic</code> (tes3dialogue, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptaitravel","title":"<code>mwscript.aiTravel</code>","text":"<p>Use <code>tes3.setAITravel()</code> instead. Wrapper for the <code>AITravel</code> mwscript function.</p> <pre><code>local executed = mwscript.aiTravel({ reference = ..., x = ..., y = ..., z = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>x</code> (number)</li> <li><code>y</code> (number)</li> <li><code>z</code> (number)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptdisable","title":"<code>mwscript.disable</code>","text":"<p>Use <code>tes3reference:disable()</code> or <code>tes3.setEnabled()</code> instead. Wrapper for the <code>Disable</code> mwscript function.</p> <pre><code>local executed = mwscript.disable({ reference = ..., modify = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>modify</code> (boolean): Default: <code>true</code>. Set the object as modified.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptdrop","title":"<code>mwscript.drop</code>","text":"<p>Use <code>tes3.dropItem()</code> or <code>tes3inventory:dropItem()</code> instead. Wrapper for the <code>Drop</code> mwscript function.</p> <pre><code>local executed = mwscript.drop({ reference = ..., item = ..., count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string): The item to be dropped.</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to drop.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptenable","title":"<code>mwscript.enable</code>","text":"<p>Use <code>tes3.setEnabled()</code> or <code>tes3reference:enable()</code> instead. Wrapper for the <code>Enable</code> mwscript function.</p> <pre><code>local executed = mwscript.enable({ reference = ..., modify = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>modify</code> (boolean): Default: <code>true</code>. Set the object as modified.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptequip","title":"<code>mwscript.equip</code>","text":"<p>Use <code>tes3mobileActor:equip()</code> or <code>tes3mobileActor.combatSession:changeEquipment()</code> instead. Wrapper for the <code>Equip</code> mwscript function.</p> <pre><code>local executed = mwscript.equip({ reference = ..., item = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string): The item to be equipped.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptexplodespell","title":"<code>mwscript.explodeSpell</code>","text":"<p>Use <code>tes3.cast()</code> instead. Wrapper for the <code>ExplodeSpell</code> mwscript function.</p> <pre><code>local executed = mwscript.explodeSpell({ reference = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>spell</code> (tes3spell, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetbuttonpressed","title":"<code>mwscript.getButtonPressed</code>","text":"<p>Use <code>tes3.messageBox()</code> instead. Wrapper for the <code>GetButtonPressed</code> mwscript function.</p> <pre><code>local buttonIndex = mwscript.getButtonPressed()\n</code></pre> <p>Returns:</p> <ul> <li><code>buttonIndex</code> (number)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetdetected","title":"<code>mwscript.getDetected</code>","text":"<p>Use <code>tes3mobileActor.isPlayerDetected</code> or depending on what you are doing, <code>detectSneak</code> event may be desirable. Wrapper for the <code>GetDetected</code> mwscript function.</p> <pre><code>local result = mwscript.getDetected({ reference = ..., target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): Actor to check detection for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetdisabled","title":"<code>mwscript.getDisabled</code>","text":"<p>Use <code>object.disabled</code> on any object inheriting from <code>tes3baseObject</code>. Wrapper for the <code>GetDisabled</code> mwscript function.</p> <pre><code>local result = mwscript.getDisabled({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetdistance","title":"<code>mwscript.getDistance</code>","text":"<p>Use <code>tes3reference.position</code> or <code>tes3mobileActor.position</code> to compute the distance or depending on the desired effect, <code>tes3mobileActor.playerDistance</code>. Wrapper for the <code>GetDistance</code> mwscript function.</p> <pre><code>local result = mwscript.getDistance({ reference = ..., target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): Actor to check distance to.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetitemcount","title":"<code>mwscript.getItemCount</code>","text":"<p>Use <code>tes3.getItemCount()</code> instead. Wrapper for the <code>GetItemCount</code> mwscript function.</p> <pre><code>local result = mwscript.getItemCount({ reference = ..., item = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetpcjumping","title":"<code>mwscript.getPCJumping</code>","text":"<p>Use <code>tes3.mobilePlayer.isJumping</code> instead. Wrapper for the <code>GetPCJumping</code> mwscript function.</p> <pre><code>local result = mwscript.getPCJumping()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetpcrunning","title":"<code>mwscript.getPCRunning</code>","text":"<p>Use <code>tes3.mobilePlayer.isRunning</code> instead. Wrapper for the <code>GetPCRunning</code> mwscript function.</p> <pre><code>local result = mwscript.getPCRunning()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetpcsneaking","title":"<code>mwscript.getPCSneaking</code>","text":"<p>Use <code>tes3.mobilePlayer.isSneaking</code> instead. Wrapper for the <code>GetPCSneaking</code> mwscript function.</p> <pre><code>local result = mwscript.getPCSneaking()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetreference","title":"<code>mwscript.getReference</code>","text":"<p>Use <code>tes3globalScript.reference</code> instead. Returns the script target for the currently running Morrowind script, if any.</p> <pre><code>local result = mwscript.getReference()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetscript","title":"<code>mwscript.getScript</code>","text":"<p>Returns the currently running Morrowind script, if any.</p> <pre><code>local result = mwscript.getScript()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"apis/mwscript/#mwscriptgetspelleffects","title":"<code>mwscript.getSpellEffects</code>","text":"<p>Use  <code>tes3.isAffectedBy()</code> or <code>tes3mobileActor:isAffectedByObject()</code> instead. Wrapper for the <code>GetSpellEffects</code> mwscript function.</p> <pre><code>local result = mwscript.getSpellEffects({ reference = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>spell</code> (tes3spell, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscripthasitemequipped","title":"<code>mwscript.hasItemEquipped</code>","text":"<p>Use <code>tes3actor:hasItemEquipped()</code> or <code>tes3.getEquippedItem()</code> instead. Wrapper for the <code>HasItemEquipped</code> mwscript function.</p> <pre><code>local result = mwscript.hasItemEquipped({ reference = ..., item = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string): The item to check for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptplaceatpc","title":"<code>mwscript.placeAtPC</code>","text":"<p>Use <code>tes3.createReference()</code> instead. Wrapper for the <code>PlaceAtPC</code> mwscript function.</p> <pre><code>local lastPlacedReference = mwscript.placeAtPC({ reference = ..., object = ..., count = ..., distance = ..., direction = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>object</code> (tes3object, string): The object to place.</li> <li><code>count</code> (number): Default: <code>1</code>.</li> <li><code>distance</code> (number): Default: <code>256</code>.</li> <li><code>direction</code> (number): Default: <code>1</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>lastPlacedReference</code> (tes3reference)</li> </ul>"},{"location":"apis/mwscript/#mwscriptplaysound","title":"<code>mwscript.playSound</code>","text":"<p>Use <code>tes3.playSound()</code>, <code>tes3sound:play()</code> method, or <code>tes3.playItemPickupSound()</code> instead. Wrapper for the <code>PlaySound</code> mwscript function.</p> <pre><code>local result = mwscript.playSound({ reference = ..., sound = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>sound</code> (tes3sound, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptposition","title":"<code>mwscript.position</code>","text":"<p>Set <code>tes3reference.position</code> or <code>tes3mobileActor.position</code> to desired new position instead, or use <code>tes3.positionCell()</code>. Wrapper for the <code>Position</code> mwscript function.</p> <pre><code>local executed = mwscript.position({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>cell</code> (string)</li> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> <li><code>z</code> (number): Default: <code>0</code>.</li> <li><code>rotation</code> (number): Default: <code>0</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptpositioncell","title":"<code>mwscript.positionCell</code>","text":"<p>Use <code>tes3.positionCell()</code> instead. Wrapper for the <code>PositionCell</code> mwscript function.</p> <pre><code>local executed = mwscript.positionCell({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>cell</code> (string)</li> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> <li><code>z</code> (number): Default: <code>0</code>.</li> <li><code>rotation</code> (number): Default: <code>0</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptremoveitem","title":"<code>mwscript.removeItem</code>","text":"<p>Use <code>tes3.removeItem()</code>, <code>tes3.removeItemData()</code> or <code>tes3inventory:removeItem()</code> instead. Wrapper for the <code>RemoveItem</code> mwscript function.</p> <pre><code>local executed = mwscript.removeItem({ reference = ..., item = ..., count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>item</code> (tes3item, string): The item to be removed.</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to be removed.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptremovespell","title":"<code>mwscript.removeSpell</code>","text":"<p>Use <code>tes3.removeSpell()</code> or <code>tes3spellList:remove()</code> instead. Wrapper for the <code>RemoveSpell</code> mwscript function.</p> <pre><code>local executed = mwscript.removeSpell({ reference = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>spell</code> (tes3spell, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptscriptrunning","title":"<code>mwscript.scriptRunning</code>","text":"<p>Wrapper for the <code>ScriptRunning</code> mwscript function.</p> <pre><code>local result = mwscript.scriptRunning({ script = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>script</code> (tes3script, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptsetdelete","title":"<code>mwscript.setDelete</code>","text":"<p>Marks the <code>reference</code> as deleted, and modified. Deleted reference isn't rendered nor is its local mwscript run.</p> <pre><code>local executed = mwscript.setDelete({ reference = ..., delete = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>delete</code> (boolean): Default: <code>true</code>. Setting this to true deletes the reference and triggers <code>referenceDeactivated</code> event. Setting this to false effectively undeletes/activates the reference and triggers <code>referenceActivated</code> event.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptsetlevel","title":"<code>mwscript.setLevel</code>","text":"<p>Use <code>tes3npc.level</code> instead. Wrapper for the <code>SetLevel</code> mwscript function.</p> <pre><code>local executed = mwscript.setLevel({ reference = ..., level = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>level</code> (number)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptstartcombat","title":"<code>mwscript.startCombat</code>","text":"<p>Use <code>tes3mobileActor:startCombat()</code> instead. Wrapper for the <code>StartCombat</code> mwscript function.</p> <pre><code>local executed = mwscript.startCombat({ reference = ..., target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): Actor to start combat with.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptstartscript","title":"<code>mwscript.startScript</code>","text":"<p>Use <code>tes3.runLegacyScript()</code> instead. Wrapper for the <code>StartCombat</code> mwscript function.</p> <pre><code>local executed = mwscript.startScript({ reference = ..., script = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>script</code> (tes3script, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptstopcombat","title":"<code>mwscript.stopCombat</code>","text":"<p>Use <code>tes3mobileActor:stopCombat()</code> instead. Wrapper for the <code>StopCombat</code> mwscript function.</p> <pre><code>local executed = mwscript.stopCombat({ reference = ..., target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): Actor to stop combat with.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptstopscript","title":"<code>mwscript.stopScript</code>","text":"<p>Wrapper for the <code>StopScript</code> mwscript function.</p> <pre><code>local executed = mwscript.stopScript({ reference = ..., script = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>script</code> (tes3script, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptstopsound","title":"<code>mwscript.stopSound</code>","text":"<p>Use <code>tes3.removeSound()</code> or <code>tes3sound:stop()</code> instead. Wrapper for the <code>StopSound</code> mwscript function.</p> <pre><code>local result = mwscript.stopSound({ reference = ..., sound = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The target reference for this command to be executed on. Defaults to the normal script execution reference.</li> <li><code>sound</code> (tes3sound, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwscript/#mwscriptwakeuppc","title":"<code>mwscript.wakeUpPC</code>","text":"<p>Use <code>tes3.wakeUp()</code> instead. Wrapper for the <code>WakeUpPC</code> mwscript function.</p> <pre><code>mwscript.wakeUpPC()\n</code></pre>"},{"location":"apis/mwse/","title":"Mwse","text":""},{"location":"apis/mwse/#mwse","title":"mwse","text":"<p>The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects.</p>"},{"location":"apis/mwse/#properties","title":"Properties","text":""},{"location":"apis/mwse/#mwsebuilddate","title":"<code>mwse.buildDate</code>","text":"<p>A numerical representation of the date that version of MWSE currently being used was built on.</p> <p>Formatted as YYYYMMDD.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Check if the user has minimal required MWSE build installed. <pre><code>-- Ensure we have the features we need.\nif (mwse.buildDate == nil or mwse.buildDate &lt; 20210817) then\n    mwse.log(\"[Example] Build date of %s does not meet minimum build date of 20210817.\", mwse.buildDate)\n    return\nend\n</code></pre>"},{"location":"apis/mwse/#mwsegametimers","title":"<code>mwse.gameTimers</code>","text":"<p>The mwseTimerController responsible for game-type timers.</p> <p>Returns:</p> <ul> <li><code>result</code> (mwseTimerController)</li> </ul>"},{"location":"apis/mwse/#mwserealtimers","title":"<code>mwse.realTimers</code>","text":"<p>The mwseTimerController responsible for real-type timers.</p> <p>Returns:</p> <ul> <li><code>result</code> (mwseTimerController)</li> </ul>"},{"location":"apis/mwse/#mwsesimulatetimers","title":"<code>mwse.simulateTimers</code>","text":"<p>The mwseTimerController responsible for simulate-type timers.</p> <p>Returns:</p> <ul> <li><code>result</code> (mwseTimerController)</li> </ul>"},{"location":"apis/mwse/#mwseversion","title":"<code>mwse.version</code>","text":"<p>A numerical representation of the release version of MWSE currently being used.</p> <p>Formatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded.</p> <p>It is usually better to use <code>mwse.buildDate</code> instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse/#functions","title":"Functions","text":""},{"location":"apis/mwse/#mwseclearscriptoverride","title":"<code>mwse.clearScriptOverride</code>","text":"<p>Configures MWSE to no longer execute a lua function instead when a script would run. This undoes the work of <code>mwse.overrideScript</code>.</p> <pre><code>local result = mwse.clearScriptOverride(scriptId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>scriptId</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwse/#mwsegetcurrentmorrowindscriptstate","title":"<code>mwse.getCurrentMorrowindScriptState</code>","text":"<p>This function returns information on the current mwscript execution state.</p> <pre><code>local script, reference = mwse.getCurrentMorrowindScriptState()\n</code></pre> <p>Returns:</p> <ul> <li><code>script</code> (tes3script, nil): The currently executing mwscript script, or nil if none is presently being executed.</li> <li><code>reference</code> (tes3reference, nil): The currently executing mwscript script's associated reference. This will be nil for global scripts, or nil if no script is presently being executed.</li> </ul>"},{"location":"apis/mwse/#mwsegetversion","title":"<code>mwse.getVersion</code>","text":"<p>Equivalent to mwse.version.</p> <pre><code>local result = mwse.getVersion()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse/#mwsegetvirtualmemoryusage","title":"<code>mwse.getVirtualMemoryUsage</code>","text":"<p>Returns the amount of memory used, in bytes.</p> <pre><code>local result = mwse.getVirtualMemoryUsage()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse/#mwseloadconfig","title":"<code>mwse.loadConfig</code>","text":"<p>Loads a config table from Data Files\\MWSE\\config\\{fileName}.json.</p> <p>If the default values table is passed, empty keys in the config will be filled in using its values. Additionally, if no file exists, the function will return the default table.</p> <pre><code>local result = mwse.loadConfig(fileName, defaults)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fileName</code> (string): The non-extensioned name of the config file.</li> <li><code>defaults</code> (table): Optional. A table of default values.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/mwse/#mwseloadtranslations","title":"<code>mwse.loadTranslations</code>","text":"<p>Loads translations from the i18n folder for a given mod. This is locale-aware, using the result from <code>tes3.getLanguage()</code>. See the mod translations guide for more information.</p> <pre><code>local i18n = mwse.loadTranslations(mod)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mod</code> (string): Name of the folder that your main.lua mod can be found in.</li> </ul> <p>Returns:</p> <ul> <li><code>i18n</code> (function): The callable translation results.</li> </ul>"},{"location":"apis/mwse/#mwselog","title":"<code>mwse.log</code>","text":"<p>This function writes information to the mwse.log file in the user's installation directory.</p> <p>The message accepts formatting and additional parameters matching string.format's usage.</p> <pre><code>mwse.log(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional.</li> </ul>"},{"location":"apis/mwse/#mwselongtostring","title":"<code>mwse.longToString</code>","text":"<p>Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string.</p> <pre><code>local result = mwse.longToString(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/mwse/#mwseoverridescript","title":"<code>mwse.overrideScript</code>","text":"<p>Configures MWSE to execute a given function instead when a script would run.</p> <pre><code>local result = mwse.overrideScript(scriptId, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>scriptId</code> (string)</li> <li><code>callback</code> (function)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul> Example: Here is an example of the most common use case for this function. <pre><code>-- In this example, the vanilla \"RaceCheck\" script is overridden\n-- with our own raceCheck() function that does the same thing.\n\nlocal raceCheckScriptID = \"RaceCheck\"\n\nlocal function raceCheck()\n    -- This is almost always the desired behavior,\n    -- since we are overriding the script.\n    mwscript.stopScript({ script = raceCheckScriptID })\n\n    local pcRaceID = tes3.player.object.race.id:lower()\n    local PCRace = tes3.findGlobal(\"PCRace\")\n\n    if pcRaceID == \"argonian\" then\n        PCRace.value = 1\n    elseif pcRaceID == \"breton\" then\n        PCRace.value = 2\n    elseif pcRaceID == \"dark elf\" then\n        PCRace.value = 3\n    elseif pcRaceID == \"high elf\" then\n        PCRace.value = 4\n    elseif pcRaceID == \"imperial\" then\n        PCRace.value = 5\n    elseif pcRaceID == \"khajiit\" then\n        PCRace.value = 6\n    elseif pcRaceID == \"nord\" then\n        PCRace.value = 7\n    elseif pcRaceID == \"orc\" then\n        PCRace.value = 8\n    elseif pcRaceID == \"redguard\" then\n        PCRace.value = 9\n    elseif pcRaceID == \"wood elf\" then\n        PCRace.value = 10\n    end\nend\n\n-- Script overrides can be queued when initialited event triggers.\nevent.register(tes3.event.initialized, function()\n    mwse.overrideScript(raceCheckScriptID, raceCheck)\nend)\n</code></pre>"},{"location":"apis/mwse/#mwsesaveconfig","title":"<code>mwse.saveConfig</code>","text":"<p>Saves a config table to Data Files\\MWSE\\config\\{fileName}.json.</p> <pre><code>local result = mwse.saveConfig(fileName, object, config)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fileName</code> (string)</li> <li><code>object</code> (unknown)</li> <li><code>config</code> (table): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/mwse/#mwsestringtolong","title":"<code>mwse.stringToLong</code>","text":"<p>Converts an uppercase, 4-character string into a TES3 object type.</p> <pre><code>local result = mwse.stringToLong(tag)\n</code></pre> <p>Parameters:</p> <ul> <li><code>tag</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse.stack/","title":"Mwse.stack","text":""},{"location":"apis/mwse.stack/#mwsestack","title":"mwse.stack","text":"<p>The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions.</p>"},{"location":"apis/mwse.stack/#functions","title":"Functions","text":""},{"location":"apis/mwse.stack/#mwsestackclear","title":"<code>mwse.stack.clear</code>","text":"<p>Purges all elements from the stack.</p> <pre><code>mwse.stack.clear()\n</code></pre>"},{"location":"apis/mwse.stack/#mwsestackdump","title":"<code>mwse.stack.dump</code>","text":"<p>Prints all values on the stack in hex format to the log file.</p> <pre><code>mwse.stack.dump()\n</code></pre>"},{"location":"apis/mwse.stack/#mwsestackempty","title":"<code>mwse.stack.empty</code>","text":"<p>Determines if the stack is empty.</p> <pre><code>local result = mwse.stack.empty()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpopfloat","title":"<code>mwse.stack.popFloat</code>","text":"<p>Pops a value of mwscript type \"float\" off of the stack.</p> <pre><code>local unnamed1 = mwse.stack.popFloat()\n</code></pre> <p>Returns:</p> <ul> <li><code>unnamed</code> (number): Optional.</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpoplong","title":"<code>mwse.stack.popLong</code>","text":"<p>Pops a value of mwscript type \"long\" off of the stack.</p> <pre><code>local unnamed1 = mwse.stack.popLong()\n</code></pre> <p>Returns:</p> <ul> <li><code>unnamed</code> (number): Optional.</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpopobject","title":"<code>mwse.stack.popObject</code>","text":"<p>Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object.</p> <pre><code>local unnamed1 = mwse.stack.popObject()\n</code></pre> <p>Returns:</p> <ul> <li><code>unnamed</code> (tes3baseObject): Optional.</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpopshort","title":"<code>mwse.stack.popShort</code>","text":"<p>Pops a value of mwscript type \"short\" off of the stack.</p> <pre><code>local unnamed1 = mwse.stack.popShort()\n</code></pre> <p>Returns:</p> <ul> <li><code>unnamed</code> (number): Optional.</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpopstring","title":"<code>mwse.stack.popString</code>","text":"<p>Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string.</p> <pre><code>local unnamed1 = mwse.stack.popString()\n</code></pre> <p>Returns:</p> <ul> <li><code>unnamed</code> (string): Optional.</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpushfloat","title":"<code>mwse.stack.pushFloat</code>","text":"<p>Pushes a value of mwscript type \"float\" onto the stack.</p> <pre><code>local result = mwse.stack.pushFloat(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpushlong","title":"<code>mwse.stack.pushLong</code>","text":"<p>Pushes a value of mwscript type \"long\" onto the stack.</p> <pre><code>local result = mwse.stack.pushLong(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpushobject","title":"<code>mwse.stack.pushObject</code>","text":"<p>Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object.</p> <pre><code>local result = mwse.stack.pushObject(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (tes3baseObject)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpushshort","title":"<code>mwse.stack.pushShort</code>","text":"<p>Pushes a value of mwscript type \"short\" onto the stack.</p> <pre><code>local result = mwse.stack.pushShort(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestackpushstring","title":"<code>mwse.stack.pushString</code>","text":"<p>Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string.</p> <pre><code>local result = mwse.stack.pushString(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil)</li> </ul>"},{"location":"apis/mwse.stack/#mwsestacksize","title":"<code>mwse.stack.size</code>","text":"<p>Returns the number of elements currently on the stack.</p> <pre><code>local result = mwse.stack.size()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse.string/","title":"Mwse.string","text":""},{"location":"apis/mwse.string/#mwsestring","title":"mwse.string","text":"<p>The mwse string library provides functions for interacting with mwscript string storage.</p>"},{"location":"apis/mwse.string/#functions","title":"Functions","text":""},{"location":"apis/mwse.string/#mwsestringcreate","title":"<code>mwse.string.create</code>","text":"<p>Creates a string in storage, and returns the numerical key for it.</p> <p>If the string is already in storage, the previous key will be returned.</p> <pre><code>local result = mwse.string.create(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/mwse.string/#mwsestringget","title":"<code>mwse.string.get</code>","text":"<p>Returns the numerical key for a given string in storage, or nil if the string isn't in storage.</p> <pre><code>local unnamed1 = mwse.string.get(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (number): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>unnamed</code> (string)</li> </ul>"},{"location":"apis/os/","title":"Os","text":""},{"location":"apis/os/#os","title":"os","text":"<p>Provides various OS-specific functions.</p>"},{"location":"apis/os/#functions","title":"Functions","text":""},{"location":"apis/os/#osclock","title":"<code>os.clock</code>","text":"<p>Return CPU time since Lua started in seconds.</p> <pre><code>local result = os.clock()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/os/#oscreateprocess","title":"<code>os.createProcess</code>","text":"<p>Passes command to be executed by an operating system. Unlike <code>os.execute</code>, this will not display a console prompt that interrupts the game and cannot run direct shell commands.</p> <pre><code>local executor = os.createProcess({ command = ..., async = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>command</code> (string): The command to run.</li> <li><code>async</code> (boolean): Default: <code>true</code>. If set to false, Morrowind will halt execution until the program finishes.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executor</code> (mwseLuaExecutor): A handle to the executor. This can be used to check if the program has errored, finished, and to get the program's output.</li> </ul>"},{"location":"apis/os/#osexecute","title":"<code>os.execute</code>","text":"<p>Passes command to be executed by an operating system shell. To open a program to run in the background and monitor its output, use <code>os.createProcess</code>.</p> <pre><code>local exitCode = os.execute(command)\n</code></pre> <p>Parameters:</p> <ul> <li><code>command</code> (string): The command to run.</li> </ul> <p>Returns:</p> <ul> <li><code>exitCode</code> (number): The exit code of the program.</li> </ul>"},{"location":"apis/os/#osgetclipboardtext","title":"<code>os.getClipboardText</code>","text":"<p>Returns the current clipboard text, if any is available.</p> <pre><code>local result = os.getClipboardText()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string, nil)</li> </ul>"},{"location":"apis/os/#osopenurl","title":"<code>os.openURL</code>","text":"<p>Opens the given <code>url</code> in the default browser. This has an advantage over using <code>os.execute(\"start https://my.url\")</code> in that it does not create a command prompt window.</p> <pre><code>os.openURL(url)\n</code></pre> <p>Parameters:</p> <ul> <li><code>url</code> (string): The URL to open.</li> </ul>"},{"location":"apis/os/#ossetclipboardtext","title":"<code>os.setClipboardText</code>","text":"<p>Sets the current clipboard text. If nil is passed, the clipboard will be cleared instead. If either operation fails, the function returns false.</p> <pre><code>local result = os.setClipboardText(text)\n</code></pre> <p>Parameters:</p> <ul> <li><code>text</code> (string, nil): Optional. The text to put in the clipboard. If nil is provided instead, then the clipboard will be cleared.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/re/","title":"Re","text":""},{"location":"apis/re/#re","title":"re","text":"<p>Provides a regular expression style syntax for pattern usage with lpeg.</p> <p>The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at:  http://www.inf.puc-rio.br/~roberto/lpeg/re.html</p> <p>There is also a copy in the MWSE repo at: deps/lpeg/re.html</p>"},{"location":"apis/re/#functions","title":"Functions","text":""},{"location":"apis/re/#recompile","title":"<code>re.compile</code>","text":"<p>Compiles the given string and returns an equivalent lpeg pattern.</p> <p>The given string may define either an expression or a grammar. The optional defs table provides  extra Lua values to be used by the pattern.</p> <pre><code>local result = re.compile(s, defs)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string): The string to compile.</li> <li><code>defs</code> (table): Optional. Extra lua values to be used by the pattern.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (pattern)</li> </ul>"},{"location":"apis/re/#refind","title":"<code>re.find</code>","text":"<p>Searches the given pattern in the given subject.</p> <p>If it finds a match, returns the index where this occurrence starts and the index where it ends.  Otherwise, returns nil.</p> <p>An optional numeric argument init makes the search starts at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. </p> <pre><code>local result = re.find(subject, pattern, init)\n</code></pre> <p>Parameters:</p> <ul> <li><code>subject</code> (string): The string to search.</li> <li><code>pattern</code> (string): The pattern to search with.</li> <li><code>init</code> (number): Optional. Start at this position in the subject string.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Simple Find <p>Use re.find to get the position of the first numeral in a string.</p> <pre><code>local re = require(\"re\")\n\nlocal function onLoaded(e)\n\n    -- find the position of the first numeral in a string\n    mwse.log(\"%d %d\", re.find(\"the number 423 is odd\", \"[0-9]+\"))  --&gt; 12 14\n\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/re/#regsub","title":"<code>re.gsub</code>","text":"<p>Does a global substitution, replacing all occurrences of pattern in the given subject by replacement.</p> <pre><code>local result = re.gsub(subject, pattern, replacement)\n</code></pre> <p>Parameters:</p> <ul> <li><code>subject</code> (string): The string to search.</li> <li><code>pattern</code> (string): The pattern to search with.</li> <li><code>replacement</code> (string): Replace all matches with this string.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul> Example: Simple Substitution <p>Use re.gsub to replace all vowels in a string with '.'.</p> <pre><code>local re = require(\"re\")\n\nlocal function onLoaded(e)\n\n    -- returns a string with all vowels replaced by .\n    mwse.log(re.gsub(\"hello World\", \"[aeiou]\", \".\"))\n    --&gt; h.ll. W.rld\n\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/re/#rematch","title":"<code>re.match</code>","text":"<p>Matches the given pattern against the given subject, returning all captures.</p> <pre><code>local result = re.match(subject, pattern)\n</code></pre> <p>Parameters:</p> <ul> <li><code>subject</code> (string): The string to search.</li> <li><code>pattern</code> (string): The pattern to search with.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul> Example: Simple Match <p>Use re.match to find all the words in a string, then find the first numeral.</p> <pre><code>local re = require(\"re\")\n\nlocal function onLoaded(e)\n\n    -- returns all words in a string\n    mwse.log(\"%s %s %s %s\", re.match(\"the number 423 is odd\", \"({%a+} / .)*\"))\n    --&gt; the number  is  odd\n\n    -- returns the first numeral in a string\n    mwse.log(re.match(\"the number 423 is odd\", \"s &lt;- {%d+} / . s\"))\n    --&gt; 423\n\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/re/#reupdatelocale","title":"<code>re.updatelocale</code>","text":"<p>Updates the pre-defined character classes to the current locale.</p> <pre><code>re.updatelocale()\n</code></pre>"},{"location":"apis/string/","title":"String","text":""},{"location":"apis/string/#string","title":"string","text":"<p>This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.</p>"},{"location":"apis/string/#functions","title":"Functions","text":""},{"location":"apis/string/#stringendswith","title":"<code>string.endswith</code>","text":"<p>Returns true if a string ends with a given pattern.</p> <pre><code>local result = string.endswith(s, pattern)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> <li><code>pattern</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/string/#stringformat","title":"<code>string.format</code>","text":"<p>This function creates a string, given various values. The first parameter follows the printf format, with the additional option of <code>%q</code> to automatically quote a string.</p> Specifier Output Example <code>%d</code> Signed decimal integer. -392 <code>%i</code> Same as <code>%d</code>. -392 <code>%u</code> Unsigned decimal integer. 7235 <code>%o</code> Unsigned octal. 610 <code>%x</code> Unsigned hexadecimal integer. 7fa <code>%X</code> As <code>%x</code>, but uppercase. 7FA <code>%f</code> Decimal floating point, lowercase. 392.65 <code>%F</code> Decimal floating point, uppercase. 392.65 <code>%e</code> Scientific notation (mantissa/exponent), lowercase. 3.9265e+2 <code>%E</code> Scientific notation (mantissa/exponent), uppercase. 3.9265E+2 <code>%g</code> Use the shortest representation: %e or %f. 392.65 <code>%G</code> Use the shortest representation: %E or %F. 392.65 <code>%a</code> Hexadecimal floating point, lowercase. -0xc.90fep-2 <code>%A</code> Hexadecimal floating point, uppercase. -0XC.90FEP-2 <code>%c</code> Character. a <code>%s</code> String of characters. sample <code>%q</code> Quoted string of characters. \"sample\" <code>%p</code> Pointer address. b8000000 <code>%%</code> The literal <code>%</code> character. % <pre><code>local result = string.format(format, values)\n</code></pre> <p>Parameters:</p> <ul> <li><code>format</code> (string): The format string to use for the output.</li> <li><code>values</code> (any): Optional. Values to format into the given string.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/string/#stringinsert","title":"<code>string.insert</code>","text":"<p>Returns a string where one string has been inserted into another at a given position.</p> <pre><code>local inserted = string.insert(s1, s2, position)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s1</code> (string): The string to insert into.</li> <li><code>s2</code> (string): The string to insert.</li> <li><code>position</code> (number): The position to insert s2 into s1.</li> </ul> <p>Returns:</p> <ul> <li><code>inserted</code> (string): A copy of s1 with s2 inserted into it.</li> </ul>"},{"location":"apis/string/#stringmultifind","title":"<code>string.multifind</code>","text":"<p>Performs the logic of find, using a table of patterns.</p> <p>If any of the available patterns match, the matching pattern is returned followed by the normal results of the find.</p> <pre><code>string.multifind(s, pattern, index, plain)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string): The string to perform finds on.</li> <li><code>pattern</code> (table): An array-style table that contains pattern strings.</li> <li><code>index</code> (number): Default: <code>1</code>. Start index of the find.</li> <li><code>plain</code> (boolean): Default: <code>false</code>. If true, a normal search instead of a pattern search will be performed.</li> </ul>"},{"location":"apis/string/#stringsplit","title":"<code>string.split</code>","text":"<p>Returns an array-style table with <code>str</code> split by <code>sep</code>. The <code>sep</code>erator is not part of the results. By default the <code>sep</code>erator is <code>%s</code>, splitting the given <code>str</code>ing by spaces.</p> <pre><code>local split = string.split(str, sep)\n</code></pre> <p>Parameters:</p> <ul> <li><code>str</code> (string): The string to split.</li> <li><code>sep</code> (string): Default: <code>\"%s\"</code>. The token to split the string by.</li> </ul> <p>Returns:</p> <ul> <li><code>split</code> (string[])</li> </ul>"},{"location":"apis/string/#stringstartswith","title":"<code>string.startswith</code>","text":"<p>Returns true if a string begins with a given pattern.</p> <pre><code>local result = string.startswith(s, pattern)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> <li><code>pattern</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/string/#stringtrim","title":"<code>string.trim</code>","text":"<p>Returns a copy of the string, with whitespace removed from the start and end.</p> <pre><code>local trimmed = string.trim(s)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>trimmed</code> (string)</li> </ul>"},{"location":"apis/table/","title":"Table","text":""},{"location":"apis/table/#table","title":"table","text":"<p>This library provides generic functions for table manipulation. It provides all its functions inside the table table.</p>"},{"location":"apis/table/#functions","title":"Functions","text":""},{"location":"apis/table/#tablebininsert","title":"<code>table.bininsert</code>","text":"<p>Inserts a given value through BinaryInsert into the table sorted by [, comp].</p> <p>If 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a &gt; b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted</p> <pre><code>local result = table.bininsert(t, value, comp)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>value</code> (unknown)</li> <li><code>comp</code> (unknown): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/table/#tablebinsearch","title":"<code>table.binsearch</code>","text":"<p>Performs a binary search for a given value.</p> <p>If the value is found: It returns a table holding all the mathing indices (e.g. { startindice,endindice } ) endindice may be the same as startindice if only one matching indice was found</p> <p>If compval is given: then it must be a function that takes one value and returns a second value2, to be compared with the input value, e.g.: compvalue = function( value ) return value[1] end</p> <p>If reversed is set to true: then the search assumes that the table is sorted in reverse order (largest value at position 1) note when reversed is given compval must be given as well, it can be nil/_ in this case</p> <p>Return value: on success: a table holding matching indices (e.g. { startindice,endindice } ) on failure: nil</p> <pre><code>local result = table.binsearch(t, value, compval, reversed)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>value</code> (unknown)</li> <li><code>compval</code> (unknown): Optional.</li> <li><code>reversed</code> (unknown): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/table/#tablechoice","title":"<code>table.choice</code>","text":"<p>Returns a random element from the given table.</p> <pre><code>local result = table.choice(t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (unknown)</li> </ul>"},{"location":"apis/table/#tableclear","title":"<code>table.clear</code>","text":"<p>This clears all keys and values from a table, but preserves the allocated array/hash sizes. This is useful when a table, which is linked from multiple places, needs to be cleared and/or when recycling a table for use by the same context. This avoids managing backlinks, saves an allocation and the overhead of incremental array/hash part growth.</p> <p>Please note this function is meant for very specific situations. In most cases it's better to replace the (usually single) link with a new table and let the garbage collection do its work.</p> <pre><code>table.clear(table)\n</code></pre> <p>Parameters:</p> <ul> <li><code>table</code> (table): The table to clear.</li> </ul>"},{"location":"apis/table/#tablecopy","title":"<code>table.copy</code>","text":"<p>Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data.</p> <pre><code>local result = table.copy(from, to)\n</code></pre> <p>Parameters:</p> <ul> <li><code>from</code> (table)</li> <li><code>to</code> (table): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/table/#tablecopymissing","title":"<code>table.copymissing</code>","text":"<p>Copies a table's contents from one table to another, including subtitles. If a non-table key is already defined, it will not be overwritten. Metatables are not copied.</p> <pre><code>table.copymissing(to, from)\n</code></pre> <p>Parameters:</p> <ul> <li><code>to</code> (table)</li> <li><code>from</code> (table)</li> </ul>"},{"location":"apis/table/#tabledeepcopy","title":"<code>table.deepcopy</code>","text":"<p>Copies a table's contents. All subtables will also be copied, as will any metatable.</p> <pre><code>local result = table.deepcopy(t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/table/#tableempty","title":"<code>table.empty</code>","text":"<p>Returns true if the table is empty, otherwise, it returns false.</p> <pre><code>local result = table.empty(t, deepCheck)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>deepCheck</code> (boolean): Default: <code>false</code>. If true, subtables will also be checked to see if they are empty.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/table/#tablefind","title":"<code>table.find</code>","text":"<p>Returns the key for a given value, or nil if the table does not contain the value.</p> <pre><code>local result = table.find(t, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>value</code> (unknown)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (unknown)</li> </ul>"},{"location":"apis/table/#tableget","title":"<code>table.get</code>","text":"<p>Gets a value in a table. If the key doesn't exist in the table, a specified default value will be returned instead.</p> <pre><code>local result = table.get(t, key, defaultValue)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>key</code> (any): The key to use to access the table.</li> <li><code>defaultValue</code> (any): The default value if the key didn't exist in the table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul>"},{"location":"apis/table/#tablegetset","title":"<code>table.getset</code>","text":"<p>Gets a value in a table. If the key doesn't exist in the table, a specified default value will be set in the table and returned instead.</p> <pre><code>local result = table.getset(t, key, defaultValue)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>key</code> (any): The key to use to access the table.</li> <li><code>defaultValue</code> (any): The default value to set and return if the key didn't exist in the table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul>"},{"location":"apis/table/#tableinvert","title":"<code>table.invert</code>","text":"<p>Returns a copy of <code>t</code> with the keys and values flipped.</p> <pre><code>local result = table.invert(t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"apis/table/#tablekeys","title":"<code>table.keys</code>","text":"<p>Returns an array-style table of all keys in the given table, t. Optionally, it will sort the returned table.</p> <pre><code>local keys = table.keys(t, sort)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table): The table to get keys for.</li> <li><code>sort</code> (boolean, function, nil): Optional. If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function.</li> </ul> <p>Returns:</p> <ul> <li><code>keys</code> (table): An array of all table keys.</li> </ul>"},{"location":"apis/table/#tablenew","title":"<code>table.new</code>","text":"<p>This creates a pre-sized table. This is useful for big tables if the final table size is known and automatic table resizing is too expensive.</p> <pre><code>local newTable = table.new(narray, nhash)\n</code></pre> <p>Parameters:</p> <ul> <li><code>narray</code> (number): A hint for how many elements the table will have as a sequence.</li> <li><code>nhash</code> (number): A hint for how many other elements the table will have.</li> </ul> <p>Returns:</p> <ul> <li><code>newTable</code> (table): The pre-sized table that was created.</li> </ul>"},{"location":"apis/table/#tableremovevalue","title":"<code>table.removevalue</code>","text":"<p>Removes a value from a given table. Returns true if the value was successfully removed.</p> <pre><code>local result = table.removevalue(t, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> <li><code>value</code> (unknown)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/table/#tablesize","title":"<code>table.size</code>","text":"<p>Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table.</p> <pre><code>local result = table.size(t)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/table/#tabletraverse","title":"<code>table.traverse</code>","text":"<p>This function is used to iterate over a graph-like table. You can specify the key of the subtable that contains the child nodes.</p> <p>Each \"node\" is an object with a children table of other \"nodes\", each of which might have their own children. For example, a sceneNode is made up of niNodes, and each niNodes can have a list of niNode children. This is best used for recursive data structures like UI elements and sceneNodes etc.</p> <pre><code>local iterator = table.traverse(t, k)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table): A table to transverse.</li> <li><code>k</code> (string): Default: <code>children</code>. The subtable key.</li> </ul> <p>Returns:</p> <ul> <li><code>iterator</code> (fun(): any)</li> </ul> Example: Iterate over all scene nodes attached to player. <p>In the example below, function onLoaded() will be called when the game has been successfully loaded.</p> <p>For each scene nodes attached to the player, its type (node.RTTI.name) and name (node.name), will be printed to MWSE.log.</p> <pre><code>local function onLoaded()\n    mwse.log(\"Player's scene graph:\")\n    for node in table.traverse({tes3.player.sceneNode}) do\n        mwse.log(\"%s : %s\", node.RTTI.name, node.name)\n    end\nend\n\nevent.register(tes3.event.loaded, onLoaded)\n</code></pre>"},{"location":"apis/table/#tablevalues","title":"<code>table.values</code>","text":"<p>Returns an array-style table of all values in the given table, t. Optionally, it will sort the returned table.</p> <pre><code>local values = table.values(t, sort)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table): The table to get values for.</li> <li><code>sort</code> (boolean, function, nil): Optional. If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function.</li> </ul> <p>Returns:</p> <ul> <li><code>values</code> (table): An array of all table values.</li> </ul>"},{"location":"apis/table/#tablewrapindex","title":"<code>table.wrapindex</code>","text":"<p>This function is used for calculating relative access into an array, such that accessing an element one past the array's size will instead return the position of the first element. Providing an index one before the start (note that this is <code>0</code>, not <code>-1</code>) will instead give the index to the last element in the array.</p> <pre><code>local index = table.wrapindex(t, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>t</code> (table): The table whose size will determine the new wrapped index.</li> <li><code>index</code> (number): The initial provided index. If this is before or after the array, it will be cycled around.</li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number)</li> </ul>"},{"location":"apis/tes3/","title":"Tes3","text":""},{"location":"apis/tes3/#tes3","title":"tes3","text":"<p>The tes3 library provides the majority of the functions for interacting with the game system.</p>"},{"location":"apis/tes3/#properties","title":"Properties","text":""},{"location":"apis/tes3/#tes3bsaloader","title":"<code>tes3.bsaLoader</code>","text":"<p>One of the core game objects, responsible for loaded BSA files.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bsaLoader)</li> </ul>"},{"location":"apis/tes3/#tes3datahandler","title":"<code>tes3.dataHandler</code>","text":"<p>One of the core game objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dataHandler)</li> </ul>"},{"location":"apis/tes3/#tes3game","title":"<code>tes3.game</code>","text":"<p>One of the core game objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3game)</li> </ul>"},{"location":"apis/tes3/#tes3installdirectory","title":"<code>tes3.installDirectory</code>","text":"<p>The currently executed root Morrowind installation path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3magicschoolskill","title":"<code>tes3.magicSchoolSkill</code>","text":"<p>This table is used to convert numerical magic school IDs to their respective skill IDs. These constants will return their respective <code>tes3.skill</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Convert magic school from event data to a respective skill <p>The example below gives the player 100 experience for failing to cast a spell. Here we can see how tes3.magicSchoolSkill is used.</p> <pre><code>local function OnSpellFailed(e)\n\n    local skill = tes3.magicSchoolSkill[e.expGainSchool] -- Note: e.expGainSchool is a value in tes3.magicSchool constants table\n\n    tes3.mobilePlayer:exerciseSkill(skill, 100)\nend\n\nevent.register(tes3.event.spellCastedFailure, OnSpellFailed)\n</code></pre>"},{"location":"apis/tes3/#tes3mobileplayer","title":"<code>tes3.mobilePlayer</code>","text":"<p>The player's mobile actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobilePlayer)</li> </ul>"},{"location":"apis/tes3/#tes3player","title":"<code>tes3.player</code>","text":"<p>A reference to the player.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3player1stperson","title":"<code>tes3.player1stPerson</code>","text":"<p>A reference used for the player's first person hands.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3worldcontroller","title":"<code>tes3.worldController</code>","text":"<p>One of the core game objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldController)</li> </ul>"},{"location":"apis/tes3/#functions","title":"Functions","text":""},{"location":"apis/tes3/#tes3addarmorslot","title":"<code>tes3.addArmorSlot</code>","text":"<p>Registers a new armor slot. Adds a new place for armor pieces with a matching slot number to equip to.</p> <pre><code>local wasAdded = tes3.addArmorSlot({ slot = ..., name = ..., weight = ..., scalar = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>slot</code> (number): Armor slot number. A number greater than 10 to configure a slot for.</li> <li><code>name</code> (string)</li> <li><code>weight</code> (number): Default: <code>0</code>. A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight).</li> <li><code>scalar</code> (number): Default: <code>0.1</code>. A multiplier with range 0.0-1.0 that controls how much of an item's armor value applies to a character's overall armor rating. For comparison, standard chest armor uses 0.3, helmets, greaves and pauldrons use 0.1, and gauntlets use 0.05.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasAdded</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3addclothingslot","title":"<code>tes3.addClothingSlot</code>","text":"<p>Registers a new clothing slot. Adds a new place for clothing pieces with a matching slot number to equip to.</p> <pre><code>tes3.addClothingSlot({ slot = ..., name = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>slot</code> (number): Clothing slot number. A number greater than 9 to configure a slot for.</li> <li><code>name</code> (string)</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3additem","title":"<code>tes3.addItem</code>","text":"<p>Adds an item to a given reference's inventory or mobile's inventory.</p> <pre><code>local addedCount = tes3.addItem({ reference = ..., item = ..., itemData = ..., soul = ..., count = ..., playSound = ..., showMessage = ..., limit = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Who to give items to.</li> <li><code>item</code> (tes3item, tes3leveledItem, string): The item to add. If a leveled item is passed, it will be resolved and added.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data for the item.</li> <li><code>soul</code> (tes3creature, tes3npc): Optional. For creating filled soul gems.</li> <li><code>count</code> (number): Default: <code>1</code>. The maximum number of items to add.</li> <li><code>playSound</code> (boolean): Default: <code>true</code>. If <code>false</code>, the up/down sound for the item won't be played. This only applies if <code>reference</code> is the player.</li> <li><code>showMessage</code> (boolean): Default: <code>false</code>. If <code>true</code>, a message box notifying the player will be shown. This only applies if <code>reference</code> is the player.</li> <li><code>limit</code> (boolean): Default: <code>false</code>. If <code>false</code>, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full.</li> <li><code>reevaluateEquipment</code> (boolean): Default: <code>true</code>. If <code>true</code>, and the item added is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if the new item is worth equipping. This does not affect the player.</li> <li><code>equipProjectiles</code> (boolean): Default: <code>true</code>. If <code>true</code>, and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If <code>false</code>, the function won't manually resync the player's GUI state. This can result in some optimizations, though <code>tes3ui.forcePlayerInventoryUpdate()</code> must manually be called after all inventory updates are finished.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>addedCount</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3additemdata","title":"<code>tes3.addItemData</code>","text":"<p>Creates an item data if there is room for a new stack in a given inventory. This can be then used to add custom user data or adjust an item's condition. This will return nil if no item data could be allocated for the item -- for example if the reference doesn't have the item in their inventory or each item of that type already has item data.</p> <pre><code>local createdData = tes3.addItemData({ to = ..., item = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>to</code> (tes3reference, tes3mobileActor, string): The reference or mobile whose inventory will be modified.</li> <li><code>item</code> (tes3item, string): The item to create item data for.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If false, the player or contents menu won't be updated.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>createdData</code> (tes3itemData)</li> </ul>"},{"location":"apis/tes3/#tes3addjournalentry","title":"<code>tes3.addJournalEntry</code>","text":"<p>This function creates a new journal entry. It can be called once the world controller is loaded.</p> <pre><code>tes3.addJournalEntry({ text = ..., showMessage = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>text</code> (string): The text of the new Journal entry.</li> <li><code>showMessage</code> (boolean): Default: <code>true</code>. If this parameter is true, a \"Your journal has been updated\" message will be displayed.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3addmagiceffect","title":"<code>tes3.addMagicEffect</code>","text":"<p>This function creates a new custom magic effect. The effect can be scripted through lua. This function should be used inside <code>magicEffectsResolved</code> event callback.</p> <pre><code>local effect = tes3.addMagicEffect({ id = ..., name = ..., baseCost = ..., school = ..., size = ..., sizeCap = ..., speed = ..., description = ..., lighting = ..., icon = ..., particleTexture = ..., castSound = ..., boltSound = ..., hitSound = ..., areaSound = ..., castVFX = ..., boltVFX = ..., hitVFX = ..., areaVFX = ..., allowEnchanting = ..., allowSpellmaking = ..., appliesOnce = ..., canCastSelf = ..., canCastTarget = ..., canCastTouch = ..., casterLinked = ..., hasContinuousVFX = ..., hasNoDuration = ..., hasNoMagnitude = ..., illegalDaedra = ..., isHarmful = ..., nonRecastable = ..., targetsAttributes = ..., targetsSkills = ..., unreflectable = ..., usesNegativeLighting = ..., onTick = ..., onCollision = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li><code>id</code> (number): Id of the new effect. Maps to newly claimed <code>tes3.effect</code> constants with <code>tes3.claimSpellEffectId()</code>. If the effect of this id already exists, an error will be thrown.</li> <li><code>name</code> (string): Default: <code>Unnamed Effect</code>. Name of the effect.</li> <li><code>baseCost</code> (number): Default: <code>1</code>. Base magicka cost for the effect.</li> <li><code>school</code> (integer): Default: <code>tes3.magicSchool.alteration</code>. The magic school the new effect will be assigned to. Maps to <code>tes3.magicSchool</code> constants.</li> <li><code>size</code> (number): Default: <code>1</code>. Controls how much the visual effect scales with its magnitude.</li> <li><code>sizeCap</code> (number): Default: <code>1</code>. The maximum possible size of the projectile.</li> <li><code>speed</code> (number): Default: <code>1</code>.</li> <li><code>description</code> (string): Default: <code>No description available.</code>. Description for the effect.</li> <li><code>lighting</code> (table): Optional.<ul> <li><code>x</code> (number): Default: <code>1</code>. Value of red color channel. In range of 0 - 1.</li> <li><code>y</code> (number): Default: <code>1</code>. Value of green color channel. In range of 0 - 1.</li> <li><code>z</code> (number): Default: <code>1</code>. Value of blue color channel. In range of 0 - 1.</li> </ul> </li> <li><code>icon</code> (string): Path to the effect icon. Must be a string no longer than 31 characters long. Use double  as path separator.</li> <li><code>particleTexture</code> (string): Path to the particle texture to use for the effect. Must be a string no longer than 31 characters long.</li> <li><code>castSound</code> (string): The sound ID which will be played on casting a spell with this effect. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used.</li> <li><code>boltSound</code> (string): The sound ID which will be played when a spell with this effect is in flight. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used.</li> <li><code>hitSound</code> (string): The sound ID which will be played when a spell with this effect hits something. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used.</li> <li><code>areaSound</code> (string): The sound ID which will be played on area of effect impact. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used.</li> <li><code>castVFX</code> (tes3physicalObject, string): Optional. The visual played when a spell with this effect is cast.</li> <li><code>boltVFX</code> (tes3physicalObject, string): Optional. The visual played when a spell with this effect is in flight.</li> <li><code>hitVFX</code> (tes3physicalObject, string): Optional. The visual played when a spell with this effect hits something.</li> <li><code>areaVFX</code> (tes3physicalObject, string): Optional. The visual played when a spell with this effect, with area of effect hits something.</li> <li><code>allowEnchanting</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be used in a custom enchantment.</li> <li><code>allowSpellmaking</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be used in a custom spell.</li> <li><code>appliesOnce</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect applies once or is a ticking effect.</li> <li><code>canCastSelf</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be used with cast on self range.</li> <li><code>canCastTarget</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be used with cast on target range.</li> <li><code>canCastTouch</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be used with cast on touch range.</li> <li><code>casterLinked</code> (boolean): Default: <code>true</code>. Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells. Note that this property is hidden in the Construction Set.</li> <li><code>hasContinuousVFX</code> (boolean): Default: <code>true</code>. A flag which controls whether the effect's visual is continuously played during the whole duration of the effect.</li> <li><code>hasNoDuration</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect doesn't have duration.</li> <li><code>hasNoMagnitude</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect doesn't have magnitude.</li> <li><code>illegalDaedra</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect is illegal to use in public, because it summons Daedra. Note: this mechanic is not implemented in the game. Some mods might rely on this parameter.</li> <li><code>isHarmful</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect is considered harmful and casting it can be considered as an attack.</li> <li><code>nonRecastable</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be recast while it already is in duration.</li> <li><code>targetsAttributes</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect targets a certain attribute or attributes.</li> <li><code>targetsSkills</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect targets a certain skill or skills.</li> <li><code>unreflectable</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect can be reflected.</li> <li><code>usesNegativeLighting</code> (boolean): Default: <code>true</code>. A flag which controls whether this effect uses negative lighting.</li> <li> <p><code>onTick</code> (function): Optional. A function which will be called on each tick of a spell containing this effect. A table <code>tickParams</code> will be passed to the callback function. Note: <code>dt</code>(frame time) scaling is handled automatically.</p> <ul> <li><code>tickParams</code> (table)<ul> <li><code>effectId</code> (number)</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Access to the magic source of the effect instance.</li> <li><code>deltaTime</code> (number): The time passed since the last tick of the spell.</li> <li><code>effectInstance</code> (tes3magicEffectInstance): Access to the magic effect instance.</li> <li><code>effectIndex</code> (number): The index of the effect in the spell.</li> </ul> </li> </ul> <p>In addition, a function registered as <code>onTick</code> can also call the following methods:</p> <ul> <li> <p>trigger(<code>triggerParams</code>): Allows the effect to run through the normal spell event system.     Parameters:</p> <ul> <li><code>triggerParams</code> (table)<ul> <li><code>negateOnExpiry</code> (boolean): Optional. Default: <code>true</code> If this flag is <code>true</code>, the effect will be negated on expiry.</li> <li><code>isUncapped</code> (boolean): Optional.</li> <li><code>attribute</code> (number): Optional. Default: <code>tes3.effectAttribute.nonResistable</code> The attribute used in resistance calculations agains this effect. Maps to values in <code>tes3.effectAttribute</code> namespace.</li> <li><code>type</code> (number): Optional. Default: <code>tes3.effectEventType.boolean</code>. This flag controls how the effect behaves. For example, <code>tes3.effectEventType.modStatistic</code> will make the effect work as calling <code>tes3.modStatistic</code>. Maps to values in <code>tes3.effectEventType</code> namespace.</li> <li><code>value</code> (number): Optional. Default: <code>0</code>. The variable this effect changes.</li> <li><code>resistanceCheck(resistParams)</code> (function): Optional. The function passed as <code>resistanceCheck</code> will be used on any of the game's spell resistance checks. For example, the only effect in vanilla Morrowind that implements this function is Water Walking. It disallows using a spell with Water Walking when the player is deep underwater, by setting it as expired. So, returning <code>true</code> from this function will set your effect to expired, and depending on your trigger code may stop processing. The function passed here must returns boolean values.     Parameters<ul> <li><code>resistParams</code> (table)<ul> <li><code>sourceInstance</code> (tes3magicSourceInstance): Access to the magic source of the effect instance.</li> <li><code>effectInstance</code> (tes3magicEffectInstance): Access to the magic effect instance.</li> <li><code>effectIndex</code> (number): The index of the effect in the spell.</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li> <p>triggerBoundWeapon(<code>id</code>): Performs vanilla weapon summoning logic. It will create a summoned version of the weapon with provided ID.     Parameters:</p> <ul> <li><code>id</code> (string): The ID of the weapon object to summon.</li> </ul> </li> <li> <p>triggerBoundArmor(<code>params</code>): Performs vanilla armor summoning logic. It can summon one or two armor objects with provided ID(s).     Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): The ID of the armor object to summon.</li> <li><code>id2</code> (string): Optional. The ID of the additional armor object to summon.</li> </ul> </li> </ul> </li> <li> <p>triggerSummon(<code>id</code>): Performs vanilla creature summoning logic. It will create a summoned version of a creature with provided ID.     Parameters:</p> <ul> <li><code>id</code> (string): The ID of the creature object to summon.</li> </ul> </li> </ul> </li> <li> <p><code>onCollision</code> (function): Optional. A function which will be called when a spell containing this spell effect collides with something.</p> </li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (tes3magicEffect)</li> </ul> Example: Fire Damage effect <p>An implementation of the vanilla Fire Damage effect. Also, three spells are constructed with newly created magic effect, which are added to the player. You can test this in-game.</p> <pre><code>-- Claiming an ID is needed before actually\n-- creating an effect with that ID\ntes3.claimSpellEffectId(\"customFireDmg\", 220)\n\nlocal function onFireDmgTick(tickParams)\n    -- This will print current health for any actor our spell hit\n    tes3.messageBox(\"%s, health: %s\", tickParams.effectInstance.target.object.id, tickParams.effectInstance.target.mobile.health.current)\n\n    tickParams:trigger({\n        type = tes3.effectEventType.modStatistic,\n        -- The resistance attribute against Fire Damage should be Resist Fire\n        attribute = tes3.effectAttribute.resistFire,\n        value = tickParams.effectInstance.target.mobile.health,\n        negateOnExpiry = false,\n        isUncapped = true,\n    })\nend\n\nevent.register(tes3.event.magicEffectsResolved, function()\n    tes3.addMagicEffect({\n        -- The ID we claimed before is now available in tes3.effect namespace\n        id = tes3.effect.customFireDmg,\n\n        -- This information if just copied from the Construction Set --\n        name = \"Fire Damage\",\n        description = (\"This spell effect produces a manifestation of elemental fire. Upon \" ..\n        \"contact with an object, this manifestation explodes, causing damage.\"),\n        baseCost = 5,\n        school = tes3.magicSchool.destruction,\n        size = 1.25,\n        sizeCap = 50,\n        speed = 1,\n        lighting = { x = 0.99, y = 0.26, z = 0.53 },\n        usesNegativeLighting = false,\n\n        icon = \"s\\\\Tx_S_fire_damage.tga\",\n        particleTexture = \"vfx_firealpha00A.tga\",\n        castSound = \"destruction cast\",\n        castVFX = \"VFX_DestructCast\",\n        boltSound = \"destruction bolt\",\n        boltVFX = \"VFX_DestructBolt\",\n        hitSound = \"destruction hit\",\n        hitVFX = \"VFX_DestructHit\",\n        areaSound = \"destruction area\",\n        areaVFX = \"VFX_DestructArea\",\n        -- --\n\n        appliesOnce = false,\n        hasNoDuration = false,\n        hasNoMagnitude = false,\n        illegalDaedra = false,\n        unreflectable = false,\n        casterLinked = false,\n        nonRecastable = false,\n        targetsAttributes = false,\n        targetsSkills = false,\n\n        onTick = onFireDmgTick,\n    })\nend)\n\nevent.register(tes3.event.loaded, function()\n    local spell1 = tes3.createObject({ objectType = tes3.objectType.spell })\n    tes3.setSourceless(spell1)\n    spell1.name = \"TEST SPELL - self\"\n    spell1.magickaCost = 1\n\n    local effect = spell1.effects[1]\n    effect.id = tes3.effect.customFireDmg\n    effect.rangeType = tes3.effectRange.self\n    effect.min = 10\n    effect.max = 10\n    effect.duration = 10\n    effect.radius = 0\n    effect.skill = -1\n    effect.attribute = -1\n\n    local spell2 = tes3.createObject({ objectType = tes3.objectType.spell })\n    tes3.setSourceless(spell2)\n    spell2.name = \"TEST SPELL - target\"\n    spell2.magickaCost = 1\n\n    local effect = spell2.effects[1]\n    effect.id = tes3.effect.customFireDmg\n    effect.rangeType = tes3.effectRange.target\n    effect.min = 3\n    effect.max = 3\n    effect.duration = 10\n    effect.radius = 15\n    effect.skill = -1\n    effect.attribute = -1\n\n    local spell3 = tes3.createObject({ objectType = tes3.objectType.spell })\n    tes3.setSourceless(spell3)\n    spell3.name = \"TEST SPELL - touch\"\n    spell3.magickaCost = 1\n\n    local effect = spell3.effects[1]\n    effect.id = tes3.effect.customFireDmg\n    effect.rangeType = tes3.effectRange.touch\n    effect.min = 3\n    effect.max = 3\n    effect.duration = 10\n    effect.radius = 0\n    effect.skill = -1\n    effect.attribute = -1\n\n    tes3.addSpell({ reference = tes3.mobilePlayer, spell = spell1 })\n    tes3.addSpell({ reference = tes3.mobilePlayer, spell = spell2 })\n    tes3.addSpell({ reference = tes3.mobilePlayer, spell = spell3 })\nend)\n</code></pre>"},{"location":"apis/tes3/#tes3addsoulgem","title":"<code>tes3.addSoulGem</code>","text":"<p>Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping.</p> <pre><code>local wasAdded = tes3.addSoulGem({ item = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3misc, string): The item to recognize as a soul gem.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasAdded</code> (boolean)</li> </ul> Example: Make the Dwemer Tube a Soul gem. Also, make sure Fargoth's soul alway ends up in it if the player has one avilable. <pre><code>local function onInitialized()\n    tes3.addSoulGem({ item = \"misc_dwrv_artifact60\" })\nend\nevent.register(tes3.event.initialized, onInitialized)\n\nlocal function onFilterSoulGemTarget(e)\n    if (e.reference.baseObject.id:lower() == \"fargoth\") then\n        return e.soulGem.id == \"misc_dwrv_artifact60\"\n    end\nend\nevent.register(tes3.event.filterSoulGemTarget, onFilterSoulGemTarget)\n\n-- calcSoulValue event allows assigning a new soul value to creatures\n-- If the event was triggered for an NPC, it allows assigning a value\n-- thus allowing soul-trapping the actor.\nlocal function calcSoulValueCallback(e)\n    if (e.actor.id:lower() == \"fargoth\") then\n        e.value = 69\n        mwse.log(\"Getting Fargoth's value.\")\n        return\n    end\nend\nevent.register(tes3.event.calcSoulValue, calcSoulValueCallback)\n</code></pre>"},{"location":"apis/tes3/#tes3addspell","title":"<code>tes3.addSpell</code>","text":"<p>Adds a spell to an actor's spell list. If the spell is passive, the effects will be applied.</p> <pre><code>local wasAdded = tes3.addSpell({ reference = ..., actor = ..., spell = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Who to give the spell to. To manipulate an actor without specifying any particular reference, use <code>actor</code> instead.</li> <li><code>actor</code> (tes3actor, string): Who to give the spell to. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save.</li> <li><code>spell</code> (tes3spell, string): The spell to add.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If true, the GUI will be updated respecting the adding of the spell. This can be useful to disable when batch-adding many spells. The batch should be ended with <code>tes3.updateMagicGUI</code> to reflect the changes.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasAdded</code> (boolean): True if the spell was successfully added. This can be false if the actor's race or birthsign already contains the spell.</li> </ul>"},{"location":"apis/tes3/#tes3addtopic","title":"<code>tes3.addTopic</code>","text":"<p>Adds a topic to the valid topic list for the player. This doesn't create a dynamic new topic.</p> <pre><code>local wasAdded = tes3.addTopic({ topic = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>topic</code> (tes3dialogue, string): The topic to add</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If true, the GUI will be updated respecting the adding of the topic.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasAdded</code> (boolean): True if the topic was successfully added. This can be false if the topic already existed in the player's list.</li> </ul>"},{"location":"apis/tes3/#tes3adjustsoundvolume","title":"<code>tes3.adjustSoundVolume</code>","text":"<p>Changes the volume of a sound that is playing on a given reference.</p> <pre><code>tes3.adjustSoundVolume({ sound = ..., reference = ..., mixChannel = ..., volume = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>sound</code> (tes3sound, string): The sound object, or id of the sound to look for.</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to attach the sound to.</li> <li><code>mixChannel</code> (integer): Default: <code>tes3.soundMix.effects</code>. The channel to base volume off of. Maps to <code>tes3.soundMix</code> constants.</li> <li><code>volume</code> (number): Default: <code>1.0</code>. A value between 0.0 and 1.0 to scale the volume off of.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3advancetime","title":"<code>tes3.advanceTime</code>","text":"<p>Advances the game time. Can be used to simulate player resting.</p> <pre><code>local hoursPassed = tes3.advanceTime({ hours = ..., resting = ..., updateEnvironment = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>hours</code> (number): How many hours to progress.</li> <li><code>resting</code> (boolean): Default: <code>false</code>. Should advancing time count as resting? If set to true invokes usual sleeping mechanics: health, fatigue and magicka restoration, and possible rest interruption. The length of the rest will be equal to hours parameter, rounded down to nearest natural number.</li> <li><code>updateEnvironment</code> (boolean): Default: <code>true</code>. Controls if the weather system is updated for each hour passed.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>hoursPassed</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3applymagicsource","title":"<code>tes3.applyMagicSource</code>","text":"<pre><code>local instance = tes3.applyMagicSource({ reference = ..., source = ..., name = ..., effects = ..., createCopy = ..., fromStack = ..., castChance = ..., target = ..., bypassResistances = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): A reference on which the magic source will be applied.</li> <li><code>source</code> (tes3object): Optional. A magic source to apply.</li> <li><code>name</code> (string): Optional. While optional for other uses, if applying alchemy as a source, you must specify a name for the magic source.</li> <li><code>effects</code> (table): Optional. A table of custom effects to apply as a potion. Maximal number of effects is 8.<ul> <li><code>id</code> (boolean): Default: <code>-1</code>. ID of the effect.</li> <li><code>skill</code> (number): Default: <code>-1</code>. If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to <code>tes3.skill</code> constants.</li> <li><code>attribute</code> (number): Default: <code>-1</code>. If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to <code>tes3.attribute</code> constants.</li> <li><code>rangeType</code> (number): Default: <code>tes3.effectRange.self</code>. The range of the effect. This maps to <code>tes3.effectRange</code> constants.</li> <li><code>radius</code> (number): Default: <code>0</code>. The radius of the effect.</li> <li><code>duration</code> (number): Default: <code>0</code>. Number of seconds the effect is going to be active.</li> <li><code>min</code> (number): Default: <code>0</code>. The minimal magintude of the effect per tick.</li> <li><code>max</code> (number): Default: <code>0</code>. The maximal magnitude of the effect per tick.</li> </ul> </li> <li><code>createCopy</code> (boolean): Default: <code>true</code>. This parameter controls whether the function will return the original magic source or a copy of the magic source. This parameter is only used if source is alchemy.</li> <li><code>fromStack</code> (tes3equipmentStack): Optional. The piece of equipment this magic source is coming from. The fromStack has to be an already equipped item from tes3actor.equipment. This will probably change in the future.</li> <li><code>castChance</code> (number): Optional. This parameter allows overriding the casting chance of the magic source.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): Optional. The target of the magic.</li> <li><code>bypassResistances</code> (boolean): Default: <code>false</code>. Is this effect going to bypass magic resistance?</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>instance</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"apis/tes3/#tes3applytextdefines","title":"<code>tes3.applyTextDefines</code>","text":"<p>Returns a string with all the text defines replaced in the input string. This can be used to replicate the behavior of book and dialogue text.</p> <pre><code>local result = tes3.applyTextDefines({ text = ..., actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>text</code> (string): The input string to do text replacements for.</li> <li><code>actor</code> (tes3actor): The actor to use for replacements like <code>%Name</code> and <code>%Faction</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3calculatechargeuse","title":"<code>tes3.calculateChargeUse</code>","text":"<p>Calculates the actual charge use of an enchantment by a mobile actor, after skills are applied. Invokes the enchantChargeUse event to account for modded charge usage. Takes into account the MCP charge use rebalance patch, if activated.</p> <pre><code>local chargeUse = tes3.calculateChargeUse({ mobile = ..., enchantment = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>mobile</code> (tes3mobileActor): The mobile actor that would be casting the enchantment.</li> <li><code>enchantment</code> (tes3enchantment): The enchantment to check.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>chargeUse</code> (number): Actual charge use.</li> </ul> Example: How to check the charge use of the player's currently selected enchantment <pre><code>local ench = tes3.mobilePlayer.currentSpell\nlocal charge = tes3.calculateChargeUse{ mobile = tes3.mobilePlayer, enchantment = ench }\ntes3.messageBox{ message = string.format(\"%s uses %d charge\", ench.id, charge) }\n</code></pre>"},{"location":"apis/tes3/#tes3calculateprice","title":"<code>tes3.calculatePrice</code>","text":"<p>Calculates a price, given a merchant and associated trading data. This is useful beyond accessing the object's <code>.value</code> field in that it raises the appropriate events to let other mods modify the values.</p> <pre><code>local price = tes3.calculatePrice({ object = ..., basePrice = ..., buying = ..., selling = ..., merchant = ..., bartering = ..., repairing = ..., training = ..., count = ..., itemData = ..., skill = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>object</code> (tes3object): Optional. The object to calculate the price for. If not provided, <code>basePrice</code> is required.</li> <li><code>basePrice</code> (number): Optional. The base price to calculate the end price for. This defaults to the <code>object</code> param's <code>value</code>, if provided. This parameter is required if <code>object</code> is not provided.</li> <li><code>buying</code> (boolean): Default: <code>true</code>. If <code>true</code>, uses the logic for buying a service/item. This is exclusive with <code>selling</code>.</li> <li><code>selling</code> (boolean): Default: <code>false</code>. If <code>true</code>, uses the logic for selling an item. This is exclusive with <code>buying</code>.</li> <li><code>merchant</code> (tes3mobileActor): The merchant to use for calculating the price.</li> <li><code>bartering</code> (boolean): Default: <code>false</code>. If <code>true</code>, a calcBarterPrice or calcRepairPrice event will be triggered.</li> <li><code>repairing</code> (boolean): Default: <code>false</code>. If <code>true</code>, a calcRepairPrice event will be triggered.</li> <li><code>training</code> (boolean): Default: <code>false</code>. If <code>true</code>, a calcTrainingPrice event will be triggered, passing the given <code>skill</code> ID.</li> <li><code>count</code> (number): Default: <code>1</code>. If <code>bartering</code>, the count passed to the calcBarterPrice event.</li> <li><code>itemData</code> (tes3itemData): Optional. If <code>bartering</code> or <code>repairing</code>, the item data passed to the calcBarterPrice or calcRepairPrice event.</li> <li><code>skill</code> (number): If <code>training</code>, the skill ID passed to the calcTrainingPrice event. Maps to value in <code>tes3.skill</code> table.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>price</code> (number): The calculated price, filtered by events.</li> </ul>"},{"location":"apis/tes3/#tes3cancastspells","title":"<code>tes3.canCastSpells</code>","text":"<p>Returns <code>true</code> if the <code>target</code> actor can cast spells, otherwise returns <code>false</code>.</p> <pre><code>local result = tes3.canCastSpells({ target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>target</code> (tes3reference, tes3mobileActor, tes3actor): The actor to check.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3cancelanimationloop","title":"<code>tes3.cancelAnimationLoop</code>","text":"<p>Signals looping animations on the actor to stop looping and play to the end. The animation will continue, playing past the loop point until the end frame. Useful for exiting looping animations cleanly.</p> <pre><code>tes3.cancelAnimationLoop({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference to the actor.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3canrest","title":"<code>tes3.canRest</code>","text":"<p>This function returns true if player can rest.</p> <pre><code>local canRest = tes3.canRest({ checkForEnemies = ..., checkForSolidGround = ..., showMessage = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>checkForEnemies</code> (boolean): Default: <code>true</code>. Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned.</li> <li><code>checkForSolidGround</code> (boolean): Default: <code>true</code>. Perform a check if the player is underwater. If underwater, false is returned.</li> <li><code>showMessage</code> (boolean): Default: <code>false</code>. If true, a messagebox will be shown if the player can't rest because some condition isn't met.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>canRest</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3cast","title":"<code>tes3.cast</code>","text":"<p>Casts a spell from a given reference to a target reference. Touch effects will hit the target at any range, while target effects will create a projectile. By default, the spell always casts successfully and does not consume magicka. By default, an actor casting will stop and perform its cast animation, but the 'instant' flag can start the cast instantly and allows more control over the spell for NPCs.</p> <p>If the caster is the player, the target parameter is optional; without a target, the player's touch effects will only hit targets in front of them, and target effects will create a projectile in the direction the player is facing.</p> <pre><code>local success = tes3.cast({ reference = ..., target = ..., spell = ..., instant = ..., alwaysSucceeds = ..., bypassResistances = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The caster reference.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): The target reference. Optional only if the caster is the player.</li> <li><code>spell</code> (tes3spell, string): The spell the caster uses.</li> <li><code>instant</code> (boolean): Default: <code>false</code>. If <code>true</code>, the spell is cast instantly. No animation is performed.</li> <li><code>alwaysSucceeds</code> (boolean): Default: <code>true</code>. If <code>true</code>, the spell cannot fail and does not consume magicka. If <code>false</code>, it is cast using the actor's spell skill, and requires and takes enough magicka to cast. For NPCs, this only applies if <code>instant</code> is <code>true</code>.</li> <li><code>bypassResistances</code> (boolean): Default: <code>false</code>. If <code>true</code>, the spell will bypass the target's resistances. For NPCs, this only applies if <code>instant</code> is <code>true</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): Returns <code>true</code> if the spell was cast successfully. Returns <code>false</code> if <code>instant</code> is <code>false</code> and the player is trying to cast the spell, while being unable to cast spells under normal circumstances.</li> </ul> Example: This is an example of how to use tes3.cast instead of mwscript.explodeSpell <pre><code>-- The following code can be tested in-game by pressing Alt + l or Alt + k\n\nevent.register(tes3.event.keyDown, function(e)\n    if e.isAltDown then\n        tes3.messageBox(\"mwscript.explodeSpell\")\n        mwscript.explodeSpell({\n            reference = tes3.game.playerTarget,\n            spell = \"proj_trap_spell\"\n        })\n    end\nend, { filter = tes3.scanCode.l })\n\nevent.register(tes3.event.keyDown, function(e)\n    if e.isAltDown then\n        tes3.messageBox(\"tes3.cast\")\n        -- This will behave the same as will mwscript.explodeSpell()\n        tes3.cast({\n            target = tes3.game.playerTarget,\n            reference = tes3.game.playerTarget,\n            spell = \"proj_trap_spell\",\n        })\n    end\nend, { filter = tes3.scanCode.k })\n</code></pre>"},{"location":"apis/tes3/#tes3checkmerchantoffersservice","title":"<code>tes3.checkMerchantOffersService</code>","text":"<p>Checks if a merchant will offer a service to you, including dialogue checks like disposition and faction membership. A specific service can be checked, or if no service is given, a generic dialogue check is made. If the service is refused, the dialogue reply for the refusal may also be returned (it may be nil, as there may not always be a reply available).</p> <pre><code>local offersService, refusalReply = tes3.checkMerchantOffersService(reference, service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> <li><code>service</code> (number): Optional. The specific service to check for availability. Maps to values in the <code>tes3.merchantService</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>offersService</code> (boolean)</li> <li><code>refusalReply</code> (tes3dialogueInfo)</li> </ul>"},{"location":"apis/tes3/#tes3checkmerchanttradesitem","title":"<code>tes3.checkMerchantTradesItem</code>","text":"<p>Determines if a merchant trades in a given item.</p> <pre><code>local trades = tes3.checkMerchantTradesItem({ item = ..., reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string)</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>trades</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3claimspelleffectid","title":"<code>tes3.claimSpellEffectId</code>","text":"<p>This function is used to claim a unique spell effect name and id. This is needed before actually creating a new effect by calling <code>tes3.addMagicEffect()</code>. A claimed effect id is then available as: <code>tes3.effect.effectName</code> (just like any other spell effect). For examples of this function in practice see <code>tes3.addMagicEffect()</code> example.</p> <pre><code>tes3.claimSpellEffectId(name, id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string): The name of the new spell effect. Must be unique. An error will be thrown if it's non-unique.</li> <li><code>id</code> (number): A unique number representing the new spell effect. An error will be thrown if it's non-unique.</li> </ul>"},{"location":"apis/tes3/#tes3clearmarklocation","title":"<code>tes3.clearMarkLocation</code>","text":"<p>This function deletes the player's mark location.</p> <pre><code>tes3.clearMarkLocation()\n</code></pre>"},{"location":"apis/tes3/#tes3closealchemymenu","title":"<code>tes3.closeAlchemyMenu</code>","text":"<p>This function closes the alchemy menu.</p> <pre><code>tes3.closeAlchemyMenu()\n</code></pre>"},{"location":"apis/tes3/#tes3closecontentsmenu","title":"<code>tes3.closeContentsMenu</code>","text":"<p>This function closes the contents menu.</p> <pre><code>local wasClosed = tes3.closeContentsMenu()\n</code></pre> <p>Returns:</p> <ul> <li><code>wasClosed</code> (boolean): If true, the menu was previously open, and is now closed.</li> </ul>"},{"location":"apis/tes3/#tes3closedialoguemenu","title":"<code>tes3.closeDialogueMenu</code>","text":"<p>This function closes the dialogue menu.</p> <pre><code>local wasClosed = tes3.closeDialogueMenu({ force = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>force</code> (boolean): Default: <code>true</code>. Normally, the menu can't be closed in certain circumstances, such as when the player is making a dialogue choice. If true, these usual restrictions will be ignored.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasClosed</code> (boolean): If true, the menu was previously open, and is now closed.</li> </ul>"},{"location":"apis/tes3/#tes3closerepairservicemenu","title":"<code>tes3.closeRepairServiceMenu</code>","text":"<p>This function closes the repair service menu.</p> <pre><code>tes3.closeRepairServiceMenu()\n</code></pre>"},{"location":"apis/tes3/#tes3closerestmenu","title":"<code>tes3.closeRestMenu</code>","text":"<p>This function closes the resting menu.</p> <pre><code>tes3.closeRestMenu()\n</code></pre>"},{"location":"apis/tes3/#tes3closespellmakingmenu","title":"<code>tes3.closeSpellmakingMenu</code>","text":"<p>This function closes the spellmaking menu.</p> <pre><code>tes3.closeSpellmakingMenu()\n</code></pre>"},{"location":"apis/tes3/#tes3createobject","title":"<code>tes3.createObject</code>","text":"<p>Creates an object and returns it. The created object will be part of the saved game.</p> <pre><code>local createdObject = tes3.createObject({ id = ..., objectType = ..., getIfExists = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li><code>id</code> (string): Optional. The id of the new object.</li> <li> <p><code>objectType</code> (number): The type of object to create. Maps to values in the <code>tes3.objectType</code> table. Supported object types are:</p> <ul> <li><code>tes3.objectType.activator</code></li> <li><code>tes3.objectType.alchemy</code></li> <li><code>tes3.objectType.armor</code></li> <li><code>tes3.objectType.book</code></li> <li><code>tes3.objectType.clothing</code></li> <li><code>tes3.objectType.container</code></li> <li><code>tes3.objectType.enchantment</code></li> <li><code>tes3.objectType.misc</code></li> <li><code>tes3.objectType.sound</code></li> <li><code>tes3.objectType.spell</code></li> <li><code>tes3.objectType.static</code></li> <li><code>tes3.objectType.weapon</code></li> </ul> </li> <li> <p><code>getIfExists</code> (boolean): Default: <code>true</code>. If <code>true</code>, an existing object of the same <code>objectType</code> and <code>id</code> will be returned instead of creating a new one.</p> </li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>createdObject</code> (tes3activator, tes3alchemy, tes3armor, tes3book, tes3clothing, tes3container, tes3enchantment, tes3misc, tes3sound, tes3spell, tes3static, tes3weapon)</li> </ul> Example: Creates a tes3misc object <p>The example below create a misc item object that could be used to create a placeable reference later on.</p> <pre><code>local miscItemId = \"create_misc_item_id\"\nlocal miscItemName = \"create_misc_item_name\"\n\nmwse.log( \"creating a misc item of id %s\", miscItemId )\n\n-- local miscItem = tes3misc.create( {\n--   id = miscItemId,\n--   name = miscItemName\n-- } )\n\nlocal miscItem = tes3.createObject({\n  objectType = tes3.objectType.miscItem,\n  id = miscItemId,\n  name = miscItemName\n})\n\nif( miscItem ~= nil ) then\n  mwse.log( \"misc item created : id is %s\", miscItemId )\nelse\n  mwse.log( \"failed to create a misc item of id %s\", miscItemId )\n  return\nend\n\ntes3.createReference( {\n  object = miscItem,\n  position = tes3.getPlayerEyePosition(),\n  orientation = 0,\n  cell = tes3.getPlayerCell()\n} )\n\nmwse.log( \"created a reference of a misc item of id %s\", miscItem.id )\n</code></pre> Example: Creates a tes3static object <p>The example below create a static object that could be used to create a placeable reference later on.</p> <pre><code>local staticId = \"create_static_id\"\n\nmwse.log( \"creating a static of id %s\", staticId )\n\n-- local static = tes3static.create( {\n--   id = staticId,\n--   mesh = \"d\\\\door_dwrv_main00.nif\"\n-- } )\n\nlocal static = tes3.createObject( {\n  objectType = tes3.objectType.static,\n  id = staticId,\n  mesh = [[d\\door_dwrv_main00.nif]]\n} )\n\nif( static ~= nil ) then\n  mwse.log( \"static created : id is %s\", staticId )\nelse\n  mwse.log( \"failed to create a static of id %s\", staticId )\n  return\nend\n\ntes3.createReference( {\n  object = static,\n  position = tes3.getPlayerEyePosition(),\n  orientation = 0,\n  cell = tes3.getPlayerCell()\n} )\n\nmwse.log( \"created a reference of static of id %s\", static.id )\n</code></pre>"},{"location":"apis/tes3/#tes3createreference","title":"<code>tes3.createReference</code>","text":"<p>Similar to mwscript's PlaceAtPC or PlaceAtMe, this creates a new reference in the game world.</p> <pre><code>local newReference = tes3.createReference({ object = ..., position = ..., orientation = ..., cell = ..., scale = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>object</code> (tes3physicalObject, string): The object to create a reference of.</li> <li><code>position</code> (tes3vector3, table): The location to create the reference at.</li> <li><code>orientation</code> (tes3vector3, table): The new orientation for the created reference.</li> <li><code>cell</code> (tes3cell, string, table): Optional. The cell to create the reference in. This is only needed for interior cells.</li> <li><code>scale</code> (number): Default: <code>1</code>. A scale for the reference.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newReference</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3createvisualeffect","title":"<code>tes3.createVisualEffect</code>","text":"<p>Creates an arbitrary and automatically tracked visual effect. Most VFX assignments are persistent, and only expire when their lifespan ends, an associated reference is destroyed, or a given spell serial is retired.</p> <pre><code>local vfx = tes3.createVisualEffect({ object = ..., serial = ..., repeatCount = ..., lifespan = ..., scale = ..., verticalOffset = ..., position = ..., avObject = ..., magicEffectId = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>object</code> (tes3physicalObject, string): Optional. The physical object to use as the VFX. To use an enchantment-style VFX, supply the magicEffectId parameter instead.</li> <li><code>serial</code> (number): Optional. An associated tes3magicSourceInstance serial. If a serial is assigned to the VFX, the effect expiring will also remove the VFX. This is not used when creating an enchantment-style VFX.</li> <li><code>repeatCount</code> (number): Optional. A repeat count for the VFX. If provided, the key timing for the associated effect will be used, multiplied by this value, to determine the total lifespan of the VFX. This is not used when creating an enchantment-style VFX.</li> <li><code>lifespan</code> (number): Optional. The desired lifespan for the VFX. If not provided, the VFX will never die of old age.</li> <li><code>scale</code> (number): Default: <code>1</code>. The scale used to resize the given VFX. The default value will match the size used by most magical effect logic. This is not used when creating an enchantment-style VFX.</li> <li><code>verticalOffset</code> (number): Default: <code>0</code>. This offset will be used to position it above its anchor reference. This is not used when creating an enchantment-style VFX.</li> <li><code>position</code> (tes3vector3, table): Optional. If provided the VFX will be attached relative to a position, and not follow a reference.</li> <li><code>avObject</code> (niAVObject): Optional. </li> <li><code>magicEffectId</code> (number): Optional. The magic effect ID to use to create an enchantment-style VFX. This will use most of the same VFX logic, but cannot be applied to a position or specific niAVObject.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>vfx</code> (tes3vfx): A handle to the VFX that was created. This can be passed to <code>tes3.removeVisualEffect</code> to remove it from the reference.</li> </ul>"},{"location":"apis/tes3/#tes3decrementkillcount","title":"<code>tes3.decrementKillCount</code>","text":"<p>Decreases player's kill count of a certain type of actor by one.</p> <pre><code>tes3.decrementKillCount({ actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3actor, string): The actor (or their ID).</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3deleteobject","title":"<code>tes3.deleteObject</code>","text":"<p>Deletes a game object from the system. This can be dangerous, use with caution.</p> <pre><code>tes3.deleteObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3object): The object to delete.</li> </ul>"},{"location":"apis/tes3/#tes3disablekey","title":"<code>tes3.disableKey</code>","text":"<p>Disables the use of a keyboard key.</p> <pre><code>tes3.disableKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3dropitem","title":"<code>tes3.dropItem</code>","text":"<p>Drops one or more items from a reference's inventory onto the ground at their feet. It will unequip the item if it is equipped. The return value will be nil if no matching item was found.</p> <pre><code>local createdReference = tes3.dropItem({ reference = ..., item = ..., itemData = ..., matchNoItemData = ..., count = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference whose inventory will be modified.</li> <li><code>item</code> (tes3item, string): The item to drop.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to drop. Without this, the first matching item in the inventory will drop.</li> <li><code>matchNoItemData</code> (boolean): Default: <code>false</code>. If true, matches an item without item data. This can be used when you want to drop an item that isn't equipped (equipped items always have item data).</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to drop.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If false, the player or contents menu won't be updated.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>createdReference</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3enablekey","title":"<code>tes3.enableKey</code>","text":"<p>Enables the use of a keyboard key.</p> <pre><code>tes3.enableKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3fadein","title":"<code>tes3.fadeIn</code>","text":"<p>Similar to the vanilla FadeIn mwscript command.</p> <pre><code>tes3.fadeIn({ fader = ..., duration = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>fader</code> (tes3fader): Optional. Defaults to the transition fader.</li> <li><code>duration</code> (number): Default: <code>1.0</code>. Time, in seconds, for the fade.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3fadeout","title":"<code>tes3.fadeOut</code>","text":"<p>Similar to the vanilla FadeOut mwscript command.</p> <pre><code>tes3.fadeOut({ fader = ..., duration = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>fader</code> (tes3fader): Optional. Defaults to the transition fader.</li> <li><code>duration</code> (number): Default: <code>1.0</code>. Time, in seconds, for the fade.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3fadeto","title":"<code>tes3.fadeTo</code>","text":"<p>Similar to the vanilla FadeTo mwscript command.</p> <pre><code>tes3.fadeTo({ fader = ..., duration = ..., value = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>fader</code> (tes3fader): Optional. Defaults to the transition fader.</li> <li><code>duration</code> (number): Default: <code>1.0</code>. Time, in seconds, for the fade.</li> <li><code>value</code> (number): Default: <code>1.0</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3findactorsinproximity","title":"<code>tes3.findActorsInProximity</code>","text":"<p>Searches for active mobile actors which are within <code>range</code> distance from the <code>reference</code> or <code>position</code> argument. It only finds mobiles which have active AI, and can include the player. This function is used by the game for area-of-effect hits. It has a small amount of overhead, so try not to use it too much.</p> <pre><code>local mobileList = tes3.findActorsInProximity({ reference = ..., position = ..., range = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The position to search from, taken from a reference. Uses the position of the centre of the body if the reference is an actor.</li> <li><code>position</code> (tes3vector3): Optional. The position to search from.</li> <li><code>range</code> (number): The distance around the position to search. An actor is included if the centre of their body is in range.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>mobileList</code> (tes3mobileActor[])</li> </ul>"},{"location":"apis/tes3/#tes3findbirthsign","title":"<code>tes3.findBirthsign</code>","text":"<p>Fetches the core game birthsign object for a given birthsign ID. If the birthsign with a given ID doesn't exist, nil is returned.</p> <pre><code>local birthsign = tes3.findBirthsign(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string): ID of the birthsign to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>birthsign</code> (tes3birthsign)</li> </ul>"},{"location":"apis/tes3/#tes3findclass","title":"<code>tes3.findClass</code>","text":"<p>Fetches the core game character class object for a given class ID. If the class with a given ID doesn't exist, nil is returned.</p> <pre><code>local class = tes3.findClass(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string): ID of the class to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>class</code> (tes3class)</li> </ul>"},{"location":"apis/tes3/#tes3findclosestexteriorreferenceofobject","title":"<code>tes3.findClosestExteriorReferenceOfObject</code>","text":"<p>Using the same engine function used by the vanilla intervention spells, locations the first reference of a given object in the exterior world.</p> <pre><code>local reference = tes3.findClosestExteriorReferenceOfObject({ object = ..., position = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>object</code> (tes3physicalObject, string): The object to search for.</li> <li><code>position</code> (tes3vector3): Optional. The position to search from. Must be an exterior position. Defaults to the last exterior position of the player if no position is provided.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3finddialogue","title":"<code>tes3.findDialogue</code>","text":"<p>Locates a root dialogue topic that can then be filtered down for a specific actor to return a specific dialogue info. Specify either <code>topic</code>, or both <code>type</code> and <code>page</code> for other types of dialogue.</p> <p>For example, <code>tes3.findDialogue({type = tes3.dialogueType.greeting, page = tes3.dialoguePage.greeting.greeting0})</code> will return the \"Greeting 0\" topic, which is not available using a topic ID.</p> <pre><code>local dialogue = tes3.findDialogue({ topic = ..., type = ..., page = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>topic</code> (string): Optional. The dialogue topic to look for.</li> <li><code>type</code> (number): Optional. The type of dialogue to look for. Uses <code>tes3.dialogueType</code> constants.</li> <li><code>page</code> (number): Optional. The page of dialogue to fetch. Uses <code>tes3.dialoguePage</code> constants.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>dialogue</code> (tes3dialogue)</li> </ul>"},{"location":"apis/tes3/#tes3findglobal","title":"<code>tes3.findGlobal</code>","text":"<p>Fetches the core game object that represents a global variable.</p> <pre><code>local globalVariable = tes3.findGlobal(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>globalVariable</code> (tes3globalVariable)</li> </ul>"},{"location":"apis/tes3/#tes3findgmst","title":"<code>tes3.findGMST</code>","text":"<p>Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the <code>tes3.GMST</code> constants.</p> <pre><code>local gameSetting = tes3.findGMST(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (number, string)</li> </ul> <p>Returns:</p> <ul> <li><code>gameSetting</code> (tes3gameSetting)</li> </ul> Example: Document all GMST Default Values <p>This example reads the default values of all GMSTs, and writes them to a markdown file for users to read.</p> <pre><code>-- Converter table for a GMST's type to something more user-friendly.\nlocal typeNames = {\n    s = \"string\",\n    i = \"integer\",\n    f = \"float\",\n}\n\n-- Write our markdown header.\nlocal f = assert(io.open(\"Data Files\\\\MWSE\\\\tmp\\\\GMSTs.md\", \"w\"))\nf:write(\"# GMSTs\\n\\n\")\nf:write(\"Index | Type   | Identifier                       | Default Value\\n\")\nf:write(\"----- | ------- | -------------------------------- | --------------------------------------------\\n\")\n\n-- Go through all our GMSTs...\nfor id = 0, 1520 do\n    -- Write out most of the info.\n    local gmst = tes3.findGMST(id)\n    f:write(string.format(\"%-5d | %-7s | %-32s | \", gmst.index, typeNames[gmst.type], gmst.id))\n\n    -- Customize how the value is written based on its type.\n    if (gmst.type == \"s\") then\n        -- Remove linebreaks and escape them.\n        local value = gmst.defaultValue\n        value = string.gsub(value, \"\\r\", \"\\\\r\")\n        value = string.gsub(value, \"\\n\", \"\\\\n\")\n        f:write(string.format(\"`\\\"%s\\\"`\", value))\n    elseif (gmst.type == \"f\") then\n        f:write(string.format(\"`%.4f`\", gmst.defaultValue))\n    else\n        f:write(string.format(\"`%d`\", gmst.defaultValue))\n    end\n\n    f:write(\"\\n\")\nend\n\n-- Close up our file.\nf:close()\n</code></pre> Example: Retrieve value of a GMST <p>This example shows how to read a value of a GMST and how to change it.</p> <pre><code>local oldGMST = tes3.findGMST(\"sServiceTrainingTitle\").value\n\n-- oldGMST is now \"Training\"\n\n-- Now let's change the message to something more appropriate.\ntes3.findGMST(\"sServiceTrainingTitle\").value = \"Cheat\"\n</code></pre>"},{"location":"apis/tes3/#tes3findregion","title":"<code>tes3.findRegion</code>","text":"<p>Fetches the core game region object for a given region ID. If the region with a given ID doesn't exist, nil is returned.</p> <pre><code>local region = tes3.findRegion({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): ID of the region to search for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>region</code> (tes3region)</li> </ul>"},{"location":"apis/tes3/#tes3force1stperson","title":"<code>tes3.force1stPerson</code>","text":"<p>Forces the player's POV to first person the next simulation frame, and returns true if the POV has been changed.</p> <pre><code>local changedPOV = tes3.force1stPerson()\n</code></pre> <p>Returns:</p> <ul> <li><code>changedPOV</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3force3rdperson","title":"<code>tes3.force3rdPerson</code>","text":"<p>Forces the player's POV to third person the next simulation frame, and returns true if the POV has been changed.</p> <pre><code>local changedPOV = tes3.force3rdPerson()\n</code></pre> <p>Returns:</p> <ul> <li><code>changedPOV</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3get3rdpersoncameraoffset","title":"<code>tes3.get3rdPersonCameraOffset</code>","text":"<p>Returns the camera offset from the player's head while in 3rd person view.</p> <p>Tip</p> <p>If used before initialized event, this function returns empty table.</p> <pre><code>local cameraOffset = tes3.get3rdPersonCameraOffset()\n</code></pre> <p>Returns:</p> <ul> <li><code>cameraOffset</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getactivecells","title":"<code>tes3.getActiveCells</code>","text":"<p>Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided.</p> <pre><code>local cells = tes3.getActiveCells()\n</code></pre> <p>Returns:</p> <ul> <li><code>cells</code> (tes3cell[])</li> </ul>"},{"location":"apis/tes3/#tes3getanimationgroups","title":"<code>tes3.getAnimationGroups</code>","text":"<p>This function fetches a reference's attached animation groups.</p> <pre><code>local animData = tes3.getAnimationGroups({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference): A reference whose animation groups to fetch.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>animData</code> (number[])</li> </ul>"},{"location":"apis/tes3/#tes3getanimationtiming","title":"<code>tes3.getAnimationTiming</code>","text":"<p>This function fetches a reference's attached animation groups' timings.</p> <pre><code>local result = tes3.getAnimationTiming({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): A reference whose animation groups' timings to fetch.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"apis/tes3/#tes3getarchivelist","title":"<code>tes3.getArchiveList</code>","text":"<p>Returns a 1-indexed table of active archives.</p> <pre><code>local archives = tes3.getArchiveList()\n</code></pre> <p>Returns:</p> <ul> <li><code>archives</code> (tes3archive[])</li> </ul>"},{"location":"apis/tes3/#tes3getattachment","title":"<code>tes3.getAttachment</code>","text":"<p>Fetches an attachment with a given type from a reference. Will return <code>nil</code> if no attachment of that type has been found.</p> <pre><code>local result = tes3.getAttachment(reference, attachment)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference): The reference to get the attachment from.</li> <li><code>attachment</code> (string): The type of attachment to get. Possible values are:<ul> <li><code>\"bodyPartManager\"</code>: Returns <code>tes3bodyPartManager</code></li> <li><code>\"light\"</code>: Returns <code>tes3lightNode</code></li> <li><code>\"lock\"</code>: Returns <code>tes3lockNode</code></li> <li><code>\"leveledBase\"</code>: Returns <code>tes3reference</code></li> <li><code>\"travelDestination\"</code>: Returns <code>tes3travelDestinationNode</code></li> <li><code>\"variables\"</code>: Returns <code>tes3itemData</code></li> <li><code>\"actor\"</code>: Returns <code>tes3mobileActor</code></li> <li><code>\"animation\"</code>: Returns <code>tes3animationData</code></li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (nil, tes3bodyPartManager, tes3itemData, tes3lightNode, tes3lockNode, tes3mobileActor, tes3reference, tes3travelDestinationNode, tes3animationData)</li> </ul>"},{"location":"apis/tes3/#tes3getattributename","title":"<code>tes3.getAttributeName</code>","text":"<p>Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\", by using GMSTs. Uses <code>tes3.attributeName</code> enumeration as a fallback.</p> <pre><code>local name = tes3.getAttributeName(attributeId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>attributeId</code> (number): The attribute id to get the name of. Maps to values in <code>tes3.attribute</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>name</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3getcameraposition","title":"<code>tes3.getCameraPosition</code>","text":"<p>Returns the camera's position.</p> <pre><code>local vector3 = tes3.getCameraPosition()\n</code></pre> <p>Returns:</p> <ul> <li><code>vector3</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getcameravector","title":"<code>tes3.getCameraVector</code>","text":"<p>Returns the camera look vector.</p> <pre><code>local vector3 = tes3.getCameraVector()\n</code></pre> <p>Returns:</p> <ul> <li><code>vector3</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getcell","title":"<code>tes3.getCell</code>","text":"<p>Finds a cell, either by an id or an X/Y grid position.</p> <pre><code>local cell = tes3.getCell({ id = ..., x = ..., y = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): The cell's ID. If not provided, x and y must be.</li> <li><code>x</code> (number)</li> <li><code>y</code> (number)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>cell</code> (tes3cell)</li> </ul>"},{"location":"apis/tes3/#tes3getcumulativedaysformonth","title":"<code>tes3.getCumulativeDaysForMonth</code>","text":"<p>Gets the number of days that have passed leading up to the start of a given month.</p> <pre><code>local days = tes3.getCumulativeDaysForMonth(month)\n</code></pre> <p>Parameters:</p> <ul> <li><code>month</code> (number): The 0-based month index.</li> </ul> <p>Returns:</p> <ul> <li><code>days</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getcurrentaipackageid","title":"<code>tes3.getCurrentAIPackageId</code>","text":"<p>Returns an actor's current AI package ID, just as the mwscript function <code>GetCurrentAIPackage</code> would.</p> <pre><code>local packageID = tes3.getCurrentAIPackageId(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3mobileActor, tes3reference)</li> </ul> <p>Returns:</p> <ul> <li><code>packageID</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getcurrentweather","title":"<code>tes3.getCurrentWeather</code>","text":"<p>Gets the currently active weather, from the player's current region.</p> <pre><code>local weather = tes3.getCurrentWeather()\n</code></pre> <p>Returns:</p> <ul> <li><code>weather</code> (tes3weather)</li> </ul>"},{"location":"apis/tes3/#tes3getcursorposition","title":"<code>tes3.getCursorPosition</code>","text":"<p>Returns a table with values x and y that contain the current cursor position.</p> <pre><code>local position = tes3.getCursorPosition()\n</code></pre> <p>Returns:</p> <ul> <li><code>position</code> (tes3vector2)</li> </ul>"},{"location":"apis/tes3/#tes3getdaysinmonth","title":"<code>tes3.getDaysInMonth</code>","text":"<p>Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed.</p> <pre><code>local dayCount = tes3.getDaysInMonth(month)\n</code></pre> <p>Parameters:</p> <ul> <li><code>month</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>dayCount</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getdialogueinfo","title":"<code>tes3.getDialogueInfo</code>","text":"<p>Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached.</p> <pre><code>local dialogueInfo = tes3.getDialogueInfo(dialogue, id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>dialogue</code> (tes3dialogue, string): The dialogue that the info belongs to.</li> <li><code>id</code> (string): The numerical, unique id for the info object.</li> </ul> <p>Returns:</p> <ul> <li><code>dialogueInfo</code> (tes3dialogueInfo)</li> </ul>"},{"location":"apis/tes3/#tes3geteffectmagnitude","title":"<code>tes3.getEffectMagnitude</code>","text":"<p>This function returns the total effective magnitude and total base magnitude of a certain magic effect affecting a reference. It returns a pair of numbers, the first being the effective magnitude after all the actor's resistances are applied (see examples). The second number is the magnitude before any of the actor's resistances are applied.</p> <pre><code>local effectiveMagnitude, magnitude = tes3.getEffectMagnitude({ reference = ..., effect = ..., skill = ..., attribute = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): An associated mobile should exist for this function to be able to work.</li> <li><code>effect</code> (number): Effect ID. Can be any of the predefined spell effects, or one added by <code>tes3.claimSpellEffectId()</code>. Maps to values of <code>tes3.effect</code> constants</li> <li><code>skill</code> (number): Default: <code>-1</code>. If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to <code>tes3.skill</code> constants.</li> <li><code>attribute</code> (number): Default: <code>-1</code>. If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to <code>tes3.attribute</code> constants.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>effectiveMagnitude</code> (number): The effective magnitude after all the actor's resistances are applied.</li> <li><code>magnitude</code> (integer): The magnitude before any of the actor's resistances are applied.</li> </ul> Example: Get both magnitudes. <pre><code>local effectiveMagnitude, magnitude = tes3.getEffectMagnitude{reference = tes3.player, effect = tes3.effect.fireDamage}\ntes3.messageBox(string.format(\"fortify speed: %f (%f)\", effectiveMagnitude, magnitude))\n</code></pre> Example: Get magnitude after resistances are applied. <p>You can treat the function as if it returns a single value.</p> <pre><code>local effectiveMagnitude = tes3.getEffectMagnitude{reference = tes3.player, effect = tes3.effect.fortifyAttribute, attribute = tes3.attribute.speed}\ntes3.messageBox(string.format(\"fortify speed: %f\", effectiveMagnitude))\n</code></pre>"},{"location":"apis/tes3/#tes3getequippeditem","title":"<code>tes3.getEquippedItem</code>","text":"<p>Returns an actor's equipped item stack, provided a given filter</p> <pre><code>local stack = tes3.getEquippedItem({ actor = ..., enchanted = ..., objectType = ..., slot = ..., type = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3reference, tes3mobileActor, tes3actor)</li> <li><code>enchanted</code> (boolean): Optional. If true, filters only enchanted items.</li> <li><code>objectType</code> (number): Optional. Maps to <code>tes3.objectType</code> constants. Used to filter equipment by type.</li> <li><code>slot</code> (number): Optional. Maps to <code>tes3.armorSlot</code> or <code>tes3.clothingSlot</code>. Used to filter equipment by slot.</li> <li><code>type</code> (number): Optional. Maps to <code>tes3.weaponType</code>. Used to filter equipment by type.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>stack</code> (tes3equipmentStack)</li> </ul> Example: Get Player\u2019s Equipped Light <p>In this example, we print the object ID of the player\u2019s equipped light source.</p> <pre><code>local equippedLightStack = tes3.getEquippedItem({ actor = tes3.player, objectType = tes3.objectType.light })\nif (equippedLightStack) then\n    mwse.log(\"Equipped light: %s\", equippedLightStack.object.id)\nelse\n    mwse.log(\"No light equipped.\")\nend\n</code></pre> Example: Get Player\u2019s Shield <p>This example shows the player\u2019s shield.</p> <pre><code>local equippedShieldStack = tes3.getEquippedItem({ actor = tes3.player, objectType = tes3.objectType.armor, slot = tes3.armorSlot.shield })\nif (equippedShieldStack) then\n    mwse.log(\"Equipped shield: %s\", equippedShieldStack.object.id)\nelse\n    mwse.log(\"No shield equipped.\")\nend\n</code></pre>"},{"location":"apis/tes3/#tes3getfaction","title":"<code>tes3.getFaction</code>","text":"<p>Fetches the core game faction object for a given faction ID.</p> <pre><code>local faction = tes3.getFaction(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>faction</code> (tes3faction)</li> </ul>"},{"location":"apis/tes3/#tes3getfileexists","title":"<code>tes3.getFileExists</code>","text":"<p>Determines if a file exists in the user's Data Files.</p> <pre><code>local exists = tes3.getFileExists(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>exists</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3getfilesource","title":"<code>tes3.getFileSource</code>","text":"<p>Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\".</p> <pre><code>local exists, path = tes3.getFileSource(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>exists</code> (string?): A string representing the file source. This can be either <code>file</code> or <code>bsa</code>.</li> <li><code>path</code> (string?): If the file exists, this is a path to the file. If the file is from a BSA, it is a path inside the BSA.</li> </ul>"},{"location":"apis/tes3/#tes3getglobal","title":"<code>tes3.getGlobal</code>","text":"<p>Retrieves the value of a global value, or nil if the global could not be found.</p> <pre><code>local value = tes3.getGlobal(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (integer)</li> </ul>"},{"location":"apis/tes3/#tes3getinputbinding","title":"<code>tes3.getInputBinding</code>","text":"<p>Gets the input configuration for a given keybind.</p> <pre><code>local inputConfig = tes3.getInputBinding(keybind)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keybind</code> (number): Maps to <code>tes3.keybind</code> constants.</li> </ul> <p>Returns:</p> <ul> <li><code>inputConfig</code> (tes3inputConfig)</li> </ul>"},{"location":"apis/tes3/#tes3getitemcount","title":"<code>tes3.getItemCount</code>","text":"<p>Returns the amount of a certain item that can be found in a reference's inventory.</p> <pre><code>local count = tes3.getItemCount({ reference = ..., item = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to get the item count for. Must be a reference that has an inventory.</li> <li><code>item</code> (tes3item, string): The item to get the count of.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>count</code> (number): The absolute value of the stack count in the reference's inventory.</li> </ul>"},{"location":"apis/tes3/#tes3getitemisstolen","title":"<code>tes3.getItemIsStolen</code>","text":"<p>This function checks item's stolen flag.</p> <pre><code>local isStolen, stolenFrom = tes3.getItemIsStolen({ item = ..., from = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item): The item to check.</li> <li><code>from</code> (tes3creature, tes3npc, tes3faction, nil): Optional. Where the item was stolen from. If not provided, the function will return true if the item was stolen from anyone.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>isStolen</code> (boolean): If true the item is stolen.</li> <li><code>stolenFrom</code> (tes3creature[], tes3npc[], tes3faction[]): A list of who and what the item has been stolen from.</li> </ul>"},{"location":"apis/tes3/#tes3getjournalindex","title":"<code>tes3.getJournalIndex</code>","text":"<p>Gets the index of a given journal, or nil if no valid journal could be found.</p> <pre><code>local index = tes3.getJournalIndex({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (tes3dialogue, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getkillcount","title":"<code>tes3.getKillCount</code>","text":"<p>Returns how many times the player killed an actor. If no actor is specified, total number of kills player commited will be returned.</p> <pre><code>local count = tes3.getKillCount({ actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>actor</code> (tes3actor, string): Optional. The actor (or their ID) for whom to retrieve player's kill count.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>count</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getkillcounts","title":"<code>tes3.getKillCounts</code>","text":"<p>Returns a table with complete player kill counts. The table returned is formated so actor IDs are table keys and kill count of that type of actor is value.</p> <pre><code>local killMap = tes3.getKillCounts()\n</code></pre> <p>Returns:</p> <ul> <li><code>killMap</code> (table&lt;tes3actor, number&gt;)</li> </ul>"},{"location":"apis/tes3/#tes3getlanguage","title":"<code>tes3.getLanguage</code>","text":"<p>Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the <code>tes3.language</code> table.</p> <pre><code>local result = tes3.getLanguage()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3getlanguagecode","title":"<code>tes3.getLanguageCode</code>","text":"<p>Gets the language code, determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the <code>tes3.languageCode</code> table.</p> <pre><code>local result = tes3.getLanguageCode()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getlastexteriorposition","title":"<code>tes3.getLastExteriorPosition</code>","text":"<p>Returns the last exterior position of the player.</p> <pre><code>local vector3 = tes3.getLastExteriorPosition()\n</code></pre> <p>Returns:</p> <ul> <li><code>vector3</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getlocked","title":"<code>tes3.getLocked</code>","text":"<p>Determines if a given reference is a locked door or container.</p> <pre><code>local isLocked = tes3.getLocked({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>isLocked</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3getlocklevel","title":"<code>tes3.getLockLevel</code>","text":"<p>Gets an locked reference's lock level. If no lock data is available, it will return nil.</p> <pre><code>local level = tes3.getLockLevel({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>level</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getmagiceffect","title":"<code>tes3.getMagicEffect</code>","text":"<p>Fetches the core game Magic Effect object for a given ID. Can return custom magic effects added with <code>tes3.addMagicEffect</code>.</p> <pre><code>local magicEffect = tes3.getMagicEffect(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (integer): Maps to values in <code>tes3.effect</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>magicEffect</code> (tes3magicEffect, nil)</li> </ul>"},{"location":"apis/tes3/#tes3getmagiceffectname","title":"<code>tes3.getMagicEffectName</code>","text":"<p>Returns the complex name of a magic effect, taking into account attribute or skill values.</p> <pre><code>local complexName = tes3.getMagicEffectName({ effect = ..., attribute = ..., skill = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>effect</code> (integer): The effect ID to get the name of. Maps to values in <code>tes3.effect</code> table.</li> <li><code>attribute</code> (integer): Optional. The attribute ID to use, if applicable. Maps to values in <code>tes3.attribute</code> table.</li> <li><code>skill</code> (integer): Optional. The skill ID to use, if applicable. Maps to values in <code>tes3.skill</code> table.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>complexName</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3getmagicsourceinstancebyserial","title":"<code>tes3.getMagicSourceInstanceBySerial</code>","text":"<p>Fetches an instance of the magic source of a given serial number.</p> <pre><code>local magicSourceInstance = tes3.getMagicSourceInstanceBySerial({ serialNumber = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>serialNumber</code> (number)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>magicSourceInstance</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"apis/tes3/#tes3getmodlist","title":"<code>tes3.getModList</code>","text":"<p>Fetches the list of the active ESM and ESP files.</p> <pre><code>local modList = tes3.getModList()\n</code></pre> <p>Returns:</p> <ul> <li><code>modList</code> (string[])</li> </ul>"},{"location":"apis/tes3/#tes3getobject","title":"<code>tes3.getObject</code>","text":"<p>Fetches the core game object for a given object ID.</p> <pre><code>local object = tes3.getObject(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>object</code> (tes3object)</li> </ul>"},{"location":"apis/tes3/#tes3getowner","title":"<code>tes3.getOwner</code>","text":"<p>Returns the object's owner, or nil if the object is unowned.</p> <pre><code>local owner, requirement = tes3.getOwner({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>owner</code> (tes3faction, tes3npc, nil)</li> <li><code>requirement</code> (number, tes3globalVariable, nil): The faction rank required if the owner is a faction, or the global variable needing to be set if the owner is an NPC.</li> </ul>"},{"location":"apis/tes3/#tes3getplayeractivationdistance","title":"<code>tes3.getPlayerActivationDistance</code>","text":"<p>This function returns the distance that the player can activate objects with. This is a sum of the iMaxActivateDist GMST value and the player's telekinesis strength.</p> <pre><code>local result = tes3.getPlayerActivationDistance()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getplayercell","title":"<code>tes3.getPlayerCell</code>","text":"<p>Fetches the cell that the player is currently in.</p> <pre><code>local result = tes3.getPlayerCell()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"apis/tes3/#tes3getplayereyeposition","title":"<code>tes3.getPlayerEyePosition</code>","text":"<p>Returns the position of the player's eyes.</p> <pre><code>local position = tes3.getPlayerEyePosition()\n</code></pre> <p>Returns:</p> <ul> <li><code>position</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getplayereyevector","title":"<code>tes3.getPlayerEyeVector</code>","text":"<p>Returns the look direction of the player's eyes.</p> <pre><code>local lookDirection = tes3.getPlayerEyeVector()\n</code></pre> <p>Returns:</p> <ul> <li><code>lookDirection</code> (tes3vector3)</li> </ul>"},{"location":"apis/tes3/#tes3getplayergold","title":"<code>tes3.getPlayerGold</code>","text":"<p>Gets the gold count carried by the player.</p> <pre><code>local goldCount = tes3.getPlayerGold()\n</code></pre> <p>Returns:</p> <ul> <li><code>goldCount</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getplayertarget","title":"<code>tes3.getPlayerTarget</code>","text":"<p>This function is used to see what the player is looking at. Unlike a real raycast, this does not work in all circumstances. As a general rule, it will return the reference if the information box is shown when it is looked at.</p> <pre><code>local result = tes3.getPlayerTarget()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3getquickkey","title":"<code>tes3.getQuickKey</code>","text":"<p>This function retrieves data for a quick key.</p> <pre><code>local result = tes3.getQuickKey({ slot = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>slot</code> (number): The key to retrieve data for. This is a value between 1 and 9.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3quickKey)</li> </ul>"},{"location":"apis/tes3/#tes3getreference","title":"<code>tes3.getReference</code>","text":"<p>Fetches the first reference for a given base object ID.</p> <pre><code>local reference = tes3.getReference(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"apis/tes3/#tes3getregion","title":"<code>tes3.getRegion</code>","text":"<p>Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell.</p> <pre><code>local region = tes3.getRegion(useDoors)\n</code></pre> <p>Parameters:</p> <ul> <li><code>useDoors</code> (boolean): Default: <code>false</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>region</code> (tes3region)</li> </ul>"},{"location":"apis/tes3/#tes3getscript","title":"<code>tes3.getScript</code>","text":"<p>Locates and returns a script by a given id.</p> <pre><code>local script = tes3.getScript(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>script</code> (tes3script)</li> </ul>"},{"location":"apis/tes3/#tes3getsimulationtimestamp","title":"<code>tes3.getSimulationTimestamp</code>","text":"<p>Returns a UNIX-style timestamp based on in-world simulation time since the start of the era, in hours.</p> <pre><code>local timestamp = tes3.getSimulationTimestamp(highPrecision)\n</code></pre> <p>Parameters:</p> <ul> <li><code>highPrecision</code> (boolean): Default: <code>true</code>. If <code>false</code> is passed returns the value of the simulation time variable used by the game engine. Calculates the timestamp from the current year, month and game hour global variables otherwise.</li> </ul> <p>Returns:</p> <ul> <li><code>timestamp</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3getskill","title":"<code>tes3.getSkill</code>","text":"<p>Fetches the core game object for a given skill ID.</p> <pre><code>local skill = tes3.getSkill(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (number): Maps to <code>tes3.skill</code> enumeration.</li> </ul> <p>Returns:</p> <ul> <li><code>skill</code> (tes3skill)</li> </ul>"},{"location":"apis/tes3/#tes3getskillname","title":"<code>tes3.getSkillName</code>","text":"<p>Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\".</p> <pre><code>local name = tes3.getSkillName(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): Maps to <code>tes3.skill</code> enumeration.</li> </ul> <p>Returns:</p> <ul> <li><code>name</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3getsound","title":"<code>tes3.getSound</code>","text":"<p>Locates and returns a sound by a given id.</p> <pre><code>local sound = tes3.getSound(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>sound</code> (tes3sound)</li> </ul>"},{"location":"apis/tes3/#tes3getsoundgenerator","title":"<code>tes3.getSoundGenerator</code>","text":"<p>Returns a sound generator by a given creature id and type.</p> <pre><code>local soundGenerator = tes3.getSoundGenerator(creatureId, soundType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>creatureId</code> (string)</li> <li><code>soundType</code> (number): Maps to <code>tes3.soundGenType</code> constants.</li> </ul> <p>Returns:</p> <ul> <li><code>soundGenerator</code> (tes3soundGenerator)</li> </ul>"},{"location":"apis/tes3/#tes3getsoundplaying","title":"<code>tes3.getSoundPlaying</code>","text":"<p>Without a reference, this function returns true if the sound is playing unattached or on any reference. With a reference, it returns true if the sound is playing on that specific reference.</p> <pre><code>local soundIsPlaying = tes3.getSoundPlaying({ sound = ..., reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>sound</code> (tes3sound, string): The sound object, or the ID of the sound to look for.</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>soundIsPlaying</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3getspecializationname","title":"<code>tes3.getSpecializationName</code>","text":"<p>Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\", by using GMSTs. Uses <code>tes3.specializationName</code> enumeration as a fallback.</p> <pre><code>local name = tes3.getSpecializationName(specializationId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>specializationId</code> (number): Maps to <code>tes3.specialization</code> enumeration.</li> </ul> <p>Returns:</p> <ul> <li><code>name</code> (string)</li> </ul>"},{"location":"apis/tes3/#tes3getspells","title":"<code>tes3.getSpells</code>","text":"<p>Gets the spells of an actor. This can be filtered by <code>spellType</code> and set to include or exclude actor, racial and birthsign spells.</p> <pre><code>local result = tes3.getSpells({ target = ..., spellType = ..., getActorSpells = ..., getRaceSpells = ..., getBirthsignSpells = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>target</code> (tes3reference, tes3mobileActor, tes3actor): The actor to get the spells of. Must be able to cast spells.</li> <li><code>spellType</code> (number): Default: <code>-1</code>. The spell type to filter for. Only spells with this spell type will be returned. A value of <code>-1</code> will return spells of all types. Maps to values in the <code>tes3.spellType</code> table.</li> <li><code>getActorSpells</code> (boolean): Default: <code>true</code>. If <code>true</code>, the spells of the actor itself will be included in the result. This includes every spell except racial and birthsign spells.</li> <li><code>getRaceSpells</code> (boolean): Default: <code>true</code>. If <code>true</code>, the spells of the actor's race will be included in the result.</li> <li><code>getBirthsignSpells</code> (boolean): Default: <code>true</code>. If <code>true</code>, the spells of the actor's birthsign will be included in the result.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell[])</li> </ul>"},{"location":"apis/tes3/#tes3gettopmenu","title":"<code>tes3.getTopMenu</code>","text":"<p>Gets the top-level UI menu.</p> <pre><code>local menu = tes3.getTopMenu()\n</code></pre> <p>Returns:</p> <ul> <li><code>menu</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3/#tes3gettrap","title":"<code>tes3.getTrap</code>","text":"<p>Gets the trap on a given reference.</p> <pre><code>local spell = tes3.getTrap({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>spell</code> (tes3spell)</li> </ul>"},{"location":"apis/tes3/#tes3getvanitymode","title":"<code>tes3.getVanityMode</code>","text":"<p>The function returns true if the player is in the vanity mode. Vanity mode is triggered by a period of inactivity from the player or by a <code>tes3.setVanityMode()</code> function. The view is switched to third person (if not already), and the camera is orbiting slowly around the player character.</p> <pre><code>local result = tes3.getVanityMode()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean): Is the vanity mode currently active?</li> </ul>"},{"location":"apis/tes3/#tes3getviewportsize","title":"<code>tes3.getViewportSize</code>","text":"<p>Returns both the viewport width and the viewport height. Note that this is the real resolution of the screen. For a value scaled by MGE's menu scaling, see the same-named function in the tes3ui namespace. To get the scale used, check getViewportScale in the tes3ui namespace.</p> <pre><code>local width, height = tes3.getViewportSize()\n</code></pre> <p>Returns:</p> <ul> <li><code>width</code> (number): The width of the viewport.</li> <li><code>height</code> (number): The height of the viewport.</li> </ul>"},{"location":"apis/tes3/#tes3getwerewolfkillcount","title":"<code>tes3.getWerewolfKillCount</code>","text":"<p>Returns the number of kills player commited as a Werewolf.</p> <pre><code>local werewolfKills = tes3.getWerewolfKillCount()\n</code></pre> <p>Returns:</p> <ul> <li><code>werewolfKills</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3hammerkey","title":"<code>tes3.hammerKey</code>","text":"<p>Simulates hammering a key.</p> <pre><code>tes3.hammerKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3hascodepatchfeature","title":"<code>tes3.hasCodePatchFeature</code>","text":"<p>Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned.</p> <pre><code>local state = tes3.hasCodePatchFeature(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (number): The id of the feature. Maps to values in <code>tes3.codePatchFeature</code> constants.</li> </ul> <p>Returns:</p> <ul> <li><code>state</code> (boolean, nil)</li> </ul>"},{"location":"apis/tes3/#tes3hasownershipaccess","title":"<code>tes3.hasOwnershipAccess</code>","text":"<p>Determines if a reference has access to another object, including its inventory. References have access to their own things, and the player has access to dead NPC's items.</p> <pre><code>local hasAccess = tes3.hasOwnershipAccess({ reference = ..., target = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Default: <code>tes3.player</code>. The actor to check permissions for.</li> <li><code>target</code> (tes3reference, tes3mobileActor, string): The reference to check access of.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>hasAccess</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3hasspell","title":"<code>tes3.hasSpell</code>","text":"<p>Determines if the player has access to a given spell.</p> <pre><code>local hasSpell = tes3.hasSpell({ reference = ..., actor = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Who to check the spell list of. To check an actor without specifying any particular reference, use <code>actor</code> instead.</li> <li><code>actor</code> (tes3actor, string): Who to check the spell list of. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save.</li> <li><code>spell</code> (tes3spell, string): The spell to check.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>hasSpell</code> (boolean): True if the spell exists in the actor's spell list, race spell list, or birthsign spell list.</li> </ul>"},{"location":"apis/tes3/#tes3incrementkillcount","title":"<code>tes3.incrementKillCount</code>","text":"<p>Increases player's kill count of a certain type of actor by one.</p> <pre><code>tes3.incrementKillCount({ actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3actor, string): The actor (or their ID) for whom to increase player's kill count.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3is3rdperson","title":"<code>tes3.is3rdPerson</code>","text":"<p>Returns true if the game is in 3rd person.</p> <pre><code>local state = tes3.is3rdPerson()\n</code></pre> <p>Returns:</p> <ul> <li><code>state</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3isaffectedby","title":"<code>tes3.isAffectedBy</code>","text":"<p>This function performs a check whether the provided reference is affected by a certain object or magic effect.</p> <p>Note <code>reference.object.spells:contains(spellID)</code> will give the same output as this function for abilities, diseases, and curses, because having them in your spell list also makes them affect you.</p> <pre><code>local isAffectedBy = tes3.isAffectedBy({ reference = ..., effect = ..., object = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> <li><code>effect</code> (number): Optional. A numerical identifier of the magic effect to perform a check for. Maps to <code>tes3.effect</code> constant, including those claimed with <code>tes3.claimSpellEffectId()</code>, and then added with <code>tes3.addMagicEffect()</code>.</li> <li><code>object</code> (tes3alchemy, tes3enchantment, tes3spell, tes3magicEffect, string): Optional. An object to perform a check for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>isAffectedBy</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3ischargenfinished","title":"<code>tes3.isCharGenFinished</code>","text":"<p>Returns <code>true</code> if the character generation process has been finished for the current player character.</p> <pre><code>local result = tes3.isCharGenFinished()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3iskeyequal","title":"<code>tes3.isKeyEqual</code>","text":"<p>Compares two key objects and returns their equality. Returns true if the objects are equal, false otherwise.</p> <pre><code>local equal = tes3.isKeyEqual({ actual = ..., expected = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actual</code> (table): The key object that is being compared.<ul> <li><code>keyCode</code> (number): Default: <code>false</code>. Value of the actual key scan code, such as the letter <code>p</code>. Maps to <code>tes3.scanCode.*</code>.</li> <li><code>isShiftDown</code> (boolean): Default: <code>false</code>. Value of whether the shift key is pressed.</li> <li><code>isControlDown</code> (boolean): Default: <code>false</code>. Value of whether the control key is pressed.</li> <li><code>isAltDown</code> (boolean): Default: <code>false</code>. Value of whether the alt key is pressed.</li> <li><code>isSuperDown</code> (boolean): Default: <code>false</code>. Value of whether the super (Windows key) key is pressed.</li> </ul> </li> <li><code>expected</code> (table): The key object that is being compared against.<ul> <li><code>keyCode</code> (number): Default: <code>false</code>. Value of the expected key scan code, such as the letter <code>p</code>. Maps to <code>tes3.scanCode.*</code>.</li> <li><code>isShiftDown</code> (boolean): Default: <code>false</code>. Value of whether the shift key is expected to be pressed.</li> <li><code>isControlDown</code> (boolean): Default: <code>false</code>. Value of whether the control key is expected to be pressed.</li> <li><code>isAltDown</code> (boolean): Default: <code>false</code>. Value of whether the alt key is expected to be pressed.</li> <li><code>isSuperDown</code> (boolean): Default: <code>false</code>. Value of whether the super (Windows key) key is pressed.</li> </ul> </li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>equal</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3isluamodactive","title":"<code>tes3.isLuaModActive</code>","text":"<p>Determines if the player has a given lua mod active. The key passed to this function is the path to where its main.lua file is, relative to the MWSE\\mods folder. Slashes are automatically replaced with periods, and the key is case-insensitive.</p> <pre><code>local isActive = tes3.isLuaModActive(key)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (string): The key to check.</li> </ul> <p>Returns:</p> <ul> <li><code>isActive</code> (boolean): True if the mod is active, otherwise false.</li> </ul> Example: Determine if a Specific Lua Mod is Active <p>In this example, we determine if Chameleon is active. The mod provides no interop files to try to <code>include</code>, and is a simple main.lua file. This makes it hard to otherwise detect.</p> <pre><code>if (tes3.isLuaModActive(\"Danae.Chameleon\")) then\n    -- Perform some compatibility actions here.\nend\n</code></pre>"},{"location":"apis/tes3/#tes3ismodactive","title":"<code>tes3.isModActive</code>","text":"<p>Determines if the player has a given ESP or ESM file active.</p> <pre><code>local result = tes3.isModActive(filename)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filename</code> (string): The filename of the mod to find, including the extension.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3iterate","title":"<code>tes3.iterate</code>","text":"<p>This function returns a function that iterates over a tes3iterator object. This is useful for for loops.</p> <p>Note that tes3iterator objects support iteration with <code>pairs()</code> function.</p> <pre><code>local iterator = tes3.iterate(iterator)\n</code></pre> <p>Parameters:</p> <ul> <li><code>iterator</code> (tes3iterator)</li> </ul> <p>Returns:</p> <ul> <li><code>iterator</code> (fun(): tes3object)</li> </ul>"},{"location":"apis/tes3/#tes3iterateobjects","title":"<code>tes3.iterateObjects</code>","text":"<p>Iteration function used for looping over game options.</p> <pre><code>local objectIterator = tes3.iterateObjects(filter)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filter</code> (integer, integer[]): Optional. Maps to <code>tes3.objectType</code> constants.</li> </ul> <p>Returns:</p> <ul> <li><code>objectIterator</code> (fun(): tes3object)</li> </ul>"},{"location":"apis/tes3/#tes3loadanimation","title":"<code>tes3.loadAnimation</code>","text":"<p>Loads an animation and uses it to override existing animations on an actor. Animation groups present in the file will replace the actor's animation groups. The actor's model must be already loaded into memory to have its animations modified. The overridden animations only persist until the actor is unloaded.</p> <p>Calling this more than once will remove the previous animation override before loading the new animation. Therefore, if applying animations to the player, you should call this before every playAnimation so that different animation mods can co-exist. For NPCs under your mod's control, you only need to do it when the player enters the cell containing the NPC.</p> <p>Calling this without a file argument will reset the reference's animations to default.</p> <pre><code>tes3.loadAnimation({ reference = ..., file = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference to the actor that is having its animations modified.</li> <li><code>file</code> (string): Optional. The specified animation base file that will be loaded. e.g. For an animation composed of files anim.nif, xanim.nif and xanim.kf, you should pass file=\"anim.nif\". The animation target skeleton must match the skeleton of the actor to work. i.e. 3rd person anims for NPCs and tes3.player, 1st person anims for firstPersonReference.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3loadgame","title":"<code>tes3.loadGame</code>","text":"<p>Loads a game.</p> <pre><code>tes3.loadGame(filename)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filename</code> (string): The full filename of the save that we want to load, including extension.</li> </ul>"},{"location":"apis/tes3/#tes3loadmesh","title":"<code>tes3.loadMesh</code>","text":"<p>Loads a mesh file and provides a scene graph object.</p> <pre><code>local model = tes3.loadMesh(path, useCache)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): Path, relative to Data Files/Meshes.</li> <li><code>useCache</code> (boolean): Default: <code>true</code>. If false, a new object will be created even if it had been previously loaded.</li> </ul> <p>Returns:</p> <ul> <li><code>model</code> (niNode)</li> </ul>"},{"location":"apis/tes3/#tes3loadsourcetexture","title":"<code>tes3.loadSourceTexture</code>","text":"<p>Loads a source texture file and provides the niSourceTexture object.</p> <pre><code>local texture = tes3.loadSourceTexture(path, useCache)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): Path, relative to Data Files/Textures.</li> <li><code>useCache</code> (boolean): Default: <code>true</code>. If false, a new object will be created even if it had been previously loaded.</li> </ul> <p>Returns:</p> <ul> <li><code>texture</code> (niSourceTexture)</li> </ul>"},{"location":"apis/tes3/#tes3lock","title":"<code>tes3.lock</code>","text":"<p>Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked.</p> <pre><code>local locked = tes3.lock({ reference = ..., level = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> <li><code>level</code> (number): Optional.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>locked</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3looptarray","title":"<code>tes3.loopTArray</code>","text":"<p>This function returns a function that iterates over a tes3tarray object. This is useful for for loops.</p> <pre><code>local iterationFunction = tes3.loopTArray(tarray)\n</code></pre> <p>Parameters:</p> <ul> <li><code>tarray</code> (tes3tarray)</li> </ul> <p>Returns:</p> <ul> <li><code>iterationFunction</code> (fun(): tes3object)</li> </ul>"},{"location":"apis/tes3/#tes3makesafeobjecthandle","title":"<code>tes3.makeSafeObjectHandle</code>","text":"<p>Returns a safe handle for the object. To get the object use <code>:getObject()</code>. To check if it still exists use <code>:valid()</code>.</p> <pre><code>local safeObjectHandle = tes3.makeSafeObjectHandle(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3reference): An object to make a safe handle for.</li> </ul> <p>Returns:</p> <ul> <li><code>safeObjectHandle</code> (mwseSafeObjectHandle)</li> </ul> Example: Example <pre><code>local result = tes3.rayTest{ -- the result can get invalidated\n    position = tes3.getPlayerEyePosition(),\n    direction = tes3.getPlayerEyeVector(),\n    ignore = { tes3.player }\n}\n\nlocal refHandle\n\nif result then\n    refHandle = tes3.makeSafeObjectHandle(result.reference)\nend\n\nlocal function myFunction()\n    -- Before using the reference, we need to check that it's still valid.\n    -- References get unloaded on cell changes etc.\n    if refHandle and refHandle:valid() then\n        -- Now we can safely do something with our stored reference.\n        local reference = refHandle:getObject()\n\n    end\nend\n</code></pre>"},{"location":"apis/tes3/#tes3menumode","title":"<code>tes3.menuMode</code>","text":"<p>Returns true if the player is currently in menu mode.</p> <pre><code>local inMenuMode = tes3.menuMode()\n</code></pre> <p>Returns:</p> <ul> <li><code>inMenuMode</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3messagebox","title":"<code>tes3.messageBox</code>","text":"<p>Displays a message box. This may be a simple toast-style message, or a box with choice buttons.</p> <pre><code>local element = tes3.messageBox({ message = ..., buttons = ..., callback = ..., showInDialog = ..., duration = ... }, formatAdditions)\n</code></pre> <p>Parameters:</p> <ul> <li><code>messageOrParams</code> (string, table)<ul> <li><code>message</code> (string)</li> <li><code>buttons</code> (string[]): Optional. An array of strings to use for buttons.</li> <li><code>callback</code> (function): The callback function will be executed after a button was pressed. The callback function will be passed a table with <code>button</code> field corresponding to 0-based index of the button from passed <code>buttons</code> array.</li> <li><code>showInDialog</code> (boolean): Default: <code>true</code>. Specifying showInDialog = false forces the toast-style message, which is not shown in the dialog menu.</li> <li><code>duration</code> (number): Optional. Overrides how long the toast-style message remains visible.</li> </ul> </li> <li><code>formatAdditions</code> (variadic): Optional. Only used if messageOrParams is a string.</li> </ul> <p>Returns:</p> <ul> <li><code>element</code> (tes3uiElement, nil): The UI menu created for the notification, if any.</li> </ul> Example: A message box with a callback function <p>This demonstrates how to determine which button was pressed inside callback function.</p> <pre><code>-- This variable is used to store a function that will be\n-- registered as a callback when a button is pressed inside\n-- our messageBox. The function's body is declared later.\nlocal onButtonPressed\n\n\n-- This function is registered to execute when U key is pressed.\nlocal function onKeyPressed()\n    tes3.messageBox({\n        message = \"Do you want a muffin?\",\n        buttons = { \"Yes\", \"No\" },\n        showInDialog = false,\n        callback = onButtonPressed,\n    })\nend\nevent.register(tes3.event.keyDown, onKeyPressed, { filter = tes3.scanCode.u })\n\n-- Here we define the body of our function.\nonButtonPressed = function(e)\n    -- This corresponds to the first button\n    --  of our message, which is \"Yes\"\n    if e.button == 0 then\n        tes3.addItem({\n            reference = tes3.player,\n            item = \"ingred_bread_01_UNI3\",\n        })\n    else\n        -- Do nothing\n    end\nend\n</code></pre>"},{"location":"apis/tes3/#tes3modstatistic","title":"<code>tes3.modStatistic</code>","text":"<p>Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided.</p> <pre><code>tes3.modStatistic({ reference = ..., name = ..., attribute = ..., skill = ..., base = ..., current = ..., value = ..., limit = ..., limitToBase = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string)</li> <li><code>name</code> (string): Optional. A generic name of an attribute to set.</li> <li><code>attribute</code> (number): Optional. The attribute to set.</li> <li><code>skill</code> (number): Optional. The skill to set.</li> <li><code>base</code> (number): Optional. If set, the base value will be modified.</li> <li><code>current</code> (number): Optional. If set, the current value will be modified.</li> <li><code>value</code> (number): Optional. If set, both the base and current value will be modified.</li> <li><code>limit</code> (boolean): Default: <code>false</code>. If set, the attribute won't rise above 100 or fall below 0.</li> <li><code>limitToBase</code> (boolean): Default: <code>false</code>. If set, the attribute's current value won't rise above its base value. Useful for health, magicka, and fatigue.</li> </ul> </li> </ul> Example: Decrease Health of an Actor <p>In this simple example, the current health of an actor, the player, is decreased by 10. To simulate actual combat damage, you should use tes3mobileActor.applyDamage.</p> <pre><code>tes3.modStatistic({\n    reference = tes3.mobilePlayer,\n    name = \"health\",\n    current = -10\n})\n</code></pre> Example: Restore Magicka without Overflowing <p>Magicka is restored without exceeding the magicka pool using the limitToBase flag.</p> <pre><code>tes3.modStatistic({\n    reference = tes3.mobilePlayer,\n    name = \"magicka\",\n    current = 20,\n    limitToBase = true\n})\n</code></pre>"},{"location":"apis/tes3/#tes3newgame","title":"<code>tes3.newGame</code>","text":"<p>Starts a new game.</p> <pre><code>tes3.newGame()\n</code></pre>"},{"location":"apis/tes3/#tes3onmainmenu","title":"<code>tes3.onMainMenu</code>","text":"<p>Returns true if the player is on the main menu, and hasn't loaded a game yet.</p> <pre><code>local onMainMenu = tes3.onMainMenu()\n</code></pre> <p>Returns:</p> <ul> <li><code>onMainMenu</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3persuade","title":"<code>tes3.persuade</code>","text":"<p>Attempts a persuasion attempt on an actor, potentially adjusting their disposition. Returns true if the attempt was a success.</p> <pre><code>local success = tes3.persuade({ actor = ..., index = ..., modifier = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3mobileActor, tes3reference, string): The actor to try to persuade.</li> <li><code>index</code> (number): Optional. If an index is provided, 0-indexed with the following results: admire, intimidate, taunt, bribe (10), bribe (100), bribe (1000).</li> <li><code>modifier</code> (number): Optional. If no index is provided, this is the direct modifier to try. The higher the modifer the higher the chance of a successful persuation, and higher disposition change.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3playanimation","title":"<code>tes3.playAnimation</code>","text":"<p>Plays a given animation group. Optional flags can be used to define how the group starts.</p> <p>When 'group' is specified, the actor AI is paused while playing the animation, as if in an idle state. When one or more of 'lower', 'upper', or 'shield' are specified without 'group', the actor AI retains control, and the animations are layered. e.g. <code>tes3.playAnimation{reference = ..., upper = tes3.animationGroup.idle3, loopCount = 0}</code> will play the idle3 animation once (without looping) on the upper body, while the player or NPC is still able to walk around. Using 'upper' defers combat actions until the animation is done. Using 'shield' still allows combat actions.</p> <p>As a special case, <code>tes3.playAnimation{reference = ..., group = 0}</code> returns control to the AI, as the AI knows that is the actor's neutral idle state.</p> <pre><code>tes3.playAnimation({ reference = ..., group = ..., lower = ..., upper = ..., shield = ..., startFlag = ..., loopCount = ..., mesh = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference that will play the animation.</li> <li><code>group</code> (number): Optional. The animation group id to start playing -- a value from 0 to 149. Applies the animation to the whole body. Maps to <code>tes3.animationGroup</code> constants.</li> <li><code>lower</code> (number): Optional. Sets the animation group id for the lower body. This is used to combine different animations for each body section. Maps to <code>tes3.animationGroup</code> constants.</li> <li><code>upper</code> (number): Optional. Sets the animation group id for the upper body. This is used to combine different animations for each body section. Maps to <code>tes3.animationGroup</code> constants.</li> <li><code>shield</code> (number): Optional. Sets the animation group id for the shield arm. This is used to combine different animations for each body section. Maps to <code>tes3.animationGroup</code> constants.</li> <li><code>startFlag</code> (number): Default: <code>tes3.animationStartFlag.immediate</code>. A flag for starting the group with, using <code>tes3.animationStartFlag</code> constants.</li> <li><code>loopCount</code> (number): Default: <code>-1</code>. If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0. Defaults to infinite looping.</li> <li><code>mesh</code> (string): Optional. Deprecated. Please use <code>tes3.loadAnimation</code> (check its documentation) before calling <code>playAnimation</code>. You can also use <code>loadAnimation</code> to reset loaded animations to default.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3playitempickupsound","title":"<code>tes3.playItemPickupSound</code>","text":"<p>Plays the sound responsible for picking up or putting down an item.</p> <pre><code>local executed = tes3.playItemPickupSound({ reference = ..., item = ..., pickup = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The reference to attach the sound to.</li> <li><code>item</code> (tes3item)</li> <li><code>pickup</code> (boolean): Default: <code>true</code>. If false, the place down item will be used.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3playsound","title":"<code>tes3.playSound</code>","text":"<p>Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control.</p> <p>Note: MP3 sound files can only be played if they are inside \\Vo\\ folder. The files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification.</p> <pre><code>local executed = tes3.playSound({ sound = ..., reference = ..., loop = ..., mixChannel = ..., volume = ..., pitch = ..., soundPath = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>sound</code> (tes3sound, string): The sound object, or id of the sound to look for.</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The reference to attach the sound to.</li> <li><code>loop</code> (boolean): Default: <code>false</code>. If true, the sound will loop.</li> <li><code>mixChannel</code> (number): Default: <code>tes3.soundMix.effects</code>. The channel to base volume off of. Maps to <code>tes3.soundMix</code> constants.</li> <li><code>volume</code> (number): Default: <code>1.0</code>. A value between 0.0 and 1.0 to scale the volume off of.</li> <li><code>pitch</code> (number): Default: <code>1.0</code>. The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25].</li> <li><code>soundPath</code> (string): Optional. The path to a custom soundfile (useful for playing sounds that are not registered in the Construction Set). Starts in Data Files\\Sound.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3playvoiceover","title":"<code>tes3.playVoiceover</code>","text":"<p>Causes a target actor to play a voiceover.</p> <pre><code>local played = tes3.playVoiceover({ actor = ..., voiceover = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3mobileActor, tes3reference, string): The actor to play a voiceover.</li> <li><code>voiceover</code> (number): Maps to <code>tes3.voiceover</code> constants.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>played</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3positioncell","title":"<code>tes3.positionCell</code>","text":"<p>Positions a reference to another place.</p> <pre><code>local executed = tes3.positionCell({ reference = ..., cell = ..., position = ..., orientation = ..., forceCellChange = ..., suppressFader = ..., teleportCompanions = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Default: <code>tes3.mobilePlayer</code>. The reference to reposition.</li> <li><code>cell</code> (tes3cell): Optional. The cell to move the reference to. If not provided, the reference will be moved to a cell in the exterior worldspace at the position provided.</li> <li><code>position</code> (tes3vector3, table): The position to move the reference to.</li> <li><code>orientation</code> (tes3vector3, table): Optional. The new orientation of the reference.</li> <li><code>forceCellChange</code> (boolean): Default: <code>false</code>. When true, forces the game to update a reference that has moved within a single cell, as if it was moved into a new cell.</li> <li><code>suppressFader</code> (boolean): Default: <code>false</code>. When moving the player, can be used to prevent the fade in and out visual effect.</li> <li><code>teleportCompanions</code> (boolean): Default: <code>true</code>. If used on the player, determines if companions should also be teleported.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3pushkey","title":"<code>tes3.pushKey</code>","text":"<p>Simulates pushing a keyboard key.</p> <pre><code>tes3.pushKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3random","title":"<code>tes3.random</code>","text":"<p>Returns a value from Morrowind's random number generator. This is not preferrable to lua's math.random function, but may be necessary for reproducing Morrowind's generation.</p> <pre><code>tes3.random(seed)\n</code></pre> <p>Parameters:</p> <ul> <li><code>seed</code> (number): Optional. If provided, it the number generator is seeded with this value. Pointers to objects may be used, such as a reference's sceneNode, to create a consistent if less than random seed.</li> </ul>"},{"location":"apis/tes3/#tes3raytest","title":"<code>tes3.rayTest</code>","text":"<p>Performs a ray test and returns various information related to the result(s). If <code>findAll</code> is set, the result will be a table of results, otherwise only the first result is returned.</p> <p>Tip<ol> <li> <p>Keep maximum size of objects reasonable, as well as triangle counts</p> </li> <li> <p>Whenever possible set a maxDistance in your rayTest calls</p> </li> <li> <p>Keep a cached table of ignored objects that you pass to rayTest</p> </li> <li> <p>Whenever possible call ray test on only a subset of the game's scene graph. It can be <code>worldPickRoot</code> for interactable objects, <code>worldLandscapeRoot</code>, or <code>worldObjectRoot</code> for other static, non-interactable objects. You could even pass a smaller subset of the scene graph with a different <code>NiNode</code> you aquired yourself. If your mod's logic only needs specific things you can narrow it down for big performance improvement.</p> </li> </ol> </p> <pre><code>local result = tes3.rayTest({ position = ..., direction = ..., findAll = ..., maxDistance = ..., sort = ..., useModelBounds = ..., useModelCoordinates = ..., useBackTriangles = ..., observeAppCullFlag = ..., root = ..., returnColor = ..., returnNormal = ..., returnSmoothNormal = ..., returnTexture = ..., ignore = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>position</code> (tes3vector3, table): Position of the ray origin.</li> <li><code>direction</code> (tes3vector3, table): Direction of the ray. Does not have to be unit length.</li> <li><code>findAll</code> (boolean): Default: <code>false</code>. If true, the ray test won't stop after the first result.</li> <li><code>maxDistance</code> (number): Default: <code>0</code>. The maximum distance that the test will run.</li> <li><code>sort</code> (boolean): Default: <code>true</code>. If true, the results will be sorted by distance from the origin position.</li> <li><code>useModelBounds</code> (boolean): Default: <code>false</code>. If true, model bounds will be tested for intersection. Otherwise triangles will be used.</li> <li><code>useModelCoordinates</code> (boolean): Default: <code>false</code>. If true, model coordinates will be used instead of world coordinates.</li> <li><code>useBackTriangles</code> (boolean): Default: <code>false</code>. Include intersections with back-facing triangles.</li> <li><code>observeAppCullFlag</code> (boolean): Default: <code>true</code>. Ignore intersections with culled (hidden) models.</li> <li><code>root</code> (niNode): Default: <code>tes3.game.worldRoot</code>. Node pointer to node scene. To reduce the computational work, consider passing only a smaller subset of the <code>worldRoot</code> to improve performance. The typical nodes you can pass here are: <code>tes3.game.worldLandscapeRoot</code>, <code>worldObjectRoot</code>, and <code>worldPickRoot</code>.</li> <li><code>returnColor</code> (boolean): Default: <code>false</code>. Calculate and return the vertex color at intersections.</li> <li><code>returnNormal</code> (boolean): Default: <code>false</code>. Calculate and return the vertex normal at intersections.</li> <li><code>returnSmoothNormal</code> (boolean): Default: <code>false</code>. Use normal interpolation for calculating vertex normals.</li> <li><code>returnTexture</code> (boolean): Default: <code>false</code>. Calculate and return the texture coordinate at intersections.</li> <li><code>ignore</code> (table&lt;integer, niNode|tes3reference&gt;): Optional. An array of references and/or scene graph nodes to cull from the result(s).</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niPickRecord, niPickRecord[], nil)</li> </ul> Example: Get Activation Target <p>This example performs a ray test to match the normal activation target test. Unlike <code>tes3.getPlayerTarget()</code> this will return objects not normally available for activation.</p> <pre><code>local hitResult = tes3.rayTest({ position = tes3.getPlayerEyePosition(), direction = tes3.getPlayerEyeVector() })\nlocal hitReference = hitResult and hitResult.reference\nif (hitReference == nil) then\n    return\nend\n\ntes3.messageBox(\"The player is looking at a '%s'\", hitReference.object.name or hitReference.object.id)\n</code></pre> Example: Get Camera Target <p>This example performs a ray test to see what the camera is currently looking at.</p> <pre><code>local hitResult = tes3.rayTest({ position = tes3.getCameraPosition(), direction = tes3.getCameraVector() })\nlocal hitReference = hitResult and hitResult.reference\nif (hitReference == nil) then\n    return\nend\n\ntes3.messageBox(\"The camera is looking at a '%s'\", hitReference.object.name or hitReference.object.id)\n</code></pre> Example: Multiple Results <p>This example performs a ray test and displays all results in the entire ray test, rather than ending at the first object hit.</p> <pre><code>local results = tes3.rayTest{ tes3.getCameraPosition(), direction = tes3.getCameraVector(), findAll = true }\nif results then\n    for i, hit in pairs(results) do\n        mwse.log(\"Ray hit #%d: %s\", i, hit.reference or \"&lt;non-reference&gt;\");\n    end\nend\n</code></pre> Example: Save rayTest result for use at a later point <p>If you plan to use the results of rayTest, you should make sure it still exists. For example, an object which was in a list of results of rayTest can get unloaded when the player changes cells and become invalid, so it shouldn't be accessed.</p> <pre><code>local result = tes3.rayTest{ -- the result can get invalidated\n    position = tes3.getPlayerEyePosition(),\n    direction = tes3.getPlayerEyeVector(),\n    ignore = { tes3.player }\n}\n\nlocal refHandle\n\nif result then\n    refHandle = tes3.makeSafeObjectHandle(result.reference)\nend\n\nlocal function myFunction()\n    -- Before using the reference, we need to check that it's still valid.\n    -- References get unloaded on cell changes etc.\n    if refHandle and refHandle:valid() then\n        -- Now we can safely do something with our stored reference.\n        local reference = refHandle:getObject()\n\n    end\nend\n</code></pre>"},{"location":"apis/tes3/#tes3releasekey","title":"<code>tes3.releaseKey</code>","text":"<p>Simulates releasing a keyboard key.</p> <pre><code>tes3.releaseKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3removeeffects","title":"<code>tes3.removeEffects</code>","text":"<p>Removes magic effects from a given reference. Requires that either the <code>effect</code> or <code>castType</code> parameter be provided.</p> <pre><code>tes3.removeEffects({ reference = ..., effect = ..., castType = ..., chance = ..., removeSpell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference): Target reference to remove effects from.</li> <li><code>effect</code> (integer): Optional. Maps to <code>tes3.effect</code> constants.</li> <li><code>castType</code> (integer): Optional. Maps to <code>tes3.spellType</code> constants.</li> <li><code>chance</code> (number): Default: <code>100</code>. The chance for the effect to be removed.</li> <li><code>removeSpell</code> (boolean): Optional. If removing by cast type, determines if the spell should be removed from the target's spell list. Defaults to true if <code>castType</code> is not <code>tes3.spellType.spell.</code> This causes diseases and curses to be removed when dispelled.</li> </ul> </li> </ul> Example: Simulating a Dispel <p>In this example there is a 50 % chance that any Water Breathing magic effects will be removed from the player when he/she is underwater.</p> <pre><code>local function example(e)\n        -- We only care about the player\n    if (e.mobile.objectType ~= tes3.objectType.mobilePlayer) then\n        return\n    end\n\n    local cell = tes3.mobilePlayer.cell\n\n    if (cell.isInterior and not cell.hasWater) then\n        return\n    end\n\n    local waterLevel = cell.waterLevel\n    local headPosition = tes3.mobilePlayer.position.z + tes3.mobilePlayer.height\n\n    local underwater = headPosition &lt; waterLevel\n\n    if underwater then\n        -- There is a 50 % chance that any Water Breathing effect will be removed from the player\n        tes3.removeEffects({\n            reference = tes3.player,\n            chance = 50,\n            effect = tes3.effect.waterBreathing,\n        })\n    end\nend\n\nevent.register(tes3.event.initialized, function ()\n    event.register(tes3.event.calcMoveSpeed, example)\nend)\n</code></pre>"},{"location":"apis/tes3/#tes3removeitem","title":"<code>tes3.removeItem</code>","text":"<p>Removes an item from a given reference's inventory.</p> <pre><code>local removedCount = tes3.removeItem({ reference = ..., item = ..., itemData = ..., deleteItemData = ..., count = ..., playSound = ..., reevaluateEquipment = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Who to remove items from.</li> <li><code>item</code> (tes3item, string): The item to remove.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data for the exact item to remove.</li> <li><code>deleteItemData</code> (tes3itemData): Optional. Whether to delete the item data after remove succeeds. Automatically set if itemData is used. Does not need to be specified for normal usage.</li> <li><code>count</code> (number): Default: <code>1</code>. The maximum number of items to remove.</li> <li><code>playSound</code> (boolean): Default: <code>true</code>. If false, the up/down sound for the item won't be played.</li> <li><code>reevaluateEquipment</code> (boolean): Default: <code>true</code>. If true, and the item removed is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if it needs to equip a new item. This does not affect the player.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though <code>tes3ui.forcePlayerInventoryUpdate()</code> must manually be called after all inventory updates are finished.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>removedCount</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3removeitemdata","title":"<code>tes3.removeItemData</code>","text":"<p>Removes and deletes item data from a given reference, or from their inventory. If no <code>itemData</code> is provided, it will be removed from the reference itself.</p> <pre><code>local wasRemoved = tes3.removeItemData({ from = ..., item = ..., itemData = ..., force = ..., ignoreOwnership = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>from</code> (tes3reference, tes3mobileActor, string): The reference or mobile whose inventory will be modified.</li> <li><code>item</code> (tes3item, string): The item to remove item data for.</li> <li><code>itemData</code> (tes3itemData): Optional. The exact item data to remove. If no itemData is provided, the itemData from the reference itself will be removed.</li> <li><code>force</code> (boolean): Default: <code>false</code>. If true, no checks are made to see if the item data should be deleted. It will always be purged.</li> <li><code>ignoreOwnership</code> (boolean): Default: <code>true</code>. If <code>force</code> is false, a check will be made to see if the item data is empty and can be deleted. By default this ignores any ownership data. Setting this to false will override that behavior.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If false, the player or contents menu won't be updated.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasRemoved</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3removesound","title":"<code>tes3.removeSound</code>","text":"<p>Stops a sound playing. Without a reference, it will match unattached sounds. With a reference, it will only match a sound playing on that specific reference.</p> <pre><code>tes3.removeSound({ sound = ..., reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>sound</code> (tes3sound, string): The sound object, or id of the sound to look for.</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Optional. The reference the sound is attached to.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3removespell","title":"<code>tes3.removeSpell</code>","text":"<p>Removes a spell from an actor's spell list. If the spell is passive, any active effects from that spell are retired.</p> <pre><code>local wasRemoved = tes3.removeSpell({ reference = ..., actor = ..., spell = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): Who to remove the spell from. To manipulate an actor without specifying any particular reference, use <code>actor</code> instead.</li> <li><code>actor</code> (tes3actor, string): Who to remove the spell from. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save.</li> <li><code>spell</code> (tes3spell, string): The spell to remove.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If true, the GUI will be updated respecting the removal of the spell. This can be useful to disable when batch-removing many spells. The batch should be ended with <code>tes3.updateMagicGUI</code> to reflect the changes.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasRemoved</code> (boolean): True if the spell was successfully removed. This can be false if the spell comes from a race or birthsign.</li> </ul>"},{"location":"apis/tes3/#tes3removevisualeffect","title":"<code>tes3.removeVisualEffect</code>","text":"<p>Removes one or more visual effects created either through magical effects or <code>tes3.createVisualEffect()</code>.</p> <pre><code>local removedCount = tes3.removeVisualEffect({ vfx = ..., avObject = ..., serial = ..., reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>vfx</code> (tes3vfx): Optional. If provided, the specific VFX handle will be deleted.</li> <li><code>avObject</code> (niAVObject): Optional. If provided, any VFXs associated with the given niAVObject will be deleted.</li> <li><code>serial</code> (number): Optional. The magic source instance serial number to remove effects for. This must be paired with a reference as well.</li> <li><code>reference</code> (tes3reference, string): Optional. The reference to remove all visual effects from. A serial may also be provided.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>removedCount</code> (number): The amount of VFX removed by this function call.</li> </ul>"},{"location":"apis/tes3/#tes3runlegacyscript","title":"<code>tes3.runLegacyScript</code>","text":"<p>This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua.</p> <pre><code>local executed = tes3.runLegacyScript({ script = ..., source = ..., command = ..., variables = ..., reference = ..., dialogue = ..., info = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>script</code> (tes3script): Default: <code>tes3.worldController.scriptGlobals</code>. The base script to base the execution from.</li> <li><code>source</code> (number): The compilation source to use. Defaults to tes3.scriptSource.default</li> <li><code>command</code> (string): The script text to compile and run.</li> <li><code>variables</code> (tes3scriptVariables): Optional. If a reference is provided, the reference's variables will be used.</li> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to target for execution.</li> <li><code>dialogue</code> (tes3dialogue, string): Optional. If compiling for dialogue context, the dialogue associated with the script.</li> <li><code>info</code> (tes3dialogueInfo): Optional. The info associated with the dialogue.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3savegame","title":"<code>tes3.saveGame</code>","text":"<p>Saves the game.</p> <pre><code>local saved = tes3.saveGame({ file = ..., name = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>file</code> (string): Default: <code>\"quiksave\"</code>. The filename of the save that will be created, without extension.</li> <li><code>name</code> (string): Default: <code>\"Quicksave\"</code>. The display name of the save.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>saved</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3say","title":"<code>tes3.say</code>","text":"<p>Plays a sound file, with an optional alteration and subtitle.</p> <p>Note: MP3 voice files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification.</p> <pre><code>tes3.say({ reference = ..., soundPath = ..., pitch = ..., volume = ..., forceSubtitle = ..., subtitle = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to make say something.</li> <li><code>soundPath</code> (string): A path to a valid sound file.</li> <li><code>pitch</code> (number): Default: <code>1</code>. A pitch shift to adjust the sound with.</li> <li><code>volume</code> (number): Default: <code>1</code>. The volume to play the sound at, relative to the voice mix channel.</li> <li><code>forceSubtitle</code> (boolean): Default: <code>false</code>. If true a subtitle will be shown, even if subtitles are disabled.</li> <li><code>subtitle</code> (string): Optional. The subtitle to show if subtitles are enabled, or if forceSubtitle is set.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3set3rdpersoncameraoffset","title":"<code>tes3.set3rdPersonCameraOffset</code>","text":"<p>Changes the 3rd person camera offset from the player's head.</p> <p>Important</p> <p>This function can be used once tes3worldController and tes3mobilePlayer have finished initializing.</p> <pre><code>tes3.set3rdPersonCameraOffset({ offset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>offset</code> (tes3vector3): The offset vector.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setaiactivate","title":"<code>tes3.setAIActivate</code>","text":"<p>Configures a mobile actor to activate an object.</p> <pre><code>tes3.setAIActivate({ reference = ..., target = ..., reset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference): This actor will activate the provided <code>target</code> reference.</li> <li><code>target</code> (tes3reference): The reference to activate.</li> <li><code>reset</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setaiescort","title":"<code>tes3.setAIEscort</code>","text":"<p>Configures a mobile actor to escort another actor to a destination. Escorting actor will protect and wait for the escortee to catch up. Its advisible to make the <code>target</code> actor follow the escorting actor with <code>tes3.setAIFollow()</code>, because the escorting actor will otherwise wait the escortee forever.</p> <pre><code>tes3.setAIEscort({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference): The escorting actor.</li> <li><code>target</code> (tes3reference, tes3mobileActor): The actor being escorted.</li> <li><code>destination</code> (tes3vector3, table)</li> <li><code>duration</code> (number): Default: <code>0</code>. How long the escorter will do the escorting, in hours.</li> <li><code>cell</code> (tes3cell, string): Optional.</li> <li><code>reset</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setaifollow","title":"<code>tes3.setAIFollow</code>","text":"<p>Configures a mobile actor to follow another actor to a destination.</p> <pre><code>tes3.setAIFollow({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference): This is the actor that will follow another one.</li> <li><code>target</code> (tes3reference, tes3mobileActor): The actor to follow.</li> <li><code>destination</code> (tes3vector3, table): Optional.</li> <li><code>duration</code> (number): Default: <code>0</code>. How long the follower will follow, in hours.</li> <li><code>cell</code> (tes3cell, string): Optional.</li> <li><code>reset</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setaitravel","title":"<code>tes3.setAITravel</code>","text":"<p>Configures a mobile actor to travel to a destination.</p> <pre><code>tes3.setAITravel({ reference = ..., destination = ..., reset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference)</li> <li><code>destination</code> (tes3vector3, table)</li> <li><code>reset</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setaiwander","title":"<code>tes3.setAIWander</code>","text":"<p>Configures a mobile actor to wander around a cell.</p> <pre><code>tes3.setAIWander({ reference = ..., idles = ..., range = ..., duration = ..., time = ..., reset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference): This actor will wander around.</li> <li><code>idles</code> (number[]): An array with 8 values that corresponds to the chance of playing each idle animation. For more info see tes3aiPackageWander.idles.</li> <li><code>range</code> (number): Default: <code>0</code>.</li> <li><code>duration</code> (number): Default: <code>0</code>. How long the actor will be wandering around, in hours.</li> <li><code>time</code> (number): Default: <code>0</code>.</li> <li><code>reset</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setanimationtiming","title":"<code>tes3.setAnimationTiming</code>","text":"<p>This function sets a reference's animation groups' timings to a specified value.</p> <pre><code>tes3.setAnimationTiming({ reference = ..., timing = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): A reference whose animation groups' timings to set.</li> <li><code>timing</code> (number, table): If one parameter is provided, all animation data timings will be set to the timing provided. If a table with 3 timings is provided, animation data timings will be set accordingly.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setdestination","title":"<code>tes3.setDestination</code>","text":"<p>Sets or changes the destination of a door to a new location.</p> <pre><code>tes3.setDestination({ reference = ..., position = ..., orientation = ..., cell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference): The door reference that will be updated.</li> <li><code>position</code> (tes3vector3, table): The new coordinates of the transition.</li> <li><code>orientation</code> (tes3vector3, table): The new rotation to use after transition.</li> <li><code>cell</code> (tes3cell, string): Optional. The cell to transition to, if transitioning to an interior.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setenabled","title":"<code>tes3.setEnabled</code>","text":"<p>Enables or disables a reference.</p> <pre><code>local success = tes3.setEnabled({ reference = ..., toggle = ..., enabled = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to enable/disable.</li> <li><code>toggle</code> (boolean): Default: <code>false</code>. If true, the enabled state will be toggled.</li> <li><code>enabled</code> (boolean): Default: <code>true</code>. If not toggling, setting <code>enabled</code> to true will enable the reference or to false will disable the reference.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setglobal","title":"<code>tes3.setGlobal</code>","text":"<p>Sets the value of a global value. If the global could not be found, the function returns false.</p> <pre><code>local value = tes3.setGlobal(id, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> <li><code>value</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setitemisstolen","title":"<code>tes3.setItemIsStolen</code>","text":"<p>This function changes an item's stolen flag. Morrowind handles stealing by marking the base item (not the inventory stack) with NPCs that you have stolen that item from. The NPC will recognize an item as stolen if they are marked as stolen on the base item.</p> <pre><code>tes3.setItemIsStolen({ item = ..., from = ..., stolen = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item): The item whose stolen flag to modify.</li> <li><code>from</code> (tes3creature, tes3npc, tes3faction, nil): Who or what to set/clear the stolen state for. If not provided, the stolen state can be cleared (but not set) for all objects.</li> <li><code>stolen</code> (boolean): Default: <code>true</code>. If this parameter is set to true, the item will be flagged as stolen. Otherwise, the item's stolen flag will be removed.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setjournalindex","title":"<code>tes3.setJournalIndex</code>","text":"<p>Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex.</p> <pre><code>local wasSet = tes3.setJournalIndex({ id = ..., index = ..., speaker = ..., showMessage = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (tes3dialogue, string)</li> <li><code>index</code> (number)</li> <li><code>speaker</code> (tes3mobileActor, tes3reference, string)</li> <li><code>showMessage</code> (boolean): Default: <code>false</code>. If set, a message may be shown to the player.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasSet</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setkillcount","title":"<code>tes3.setKillCount</code>","text":"<p>Sets player's kill count of a certain type of actor.</p> <pre><code>tes3.setKillCount({ actor = ..., count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3actor, string): The actor (or their ID) for whom to set player's kill count.</li> <li><code>count</code> (number): Number of kills that will be set.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setlocklevel","title":"<code>tes3.setLockLevel</code>","text":"<p>Sets a locked reference's lock level. This does not lock the object.</p> <pre><code>local set = tes3.setLockLevel({ reference = ..., level = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> <li><code>level</code> (number)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>set</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setmarklocation","title":"<code>tes3.setMarkLocation</code>","text":"<p>This function sets the player's mark location to the one specified.</p> <pre><code>tes3.setMarkLocation({ position = ..., rotation = ..., cell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>position</code> (tes3vector3, number[]): Coordinates of the mark's position.</li> <li><code>rotation</code> (number): Default: <code>tes3.player.orientation.z</code>. This argument controls which direction the player's mark location will be facing.</li> <li><code>cell</code> (tes3cell): Optional. A cell in which the mark should be placed. This argument is unnecessary when setting the Mark's location to an exterior cell.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setowner","title":"<code>tes3.setOwner</code>","text":"<p>This function sets the owner of a reference.</p> <pre><code>tes3.setOwner({ reference = ..., remove = ..., owner = ..., requiredGlobal = ..., requiredRank = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): A reference whose owner to set.</li> <li><code>remove</code> (boolean): Default: <code>false</code>. If this parameter is set to true, reference's owner field will be removed.</li> <li><code>owner</code> (tes3npc, tes3faction, string): Assigns this NPC or a faction as the owner of the reference.</li> <li><code>requiredGlobal</code> (tes3globalVariable): Optional. If <code>owner</code> is set to NPC, <code>requiredGlobal</code> variable can be set.</li> <li><code>requiredRank</code> (number): Default: <code>0</code>. If <code>owner</code> is set to faction, <code>requitedRank</code> variable controls minimal rank in faction the player has to have to be able to freely take the reference.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3setplayercontrolstate","title":"<code>tes3.setPlayerControlState</code>","text":"<p>Enables or disables player's controls state.</p> <pre><code>local changedControlState = tes3.setPlayerControlState({ enabled = ..., attack = ..., jumping = ..., magic = ..., vanity = ..., viewSwitch = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>enabled</code> (boolean): Default: <code>false</code>. Setting this to false will disable any kind of control.</li> <li><code>attack</code> (boolean): Default: <code>false</code>. If this is false, it will block player from attacking.</li> <li><code>jumping</code> (boolean): Default: <code>false</code>. If this is false, it will block player from jumping.</li> <li><code>magic</code> (boolean): Default: <code>false</code>. If this is false, it will block player from using magic.</li> <li><code>vanity</code> (boolean): Default: <code>false</code>. If this is false, it will block player from going to vanity mode.</li> <li><code>viewSwitch</code> (boolean): Default: <code>false</code>. If this is false, it will block player changing view mod from 1st to 3rd person camera and vice versa.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>changedControlState</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setsourceless","title":"<code>tes3.setSourceless</code>","text":"<p>Sets an object (of any kind) to be sourceless, which are objects the game does not store in savegames. This can be useful for mod-created temporary objects which are not necessary to save.</p> <pre><code>tes3.setSourceless(object, sourceless)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3baseObject): The object whose sourceless flag to modify.</li> <li><code>sourceless</code> (boolean): Default: <code>true</code>. Allows flagging an object as sourceless or undoing that action.</li> </ul>"},{"location":"apis/tes3/#tes3setstatistic","title":"<code>tes3.setStatistic</code>","text":"<p>Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided.</p> <pre><code>tes3.setStatistic({ attribute = ..., base = ..., current = ..., limit = ..., name = ..., reference = ..., skill = ..., value = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>attribute</code> (number): Optional. The attribute to set.</li> <li><code>base</code> (number): Optional. If set, the base value will be set.</li> <li><code>current</code> (number): Optional. If set, the current value will be set.</li> <li><code>limit</code> (boolean): Default: <code>false</code>. If set, the attribute won't rise above 100 or fall below 0.</li> <li><code>name</code> (string): Optional. A generic name of an attribute to set.</li> <li><code>reference</code> (tes3mobileActor, tes3reference, string)</li> <li><code>skill</code> (number): Optional. The skill to set.</li> <li><code>value</code> (number): Optional. If set, both the base and current value will be set.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3settrap","title":"<code>tes3.setTrap</code>","text":"<p>Sets the trap on a given reference.</p> <pre><code>local trapped = tes3.setTrap({ reference = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> <li><code>spell</code> (tes3spell, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>trapped</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setvanitymode","title":"<code>tes3.setVanityMode</code>","text":"<p>Toggles the camera into vanity mode. In vanity mode the camera is in third person and it is orbiting slowly around the player character. Returns true if changed to vanity mode.</p> <p>Note that unlike the vanity mode caused by not doing anything for a while, this vanity mode must be toggled to go off.</p> <pre><code>local changedVanityMode = tes3.setVanityMode({ enabled = ..., checkVanityDisabled = ..., toggle = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>enabled</code> (boolean): Default: <code>true</code>. This flag sets the vanity mode as enabled or disabled.</li> <li><code>checkVanityDisabled</code> (boolean): Default: <code>true</code>. This will prevent changing vanity mode according to vanityDisabled flag on tes3.mobilePlayer.</li> <li><code>toggle</code> (boolean): Default: <code>false</code>. When this flag is set to true. The vanity mode will be toggled. If the player was in vanity mode, this will make the player leave vanity mode. Conversly, if the player wasn't in the vanity mode, this will turn on the vanity mode.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>changedVanityMode</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3setwerewolfkillcount","title":"<code>tes3.setWerewolfKillCount</code>","text":"<p>Sets player's kill count as a werewolf.</p> <pre><code>tes3.setWerewolfKillCount({ count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>count</code> (number): Number of kills.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3showalchemymenu","title":"<code>tes3.showAlchemyMenu</code>","text":"<p>This function opens the alchemy menu.</p> <pre><code>tes3.showAlchemyMenu()\n</code></pre>"},{"location":"apis/tes3/#tes3showcontentsmenu","title":"<code>tes3.showContentsMenu</code>","text":"<p>This function opens the contents menu. This menu is used for containers, companion inventories, and pickpocket attempts.</p> <pre><code>local wasShown = tes3.showContentsMenu({ reference = ..., pickpocket = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference to open the contents of.</li> <li><code>pickpocket</code> (boolean): Default: <code>false</code>. If true, the contents menu will open in the context of an attempted pickpocketing.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasShown</code> (boolean): If true, the contents menu was successfully shown.</li> </ul>"},{"location":"apis/tes3/#tes3showdialoguemenu","title":"<code>tes3.showDialogueMenu</code>","text":"<p>This function opens the dialogue menu. This behaves similar to the <code>ForceGreeting</code> mwscript command.</p> <pre><code>local wasShown = tes3.showDialogueMenu({ reference = ..., checkAllowWerewolfForceGreeting = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference to open dialogue with.</li> <li><code>checkAllowWerewolfForceGreeting</code> (boolean): Default: <code>true</code>. If true, the <code>AllowWerewolfForceGreeting</code> variable must exist on the reference's script to allow opening a dialogue while the player is a werewolf. This can be set to false to override the vanilla behavior.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasShown</code> (boolean): If true, the dialogue window was successfully shown.</li> </ul>"},{"location":"apis/tes3/#tes3showrepairservicemenu","title":"<code>tes3.showRepairServiceMenu</code>","text":"<p>This function opens the repair service menu.</p> <pre><code>tes3.showRepairServiceMenu({ serviceActor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>serviceActor</code> (tes3mobileActor, tes3reference, string): Default: <code>tes3mobilePlayer</code>. The actor to use for calculating the service price.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3showrestmenu","title":"<code>tes3.showRestMenu</code>","text":"<p>This function opens the resting menu and returns true on success. If the player can't rest currently, it returns false.</p> <p>Various parameters can be used to allow resting in situations not normally possible.</p> <pre><code>local success = tes3.showRestMenu({ checkForEnemies = ..., checkForSolidGround = ..., checkSleepingIllegal = ..., checkIsWerewolf = ..., showMessage = ..., resting = ..., waiting = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>checkForEnemies</code> (boolean): Default: <code>true</code>. Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned.</li> <li><code>checkForSolidGround</code> (boolean): Default: <code>true</code>. Perform a check if the player is underwater. If underwater, false is returned.</li> <li><code>checkSleepingIllegal</code> (boolean): Default: <code>true</code>. Perform a check if the sleeping in the current cell is illegal. If illegal, then the player will be prompted to wait instead of rest.</li> <li><code>checkIsWerewolf</code> (boolean): Default: <code>true</code>. Perform a check if the player is Werewolf. If they are, then the player will be prompted to wait instead of rest.</li> <li><code>showMessage</code> (boolean): Default: <code>true</code>. Should a messagebox be shown if the player can't open resting menu because some condition isn't met.</li> <li><code>resting</code> (boolean): Default: <code>true</code>. Should this be a rest?</li> <li><code>waiting</code> (boolean): Default: <code>false</code>. Or, is this a wait?</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3showspellmakingmenu","title":"<code>tes3.showSpellmakingMenu</code>","text":"<p>This function opens the spellmaking menu and returns true on success.</p> <pre><code>local success = tes3.showSpellmakingMenu({ serviceActor = ..., useDialogActor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>serviceActor</code> (tes3mobileActor, tes3reference, string): Optional. The actor to use for calculating the service price. If none is provided, an open dialog menu's service actor will be used instead.</li> <li><code>useDialogActor</code> (boolean): Default: <code>true</code>. If set to false, the dialog menu service actor will be ignored. If false, a serviceActor must be provided.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3skipanimationframe","title":"<code>tes3.skipAnimationFrame</code>","text":"<p>Skips a given reference's animation for a single frame.</p> <pre><code>tes3.skipAnimationFrame({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3mobileActor, tes3reference, string): The reference whose animation frame will be skipped.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3streammusic","title":"<code>tes3.streamMusic</code>","text":"<p>This function interrupts the current music to play the specified music track.</p> <pre><code>local executed = tes3.streamMusic({ path = ..., situation = ..., crossfade = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>path</code> (string): Path to the music file, relative to Data Files/music/.</li> <li><code>situation</code> (number): Default: <code>tes3.musicSituation.uninterruptible</code>. Determines what kind of gameplay situation the music should stay active for. Explore music plays during non-combat, and ends when combat starts. Combat music starts during combat, and ends when combat ends. Uninterruptible music always plays, ending only when the track does. This value maps to <code>tes3.musicSituation</code> constants.</li> <li><code>crossfade</code> (number): Default: <code>1.0</code>. The duration in seconds of the crossfade from the old to the new track. The default is 1.0.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3tapkey","title":"<code>tes3.tapKey</code>","text":"<p>Simulates tapping a keyboard key.</p> <pre><code>tes3.tapKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3testlineofsight","title":"<code>tes3.testLineOfSight</code>","text":"<p>Checks if there is a clear line of sight between two references, or two points in space, in the same method that the game uses for actor vision. You should pass two references, or two positions and heights.</p> <p>Only certain object types count as blocking for the purposes of the test: Statics, activators, containers, doors, and lights with non-zero weight.</p> <p>The collision root node is used for testing, if present in the model.</p> <pre><code>local hasLineOfSight = tes3.testLineOfSight({ reference1 = ..., reference2 = ..., position1 = ..., height1 = ..., position2 = ..., height2 = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference1</code> (tes3reference): Position of the starting point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the starting point is at the top of its bounding box.</li> <li><code>reference2</code> (tes3reference): Position of the ending point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the ending point is at the top of its bounding box.</li> <li><code>position1</code> (tes3vector3, table): Position of the starting point of the LoS check. Modified by height1.</li> <li><code>height1</code> (tes3vector3, table): Optional. Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0.</li> <li><code>position2</code> (tes3vector3, table): Position of the ending point of the LoS check. Modified by height2.</li> <li><code>height2</code> (tes3vector3, table): Optional. Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>hasLineOfSight</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3togglepov","title":"<code>tes3.togglePOV</code>","text":"<p>Forces a toggle of the player's POV the next simulation frame, and returns if the player was previously in 3rd person. Multiple calls in the same frame will not stack.</p> <pre><code>local was3rdPerson = tes3.togglePOV()\n</code></pre> <p>Returns:</p> <ul> <li><code>was3rdPerson</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3transferitem","title":"<code>tes3.transferItem</code>","text":"<p>Moves one or more items from one reference to another. Returns the actual amount of items successfully transferred.</p> <pre><code>local transferredCount = tes3.transferItem({ from = ..., to = ..., item = ..., itemData = ..., count = ..., playSound = ..., limitCapacity = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>from</code> (tes3reference, tes3mobileActor, string): Who to take items from.</li> <li><code>to</code> (tes3reference, tes3mobileActor, string): Who to give items to.</li> <li><code>item</code> (tes3item, string): The item to transfer.</li> <li><code>itemData</code> (tes3itemData): Optional. The specific item data to transfer if, for example, you want to transfer a specific player item.</li> <li><code>count</code> (number): Default: <code>1</code>. The maximum number of items to transfer.</li> <li><code>playSound</code> (boolean): Default: <code>true</code>. If false, the up/down sound for the item won't be played.</li> <li><code>limitCapacity</code> (boolean): Default: <code>true</code>. If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full.</li> <li><code>reevaluateEquipment</code> (boolean): Default: <code>true</code>. If true, and the item transferred is armor, clothing, or a weapon, the actors will reevaluate their equipment choices to see if the new item is worth equipping. This does not affect the player.</li> <li><code>equipProjectiles</code> (boolean): Default: <code>true</code>. If true, and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though <code>tes3ui.forcePlayerInventoryUpdate()</code> must manually be called after all inventory updates are finished.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>transferredCount</code> (number)</li> </ul>"},{"location":"apis/tes3/#tes3triggercrime","title":"<code>tes3.triggerCrime</code>","text":"<p>Emulates the player committing a crime. Returns <code>true</code> if the crime was witnessed by an actor.</p> <pre><code>local result = tes3.triggerCrime({ type = ..., victim = ..., value = ..., forceDetection = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>type</code> (number): Default: <code>tes3.crimeType.theft</code>. The type of crime to be committed. Maps to values in the <code>tes3.crimeType</code> table.</li> <li><code>victim</code> (tes3mobileNPC, tes3actor, tes3faction): Default: <code>tes3.mobilePlayer</code>. The victim of the crime. This can be an individual actor or a entire faction. Has no effect on crimes with a <code>type</code> of <code>tes3.crimeType.trespass</code> or <code>tes3.crimeType.werewolf</code>.</li> <li><code>value</code> (number): Default: <code>0</code>. Only valid if <code>type</code> is <code>tes3.crimeType.theft</code>. The value of the stolen objects.</li> <li><code>forceDetection</code> (boolean): Default: <code>false</code>. If <code>true</code>, bypasses regular detection logic and forces all nearby actors to detect the crime.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3undotransform","title":"<code>tes3.undoTransform</code>","text":"<p>Changes a reference back from werewolf form to human. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful.</p> <pre><code>local success = tes3.undoTransform({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference): A reference to change back to human.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3unhammerkey","title":"<code>tes3.unhammerKey</code>","text":"<p>Stops simulating hammering a keyboard key.</p> <pre><code>tes3.unhammerKey(keyCode)\n</code></pre> <p>Parameters:</p> <ul> <li><code>keyCode</code> (number): Maps to values in <code>tes3.scanCode</code> namespace.</li> </ul>"},{"location":"apis/tes3/#tes3unlock","title":"<code>tes3.unlock</code>","text":"<p>Unlocks an object. Returns true if the object can be and wasn't already unlocked.</p> <pre><code>local unlocked = tes3.unlock({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>unlocked</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3updateinventorygui","title":"<code>tes3.updateInventoryGUI</code>","text":"<p>Forces the GUI to update inventory-relevant elements for a given reference. This can be used after many calls to inventory-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data.</p> <pre><code>tes3.updateInventoryGUI({ reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to update GUI elements for.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3updatejournal","title":"<code>tes3.updateJournal</code>","text":"<p>Updates the journal index in a way similar to the mwscript function Journal.</p> <pre><code>local wasSet = tes3.updateJournal({ id = ..., index = ..., showMessage = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (tes3dialogue, string)</li> <li><code>index</code> (number)</li> <li><code>showMessage</code> (boolean): Default: <code>false</code>. If set, a message may be shown to the player.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>wasSet</code> (boolean)</li> </ul>"},{"location":"apis/tes3/#tes3updatemagicgui","title":"<code>tes3.updateMagicGUI</code>","text":"<p>Forces the GUI to update magic-relevant elements for a given reference. This can be used after many calls to magic- or magic item-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data.</p> <pre><code>tes3.updateMagicGUI({ reference = ..., updateSpells = ..., updateEnchantments = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>reference</code> (tes3reference, tes3mobileActor, string): The reference to update GUI elements for.</li> <li><code>updateSpells</code> (boolean): Default: <code>true</code>. Determines if the spell and power lists are refreshed.</li> <li><code>updateEnchantments</code> (boolean): Default: <code>true</code>. Determines if the enchanted items list is refreshed.</li> </ul> </li> </ul>"},{"location":"apis/tes3/#tes3wakeup","title":"<code>tes3.wakeUp</code>","text":"<p>This function wakes player up and returns true if successful.</p> <p>Note this function returns false if WorldController or MobilePlayer aren't initialized, and if the player is not sleeping or waiting</p> <pre><code>local wokeUp = tes3.wakeUp()\n</code></pre> <p>Returns:</p> <ul> <li><code>wokeUp</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/","title":"Tes3ui","text":""},{"location":"apis/tes3ui/#tes3ui","title":"tes3ui","text":"<p>The tes3ui library provides access to manipulating the game's GUI.</p>"},{"location":"apis/tes3ui/#functions","title":"Functions","text":""},{"location":"apis/tes3ui/#tes3uiacquiretextinput","title":"<code>tes3ui.acquireTextInput</code>","text":"<p>Sends all text input to the specified element.  Calling this function with a nil argument will release text input and allow keybinds to work. Suppresses most keybinds while active, except the Journal open/close keybind (it's up to the individual menu implementation).</p> <p>Only one element can have control of input, and there is no automatic restoration of control if one element takes control from another. Be careful of conflicts with other users of this function.</p> <pre><code>tes3ui.acquireTextInput(element)\n</code></pre> <p>Parameters:</p> <ul> <li><code>element</code> (tes3uiElement): Optional.</li> </ul>"},{"location":"apis/tes3ui/#tes3uicapturemousedrag","title":"<code>tes3ui.captureMouseDrag</code>","text":"<p>When used in a mouse event, causes the element to capture further mouse events even when the cursor goes outside the element. Setting mouse capture should always be accompanied by releasing it on a complementary event. This is commonly used for dragging, so that it can continue even if the mouse moves slightly outside the element.</p> <p>The capture is always removed when the element is destroyed. The capture may also be removed when the mouse is released, but this is not reliable, as the engine forgets what to do if there is input from any other controller while the mouse is held down.</p> <pre><code>tes3ui.captureMouseDrag(capture)\n</code></pre> <p>Parameters:</p> <ul> <li><code>capture</code> (boolean): Turns on mouse capture for the element currently processing a mouse event if true, sending all further mouse events to that element. Turns off capture if false.</li> </ul> Example: Basic Usage <p>Using the UI event system, cause a given element to capture the mouse drag.</p> <pre><code>element:register(\"mouseDown\", function(e)\n    -- Capture must be inside a mouse event.\n    tes3ui.captureMouseDrag(true)\nend)\n\nelement:register(\"mouseRelease\", function(e)\n    -- Release may be anywhere.\n    tes3ui.captureMouseDrag(false)\nend)\n</code></pre>"},{"location":"apis/tes3ui/#tes3uichoice","title":"<code>tes3ui.choice</code>","text":"<p>Creates a simple dialogue choice, as per the <code>Choice</code> mwscript function.</p> <pre><code>tes3ui.choice(text, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>text</code> (string): The text to display for the choice.</li> <li><code>index</code> (number): The choice index associated with the given text.</li> </ul>"},{"location":"apis/tes3ui/#tes3uiclosebookmenu","title":"<code>tes3ui.closeBookMenu</code>","text":"<p>This function closes the book menu.</p> <pre><code>tes3ui.closeBookMenu()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiclosejournal","title":"<code>tes3ui.closeJournal</code>","text":"<p>Closes the journal menu.</p> <pre><code>local result = tes3ui.closeJournal()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/#tes3uiclosescrollmenu","title":"<code>tes3ui.closeScrollMenu</code>","text":"<p>This function closes the scroll menu.</p> <pre><code>tes3ui.closeScrollMenu()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uicreatehelplayermenu","title":"<code>tes3ui.createHelpLayerMenu</code>","text":"<p>Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions.</p> <p>Note, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu.</p> <p>Unlike standard menus, help layer menus are always created with a fixed frame.</p> <pre><code>local result = tes3ui.createHelpLayerMenu({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id).</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3ui/#tes3uicreatemenu","title":"<code>tes3ui.createMenu</code>","text":"<p>Creates a top-level menu.</p> <pre><code>local result = tes3ui.createMenu({ id = ..., dragFrame = ..., fixedFrame = ..., modal = ..., loadable = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findMenu(id).</li> <li><code>dragFrame</code> (boolean): Default: <code>false</code>. Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. Its title bar text can be set with the .text property. After construction, position and minimum dimensions should be set.</li> <li><code>fixedFrame</code> (boolean): Default: <code>false</code>. Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu. This type of menu is modal by default, preventing interaction with other menus while the menu is active.</li> <li><code>modal</code> (boolean): Default: <code>true</code>. Only applies to fixedFrame menus. Modal menus prevent interaction with other menus while the menu is active. This behavior can be disabled with this flag.</li> <li><code>loadable</code> (boolean): Default: <code>true</code>. If set to false, calls to loadMenuPosition will fail.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3ui/#tes3uicreateresponsetext","title":"<code>tes3ui.createResponseText</code>","text":"<p>Creates a respond text. This function is used for the mwscript <code>Choice</code> function.</p> <pre><code>tes3ui.createResponseText({ text = ..., type = ..., index = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>text</code> (string): The text to display.</li> <li><code>type</code> (integer): Default: <code>2</code>. The type for the response. Defaults to <code>choice</code> responses. If set to <code>1</code>, a title will be made. Value of <code>0</code> corresponds to the main text, and value of <code>2</code> corresponds to red clickable choice text.</li> <li><code>index</code> (integer): Optional. The answer index for the response. Only used for <code>choice</code> responses.</li> </ul> </li> </ul>"},{"location":"apis/tes3ui/#tes3uicreatetooltipmenu","title":"<code>tes3ui.createTooltipMenu</code>","text":"<p>Creates a tooltip menu, which can be an empty menu, an item tooltip, or a spell tooltip. This should be called from within a tooltip event callback. These automatically follow the mouse cursor, and are also destroyed automatically when the mouse leaves the originating element. Creating an item tooltip will invoke the uiObjectTooltip event.</p> <pre><code>local result = tes3ui.createTooltipMenu({ item = ..., itemData = ..., spell = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>item</code> (tes3item, string): Optional. The item to create a tooltip for. If not specified, the tooltip will be empty.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data for the item.</li> <li><code>spell</code> (tes3spell): Optional. The spell to create a tooltip for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul> Example: Add an item tooltip to a new element <p>This demonstrates adding an item tooltip to a button using the help event.</p> <pre><code>local button = menu:createButton{text = \"- Item -\"}\nlocal item = tes3.getObject(\"iron_shield\")\n\nbutton:register(\"help\", function(e)\n    local tooltip = tes3ui.createTooltipMenu{item = item}\n    tooltip:createLabel{text = \"Additional custom text\"}\nend)\n</code></pre>"},{"location":"apis/tes3ui/#tes3uientermenumode","title":"<code>tes3ui.enterMenuMode</code>","text":"<p>Requests menu mode be activated on a menu with a given id.</p> <pre><code>local result = tes3ui.enterMenuMode(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string, number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/#tes3uifindhelplayermenu","title":"<code>tes3ui.findHelpLayerMenu</code>","text":"<p>Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions.</p> <pre><code>local result = tes3ui.findHelpLayerMenu(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string, number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3ui/#tes3uifindmenu","title":"<code>tes3ui.findMenu</code>","text":"<p>Locates a top-level menu through its id.</p> <pre><code>local result = tes3ui.findMenu(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string, number): The ID of the menu to locate.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3ui/#tes3uiforceplayerinventoryupdate","title":"<code>tes3ui.forcePlayerInventoryUpdate</code>","text":"<p>Forces the game to update the inventory tile GUI elements. Unlike tes3ui.updateInventoryTiles, this will force-resync the player's inventory to the GUI, rather than updating what is already in the GUI system.</p> <pre><code>tes3ui.forcePlayerInventoryUpdate()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uigetconsolereference","title":"<code>tes3ui.getConsoleReference</code>","text":"<p>Gets the reference currently selected by the console, or nil if nothing is selected.</p> <pre><code>local result = tes3ui.getConsoleReference()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"apis/tes3ui/#tes3uigetinventoryselecttype","title":"<code>tes3ui.getInventorySelectType</code>","text":"<p>Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\".</p> <pre><code>local result = tes3ui.getInventorySelectType()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"apis/tes3ui/#tes3uigetmenuontop","title":"<code>tes3ui.getMenuOnTop</code>","text":"<p>Returns the top-most, active menu.</p> <pre><code>local result = tes3ui.getMenuOnTop()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"apis/tes3ui/#tes3uigetpalette","title":"<code>tes3ui.getPalette</code>","text":"<p>Gets a standard palette color. Returns an array containing the RGB color values, in the range [0.0, 1.0].</p> <p></p> <p>Above: All the palette colors in-game with default settings. Note that some entries are entirely black. In order of appearance, those are backgroundColor, blackColor, and journalTopicColor.</p> <pre><code>local palette = tes3ui.getPalette(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string): The name of the palette color. Maps to values in <code>tes3.palette</code> enumeration.</li> </ul> <p>Returns:</p> <ul> <li><code>palette</code> (number[]): An array containing the RGB color values, in the range [0.0, 1.0].</li> </ul> Example: Here is the code used to construct the menu from the image above. This can be used to preview in-game all the available color palettes. <pre><code>local function onKey()\n    local menu = tes3ui.findHelpLayerMenu(\"testing:Menu\")\n\n    if not menu then\n        menu = tes3ui.createHelpLayerMenu({ id = \"testing:Menu\" })\n        menu:destroyChildren()\n        menu.absolutePosAlignX = 0.1\n        menu.absolutePosAlignY = 0.05\n        menu.autoWidth = false\n        menu.autoHeight = false\n        menu.paddingLeft = 8\n        menu.paddingRight = 8\n        menu.paddingTop = 8\n        menu.paddingBottom = 8\n        menu.alpha = 1\n        menu.visible = true\n        menu.flowDirection = tes3.flowDirection.leftToRight\n        menu.autoWidth = true\n        menu.autoHeight = true\n        menu.childAlignX = 0.5\n    end\n\n    local left = menu:createBlock()\n    left.flowDirection = tes3.flowDirection.topToBottom\n    left.autoHeight = true\n    left.autoWidth = true\n    left.childAlignX = 0.5\n\n    local right = menu:createBlock()\n    right.flowDirection = tes3.flowDirection.topToBottom\n    right.autoWidth = true\n    right.autoHeight = true\n    right.childAlignX = 0.5\n\n    local palettes = {}\n    local i = 1\n    for name, palette in pairs(tes3.palette) do\n        palettes[i] = {\n            name = name,\n            palette = palette\n        }\n        i = i + 1\n    end\n    table.sort(palettes, function(a, b)\n        return a.name &lt; b.name\n    end)\n\n    for i, entry in ipairs(palettes) do\n        local label\n        if i &lt; 27 then\n            label = left:createLabel({ text = entry.name })\n        else\n            label = right:createLabel({ text = entry.name })\n        end\n        label.color = tes3ui.getPalette(entry.palette)\n    end\n    menu:updateLayout()\nend\n\nevent.register(tes3.event.keyDown, onKey, { filter = tes3.scanCode.o })\n</code></pre>"},{"location":"apis/tes3ui/#tes3uigetserviceactor","title":"<code>tes3ui.getServiceActor</code>","text":"<p>Returns the mobile actor currently providing services, or the actor the player is talking to.</p> <pre><code>local result = tes3ui.getServiceActor()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"apis/tes3ui/#tes3uigetviewportscale","title":"<code>tes3ui.getViewportScale</code>","text":"<p>Returns the UI scale, set in MGE.</p> <pre><code>local scale = tes3ui.getViewportScale()\n</code></pre> <p>Returns:</p> <ul> <li><code>scale</code> (number): The UI scale value set from MGE.</li> </ul>"},{"location":"apis/tes3ui/#tes3uigetviewportsize","title":"<code>tes3ui.getViewportSize</code>","text":"<p>Returns both the viewport width and the viewport height. Note that this value is not necessarily the real resolution of the screen. For that value, see the <code>same-named function</code> in the tes3 namespace. To get the scale used, check <code>getViewportScale</code>.</p> <pre><code>local width, height = tes3ui.getViewportSize()\n</code></pre> <p>Returns:</p> <ul> <li><code>width</code> (number): The scaled width of the viewport.</li> <li><code>height</code> (number): The scaled height of the viewport.</li> </ul>"},{"location":"apis/tes3ui/#tes3uileavemenumode","title":"<code>tes3ui.leaveMenuMode</code>","text":"<p>Requests menu mode be deactivated on a menu with a given id.</p> <pre><code>local result = tes3ui.leaveMenuMode()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/#tes3uilog","title":"<code>tes3ui.log</code>","text":"<p>Logs a message to the console. The message accepts formatting and additional parameters matching string.format's usage.</p> <pre><code>tes3ui.log(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional.</li> </ul> Example: Print the type of each of the player's skills to the console <pre><code>local function printNames(e)\n    local skillTypeNames = {\n        [0] = \"Major\",\n        [1] = \"Minor\",\n        [2] = \"Miscellaneous\"\n    }\n\n    for _, skillId in pairs(tes3.skill) do\n        local skillStat = tes3.mobilePlayer:getSkillStatistic(skillId)\n        local name = tes3.getSkillName(skillId)\n        local typeName = skillTypeNames[skillStat.type]\n\n        tes3ui.log(\"%s, type: %s skill\", name, typeName)\n    end\n\n    tes3.messageBox(\"Done! Open the console to see the result.\")\nend\n\nevent.register(tes3.event.keyDown, printNames, { filter = tes3.scanCode.u })\n</code></pre>"},{"location":"apis/tes3ui/#tes3uilogtoconsole","title":"<code>tes3ui.logToConsole</code>","text":"<p>Logs a message to the console. Consider using <code>tes3ui.log</code> instead of this function if you do not need to make use of the <code>isCommand</code> parameter.</p> <pre><code>tes3ui.logToConsole(text, isCommand)\n</code></pre> <p>Parameters:</p> <ul> <li><code>text</code> (string)</li> <li><code>isCommand</code> (boolean): Default: <code>false</code>. Passing <code>true</code> will make the text in the console selectable by using up arrow key. If it is a valid command, then pressing enter will call it.</li> </ul> Example: This example describes how this function behaves with isCommand = true. <pre><code>local function example()\n    -- This will make \"player-&gt;ModStrength 10\" appear in the console coloured brown.\n    -- It can't be selected by using up arrow key.\n    tes3ui.logToConsole(\"player-&gt;ModStrength 10\", false)\n\n    -- This will make \"player-&gt;ModWillpower 10\" appear in the console coloured blue.\n    -- It CAN be selected by using up arrow key, and when the enter is pressed,\n    -- it will call that function.\n    tes3ui.logToConsole(\"player-&gt;ModWillpower 10\", true)\n\n    tes3.messageBox(\"Done! Open the console to see the result.\")\nend\n\nevent.register(tes3.event.keyDown, example, { filter = tes3.scanCode.u })\n</code></pre>"},{"location":"apis/tes3ui/#tes3uilookupid","title":"<code>tes3ui.lookupID</code>","text":"<pre><code>local executed = tes3ui.lookupID(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (tes3uiProperty, integer)</li> </ul> <p>Returns:</p> <ul> <li><code>executed</code> (string)</li> </ul>"},{"location":"apis/tes3ui/#tes3uimenumode","title":"<code>tes3ui.menuMode</code>","text":"<p>Checks if the game is in menu mode.</p> <pre><code>local result = tes3ui.menuMode()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/#tes3uimovemenutofront","title":"<code>tes3ui.moveMenuToFront</code>","text":"<p>Brings a menu forward to be the top-most menu, firing any associated front-related events. The desired element must be a top-level menu.</p> <pre><code>tes3ui.moveMenuToFront(menu)\n</code></pre> <p>Parameters:</p> <ul> <li><code>menu</code> (string, number, tes3uiElement): The menu to bring to the front.</li> </ul>"},{"location":"apis/tes3ui/#tes3uirefreshtooltip","title":"<code>tes3ui.refreshTooltip</code>","text":"<p>Causes the tooltip to be redisplayed. This will not use a configured delay. This will not function if the help menu does not currently exist, or if it is not currently visible.</p> <pre><code>tes3ui.refreshTooltip()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiregisterid","title":"<code>tes3ui.registerID</code>","text":"<p>Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name.</p> <p>The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods.</p> <pre><code>local result = tes3ui.registerID(s)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/tes3ui/#tes3uiregisterproperty","title":"<code>tes3ui.registerProperty</code>","text":"<p>Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property.</p> <p>The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods.</p> <pre><code>local result = tes3ui.registerProperty(s)\n</code></pre> <p>Parameters:</p> <ul> <li><code>s</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"apis/tes3ui/#tes3uisetconsolereference","title":"<code>tes3ui.setConsoleReference</code>","text":"<p>Sets the reference currently selected by the console, or deselects if passed <code>nil</code>.</p> <pre><code>tes3ui.setConsoleReference(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference, nil)</li> </ul>"},{"location":"apis/tes3ui/#tes3uishowbookmenu","title":"<code>tes3ui.showBookMenu</code>","text":"<p>Displays the book menu with arbitrary text. Paging is automatically handled. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <code>&lt;BR&gt;</code> statement to be displayed properly. See <code>bookGetText</code> for an example of properly formatted book text.</p> <pre><code>tes3ui.showBookMenu(text)\n</code></pre> <p>Parameters:</p> <ul> <li><code>text</code> (string)</li> </ul>"},{"location":"apis/tes3ui/#tes3uishowdialoguemessage","title":"<code>tes3ui.showDialogueMessage</code>","text":"<p>This function creates a dialogue message. The message can have three styles. The style <code>2</code> makes a selectable text. That way by calling this function multiple time you can create a selection of responses.</p> <pre><code>tes3ui.showDialogueMessage({ text = ..., style = ..., answerIndex = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>text</code> (string): Default: ``. The text of the shown message.</li> <li><code>style</code> (number): Default: <code>0</code>. This argument controls the text color of the message. Value <code>0</code> makes the message text the same color as the text in the dialogue window. Value <code>1</code> makes the text white, and also print a newline after the message. Value <code>2</code> turns the message into a selectable text inside the dialogue window. Value <code>3</code> looks the same as <code>1</code> but there isn't a newline after each message. Value <code>4</code> is the same as value <code>1</code>. All the other values work as <code>0</code>.</li> <li><code>answerIndex</code> (number): Default: <code>0</code>. This number can be used later to identify which response was selected.</li> </ul> </li> </ul>"},{"location":"apis/tes3ui/#tes3uishowinventoryselectmenu","title":"<code>tes3ui.showInventorySelectMenu</code>","text":"<p>This function opens the inventory select menu which lets the player select items from an inventory. These items can be selected from any actor's inventory and can be filtered with the <code>filter</code> callback. The selected item can be retrieved in the function assigned to <code>callback</code>.</p> <pre><code>tes3ui.showInventorySelectMenu({ reference = ..., title = ..., leaveMenuMode = ..., noResultsText = ..., noResultsCallback = ..., filter = ..., callback = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li><code>reference</code> (tes3reference): Default: <code>tes3player</code>. The reference of a <code>tes3actor</code> whose inventory will be used.</li> <li><code>title</code> (string): The text used for the title of the inventory select menu.</li> <li><code>leaveMenuMode</code> (boolean): Optional. Determines if menu mode should be exited after closing the inventory select menu. By default, it will be in the state it was in before this function was called.</li> <li><code>noResultsText</code> (string): Optional. The text used for the message that gets shown to the player if no items have been found in the inventory. The default text is equivalent to the <code>sInventorySelectNoItems</code> GMST value, unless <code>\"ingredients\"</code> or <code>\"soulgemFilled\"</code> has been assigned to <code>filter</code>, in which case the default text is equivalent to either the <code>sInventorySelectNoIngredients</code> or <code>sInventorySelectNoSoul</code> GMST value respectively.</li> <li><code>noResultsCallback</code> (function): Optional. A function which is called when no items have been found in the inventory, right before the message containing <code>noResultsText</code> is shown.</li> <li> <p><code>filter</code> (function, string): Optional. This determines which items should be shown in the inventory select menu. Accepts either a string or a function.</p> <p>If assigning a string, the available values are present in <code>tes3.inventorySelectFilter</code> namespace. The available filters are:</p> <ul> <li><code>alembic</code>: Only tes3apparatus items of type <code>tes3.apparatusType.alembic</code> will be shown.</li> <li><code>calcinator</code>: Only tes3apparatus items of type <code>tes3.apparatusType.calcinator</code> will be shown.</li> <li><code>enchanted</code>: Only non-enchanted items will be shown. That's because that filter is usually used in the enchanting menu to select items viable for enchanting.</li> <li><code>ingredients</code>: Only tes3ingredient items will be shown.</li> <li><code>mortar</code>: Only tes3apparatus items of type <code>tes3.apparatusType.mortarAndPestle</code> will be shown.</li> <li><code>quickUse</code>: Only items that can be assigned as quick keys will be shown.</li> <li><code>retort</code>: Only tes3apparatus items of type <code>tes3.apparatusType.retort</code> will be shown.</li> <li><code>soulgemFilled</code>: Only filled soulgems will be shown.</li> </ul> <p>If assigning a function it will be called when determining if an item should be added to the inventory select menu. A table <code>filterParams</code> will be passed to this function. Returning <code>true</code> from this function will add the item to the inventory select menu, whereas returning <code>false</code> will prevent it from being added.</p> <ul> <li><code>filterParams</code> (table)<ul> <li><code>item</code> (tes3item): The item that is being filtered.</li> <li><code>itemData</code> (tes3itemData): The item data of the item that is being filtered. Can be <code>nil</code>.</li> </ul> </li> </ul> </li> <li> <p><code>callback</code> (function): Optional. A function which will be called once the inventory select menu has been closed, including when no item has been selected. A table <code>callbackParams</code> will be passed to this function.</p> <ul> <li><code>callbackParams</code> (table)<ul> <li><code>item</code> (tes3item): The item that has been selected. Can be <code>nil</code>.</li> <li><code>itemData</code> (tes3itemData): The item data of the item that has been selected. Can be <code>nil</code>.</li> <li><code>count</code> (number): The number of items that have been selected. Only valid if <code>item</code> is not <code>nil</code>.</li> <li><code>inventory</code> (tes3inventory): The inventory containing the items.</li> <li><code>actor</code> (tes3actor): The actor containing the inventory.</li> </ul> </li> </ul> </li> </ul> </li> </ul> Example: Bribe an NPC with items from your inventory <p>This code allows the player to give an item to the actor the player is currently looking at.</p> <pre><code>-- This is a working example. You are encouraged to create a new file\n-- main.lua, paste this code and see the results in-game!\n-- Use `u` key to bribe an actor you are looking at with items from your inventory.\n\n\nlocal function bribe()\n    local actorReference = tes3.getPlayerTarget()\n    -- This function returns nil value if the player isn't aiming at a reference,\n    -- so we skip that case\n    if not actorReference then return end\n\n    tes3ui.showInventorySelectMenu({\n        reference = tes3.player,\n        -- .. is Lua operator of concatenation. It joins 2 strings together.\n        title = \"Bribe \" .. actorReference.object.name,\n        callback = function(e)\n            if e.item then\n                -- If e.item exist, that means that the player picked an\n                -- item in the  menu. It up to us to do something with it.\n                tes3.transferItem({\n                    from = tes3.player,\n                    to = actorReference,\n                    item = e.item,\n                    itemData = e.itemData,\n                    count = e.count,\n                })\n                -- Here we calculate the total gold value of the transfered item(s), since that\n                -- can be a stack of items. e.count holds the amount of the items selected.\n                local itemWorth = e.item.value * e.count\n\n                -- At last! Now the actual persuasion part. We use `modifier` argument.\n                -- The higher the value we pass there the higher the disposition change.\n                tes3.persuade({\n                    actor = actorReference,\n                    modifier = math.log10(itemWorth)\n                })\n            end\n        end,\n        -- At first it's counter intuitive that this filter selects all the non-enchanted items\n        -- This illusion disappears soon as we relize that the game uses this filter in the\n        -- enchanting menu to select items viable for enchanting.\n        filter = tes3.inventorySelectFilter.enchanted\n    })\n\nend\n\n-- We registered our bribe function on keyDown event, and filtered it for `u` key,\n-- so our bribe function is only called once `u` key is pressed\nevent.register(tes3.event.keyDown, bribe, { filter = tes3.scanCode.u })\n</code></pre> Example: Filter functions <p>A few possible filtering functions.</p> <pre><code>-- This example has a few implementations of filter functions that\n-- can be passed to `filter` argument of tes3.showInventorySelectMenu().\n\n-- This function will filter only weapon items.\nlocal function weaponFilter(e)\n    if e.item.objectType == tes3.objectType.weapon then\n        -- The filter function needs to return `true`\n        -- for a certain item to appear in the menu.\n        return true\n    else\n        return false\n    end\nend\n\n-- This is a dictinary of items that can be damaged (have a condition)\nlocal damageableItems = {\n    [tes3.objectType.weapon] = true,\n    [tes3.objectType.armor] = true,\n}\n-- This function will filter only items that aren't at full condition.\nlocal function damagedItemsFilter(e)\n    -- The first check is whether the item is in our\n    -- dictionary of items with condition\n    if damageableItems[e.item.objectType] and\n    -- Only damaged items have this field. If it does\n    -- not exist the item is in perfect condition.\n    e.itemData and\n    (e.itemData.condition &lt; e.item.maxCondition) then\n        return true\n    else\n        return false\n    end\nend\n\nlocal myFilterValue = 256\n-- This function will filter only items that have a value less than `myFilterValue`\nlocal function valueFilter(e)\n    if (e.item.value &lt; myFilterValue) then\n        return true\n    else\n        return false\n    end\nend\n</code></pre>"},{"location":"apis/tes3ui/#tes3uishowjournal","title":"<code>tes3ui.showJournal</code>","text":"<p>Opens the journal menu. This can return false if the player hasn't gone through character generation, or if the journal was already open.</p> <pre><code>local wasShown = tes3ui.showJournal()\n</code></pre> <p>Returns:</p> <ul> <li><code>wasShown</code> (boolean)</li> </ul>"},{"location":"apis/tes3ui/#tes3uishowmessagemenu","title":"<code>tes3ui.showMessageMenu</code>","text":"<p>Displays a message box. This may be a simple toast-style message, or a box with choice buttons.</p> <pre><code>tes3ui.showMessageMenu({ id = ..., buttons = ..., callbackParams = ..., cancels = ..., cancelText = ..., cancelCallback = ..., header = ..., message = ..., customBlock = ..., page = ..., pageSize = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Default: <code>MenuMessage</code>. The menu ID of the message menu.</li> <li><code>buttons</code> (tes3ui.showMessageMenu.params.button[]): Required The list of buttons.</li> <li><code>callbackParams</code> (table): Optional. The table of parameters to pass to the callback functions.</li> <li><code>cancels</code> (boolean): Default: <code>false</code>. When set to true, a cancel button is automatically added to the buttom of the list, even when paginated.</li> <li><code>cancelText</code> (string): Default: <code>tes3.findGMST(tes3.gmst.sCancel).value</code>. The text on the cancel button.</li> <li><code>cancelCallback</code> (function): Optional. The function to call when the user clicks the cancel button.</li> <li><code>header</code> (string, fun(callbackParams: table): string): Optional. The optional header displayed above the message. Can also be a function that returns a string.</li> <li><code>message</code> (string, fun(callbackParams: table): string): Required The message at the top of the messagebox. Can also be a function that returns a string.</li> <li><code>customBlock</code> (fun(parent: tes3uiElement)): Optional. A custom element to be displayed below the header.</li> <li><code>page</code> (integer): Default: <code>1</code>.</li> <li><code>pageSize</code> (integer): Default: <code>30</code>.</li> </ul> </li> </ul>"},{"location":"apis/tes3ui/#tes3uishownotifymenu","title":"<code>tes3ui.showNotifyMenu</code>","text":"<p>Creates a new notify menu with a formatted string. A notify menu is a toast-style display that shows at the bottom of the screen. It will expire after an amount of time, determined by the length of the message and the <code>fMessageTimePerChar</code> GMST.</p> <pre><code>local menu = tes3ui.showNotifyMenu(string, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>string</code> (string): The message to display. If it supports formatting, additional arguments are used.</li> <li><code>formatValues</code> (variadic): Optional values to feed to formatting found in the first parameter.</li> </ul> <p>Returns:</p> <ul> <li><code>menu</code> (tes3uiElement): The notify menu created.</li> </ul>"},{"location":"apis/tes3ui/#tes3uishowscrollmenu","title":"<code>tes3ui.showScrollMenu</code>","text":"<p>Displays the scroll menu with arbitrary text. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <code>&lt;BR&gt;</code> statement to be displayed properly. See <code>bookGetText</code> for an example of properly formatted scroll text.</p> <pre><code>tes3ui.showScrollMenu(text)\n</code></pre> <p>Parameters:</p> <ul> <li><code>text</code> (string)</li> </ul>"},{"location":"apis/tes3ui/#tes3uistealhelpmenu","title":"<code>tes3ui.stealHelpMenu</code>","text":"<pre><code>tes3ui.stealHelpMenu()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uisuppresstooltip","title":"<code>tes3ui.suppressTooltip</code>","text":"<p>Controls hiding of world object tooltips.</p> <pre><code>tes3ui.suppressTooltip(suppress)\n</code></pre> <p>Parameters:</p> <ul> <li><code>suppress</code> (boolean): Turns on suppression if true, immediately hiding any active tooltip and further world object tooltips. Turns off suppression if false.</li> </ul>"},{"location":"apis/tes3ui/#tes3uiupdatebartermenutiles","title":"<code>tes3ui.updateBarterMenuTiles</code>","text":"<p>Forces the game to update the barter menu's tile GUI elements.</p> <pre><code>tes3ui.updateBarterMenuTiles()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdatecontentsmenutiles","title":"<code>tes3ui.updateContentsMenuTiles</code>","text":"<p>Forces the game to update the contents menu's tile GUI elements.</p> <pre><code>tes3ui.updateContentsMenuTiles()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdatedialogdisposition","title":"<code>tes3ui.updateDialogDisposition</code>","text":"<p>Forces the game to update the dialog disposition GUI element.</p> <pre><code>tes3ui.updateDialogDisposition()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdateenchantingmenu","title":"<code>tes3ui.updateEnchantingMenu</code>","text":"<p>Forces the game to update the enchanting menu GUI.</p> <pre><code>tes3ui.updateEnchantingMenu()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdateinventorycharacterimage","title":"<code>tes3ui.updateInventoryCharacterImage</code>","text":"<p>Tells the game to update the character image in the player's inventory. It will update immediately if the inventory is open, or the next time the inventory is opened otherwise.</p> <pre><code>tes3ui.updateInventoryCharacterImage()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdateinventoryselecttiles","title":"<code>tes3ui.updateInventorySelectTiles</code>","text":"<p>Forces the game to update the inventory selection GUI elements.</p> <pre><code>tes3ui.updateInventorySelectTiles()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdateinventorytiles","title":"<code>tes3ui.updateInventoryTiles</code>","text":"<p>Forces the game to update the inventory tile GUI elements.</p> <pre><code>tes3ui.updateInventoryTiles()\n</code></pre>"},{"location":"apis/tes3ui/#tes3uiupdatespellmakingmenu","title":"<code>tes3ui.updateSpellmakingMenu</code>","text":"<p>Forces the game to update the spellmaking menu GUI.</p> <pre><code>tes3ui.updateSpellmakingMenu()\n</code></pre>"},{"location":"apis/timer.frame/","title":"Timer.frame","text":""},{"location":"apis/timer.frame/#timerframe","title":"timer.frame","text":"<p>Convenience access to frame timer functions. This is the same as passing <code>type = timer.real</code> to any of the functions from timer API.</p>"},{"location":"apis/timer.frame/#functions","title":"Functions","text":""},{"location":"apis/timer.frame/#timerframedelayoneframe","title":"<code>timer.frame.delayOneFrame</code>","text":"<p>Creates a timer that will finish the next frame.</p> <pre><code>local timer = timer.frame.delayOneFrame(callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>callback</code> (function): The callback function that will execute when the timer expires.</li> </ul> <p>Returns:</p> <ul> <li><code>timer</code> (mwseTimer)</li> </ul>"},{"location":"apis/timer/","title":"Timer","text":""},{"location":"apis/timer/#timer","title":"timer","text":"<p>The timer library provides helper functions for creating delayed executors.</p>"},{"location":"apis/timer/#properties","title":"Properties","text":""},{"location":"apis/timer/#timeractive","title":"<code>timer.active</code>","text":"<p>Constant to represent a timer that is actively running.</p>"},{"location":"apis/timer/#timerexpired","title":"<code>timer.expired</code>","text":"<p>Constant to represent a timer that has completed.</p>"},{"location":"apis/timer/#timergame","title":"<code>timer.game</code>","text":"<p>Constant to represent timers that run based on in-world time. Their clock is measured in game-scale hours.</p>"},{"location":"apis/timer/#timerpaused","title":"<code>timer.paused</code>","text":"<p>Constant to represent a timer that is paused.</p>"},{"location":"apis/timer/#timerreal","title":"<code>timer.real</code>","text":"<p>Constant to represent timers that run in real-time. Their time is measured in seconds.</p>"},{"location":"apis/timer/#timersimulate","title":"<code>timer.simulate</code>","text":"<p>Constant to represent timers that run when the game isn't paused - the game's menus are closed. It matches the <code>simulate</code> event's timing. If the game is simulating, simulate events and simulate timers progress. Duration is measured in seconds.</p>"},{"location":"apis/timer/#functions","title":"Functions","text":""},{"location":"apis/timer/#timerdelayoneframe","title":"<code>timer.delayOneFrame</code>","text":"<p>Creates a timer that will finish the next frame. It defaults to the next simulation frame.</p> <pre><code>local timer = timer.delayOneFrame(callback, type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>callback</code> (function): The callback function that will execute when the timer expires.</li> <li><code>type</code> (integer): Default: <code>timer.simulate</code>. Type of the timer. This value can be <code>timer.simulate</code>, <code>timer.game</code> or <code>timer.real</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>timer</code> (mwseTimer)</li> </ul>"},{"location":"apis/timer/#timerregister","title":"<code>timer.register</code>","text":"<p>Registers a named timer with a callback to persist between game sessions. Bear in mind that nothing in MWSE is sandboxed, so all the registered timers are in the global namespace. Consider prefixing your timer with mod name or something else to avoid name collisions. For instance, <code>iceCreamMod:myTimer</code>.</p> <pre><code>timer.register(name, fn)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string): Name of the registered timer.</li> <li><code>fn</code> (function): A callback function for the timer.</li> </ul> Example: Persistent timers tutorial with <code>.data</code> usage <p>The timer registered in the example is registered and persistent. That renders starting the timer on every loaded event unnecessary. Its state is saved, and it continues where it stopped after loading a save.</p> <pre><code>---@class timerCallbackData\n---@field timer mwseTimer Access to our timer\n\n---@param e timerCallbackData\nlocal function showMessage(e)\n    local timer = e.timer\n    local data = timer.data\n    local currentTimestamp = tes3.getSimulationTimestamp()\n\n    -- We are sure that the timer.data ~= nil since we\n    -- created that table in timer.start function.\n    -- So, lets disable the warnings for a bit.\n    ---@diagnostic disable:need-check-nil\n    tes3.messageBox(data.message:format(\n        data.startTimestamp,\n        data.lastIterationTimestamp,\n        currentTimestamp\n    ))\n    ---@diagnostic enable:need-check-nil\n\n    -- Save this to the data table on the timer\n    data.lastIterationTimestamp = currentTimestamp\nend\n\ntimer.register(\"testExample:OneDayTimer\", showMessage)\n\ntimer.start({\n    type = timer.game,\n    persist = true,\n    iterations = -1,\n    duration = 24,\n    -- Notice that the callback isn't a function, but\n    -- a string passed to the timer.register function\n    callback = \"testExample:OneDayTimer\",\n    data = {\n        startTimestamp = tes3.getSimulationTimestamp(),\n        lastIterationTimestamp = tes3.getSimulationTimestamp(),\n        message = [[One day later...\ntimer's starting timestamp %s\nthe timestamp of last iteration %s\ncurrent timestamp %s\n]]\n    }\n})\n</code></pre>"},{"location":"apis/timer/#timerstart","title":"<code>timer.start</code>","text":"<p>Creates a timer.</p> <pre><code>local timer = timer.start({ type = ..., duration = ..., callback = ..., iterations = ..., persist = ..., data = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>type</code> (integer): Default: <code>timer.simulate</code>. Type of the timer. This value can be <code>timer.simulate</code>, <code>timer.game</code> or <code>timer.real</code>.</li> <li><code>duration</code> (number): Duration of the timer. The method of time passing depends on the timer type.</li> <li><code>callback</code> (function, string): The callback function that will execute when the timer expires. If starting a registered timer, this needs to be the <code>name</code> string passed to <code>timer.register</code>.</li> <li><code>iterations</code> (integer): Default: <code>1</code>. The number of iterations to run. Use <code>-1</code> for infinite looping.</li> <li><code>persist</code> (boolean): Default: <code>true</code>. Registering a timer with persist flag set to <code>true</code> will serialize the callback string in the save to persist between sessions. Only a registered timer will persist between sessions. See <code>timer.register()</code>.</li> <li><code>data</code> (table, nil): Default: <code>nil</code>. Data to be attached to the timer. If this is a persistent timer, the data must be json-serializable, matching the same limitations as data stored on references.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>timer</code> (mwseTimer)</li> </ul> Example: Show a Countdown Message <p>In this example, whenever the player activates an item they will be shown a 10 second countdown. Because it is a simulation timer, it will not tick down while the menu is open, nor is it sensitive to the game timescale/clock.</p> <pre><code>local timeLeft = 0;\n\nlocal function onTimerExpired() \n    timeLeft = timeLeft - 1\n    tes3.messageBox(\"%d seconds left\", timeLeft)\nend\n\nlocal function onActivate(eventData)\n    if (eventData.activator == tes3.player) then\n        timeLeft = 10\n        timer.start{ duration = 1, iterations = 10, type = timer.simulate, callback = onTimerExpired }\n    end\nend\nevent.register(tes3.event.activate, onActivate)\n</code></pre>"},{"location":"apis/toml/","title":"Toml","text":""},{"location":"apis/toml/#toml","title":"toml","text":"<p>Provides support for interacting with toml data through an extended toml.lua module.</p>"},{"location":"apis/toml/#functions","title":"Functions","text":""},{"location":"apis/toml/#tomldecode","title":"<code>toml.decode</code>","text":"<p>Decode string representing toml into a table.</p> <pre><code>local result = toml.decode(input)\n</code></pre> <p>Parameters:</p> <ul> <li><code>input</code> (string): The string to be decoded into a table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table): The decoded table.</li> </ul>"},{"location":"apis/toml/#tomlencode","title":"<code>toml.encode</code>","text":"<p>Encodes a table into a toml string.</p> <pre><code>local result = toml.encode(input)\n</code></pre> <p>Parameters:</p> <ul> <li><code>input</code> (table): The table to be encoded into toml.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string): The encoded toml.</li> </ul>"},{"location":"apis/toml/#tomlloadfile","title":"<code>toml.loadFile</code>","text":"<p>Loads a toml file from <code>path</code>, using <code>toml.decode</code>. Unlike the related <code>json.loadfile</code> function, this is relative to the current working directory, and not relative to Data Files\\MWSE. A file extension should be part of the <code>path</code> string.</p> <pre><code>local data = toml.loadFile(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The file to write to, relative to the current working directory (typically the Morrowind installation folder).</li> </ul> <p>Returns:</p> <ul> <li><code>data</code> (table?): The decoded data, or <code>nil</code> if the file could not be found.</li> </ul>"},{"location":"apis/toml/#tomlsavefile","title":"<code>toml.saveFile</code>","text":"<p>Saves a serializable table to <code>path</code>, using <code>toml.encode</code>. Unlike the related <code>json.savefile</code> function, this is relative to the current working directory, and not relative to Data Files\\MWSE. A file extension should be part of the <code>path</code> string.</p> <pre><code>toml.saveFile(path, data)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The file to write to, relative to the current working directory (typically the Morrowind installation folder).</li> <li><code>data</code> (table): The data to encode and write.</li> </ul>"},{"location":"events/absorbedMagic/","title":"absorbedMagic","text":""},{"location":"events/absorbedMagic/#absorbedmagic","title":"absorbedMagic","text":"<p>This event is triggered after magic absorption absorbs and cancels a magic effect, and just before magic absorption gives magicka to the target. It can control the amount of magicka restored.</p> <p>This event occurs once per effect restored, so a multi-effect spell may trigger this multiple times. The default amount restored is equal to the casting cost of the entire spell, which is the vanilla behaviour.</p> <pre><code>--- @param e absorbedMagicEventData\nlocal function absorbedMagicCallback(e)\nend\nevent.register(tes3.event.absorbedMagic, absorbedMagicCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>target</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/absorbedMagic/#event-data","title":"Event Data","text":"<ul> <li><code>absorb</code> (number): The amount of magicka to restore to the actor.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that absorbed the spell.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>target</code> (tes3reference): Read-only. The actor that absorbed the spell.</li> </ul>"},{"location":"events/activate/","title":"Activate","text":""},{"location":"events/activate/#activate","title":"activate","text":"<p>This event is invoked whenever something is activated, typically by the player. Activation is usually done with the associated activate/use key, but may also be forced by scripts.</p> <p>Non-player actors may also activate objects, such as when opening doors, or via MWSE functions like <code>tes3.activate()</code>.</p> <p>Some examples of when the activate event fires includes:</p> <ul> <li>When a door is used.</li> <li>When an item is picked up.</li> <li>When someone attempts to open a container.</li> </ul> <pre><code>--- @param e activateEventData\nlocal function activateCallback(e)\nend\nevent.register(tes3.event.activate, activateCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>target</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/activate/#event-data","title":"Event Data","text":"<ul> <li><code>activator</code> (tes3reference): Read-only. The actor attempting to trigger the event.</li> <li><code>target</code> (tes3reference): Read-only. The reference that is being activated.</li> </ul>"},{"location":"events/activate/#examples","title":"Examples","text":"<p>Example: Prevent the player from activating NPCs</p> <pre><code>local function myOnActivateCallback(e)\n    -- We only care if the PC is activating something.\n    if (e.activator ~= tes3.player) then\n        return\n    end\n\n    -- If the player targets an NPC, block the activation.\n    if (e.target.object.objectType == tes3.objectType.npc) then\n        return false\n    end\nend\nevent.register(tes3.event.activate, myOnActivateCallback)\n</code></pre> <p>Example: Show a message for what the player is activating</p> <pre><code>-- Show the id when the player activates an object.\nlocal function myOnActivateCallback(e)\n    if (e.activator == tes3.player) then\n        tes3.messageBox({ message = \"Activated \" .. e.target.object.id })\n    end\nend\nevent.register(tes3.event.activate, myOnActivateCallback)\n</code></pre>"},{"location":"events/activationTargetChanged/","title":"activationTargetChanged","text":""},{"location":"events/activationTargetChanged/#activationtargetchanged","title":"activationTargetChanged","text":"<p>This event is raised when the potential activation target for the player changes.</p> <pre><code>--- @param e activationTargetChangedEventData\nlocal function activationTargetChangedCallback(e)\nend\nevent.register(tes3.event.activationTargetChanged, activationTargetChangedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>current</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/activationTargetChanged/#event-data","title":"Event Data","text":"<ul> <li><code>current</code> (tes3reference): Read-only. The activation target for the player, should they press the activation key. This can be nil when the player is not looking at an activateable object.</li> <li><code>previous</code> (tes3reference): Read-only. The previous activation target. If the player picked up or activated the previous target, this value may become nil, as the reference no longer exists after being taken.</li> </ul>"},{"location":"events/activeMagicEffectIconsUpdated/","title":"activeMagicEffectIconsUpdated","text":""},{"location":"events/activeMagicEffectIconsUpdated/#activemagiceffecticonsupdated","title":"activeMagicEffectIconsUpdated","text":"<p>This event is called when the active magic effect icons in the magic menu and the HUD have been updated. Each update fully destroys the previously created active magic effect icons and recreates them.</p> <pre><code>--- @param e activeMagicEffectIconsUpdatedEventData\nlocal function activeMagicEffectIconsUpdatedCallback(e)\nend\nevent.register(tes3.event.activeMagicEffectIconsUpdated, activeMagicEffectIconsUpdatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/addSound/","title":"addSound","text":""},{"location":"events/addSound/#addsound","title":"addSound","text":"<p>This event is triggered when a sound is played by the game or when <code>tes3.playSound()</code> is called.</p> <pre><code>--- @param e addSoundEventData\nlocal function addSoundCallback(e)\nend\nevent.register(tes3.event.addSound, addSoundCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>sound</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/addSound/#event-data","title":"Event Data","text":"<ul> <li><code>flags</code> (number): Read-only. A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops.</li> <li><code>isVoiceover</code> (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder.</li> <li><code>pitch</code> (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25].</li> <li><code>reference</code> (tes3reference): The reference which is emiting the sound.</li> <li><code>sound</code> (tes3sound): The sound going to be played.</li> <li><code>volume</code> (number): The volume of the sound. In range [1, 250].</li> </ul>"},{"location":"events/addTempSound/","title":"addTempSound","text":""},{"location":"events/addTempSound/#addtempsound","title":"addTempSound","text":"<p>This event is triggered when the game is about to play a sound from a sound generator.</p> <pre><code>--- @param e addTempSoundEventData\nlocal function addTempSoundCallback(e)\nend\nevent.register(tes3.event.addTempSound, addTempSoundCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>sound</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/addTempSound/#event-data","title":"Event Data","text":"<ul> <li><code>flags</code> (number): Read-only. A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops.</li> <li><code>isVoiceover</code> (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder.</li> <li><code>path</code> (string): The path to the sound to play, relative to Data Files\\Sounds</li> <li><code>pitch</code> (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25].</li> <li><code>reference</code> (tes3reference): The reference which is emiting the sound.</li> <li><code>sound</code> (tes3sound): The sound object about to be played.</li> <li><code>volume</code> (number): The volume of the sound. In range [1, 250].</li> </ul>"},{"location":"events/attack/","title":"Attack","text":""},{"location":"events/attack/#attack","title":"attack","text":"<p>This event is invoked whenever an actor commits to an attack with their fists or a weapon, or a creature makes any attack. It occurs at the release time of the attack, such as the downstroke of a melee weapon or when an arrow is shot. For the player, it is when the attack button is released. A target is not required to be present for this event. For the actual moment the attack hits, use the <code>attackHit</code> event.</p> <p>This event has specific combat mechanics occuring at this point. This is the time when the target has a chance to use its block skill, when on-strike enchantments may be applied, and when elemental shields do reflected damage. There is still a small period of time while the attack animation completes before the hit, so it is still possible for a target to move out of range (normally only seen with short weapons).</p> <p>Lockpicks and probes do not invoke this event.</p> <pre><code>--- @param e attackEventData\nlocal function attackCallback(e)\nend\nevent.register(tes3.event.attack, attackCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/attack/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor making the attack.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the reference that is attacking.</li> <li><code>targetMobile</code> (tes3mobileActor): Read-only. The mobile actor being attacked. May be nil, e.g. if nothing was targeted.</li> <li><code>targetReference</code> (tes3reference): Read-only. A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted.</li> </ul>"},{"location":"events/attack/#examples","title":"Examples","text":"<p>Example: Show a Message when the Player Attacks</p> <pre><code>local function myOnAttackCallback(e)\n    -- Someone other than the player is attacking.\n    if (e.reference ~= tes3.player) then\n        return\n    end\n\n    -- We hit someone!\n    if (e.targetReference ~= nil) then\n        tes3.messageBox(\"You hit %s!\", e.targetReference.object.name or e.targetReference.object.id)\n    end\nend\nevent.register(tes3.event.attack, myOnAttackCallback)\n</code></pre>"},{"location":"events/attackHit/","title":"attackHit","text":""},{"location":"events/attackHit/#attackhit","title":"attackHit","text":"<p>This event is invoked whenever an actor makes an attack with their fists or a weapon, or a creature makes any attack. It occurs at the moment a melee attack would hit, at the end of a melee weapon strike. For projectile attacks, it is when an arrow is about to detach from its bow. A target is not required to be present for this event.</p> <p>Lockpicks and probes do not invoke this event.</p> <pre><code>--- @param e attackHitEventData\nlocal function attackHitCallback(e)\nend\nevent.register(tes3.event.attackHit, attackHitCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/attackHit/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor making the attack.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the reference that is attacking.</li> <li><code>targetMobile</code> (tes3mobileActor): Read-only. The mobile actor being attacked. May be nil, e.g. if nothing was targeted.</li> <li><code>targetReference</code> (tes3reference): Read-only. A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted.</li> </ul>"},{"location":"events/attackHit/#examples","title":"Examples","text":"<p>Example: Convert Hits to Misses</p> <pre><code>local function onAttackHitCallback(e)\n    -- Set damage to zero to convert the physical hit to a miss.\n    tes3.messageBox(\"Somehow it missed!\")\n    e.mobile.actionData.physicalDamage = 0\nend\nevent.register(tes3.event.attackHit, onAttackHitCallback)\n</code></pre>"},{"location":"events/attackStart/","title":"attackStart","text":""},{"location":"events/attackStart/#attackstart","title":"attackStart","text":"<p>This event is invoked whenever an actor starts an attack with their fists or a weapon, or a creature makes any attack. More precisely, it is when the actor raises a melee weapon or draws an arrow. There is not necessarily a target in range, or any target at all for the player.</p> <p>Lockpicks and probes do not invoke this event.</p> <pre><code>--- @param e attackStartEventData\nlocal function attackStartCallback(e)\nend\nevent.register(tes3.event.attackStart, attackStartCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/attackStart/#event-data","title":"Event Data","text":"<ul> <li><code>attackSpeed</code> (number): The speed multiplier of the attack animation, normally equal to the weapon speed (1.0 for no equipped weapon). May be changed to change the current attack's speed. See also <code>tes3actorAnimationController</code> to change animation speed during the attack.</li> <li><code>attackType</code> (number): A number from the <code>tes3.physicalAttackType</code> enumeration identifying the physical attack type. Can be <code>tes3.physicalAttackType.slash</code>, <code>.chop</code>, <code>.thrust</code>, <code>.projectile</code>, <code>.creature1</code>, <code>.creature2</code>, or <code>.creature3</code>. May be changed to change the attack's type if the original attack was slash, chop, or thrust.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor making the attack.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the reference that is attacking.</li> </ul>"},{"location":"events/barterOffer/","title":"barterOffer","text":""},{"location":"events/barterOffer/#barteroffer","title":"barterOffer","text":"<p>This event is called when a potentially successful barter offer is made by the player. Potentially successful means both parties have the required funds to make the trade.</p> <pre><code>--- @param e barterOfferEventData\nlocal function barterOfferCallback(e)\nend\nevent.register(tes3.event.barterOffer, barterOfferCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/barterOffer/#event-data","title":"Event Data","text":"<ul> <li><code>buying</code> (tes3inventoryTile[]): Read-only. The objects being bought. These items will be transfered to player's inventory on a successful bartering event.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the merchant the player is interacting with.</li> <li><code>offer</code> (number): Read-only. Offered gold amount.</li> <li><code>selling</code> (tes3inventoryTile[]): Read-only. The objects being sold. These items will be transfered to bartender's inventory on a successful bartering event.</li> <li><code>success</code> (boolean): Whether the trade was accepted or not.</li> <li><code>value</code> (number): Read-only. Total value in gold of items being traded. Negative means the player owes coin, positive means the player gets coin.</li> </ul>"},{"location":"events/bodyPartAssigned/","title":"bodyPartAssigned","text":""},{"location":"events/bodyPartAssigned/#bodypartassigned","title":"bodyPartAssigned","text":"<p>Allows reading and overwriting body part assignments.</p> <pre><code>--- @param e bodyPartAssignedEventData\nlocal function bodyPartAssignedCallback(e)\nend\nevent.register(tes3.event.bodyPartAssigned, bodyPartAssignedCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/bodyPartAssigned/#event-data","title":"Event Data","text":"<ul> <li><code>bodyPart</code> (tes3bodyPart): The body part object assigned.</li> <li><code>index</code> (number): Read-only. The body slot index of the newly assigned body part. Maps to values in <code>tes3.activeBodyPart</code> constants.</li> <li><code>isFirstPerson</code> (boolean): Read-only. A flag that controls whether the newly assigned body part is used while the camera is in the first person.</li> <li><code>manager</code> (tes3bodyPartManager): Read-only. The access to the body part manager that is associated with the reference that had a body part assigned.</li> <li><code>object</code> (tes3physicalObject): Read-only. Access to the physical object for the assigned body part.</li> <li><code>reference</code> (tes3reference): Read-only. The reference for the actor whose body part was assigned.</li> </ul>"},{"location":"events/bodyPartAssigned/#examples","title":"Examples","text":"<p>Example: Bald is beautiful</p> <p>This example shows how to disable hair body parts from appearing on NPCs or the Player.</p> <pre><code>---@param e bodyPartAssignedEventData\nlocal function baldIsBeautiful(e)\n    if (e.index == tes3.activeBodyPart.hair) then\n        -- Returning false from this event will\n        -- block the assignment of the body part.\n        return false\n    end\nend\nevent.register(tes3.event.bodyPartAssigned, baldIsBeautiful)\n</code></pre>"},{"location":"events/bodyPartsUpdated/","title":"bodyPartsUpdated","text":""},{"location":"events/bodyPartsUpdated/#bodypartsupdated","title":"bodyPartsUpdated","text":"<p>This event is triggered when an actor's body parts have finished updating. This typically triggers when an actor is first rendered, or when their equipment changes.</p> <pre><code>--- @param e bodyPartsUpdatedEventData\nlocal function bodyPartsUpdatedCallback(e)\nend\nevent.register(tes3.event.bodyPartsUpdated, bodyPartsUpdatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/bodyPartsUpdated/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose body parts were updated.</li> <li><code>reference</code> (tes3reference): Read-only. The reference for the actor whose body parts were updated.</li> </ul>"},{"location":"events/bodyPartsUpdated/#examples","title":"Examples","text":"<p>Example: In this example all the scene graph nodes that make up left arm are culled. That will effectively make all the left arms in the game disappear.</p> <pre><code>local leftArmParts = {\n    tes3.activeBodyPart.leftForearm,\n    tes3.activeBodyPart.leftHand,\n    tes3.activeBodyPart.leftUpperArm,\n    tes3.activeBodyPart.leftWrist,\n    tes3.activeBodyPart.shield\n}\n\n---@param e bodyPartsUpdatedEventData\nlocal function ripLefties(e)\n    local bpm = e.reference.bodyPartManager\n    if (not bpm) then return end\n\n    -- Hide all left arm nodes.\n    for _, part in ipairs(leftArmParts) do\n\n        -- We want to hide the body parts in all the three\n        -- layers that make up the character's body.\n        for _, layer in pairs(tes3.activeBodyPartLayer) do\n            local activePart = bpm:getActiveBodyPart(layer, part)\n            if (activePart and activePart.node) then\n                activePart.node.appCulled = true\n            end\n        end\n    end\nend\n\nevent.register(tes3.event.bodyPartsUpdated, ripLefties)\n</code></pre>"},{"location":"events/bookGetText/","title":"bookGetText","text":""},{"location":"events/bookGetText/#bookgettext","title":"bookGetText","text":"<p>This event is raised when a book's text is about to be displayed. By providing your own text, you can overwrite what is going to be displayed.</p> <pre><code>--- @param e bookGetTextEventData\nlocal function bookGetTextCallback(e)\nend\nevent.register(tes3.event.bookGetText, bookGetTextCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>book</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/bookGetText/#event-data","title":"Event Data","text":"<ul> <li><code>book</code> (tes3book): Read-only. The book whose text is being retrieved.</li> <li><code>loadOriginalText</code> (fun(self: bookGetTextEventData): string): Loads the original text for the book from the game files, bypassing this event.</li> <li><code>text</code> (string): If set, the book's text will be overwritten with this value. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <code>&lt;BR&gt;</code> statement to be displayed properly. For more details, please read the page on book conventions.</li> </ul>"},{"location":"events/bookGetText/#examples","title":"Examples","text":"<p>Example: Change the text of a book</p> <p>This will make every book read Sweetroll.</p> <pre><code>local newText = [[&lt;div align=\"left\"&gt;&lt;font color=\"002200\" size=\"3\" face=\"Magic Cards\"&gt;&lt;br&gt;\nSweetroll\n&lt;br&gt;\n]]\n\nlocal function example(e)\n    e.text = newText\nend\n\nevent.register(tes3.event.bookGetText, example)\n</code></pre>"},{"location":"events/buttonPressed/","title":"buttonPressed","text":""},{"location":"events/buttonPressed/#buttonpressed","title":"buttonPressed","text":"<p>The buttonPressed event is unique in that it is invoked only when using <code>tes3.messageBox</code> to present buttons to the player.</p> <pre><code>--- @param e buttonPressedEventData\nlocal function buttonPressedCallback(e)\nend\nevent.register(tes3.event.buttonPressed, buttonPressedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/buttonPressed/#event-data","title":"Event Data","text":"<ul> <li><code>button</code> (number): Read-only. The button index, 0-based, that was pressed.</li> </ul>"},{"location":"events/calcArmorPieceHit/","title":"calcArmorPieceHit","text":""},{"location":"events/calcArmorPieceHit/#calcarmorpiecehit","title":"calcArmorPieceHit","text":"<p>This event is raised just after determining which armor piece, if any, was hit with an attack. The slots can be modified, to draw focus onto specific armor slots.</p> <p>The following table is used by default to determine what armor piece is hit:</p> Roll (1-100) Slot Fallback 1-29 Cuirass None 30-34 Shield Cuirass 35-39 Shield Left Pauldron 40-49 Left Pauldron None 50-59 Right Pauldron None 60-69 Greaves None 70-79 Helmet None 80-89 Boots None 90-94 Right Gauntlet Right Bracer 95-100 Left Gauntlet Left Bracer <pre><code>--- @param e calcArmorPieceHitEventData\nlocal function calcArmorPieceHitCallback(e)\nend\nevent.register(tes3.event.calcArmorPieceHit, calcArmorPieceHitCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference.baseObject</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcArmorPieceHit/#event-data","title":"Event Data","text":"<ul> <li><code>attacker</code> (tes3reference): Read-only. A shortcut to the attacker mobile's reference.</li> <li><code>attackerMobile</code> (tes3mobileActor): Read-only. The mobile who is doing the hitting.</li> <li><code>fallback</code> (number): A secondary slot to check for equipment on, if no armor is found using the primary slot.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile who is being hit.</li> <li><code>projectile</code> (tes3mobileProjectile, nil): Read-only. The projectile used that is hitting the given reference. This is nil for all melee combat.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the mobile's reference.</li> <li><code>slot</code> (number): The primary slot that is targeted.</li> </ul>"},{"location":"events/calcArmorRating/","title":"calcArmorRating","text":""},{"location":"events/calcArmorRating/#calcarmorrating","title":"calcArmorRating","text":"<p>This event is fired before an actor's armor rating has been calculated, and can be used to override the armor that the actor is given.</p> <pre><code>--- @param e calcArmorRatingEventData\nlocal function calcArmorRatingCallback(e)\nend\nevent.register(tes3.event.calcArmorRating, calcArmorRatingCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>armor</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcArmorRating/#event-data","title":"Event Data","text":"<ul> <li><code>armor</code> (tes3armor): Read-only. The armor piece whose AR is being calculated.</li> <li><code>armorRating</code> (number): If set, the given armor rating will be used instead of the one calculated.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile whose AR is being calculated. May not always be available.</li> <li><code>npc</code> (tes3npc): Read-only. The NPC object whose AR is being calculated. May not always be available.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the mobile's reference. May not always be available.</li> </ul>"},{"location":"events/calcBarterPrice/","title":"calcBarterPrice","text":""},{"location":"events/calcBarterPrice/#calcbarterprice","title":"calcBarterPrice","text":"<p>This event is raised when an item price is being determined when bartering.</p> <pre><code>--- @param e calcBarterPriceEventData\nlocal function calcBarterPriceCallback(e)\nend\nevent.register(tes3.event.calcBarterPrice, calcBarterPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcBarterPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The base price of the item, before any event modifications.</li> <li><code>buying</code> (boolean): Read-only. If true, the player is buying, otherwise the player is selling.</li> <li><code>count</code> (number): Read-only. The number of items being bartered.</li> <li><code>item</code> (tes3item): Read-only. The item, if any, that is being bartered.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the bartered item.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor for who is selling or buying. May not always be available.</li> <li><code>price</code> (number): The price of the item. This can be modified, but ensure that the buy/sell price is matched or there will be odd behavior.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the mobile's reference. May not always be available.</li> </ul>"},{"location":"events/calcBlockChance/","title":"calcBlockChance","text":""},{"location":"events/calcBlockChance/#calcblockchance","title":"calcBlockChance","text":"<p>This event is raised when determining the block chance for an actor. This does not affect ranged or magic attacks and ignores attacks outside of the normal blocking angles, like being attacked from behind. Blocking is disabled in some situations, like being paralyzed or attacking.</p> <pre><code>--- @param e calcBlockChanceEventData\nlocal function calcBlockChanceCallback(e)\nend\nevent.register(tes3.event.calcBlockChance, calcBlockChanceCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>attacker.baseObject</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcBlockChance/#event-data","title":"Event Data","text":"<ul> <li><code>attacker</code> (tes3reference): Read-only. A shortcut to the attacker mobile's reference.</li> <li><code>attackerMobile</code> (tes3mobileActor): Read-only. The mobile that is attacking.</li> <li><code>blockChance</code> (number): The block chance for the actor. This can be adjusted.</li> <li><code>target</code> (tes3reference): Read-only. A shortcut to the target mobile's reference.</li> <li><code>targetMobile</code> (tes3mobileActor): Read-only. The mobile that is being attacked.</li> </ul>"},{"location":"events/calcEnchantmentPrice/","title":"calcEnchantmentPrice","text":""},{"location":"events/calcEnchantmentPrice/#calcenchantmentprice","title":"calcEnchantmentPrice","text":"<p>This event is raised when an enchantment price is being determined.</p> <pre><code>--- @param e calcEnchantmentPriceEventData\nlocal function calcEnchantmentPriceCallback(e)\nend\nevent.register(tes3.event.calcEnchantmentPrice, calcEnchantmentPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcEnchantmentPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The base price of the enchantment, before any disposition or event modifications.</li> <li><code>castType</code> (number): Read-only. The enchantment cast type. Maps to <code>tes3.enchantmentType.*</code>.</li> <li><code>effects</code> (table[]): Read-only. An array of the effects being enchanted onto the item. This includes the <code>effect</code> object, <code>magnitudeLow</code>/<code>magnitudeHigh</code> values, the <code>area</code>, <code>duration</code>, and <code>range</code>. The <code>attribute</code> and <code>skill</code> values are available as appropriate.</li> <li><code>item</code> (tes3item): Read-only. The item, if any, that is being enchanted.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the enchanted item.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor for who is offering the enchantment service. May not always be available.</li> <li><code>price</code> (number): The price of the enchantment. This can be modified.</li> <li><code>reference</code> (tes3reference): Read-only. A shortcut to the mobile's reference. May not always be available.</li> <li><code>soul</code> (tes3actor): Read-only. The soul contained in the soul gem.</li> <li><code>soulGem</code> (tes3misc): Read-only. The soul gem being used to make the enchantment.</li> <li><code>soulGemData</code> (tes3itemData): Read-only. The soul gem's associated item data.</li> </ul>"},{"location":"events/calcFlySpeed/","title":"calcFlySpeed","text":""},{"location":"events/calcFlySpeed/#calcflyspeed","title":"calcFlySpeed","text":"<p>One of the movement events, calcFlySpeed is used when calculating movement speeds when levitating or otherwise flying.</p> <p>The movement event flow is described below:</p> <ul> <li>Flying: calcFlySpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcFlySpeedEventData\nlocal function calcFlySpeedCallback(e)\nend\nevent.register(tes3.event.calcFlySpeed, calcFlySpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcFlySpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 5 for this event.</li> </ul>"},{"location":"events/calcHitChance/","title":"calcHitChance","text":""},{"location":"events/calcHitChance/#calchitchance","title":"calcHitChance","text":"<p>This event is raised when determining the hit chance for an actor.</p> <pre><code>--- @param e calcHitChanceEventData\nlocal function calcHitChanceCallback(e)\nend\nevent.register(tes3.event.calcHitChance, calcHitChanceCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>attacker.baseObject</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcHitChance/#event-data","title":"Event Data","text":"<ul> <li><code>attacker</code> (tes3reference): Read-only. A shortcut to the mobile's reference.</li> <li><code>attackerMobile</code> (tes3mobileActor): Read-only. The mobile who is making the attack.</li> <li><code>hitChance</code> (number): The hit chance for the actor. This may be adjusted.</li> <li><code>projectile</code> (tes3mobileProjectile, nil): Read-only. The projectile, if applicable, that hit the target.</li> <li><code>target</code> (tes3reference): Read-only. A shortcut to the target mobile's reference. May not always be available.</li> <li><code>targetMobile</code> (tes3mobileActor): Read-only. The mobile who is being attacked. May not always be available.</li> </ul>"},{"location":"events/calcMoveSpeed/","title":"calcMoveSpeed","text":""},{"location":"events/calcMoveSpeed/#calcmovespeed","title":"calcMoveSpeed","text":"<p>This event is called when an actor\u2019s movement speed is calculated. The event allows modification of this value, to dehardcode actor movement speeds. Invoked after all other movement speed events are finished.</p> <p>The movement event flow is described below:</p> <ul> <li>Walking: calcWalkSpeed -&gt; calcMoveSpeed</li> <li>Running: calcWalkSpeed -&gt; calcRunSpeed -&gt; calcMoveSpeed</li> <li>Swimming: calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcMoveSpeed</li> <li>Swimming (while running): calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcSwimRunSpeed -&gt; calcMoveSpeed</li> <li>Flying: calcFlySpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcMoveSpeedEventData\nlocal function calcMoveSpeedCallback(e)\nend\nevent.register(tes3.event.calcMoveSpeed, calcMoveSpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcMoveSpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 0 for this event.</li> </ul>"},{"location":"events/calcMoveSpeed/#examples","title":"Examples","text":"<p>Example: 20% Faster Player Movement</p> <pre><code>local function onCalcMoveSpeed(e)\n    if (e.reference == tes3.player) then\n        e.speed = e.speed * 1.2\n    end\nend\nevent.register(tes3.event.calcMoveSpeed, onCalcMoveSpeed)\n</code></pre>"},{"location":"events/calcRepairPrice/","title":"calcRepairPrice","text":""},{"location":"events/calcRepairPrice/#calcrepairprice","title":"calcRepairPrice","text":"<p>This event is called when determining the price of repairing an item. It can be used to override the repair cost.</p> <pre><code>--- @param e calcRepairPriceEventData\nlocal function calcRepairPriceCallback(e)\nend\nevent.register(tes3.event.calcRepairPrice, calcRepairPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcRepairPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The price before adjustment.</li> <li><code>item</code> (tes3item): Read-only. The item to be repaired.</li> <li><code>itemData</code> (tes3item): Read-only. Variable node. The data associated with item. This may be nil.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the merchant the player is interacting with.</li> <li><code>price</code> (number): The adjusted price of repairing item.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> </ul>"},{"location":"events/calcRestInterrupt/","title":"calcRestInterrupt","text":""},{"location":"events/calcRestInterrupt/#calcrestinterrupt","title":"calcRestInterrupt","text":"<p>This event is called when the player is about to start resting. The hour and count of creatures can be modified, or disabled. Blocking this event blocks any interrupting spawn.</p> <pre><code>--- @param e calcRestInterruptEventData\nlocal function calcRestInterruptCallback(e)\nend\nevent.register(tes3.event.calcRestInterrupt, calcRestInterruptCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcRestInterrupt/#event-data","title":"Event Data","text":"<ul> <li><code>count</code> (number): The number of creatures interrupting rest. Set to 0 to prevent a spawn.</li> <li><code>hour</code> (number): The hour of rest remaining that the rest will be interrupted on.</li> <li><code>resting</code> (boolean): Read-only. If true, the player is attempting to rest, as opposed to wait.</li> <li><code>waiting</code> (boolean): Read-only. If true, the player is attempting to wait, as opposed to rest.</li> </ul>"},{"location":"events/calcRunSpeed/","title":"calcRunSpeed","text":""},{"location":"events/calcRunSpeed/#calcrunspeed","title":"calcRunSpeed","text":"<p>One of the movement events, calcRunSpeed is used when calculating when the player is running, but not swimming or flying.</p> <p>The movement event flow is described below:</p> <ul> <li>Running: calcWalkSpeed -&gt; calcRunSpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcRunSpeedEventData\nlocal function calcRunSpeedCallback(e)\nend\nevent.register(tes3.event.calcRunSpeed, calcRunSpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcRunSpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 2 for this event.</li> </ul>"},{"location":"events/calcSoulValue/","title":"calcSoulValue","text":""},{"location":"events/calcSoulValue/#calcsoulvalue","title":"calcSoulValue","text":"<p>This event is raised when determining the value of a soul, unmodified by GMSTs. The value can be modified, or used to provide a soul value to NPCs who would normally not be allowed one.</p> <pre><code>--- @param e calcSoulValueEventData\nlocal function calcSoulValueCallback(e)\nend\nevent.register(tes3.event.calcSoulValue, calcSoulValueCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSoulValue/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3creature, tes3npc): Read-only. The actor whose soul is being evaluated.</li> <li><code>value</code> (number, nil): The value of the actor's soul. This may be <code>nil</code> for NPCs.</li> </ul>"},{"location":"events/calcSoulValue/#examples","title":"Examples","text":"<p>Example: This example shows how to assign a value to an NPC's soul.</p> <pre><code>local function onInitialized()\n    tes3.addSoulGem({ item = \"misc_dwrv_artifact60\" })\nend\nevent.register(tes3.event.initialized, onInitialized)\n\nlocal function onFilterSoulGemTarget(e)\n    if (e.reference.baseObject.id:lower() == \"fargoth\") then\n        return e.soulGem.id == \"misc_dwrv_artifact60\"\n    end\nend\nevent.register(tes3.event.filterSoulGemTarget, onFilterSoulGemTarget)\n\n-- calcSoulValue event allows assigning a new soul value to creatures\n-- If the event was triggered for an NPC, it allows assigning a value\n-- thus allowing soul-trapping the actor.\nlocal function calcSoulValueCallback(e)\n    if (e.actor.id:lower() == \"fargoth\") then\n        e.value = 69\n        mwse.log(\"Getting Fargoth's value.\")\n        return\n    end\nend\nevent.register(tes3.event.calcSoulValue, calcSoulValueCallback)\n</code></pre>"},{"location":"events/calcSpellPrice/","title":"calcSpellPrice","text":""},{"location":"events/calcSpellPrice/#calcspellprice","title":"calcSpellPrice","text":"<p>This event is called when determining the cost of purchasing a spell. The price can be modified.</p> <pre><code>--- @param e calcSpellPriceEventData\nlocal function calcSpellPriceCallback(e)\nend\nevent.register(tes3.event.calcSpellPrice, calcSpellPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSpellPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The price before adjustment.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the merchant the player is interacting with.</li> <li><code>price</code> (number): The adjusted price of spell.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>spell</code> (tes3spell): Read-only. The spell currently being purchased.</li> </ul>"},{"location":"events/calcSpellmakingPrice/","title":"calcSpellmakingPrice","text":""},{"location":"events/calcSpellmakingPrice/#calcspellmakingprice","title":"calcSpellmakingPrice","text":"<p>This event is called when determining the cost of making a spell. The price can be modified.</p> <pre><code>--- @param e calcSpellmakingPriceEventData\nlocal function calcSpellmakingPriceCallback(e)\nend\nevent.register(tes3.event.calcSpellmakingPrice, calcSpellmakingPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSpellmakingPrice/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the spellmaking service npc the player is interacting with.</li> <li><code>price</code> (number): The price of the spell.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile's related reference.</li> </ul>"},{"location":"events/calcSpellmakingSpellPointCost/","title":"calcSpellmakingSpellPointCost","text":""},{"location":"events/calcSpellmakingSpellPointCost/#calcspellmakingspellpointcost","title":"calcSpellmakingSpellPointCost","text":"<p>This event is called when determining the spell point cost of making a spell. The spell point cost can be modified.</p> <pre><code>--- @param e calcSpellmakingSpellPointCostEventData\nlocal function calcSpellmakingSpellPointCostCallback(e)\nend\nevent.register(tes3.event.calcSpellmakingSpellPointCost, calcSpellmakingSpellPointCostCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSpellmakingSpellPointCost/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the spellmaking service npc the player is interacting with.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile's related reference.</li> <li><code>spellPointCost</code> (number): The spell point cost of the spell.</li> </ul>"},{"location":"events/calcSunDamageScalar/","title":"calcSunDamageScalar","text":""},{"location":"events/calcSunDamageScalar/#calcsundamagescalar","title":"calcSunDamageScalar","text":"<p>calcSunDamageScalar is used when calculating the amount of damage to apply for the Sun Damage magic effect.</p> <pre><code>--- @param e calcSunDamageScalarEventData\nlocal function calcSunDamageScalarCallback(e)\nend\nevent.register(tes3.event.calcSunDamageScalar, calcSunDamageScalarCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSunDamageScalar/#event-data","title":"Event Data","text":"<ul> <li><code>damage</code> (number): The previously calculated sun damage.</li> </ul>"},{"location":"events/calcSwimRunSpeed/","title":"calcSwimRunSpeed","text":""},{"location":"events/calcSwimRunSpeed/#calcswimrunspeed","title":"calcSwimRunSpeed","text":"<p>One of the movement events, calcSwimRunSpeed is used when calculating the movement speed while in water when running.</p> <p>The movement event flow is described below:</p> <ul> <li>Swimming (while running): calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcSwimRunSpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcSwimRunSpeedEventData\nlocal function calcSwimRunSpeedCallback(e)\nend\nevent.register(tes3.event.calcSwimRunSpeed, calcSwimRunSpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSwimRunSpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 4 for this event.</li> </ul>"},{"location":"events/calcSwimSpeed/","title":"calcSwimSpeed","text":""},{"location":"events/calcSwimSpeed/#calcswimspeed","title":"calcSwimSpeed","text":"<p>One of the movement events, calcSwimSpeed is used when calculating the movement speed while in water when running.</p> <p>The movement event flow is described below:</p> <ul> <li>Swimming: calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcMoveSpeed</li> <li>Swimming (while running): calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcSwimRunSpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcSwimSpeedEventData\nlocal function calcSwimSpeedCallback(e)\nend\nevent.register(tes3.event.calcSwimSpeed, calcSwimSpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcSwimSpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 3 for this event.</li> </ul>"},{"location":"events/calcTrainingPrice/","title":"calcTrainingPrice","text":""},{"location":"events/calcTrainingPrice/#calctrainingprice","title":"calcTrainingPrice","text":"<p>This event is called when determining the cost of training, and can be used to modify the given price.</p> <pre><code>--- @param e calcTrainingPriceEventData\nlocal function calcTrainingPriceCallback(e)\nend\nevent.register(tes3.event.calcTrainingPrice, calcTrainingPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcTrainingPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The price before adjustment.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the trainer the player is interacting with.</li> <li><code>price</code> (number): The adjusted price of the training.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>skill</code> (tes3statisticSkill): Read-only. The ID of the skill to be trained.</li> <li><code>skillId</code> (number): Read-only. The ID of the skill to be trained.</li> </ul>"},{"location":"events/calcTravelPrice/","title":"calcTravelPrice","text":""},{"location":"events/calcTravelPrice/#calctravelprice","title":"calcTravelPrice","text":"<p>This event is called when determining the price of traveling, and can be used to modify the given price.</p> <pre><code>--- @param e calcTravelPriceEventData\nlocal function calcTravelPriceCallback(e)\nend\nevent.register(tes3.event.calcTravelPrice, calcTravelPriceCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcTravelPrice/#event-data","title":"Event Data","text":"<ul> <li><code>basePrice</code> (number): Read-only. The price before adjustment.</li> <li><code>companions</code> (tes3mobileActor[], nil): Read-only. Companions that will travel with the player, or <code>nil</code> if no companions are present.</li> <li><code>destination</code> (tes3reference): Read-only. The travel marker that marks the destination.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor of the merchant the player is interacting with.</li> <li><code>price</code> (number): The adjusted price of travelling.</li> <li><code>reference</code> (tes3reference): Read-only. The mobile\u2019s related reference.</li> </ul>"},{"location":"events/calcWalkSpeed/","title":"calcWalkSpeed","text":""},{"location":"events/calcWalkSpeed/#calcwalkspeed","title":"calcWalkSpeed","text":"<p>One of the movement events, calcWalkSpeed is used when calculating the base walk speed. Nearly every other movement speed event starts with this, with the exception of calcFlySpeed.</p> <p>The movement event flow is described below:</p> <ul> <li>Walking: calcWalkSpeed -&gt; calcMoveSpeed</li> <li>Running: calcWalkSpeed -&gt; calcRunSpeed -&gt; calcMoveSpeed</li> <li>Swimming: calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcMoveSpeed</li> <li>Swimming (while running): calcWalkSpeed -&gt; calcSwimSpeed -&gt; calcSwimRunSpeed -&gt; calcMoveSpeed</li> </ul> <pre><code>--- @param e calcWalkSpeedEventData\nlocal function calcWalkSpeedCallback(e)\nend\nevent.register(tes3.event.calcWalkSpeed, calcWalkSpeedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/calcWalkSpeed/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose speed is being calculated.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s related reference.</li> <li><code>speed</code> (number): The previous speed calculated, starting with the base engine values.</li> <li><code>type</code> (number): Read-only. The type of movement that was calculated. This is always 1 for this event.</li> </ul>"},{"location":"events/cellActivated/","title":"cellActivated","text":""},{"location":"events/cellActivated/#cellactivated","title":"cellActivated","text":"<p>This event is triggered when a cell is activated.</p> <pre><code>--- @param e cellActivatedEventData\nlocal function cellActivatedCallback(e)\nend\nevent.register(tes3.event.cellActivated, cellActivatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>cell</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/cellActivated/#event-data","title":"Event Data","text":"<ul> <li><code>cell</code> (tes3cell): Read-only. The cell which was activated.</li> </ul>"},{"location":"events/cellChanged/","title":"cellChanged","text":""},{"location":"events/cellChanged/#cellchanged","title":"cellChanged","text":"<p>The cellChanged event is triggered when the player changes cells. This might occur from going through a door, using intervention or recall spells, or from scripted repositioning.</p> <pre><code>--- @param e cellChangedEventData\nlocal function cellChangedCallback(e)\nend\nevent.register(tes3.event.cellChanged, cellChangedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>cell</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/cellChanged/#event-data","title":"Event Data","text":"<ul> <li><code>cell</code> (tes3cell): Read-only. The new cell that the player has entered.</li> <li><code>previousCell</code> (tes3cell): Read-only. The previous cell that the player came from. This will be nil when loading a game.</li> </ul>"},{"location":"events/cellDeactivated/","title":"cellDeactivated","text":""},{"location":"events/cellDeactivated/#celldeactivated","title":"cellDeactivated","text":"<p>This event is triggered when a cell is deactivated.</p> <pre><code>--- @param e cellDeactivatedEventData\nlocal function cellDeactivatedCallback(e)\nend\nevent.register(tes3.event.cellDeactivated, cellDeactivatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>cell</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/cellDeactivated/#event-data","title":"Event Data","text":"<ul> <li><code>cell</code> (tes3cell): Read-only. The cell which was deactivated.</li> </ul>"},{"location":"events/charGenFinished/","title":"charGenFinished","text":""},{"location":"events/charGenFinished/#chargenfinished","title":"charGenFinished","text":"<p>This event is triggered when the character generation process at the start of the game has been finished. In an unmodded version of Morrowind, this event would trigger after leaving the 'Census and Excise Office' in 'Seyda Neen'.</p> <pre><code>--- @param e charGenFinishedEventData\nlocal function charGenFinishedCallback(e)\nend\nevent.register(tes3.event.charGenFinished, charGenFinishedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/collideWater/","title":"collideWater","text":""},{"location":"events/collideWater/#collidewater","title":"collideWater","text":"<p>This event is triggered when a mobile object collides with water and all the frames during the collision.</p> <pre><code>--- @param e collideWaterEventData\nlocal function collideWaterCallback(e)\nend\nevent.register(tes3.event.collideWater, collideWaterCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/collideWater/#event-data","title":"Event Data","text":"<ul> <li><code>inWater</code> (boolean): Read-only. </li> <li><code>mobile</code> (tes3mobileObject): Read-only. Mobile object which collided.</li> <li><code>reference</code> (tes3mobileObject): Read-only. <code>mobile</code>'s reference.</li> </ul>"},{"location":"events/collision/","title":"Collision","text":""},{"location":"events/collision/#collision","title":"collision","text":"<p>This event is triggered on a collision and all the frames during the collision.</p> <pre><code>--- @param e collisionEventData\nlocal function collisionCallback(e)\nend\nevent.register(tes3.event.collision, collisionCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/collision/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileObject): Read-only. Mobile object which collided with its target reference.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile object's associated reference.</li> <li><code>target</code> (tes3reference): Read-only. Reference which mobile object has collided with.</li> </ul>"},{"location":"events/collision/#examples","title":"Examples","text":"<p>Example: Shows a message when the player bumps into the door.</p> <pre><code>local function onCollision(e)\n    local target = e.target\n    if not target then\n        return\n    end\n\n    if target.object.objectType == tes3.objectType.door then\n        tes3.messageBox(\"Ouch!\\nMaybe I should open it first?\")\n    end\nend\n\nevent.register(tes3.event.collision, onCollision, { filter = tes3.player })\n</code></pre>"},{"location":"events/combatStart/","title":"combatStart","text":""},{"location":"events/combatStart/#combatstart","title":"combatStart","text":"<p>The combatStart event occurs when combat is about to begin between two actors. This event allows scripts to prevent combat from starting.</p> <pre><code>--- @param e combatStartEventData\nlocal function combatStartCallback(e)\nend\nevent.register(tes3.event.combatStart, combatStartCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/combatStart/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3mobileActor): Read-only. The mobile actor who is entering combat.</li> <li><code>target</code> (tes3mobileActor): Read-only. The mobile actor who combat is being triggered against.</li> </ul>"},{"location":"events/combatStarted/","title":"combatStarted","text":""},{"location":"events/combatStarted/#combatstarted","title":"combatStarted","text":"<p>The combatStarted event occurs after combat has began between two actors. This event is preceded by the combatStart event.</p> <pre><code>--- @param e combatStartedEventData\nlocal function combatStartedCallback(e)\nend\nevent.register(tes3.event.combatStarted, combatStartedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/combatStarted/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3mobileActor): Read-only. The mobile actor who has entered combat.</li> <li><code>target</code> (tes3mobileActor): Read-only. The mobile actor who combat has been triggered against.</li> </ul>"},{"location":"events/combatStop/","title":"combatStop","text":""},{"location":"events/combatStop/#combatstop","title":"combatStop","text":"<p>The combatStop event occurs when an actor is about to leave combat. This event allows scripts to prevent combat from stopping.</p> <pre><code>--- @param e combatStopEventData\nlocal function combatStopCallback(e)\nend\nevent.register(tes3.event.combatStop, combatStopCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/combatStop/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3mobileActor): Read-only. The mobile actor who is exiting combat.</li> </ul>"},{"location":"events/combatStopped/","title":"combatStopped","text":""},{"location":"events/combatStopped/#combatstopped","title":"combatStopped","text":"<p>The combatStopped event occurs after an actor has left combat. This event is preceded by the combatStop event.</p> <pre><code>--- @param e combatStoppedEventData\nlocal function combatStoppedCallback(e)\nend\nevent.register(tes3.event.combatStopped, combatStoppedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/combatStopped/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3mobileActor): Read-only. The mobile actor who has left combat.</li> </ul>"},{"location":"events/consoleReferenceChanged/","title":"consoleReferenceChanged","text":""},{"location":"events/consoleReferenceChanged/#consolereferencechanged","title":"consoleReferenceChanged","text":"<p>This event is invoked when the player selects a new reference with the console, or unselects a reference.</p> <pre><code>--- @param e consoleReferenceChangedEventData\nlocal function consoleReferenceChangedCallback(e)\nend\nevent.register(tes3.event.consoleReferenceChanged, consoleReferenceChangedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/consoleReferenceChanged/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference, nil): Read-only. The newly selected reference, or nil if nothing is now selected.</li> </ul>"},{"location":"events/containerClosed/","title":"containerClosed","text":""},{"location":"events/containerClosed/#containerclosed","title":"containerClosed","text":"<p>This event is raised when a container is closed.</p> <pre><code>--- @param e containerClosedEventData\nlocal function containerClosedCallback(e)\nend\nevent.register(tes3.event.containerClosed, containerClosedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/containerClosed/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference of the container that was closed.</li> </ul>"},{"location":"events/convertReferenceToItem/","title":"convertReferenceToItem","text":""},{"location":"events/convertReferenceToItem/#convertreferencetoitem","title":"convertReferenceToItem","text":"<p>This event is raised when an in-world <code>tes3reference</code> for an item is about to be converted to fit into a <code>tes3itemStack</code>. Note that reference.itemData.owner is always nil, as the game clears it earlier when evaluating theft mechanics.</p> <pre><code>--- @param e convertReferenceToItemEventData\nlocal function convertReferenceToItemCallback(e)\nend\nevent.register(tes3.event.convertReferenceToItem, convertReferenceToItemCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/convertReferenceToItem/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference about to be converted.</li> </ul>"},{"location":"events/crimeWitnessed/","title":"crimeWitnessed","text":""},{"location":"events/crimeWitnessed/#crimewitnessed","title":"crimeWitnessed","text":"<p>This event fires when a crime is witnessed by an actor.</p> <pre><code>--- @param e crimeWitnessedEventData\nlocal function crimeWitnessedCallback(e)\nend\nevent.register(tes3.event.crimeWitnessed, crimeWitnessedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>type</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/crimeWitnessed/#event-data","title":"Event Data","text":"<ul> <li><code>position</code> (tes3vector3): Read-only. The position that the crime ocurred at.</li> <li><code>realTimestamp</code> (number): Read-only. The timestamp that the crime ocurred at.</li> <li><code>type</code> (string): Read-only. The type of crime that was committed. The type can be \"attack\", \"killing\", \"stealing\", \"pickpocket\", \"theft\", \"trespass\", and \"werewolf\". Crime \"theft\" is raised when picking up owned items. Crime \"trespass\" is raised when lockpicking, probing or sleeping in owned beds.</li> <li><code>value</code> (number): Read-only. The bounty value of the crime.</li> <li><code>victim</code> (tes3actor, tes3faction): Read-only. The victim of the crime, as a general actor base object or faction.</li> <li><code>victimFaction</code> (tes3faction): Read-only. The faction that the crime was against, assuming the victim is, or is in, one.</li> <li><code>victimMobile</code> (tes3mobileActor): Read-only. The mobile of the victim, if applicable, giving access to the unique victim.</li> <li><code>witness</code> (tes3reference): Read-only. The reference that witnessed the crime.</li> <li><code>witnessMobile</code> (tes3mobileActor): Read-only. The mobile actor of the reference that witnessed the crime.</li> </ul>"},{"location":"events/damage/","title":"Damage","text":""},{"location":"events/damage/#damage","title":"damage","text":"<p>The damage event triggers before an actor is damaged. The damage value can be modified, or the damage can be prevented completely by blocking the event.</p> <pre><code>--- @param e damageEventData\nlocal function damageCallback(e)\nend\nevent.register(tes3.event.damage, damageCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/damage/#event-data","title":"Event Data","text":"<ul> <li><code>activeMagicEffect</code> (tes3magicEffect): Read-only. Magic effect which will cause the damage. Can be <code>nil</code>.</li> <li><code>attacker</code> (tes3mobileActor): Read-only. The mobile actor dealing the damage. Can be <code>nil</code>.</li> <li><code>attackerReference</code> (tes3reference): Read-only. The attacker mobile's associated reference. Can be <code>nil</code>.</li> <li><code>damage</code> (number): The amount of damage done.</li> <li><code>magicEffectInstance</code> (tes3magicEffectInstance): Read-only. An instance of the magic effect in the spell that will cause the damage. Can be <code>nil</code>.</li> <li><code>magicSourceInstance</code> (tes3magicSourceInstance): Read-only. A <code>tes3magicSourceInstance</code> object of a spell that will cause the damage. Can be <code>nil</code>.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that is taking damage.</li> <li><code>projectile</code> (tes3mobileProjectile): Read-only. Projectile that will deal the damage. Can be <code>nil</code>.</li> <li><code>reference</code> (tes3reference): Read-only. The mobile\u2019s associated reference.</li> <li><code>source</code> (string): Read-only. The origin of damage. These damage sources are present as <code>tes3.damageSource</code> constants. See the example. Damage with <code>tes3.damageSource.shield</code> source comes from magic shields. Other sources are self-explanatory.</li> </ul>"},{"location":"events/damage/#examples","title":"Examples","text":"<p>Example: Change fall damage</p> <pre><code>-- Change fall damage if player is a Bosmer\nlocal function onDamage(e)\n    -- We only care if the player took some damage\n    if e.reference ~= tes3.player then\n        return\n    end\n\n    -- Check if the damage was caused by a fall\n    if e.source ~= tes3.damageSource.fall then\n        return\n    end\n\n    -- Check weather the player is a Bosmer\n    if e.reference.object.race.id:lower() == \"bosmer\" then  -- This is the same as tes3.player.object.race.id:lower() == \"bosmer\"\n        -- Taunt the player\n        tes3.messageBox(\"Ha ha ha, you broke your leg Bosmer\")\n\n        -- Double the damage. He is Fargoth's cousin after all\n        e.damage = e.damage * 2\n    end\nend\nevent.register(tes3.event.damage, onDamage)\n</code></pre>"},{"location":"events/damageHandToHand/","title":"damageHandToHand","text":""},{"location":"events/damageHandToHand/#damagehandtohand","title":"damageHandToHand","text":"<p>The damageHandToHand event triggers before an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the <code>damage</code> event will. The <code>fatigueDamage</code> value can be modified, or can be prevented completely by blocking the event. The player as attacker will gain hand-to-hand experience only if <code>fatigueDamage</code> is greater than zero.</p> <pre><code>--- @param e damageHandToHandEventData\nlocal function damageHandToHandCallback(e)\nend\nevent.register(tes3.event.damageHandToHand, damageHandToHandCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/damageHandToHand/#event-data","title":"Event Data","text":"<ul> <li><code>attacker</code> (tes3mobileActor): Read-only. The mobile actor dealing the damage. Can be nil.</li> <li><code>attackerReference</code> (tes3reference): Read-only. The attacker mobile's associated reference. Can be nil.</li> <li><code>fatigueDamage</code> (number): The amount of fatigue damage done.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that is taking fatigue damage.</li> <li><code>reference</code> (tes3reference): Read-only. The mobile\u2019s associated reference.</li> </ul>"},{"location":"events/damaged/","title":"Damaged","text":""},{"location":"events/damaged/#damaged","title":"damaged","text":"<p>The damaged event triggers after an actor has been damaged.</p> <pre><code>--- @param e damagedEventData\nlocal function damagedCallback(e)\nend\nevent.register(tes3.event.damaged, damagedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/damaged/#event-data","title":"Event Data","text":"<ul> <li><code>activeMagicEffect</code> (tes3magicEffect): Read-only. Magic effect which caused damage. Can be <code>nil</code>.</li> <li><code>attacker</code> (tes3mobileActor): Read-only. The mobile actor dealing the damage. Can be <code>nil</code>.</li> <li><code>attackerReference</code> (tes3reference): Read-only. The attacker mobile's associated reference. Can be <code>nil</code>.</li> <li><code>damage</code> (number): Read-only. The amount of damage done.</li> <li><code>killingBlow</code> (boolean): Read-only. If true, the damage killed the target.</li> <li><code>magicEffectInstance</code> (tes3magicEffectInstance): Read-only. An instance of the magic effect in the spell that caused damage. Can be <code>nil</code>.</li> <li><code>magicSourceInstance</code> (tes3magicSourceInstance): Read-only. A <code>tes3magicSourceInstance</code> object of a spell that caused damage. Can be <code>nil</code>.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that took damage.</li> <li><code>projectile</code> (tes3mobileProjectile): Read-only. Projectile that dealt the damage. Can be <code>nil</code>.</li> <li><code>reference</code> (tes3reference): Read-only. The mobile\u2019s associated reference.</li> <li><code>source</code> (string): Read-only. The origin of damage. These damage sources are present as <code>tes3.damageSource</code> constants. See the example. Damage with <code>tes3.damageSource.shield</code> source comes from magic shields. Other sources are self-explanatory.</li> </ul>"},{"location":"events/damaged/#examples","title":"Examples","text":"<p>Example: Notify the player that their arrow/bolt killed their opponent</p> <pre><code>-- Print a message if player's arrow killed its target\nlocal function onDamaged(e)\n    -- We only care if the player did the damage\n    if e.attackerReference ~= tes3.player then\n        return\n    end\n\n    -- Check if the damage was caused by a projectile, but not by a spell, so it must be an arrow or a bolt\n    if e.projectile ~= nil and e.magicSourceInstance == nil then\n\n        -- Did the damage kill the target?\n        if e.killingBlow == true then\n            tes3.messageBox(\"Your arrow felled its target!\")\n        end\n    end\nend\nevent.register(tes3.event.damaged, onDamaged)\n</code></pre> <p>Example: Detect that the player died from drowning</p> <pre><code>local function onDamaged(e)\n    -- We only care if the player recieved the damage\n    if e.reference ~= tes3.player then\n        return\n    end\n\n    -- Does the damage come from drowining?\n    if e.source ~= tes3.damageSource.suffocation then\n        return\n    end\n\n    -- Is the player in Mudan Grotto?\n    if tes3.mobilePlayer.cell.id:lower() == \"mudan grotto\" then\n\n        -- Did the damage kill the player?\n        if e.killingBlow == true then\n            tes3.messageBox(\"You died diving for treasure!\")\n        end\n    end\nend\nevent.register(tes3.event.damaged, onDamaged)\n</code></pre>"},{"location":"events/damagedHandToHand/","title":"damagedHandToHand","text":""},{"location":"events/damagedHandToHand/#damagedhandtohand","title":"damagedHandToHand","text":"<p>The damagedHandToHand event triggers after an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the <code>damaged</code> event will.</p> <pre><code>--- @param e damagedHandToHandEventData\nlocal function damagedHandToHandCallback(e)\nend\nevent.register(tes3.event.damagedHandToHand, damagedHandToHandCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/damagedHandToHand/#event-data","title":"Event Data","text":"<ul> <li><code>attacker</code> (tes3mobileActor): Read-only. The mobile actor dealing the damage. Can be nil.</li> <li><code>attackerReference</code> (tes3reference): Read-only. The attacker mobile's associated reference. Can be nil.</li> <li><code>fatigueDamage</code> (number): Read-only. The amount of fatigue damage done.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that took fatigue damage.</li> <li><code>reference</code> (tes3reference): Read-only. The mobile\u2019s associated reference.</li> </ul>"},{"location":"events/death/","title":"Death","text":""},{"location":"events/death/#death","title":"death","text":"<p>This event triggers when an actor dies.</p> <pre><code>--- @param e deathEventData\nlocal function deathCallback(e)\nend\nevent.register(tes3.event.death, deathCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/death/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that has died.</li> <li><code>reference</code> (tes3reference): Read-only. mobile\u2019s associated reference.</li> </ul>"},{"location":"events/detectSneak/","title":"detectSneak","text":""},{"location":"events/detectSneak/#detectsneak","title":"detectSneak","text":"<p>This event is invoked whenever an actor is checking if they can detect another actor sneaking.</p> <pre><code>--- @param e detectSneakEventData\nlocal function detectSneakCallback(e)\nend\nevent.register(tes3.event.detectSneak, detectSneakCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/detectSneak/#event-data","title":"Event Data","text":"<ul> <li><code>detector</code> (tes3mobileActor): Read-only. The mobile actor that is doing the detecting.</li> <li><code>isDetected</code> (boolean): The previous detection calculated, starting with the base engine result.</li> <li><code>target</code> (tes3mobileActor): Read-only. The mobile actor that is possibly being detected.</li> </ul>"},{"location":"events/determineAction/","title":"determineAction","text":""},{"location":"events/determineAction/#determineaction","title":"determineAction","text":"<p>This event fires when an actor determines an action in a combat session.</p> <pre><code>--- @param e determineActionEventData\nlocal function determineActionCallback(e)\nend\nevent.register(tes3.event.determineAction, determineActionCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/determineAction/#event-data","title":"Event Data","text":"<ul> <li><code>session</code> (tes3combatSession): Read-only. The combat session the action is being determined for.</li> </ul>"},{"location":"events/determinedAction/","title":"determinedAction","text":""},{"location":"events/determinedAction/#determinedaction","title":"determinedAction","text":"<p>This event fires when an actor has determined an action in a combat session.</p> <pre><code>--- @param e determinedActionEventData\nlocal function determinedActionCallback(e)\nend\nevent.register(tes3.event.determinedAction, determinedActionCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/determinedAction/#event-data","title":"Event Data","text":"<ul> <li><code>session</code> (tes3combatSession): Read-only. The combat session the action has been determined for.</li> </ul>"},{"location":"events/dialogueEnvironmentCreated/","title":"dialogueEnvironmentCreated","text":""},{"location":"events/dialogueEnvironmentCreated/#dialogueenvironmentcreated","title":"dialogueEnvironmentCreated","text":"<p>This event is fired when a dialogue with lua scripting is about to be executed. It allows third party code to inject themselves into the dialogue environment, so new functionality can be added more easily for dialogue scripters.</p> <pre><code>--- @param e dialogueEnvironmentCreatedEventData\nlocal function dialogueEnvironmentCreatedCallback(e)\nend\nevent.register(tes3.event.dialogueEnvironmentCreated, dialogueEnvironmentCreatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/dialogueEnvironmentCreated/#event-data","title":"Event Data","text":"<ul> <li><code>environment</code> (table): Read-only. The lua environment for the dialogue scripting. Any data added to it will be available as global variables to dialogue scripts.</li> </ul>"},{"location":"events/disposition/","title":"Disposition","text":""},{"location":"events/disposition/#disposition","title":"disposition","text":"<p>This event is triggered after an NPC's disposition is calculated. This is done frequently. The disposition value can be changed to alter the resulting value. The disposition should be consistent between calls.</p> <pre><code>--- @param e dispositionEventData\nlocal function dispositionCallback(e)\nend\nevent.register(tes3.event.disposition, dispositionCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/disposition/#event-data","title":"Event Data","text":"<ul> <li><code>clamped</code> (boolean): Read-only. If true, the <code>disposition</code> value will end up clamped between 0 and 100.</li> <li><code>disposition</code> (number): The precalculated disposition. This can be set to override the value.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. Convenient access to the <code>reference</code>'s mobile.</li> <li><code>reference</code> (tes3reference): Read-only. The reference whose disposition is being calculated.</li> </ul>"},{"location":"events/disposition/#examples","title":"Examples","text":"<p>Example: Reimplementation of the vanilla disposition calculation.</p> <pre><code>--- @param e dispositionEventData\nlocal function onDispositionCalculation(e)\n    -- Get some context.\n    local reference = e.reference\n    local npc = reference.object\n    local player = tes3.player\n    local playerMobile = tes3.mobilePlayer\n\n    -- Get our starting disposition.\n    local disposition = npc.baseDisposition\n\n    -- Same-race gives a bonus.\n    if (npc.race == player.object.race) then\n        local fDispRaceMod = tes3.findGMST(tes3.gmst.fDispRaceMod).value\n        disposition = disposition + fDispRaceMod\n    end\n\n    -- Adjust disposition by personality.\n    local fDispPersonalityBase = tes3.findGMST(tes3.gmst.fDispPersonalityBase).value\n    local fDispPersonalityMult = tes3.findGMST(tes3.gmst.fDispPersonalityMult).value\n    disposition = disposition + (playerMobile.personality.current - fDispPersonalityBase) * fDispPersonalityMult\n\n    -- If they have a faction, adjust it accordingly.\n    local faction = npc.faction\n    if (faction) then\n        -- Figure out the reaction to use.\n        local reaction = 0\n        local pairedFaction = nil --- @type tes3faction?\n        if (not faction.playerJoined or faction.playerExpelled) then\n            local lowestReaction, lowestFaction = faction:getLowestJoinedReaction()\n            if (lowestReaction) then\n                reaction, pairedFaction = lowestReaction, lowestFaction\n            end\n        else\n            local selfReaction = faction:getReactionWithFaction(faction)\n            if (selfReaction) then\n                reaction = selfReaction\n            end\n        end\n\n        -- Get the player rank from the faction if we found one.\n        local playerRank = 0\n        if (pairedFaction) then\n            playerRank = faction.playerRank\n        end\n\n        -- Finally calculate our faction modifier.\n        local fDispFactionRankBase = tes3.findGMST(tes3.gmst.fDispFactionRankBase).value\n        local fDispFactionRankMult = tes3.findGMST(tes3.gmst.fDispFactionRankMult).value\n        local fDispFactionMod = tes3.findGMST(tes3.gmst.fDispFactionMod).value\n        disposition = disposition + fDispFactionMod * reaction * (fDispFactionRankBase + playerRank * fDispFactionRankMult)\n    end\n\n    -- Apply crime penalty.\n    local fDispCrimeMod = tes3.findGMST(tes3.gmst.fDispCrimeMod).value\n    disposition = disposition - playerMobile.bounty * fDispCrimeMod\n\n    -- Apply disease penalty.\n    if (playerMobile.isDiseased) then\n        local fDispDiseaseMod = tes3.findGMST(tes3.gmst.fDispDiseaseMod).value\n        disposition = disposition + fDispDiseaseMod\n    end\n\n    -- Apply weapon drawn penalty.\n    if (playerMobile.weaponDrawn) then\n        local fDispWeaponDrawn = tes3.findGMST(tes3.gmst.fDispWeaponDrawn).value\n        disposition = disposition + fDispWeaponDrawn\n    end\n\n    -- Pass the new disposition to the event.\n    assert(disposition == e.disposition, string.format(\"Calculated disposition of %d didn't match vanilla value of %d.\", disposition, e.disposition))\n    e.disposition = disposition\nend\nevent.register(tes3.event.disposition, onDispositionCalculation)\n</code></pre>"},{"location":"events/enchantChargeUse/","title":"enchantChargeUse","text":""},{"location":"events/enchantChargeUse/#enchantchargeuse","title":"enchantChargeUse","text":"<p>This event is triggered just before an on-strike or on-use enchantment is used by any actor, and also by the UI system to label enchant charges. It allows modification of the charge required to use an enchantment.</p> <pre><code>--- @param e enchantChargeUseEventData\nlocal function enchantChargeUseCallback(e)\nend\nevent.register(tes3.event.enchantChargeUse, enchantChargeUseCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>caster</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/enchantChargeUse/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the enchantment.</li> <li><code>charge</code> (number): The charge required to cast the enchantment. May be modified.</li> <li><code>isCast</code> (boolean): True if the calculation is for a on-strike or on-use action, false if for UI enchant charge display. The type of action is found at <code>e.source.castType</code>.</li> <li><code>source</code> (tes3enchantment): Read-only. The enchantment being used or examined by the UI.</li> </ul>"},{"location":"events/enchantedItemCreateFailed/","title":"enchantedItemCreateFailed","text":""},{"location":"events/enchantedItemCreateFailed/#enchanteditemcreatefailed","title":"enchantedItemCreateFailed","text":"<p>This event is fired when an enchanted item could not be created.</p> <pre><code>--- @param e enchantedItemCreateFailedEventData\nlocal function enchantedItemCreateFailedCallback(e)\nend\nevent.register(tes3.event.enchantedItemCreateFailed, enchantedItemCreateFailedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/enchantedItemCreateFailed/#event-data","title":"Event Data","text":"<ul> <li><code>baseObject</code> (tes3item): Read-only. The item originally enchanted.</li> <li><code>enchanter</code> (tes3mobileActor): The mobile actor responsible for failing to create the enchantment.</li> <li><code>enchanterReference</code> (tes3reference): The reference responsible for failing to create the enchantment.</li> <li><code>soul</code> (tes3actor): The actor used to enchant the item.</li> <li><code>soulGem</code> (tes3misc): The soul gem used for the failed creation of the item.</li> </ul>"},{"location":"events/enchantedItemCreated/","title":"enchantedItemCreated","text":""},{"location":"events/enchantedItemCreated/#enchanteditemcreated","title":"enchantedItemCreated","text":"<p>This event is fired when an enchanted item has been created by the player.</p> <pre><code>--- @param e enchantedItemCreatedEventData\nlocal function enchantedItemCreatedCallback(e)\nend\nevent.register(tes3.event.enchantedItemCreated, enchantedItemCreatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/enchantedItemCreated/#event-data","title":"Event Data","text":"<ul> <li><code>baseObject</code> (tes3item): Read-only. The item originally enchanted.</li> <li><code>enchanter</code> (tes3mobileActor): The mobile actor responsible for creating the enchantment.</li> <li><code>enchanterReference</code> (tes3reference): The reference responsible for creating the enchantment.</li> <li><code>object</code> (tes3item): Read-only. The newly created and enchanted item.</li> <li><code>soul</code> (tes3actor): The actor used to enchant the item.</li> <li><code>soulGem</code> (tes3misc): The soul gem used for the creation of the item.</li> </ul>"},{"location":"events/enterFrame/","title":"enterFrame","text":""},{"location":"events/enterFrame/#enterframe","title":"enterFrame","text":"<p>The enterFrame event occurs at the start of every frame, including when the game is paused or in menu mode.</p> <pre><code>--- @param e enterFrameEventData\nlocal function enterFrameCallback(e)\nend\nevent.register(tes3.event.enterFrame, enterFrameCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/enterFrame/#event-data","title":"Event Data","text":"<ul> <li><code>delta</code> (number): Read-only. The number of seconds since the last frame.</li> <li><code>menuMode</code> (boolean): Read-only. If the game is paused- in the inventory or a menu, etc.</li> <li><code>timestamp</code> (number): Read-only. The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).</li> </ul>"},{"location":"events/equip/","title":"Equip","text":""},{"location":"events/equip/#equip","title":"equip","text":"<p>The equip event fires when an actor is about to equip an item, i.e. just before the item is equipped. This event allows scripts to block equipping. See <code>equipped</code>_ for the post-equip event.</p> <p>The item must not be removed from the inventory during this event, as the item and item data is still being referenced by the initiator of the equip action. If you want to consume the item, block the equip and remove it at a later time. Removing the item during this event can cause inventory desync bugs.</p> <pre><code>--- @param e equipEventData\nlocal function equipCallback(e)\nend\nevent.register(tes3.event.equip, equipCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>item</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/equip/#event-data","title":"Event Data","text":"<ul> <li><code>item</code> (tes3item): Read-only. The object being equipped.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data of item.</li> <li><code>reference</code> (tes3reference): Read-only. The reference to the mobile actor that is equipping the item.</li> </ul>"},{"location":"events/equipmentReevaluated/","title":"equipmentReevaluated","text":""},{"location":"events/equipmentReevaluated/#equipmentreevaluated","title":"equipmentReevaluated","text":"<p>The equipmentReevaluated event fires after an actor has gone through its items and determined if anything in its inventory is better than what it currently has equipped. This event can be used to force equip new, custom equipment slots if needed.</p> <pre><code>--- @param e equipmentReevaluatedEventData\nlocal function equipmentReevaluatedCallback(e)\nend\nevent.register(tes3.event.equipmentReevaluated, equipmentReevaluatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>item</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/equipmentReevaluated/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3actor): Read-only. The actor that has reevaluated their equipment.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that has reevaluated their equipment.</li> <li><code>reference</code> (tes3reference): Read-only. The reference that has reevaluated their equipment.</li> </ul>"},{"location":"events/equipped/","title":"Equipped","text":""},{"location":"events/equipped/#equipped","title":"equipped","text":"<p>The equipped event fires after an actor has successfully equipped an item. This event is preceded by the equip event.</p> <pre><code>--- @param e equippedEventData\nlocal function equippedCallback(e)\nend\nevent.register(tes3.event.equipped, equippedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>item</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/equipped/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3actor): Read-only. The actor that has equipped the item.</li> <li><code>item</code> (tes3baseObject): Read-only. The object that has been equipped.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data of item.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that has equipped the item.</li> <li><code>reference</code> (tes3reference): Read-only. The reference to the mobile actor that has equipped the item.</li> </ul>"},{"location":"events/exerciseSkill/","title":"exerciseSkill","text":""},{"location":"events/exerciseSkill/#exerciseskill","title":"exerciseSkill","text":"<p>This event is invoked whenever the player gains experience in a skill. The event can be blocked to prevent progress. Additionally, both the skill gaining experience and the progress gained can be changed.</p> <pre><code>--- @param e exerciseSkillEventData\nlocal function exerciseSkillCallback(e)\nend\nevent.register(tes3.event.exerciseSkill, exerciseSkillCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>skill</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/exerciseSkill/#event-data","title":"Event Data","text":"<ul> <li><code>progress</code> (number): The amount of experience that skill is gaining. Note that experience is not on a scale of 1 to 100. This value is modifiable.</li> <li><code>skill</code> (integer): The ID of the skill that is gaining experience. The IDs used are available in Lua by their indentifier in the <code>tes3.skill</code> namespace. This can be changed to provide experience to a different skill.</li> </ul>"},{"location":"events/fadersCreated/","title":"fadersCreated","text":""},{"location":"events/fadersCreated/#faderscreated","title":"fadersCreated","text":"<p>This event fires once the game starts creating faders. This event is used to create a new fader using <code>tes3fader.new()</code>.</p> <pre><code>--- @param e fadersCreatedEventData\nlocal function fadersCreatedCallback(e)\nend\nevent.register(tes3.event.fadersCreated, fadersCreatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/fadersCreated/#examples","title":"Examples","text":"<p>Example: Creating a fader</p> <pre><code>-- This is a working example. You are encouraged to create a new file\n-- main.lua, paste this code and see the results in-game!\n-- Use `u` key to activate the fader.\n-- Use `l` and `k` keys to increase or decrease the fader's opacity.\n\n-- This variable is used to store our fader.\nlocal fader = nil\n\nlocal function createFader()\n    fader = tes3fader.new()\n    fader:setColor({\n        -- This changes the color of our fader to green.\n        -- The RGB values are in range [0.0, 1.0].\n        color = { 0.0, 1.0, 0.0 },\n    })\n\n    -- The fader needs to be updated every frame to be rendered correctly.\n    -- You may notice that for this event we have registered a function with\n    -- no name. That is an anonymous function. It works exactly the same as\n    -- any other function. We have a need to register this function inside\n    -- our createFader() function, since our `fader` variable is `nil` at start\n    -- (look up). We can't call fader:update() if fader is `nil`.\n    event.register(tes3.event.enterFrame,\n        function()\n            fader:update()\n        end\n    )\nend\n\n-- The fader needs to be created during `fadersCreated` event,\n-- so our createFader() function is registered for that event.\nevent.register(tes3.event.fadersCreated, createFader)\n\n\nlocal opacity = 0.1\n\nlocal function activateFader()\n    -- The fader needs to be activated first to be visible.\n    fader:activate()\n    -- Now we change its visibility.\n    fader:fadeTo({\n        value = opacity,\n        duration = 3,\n    })\n    tes3.messageBox(\"Welcome to the Fallout mode!\")\nend\n\n-- We registered our activateFader() function on keyDown event, filtered for `u` key.\n-- That makes our activateFader() function called only when `u` is pressed.\nevent.register(tes3.event.keyDown, activateFader, { filter = tes3.scanCode.u })\n\nlocal function increaseOpacity()\n    -- The fader's opacity is in [0.0, 1.0] range.\n    -- Make sure we don't exceed it.\n    if opacity &lt;= 0.9 then\n        opacity = opacity + 0.1\n    else\n        return\n    end\n    -- This method sets the current opacity of our fader\n    -- to the value of `opacity` variable\n    fader:updateMaterialProperty(opacity)\n\n    -- The \"\\n\" sign means insert a new line here.\n    -- The \"%.1f\" code means insert the opacity's value in this text.\n    -- The \".1\" part means show 1 decimal after the decimal point.\n    tes3.messageBox(\"Fader opacity increased.\\nCurrent opacity: %.1f\", opacity)\nend\nevent.register(tes3.event.keyDown, increaseOpacity, { filter = tes3.scanCode.l })\n\nlocal function decreaseOpacity()\n    if opacity &gt;= 0.1 then\n        opacity = opacity - 0.1\n    else\n        return\n    end\n    fader:updateMaterialProperty(opacity)\n    tes3.messageBox(\"Fader opacity decreased.\\nCurrent opacity: %.1f\", opacity)\nend\nevent.register(tes3.event.keyDown, decreaseOpacity, { filter = tes3.scanCode.k })\n</code></pre>"},{"location":"events/filterBarterMenu/","title":"filterBarterMenu","text":""},{"location":"events/filterBarterMenu/#filterbartermenu","title":"filterBarterMenu","text":"<p>This event fires when an item in the barter menu is filtered.</p> <pre><code>--- @param e filterBarterMenuEventData\nlocal function filterBarterMenuCallback(e)\nend\nevent.register(tes3.event.filterBarterMenu, filterBarterMenuCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/filterBarterMenu/#event-data","title":"Event Data","text":"<ul> <li><code>item</code> (tes3item): Read-only. The item being filtered.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the item being filtered.</li> <li><code>tile</code> (tes3inventoryTile): Read-only. The inventory tile being filtered.</li> </ul>"},{"location":"events/filterContentsMenu/","title":"filterContentsMenu","text":""},{"location":"events/filterContentsMenu/#filtercontentsmenu","title":"filterContentsMenu","text":"<p>This event fires when an item in the contents menu is filtered.</p> <pre><code>--- @param e filterContentsMenuEventData\nlocal function filterContentsMenuCallback(e)\nend\nevent.register(tes3.event.filterContentsMenu, filterContentsMenuCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/filterContentsMenu/#event-data","title":"Event Data","text":"<ul> <li><code>item</code> (tes3item): Read-only. The item being filtered.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the item being filtered.</li> <li><code>tile</code> (tes3inventoryTile): Read-only. The inventory tile being filtered.</li> </ul>"},{"location":"events/filterInventory/","title":"filterInventory","text":""},{"location":"events/filterInventory/#filterinventory","title":"filterInventory","text":"<p>This event fires when an item in the inventory is filtered.</p> <pre><code>--- @param e filterInventoryEventData\nlocal function filterInventoryCallback(e)\nend\nevent.register(tes3.event.filterInventory, filterInventoryCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/filterInventory/#event-data","title":"Event Data","text":"<ul> <li><code>item</code> (tes3item): Read-only. The item being filtered.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the item being filtered.</li> <li><code>tile</code> (tes3inventoryTile): Read-only. The inventory tile being filtered.</li> </ul>"},{"location":"events/filterInventorySelect/","title":"filterInventorySelect","text":""},{"location":"events/filterInventorySelect/#filterinventoryselect","title":"filterInventorySelect","text":"<p>This event fires when an inventory filter has been selected for an item.</p> <pre><code>--- @param e filterInventorySelectEventData\nlocal function filterInventorySelectCallback(e)\nend\nevent.register(tes3.event.filterInventorySelect, filterInventorySelectCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>type</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/filterInventorySelect/#event-data","title":"Event Data","text":"<ul> <li><code>filter</code> (boolean): Set this value to <code>true</code> to make the item appear in the inventory. If this is set to <code>false</code> the item won't appear in the inventory.</li> <li><code>item</code> (tes3item): Read-only. The item being filtered.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data for the item being filtered.</li> <li><code>type</code> (string): Read-only. The inventory filter type.</li> </ul>"},{"location":"events/filterSoulGemTarget/","title":"filterSoulGemTarget","text":""},{"location":"events/filterSoulGemTarget/#filtersoulgemtarget","title":"filterSoulGemTarget","text":"<p>This event fires when a soul gem target is filtered</p> <pre><code>--- @param e filterSoulGemTargetEventData\nlocal function filterSoulGemTargetCallback(e)\nend\nevent.register(tes3.event.filterSoulGemTarget, filterSoulGemTargetCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/filterSoulGemTarget/#event-data","title":"Event Data","text":"<ul> <li><code>filter</code> (boolean): Setting this to <code>false</code> or <code>nil</code> will prevent the <code>mobile</code>'s soul to end up in the <code>soulGem</code>. Setting this to <code>true</code> will make the opposite.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor whose soul is to be soultrapped.</li> <li><code>reference</code> (tes3reference): Read-only. The reference.</li> <li><code>soulGem</code> (tes3misc): Read-only. The soul gem object.</li> </ul>"},{"location":"events/filterSoulGemTarget/#examples","title":"Examples","text":"<p>Example: A more elaborate example.</p> <pre><code>local function onInitialized()\n    tes3.addSoulGem({ item = \"misc_dwrv_artifact60\" })\nend\nevent.register(tes3.event.initialized, onInitialized)\n\nlocal function onFilterSoulGemTarget(e)\n    if (e.reference.baseObject.id:lower() == \"fargoth\") then\n        return e.soulGem.id == \"misc_dwrv_artifact60\"\n    end\nend\nevent.register(tes3.event.filterSoulGemTarget, onFilterSoulGemTarget)\n\n-- calcSoulValue event allows assigning a new soul value to creatures\n-- If the event was triggered for an NPC, it allows assigning a value\n-- thus allowing soul-trapping the actor.\nlocal function calcSoulValueCallback(e)\n    if (e.actor.id:lower() == \"fargoth\") then\n        e.value = 69\n        mwse.log(\"Getting Fargoth's value.\")\n        return\n    end\nend\nevent.register(tes3.event.calcSoulValue, calcSoulValueCallback)\n</code></pre> <p>Example: Example</p> <pre><code>local function onInitialized()\n    -- This will turn the Dwemer Tube in a soul gem\n    tes3.addSoulGem({ item = \"misc_dwrv_artifact60\" })\nend\nevent.register(tes3.event.initialized, onInitialized)\n\nlocal function onFilterSoulGemTarget(e)\n    -- Make it so Vivec can only be trapped by a special container.\n    if (e.reference.baseObject.id:lower() == \"vivec\") then\n        e.filter = (e.soulGem.id == \"misc_dwrv_artifact60\")\n    end\nend\nevent.register(tes3.event.filterSoulGemTarget, onFilterSoulGemTarget)\n</code></pre>"},{"location":"events/infoFilter/","title":"infoFilter","text":""},{"location":"events/infoFilter/#infofilter","title":"infoFilter","text":"<p>This event fires when a dialogue info object is filtered.</p> <pre><code>--- @param e infoFilterEventData\nlocal function infoFilterCallback(e)\nend\nevent.register(tes3.event.infoFilter, infoFilterCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/infoFilter/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3object): Read-only. The actor.</li> <li><code>dialogue</code> (tes3dialogue): Read-only. The dialogue object.</li> <li><code>info</code> (tes3dialogueInfo): Read-only. The dialogue info object.</li> <li><code>passes</code> (boolean): Indicates if the filter passes.</li> <li><code>reference</code> (tes3reference): Read-only. The reference.</li> <li><code>source</code> (integer): Read-only. The source.</li> </ul>"},{"location":"events/infoGetText/","title":"infoGetText","text":""},{"location":"events/infoGetText/#infogettext","title":"infoGetText","text":"<p>This event fires when a dialogue info object text is retrieved. That can be when starting a conversation with an NPC, a service was refused to the player, NPC's responses to player persuading them and if the subtitles are enabled, getting the text for the subtitle will also trigger <code>infoGetText</code> event.</p> <pre><code>--- @param e infoGetTextEventData\nlocal function infoGetTextCallback(e)\nend\nevent.register(tes3.event.infoGetText, infoGetTextCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>info</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/infoGetText/#event-data","title":"Event Data","text":"<ul> <li><code>info</code> (tes3dialogueInfo): Read-only. The dialogue info object.</li> <li><code>loadOriginalText</code> (fun(self: infoGetTextEventData): string): Loads the original text for the info from the game files, bypassing this event.</li> <li><code>text</code> (string): The text to return. This can be modified. Does not contain the original text. If not set, the original text will be used instead.</li> </ul>"},{"location":"events/infoGetText/#examples","title":"Examples","text":"<p>Example: Append custom text to a greeting line.</p> <pre><code>-- This will make Ra'virr give the player 2 Moon Sugar when the conversation is initiated\n\nlocal function onInfoGetText(e)\n    if e.info.actor.id ~= \"ra'virr\" then\n        return\n    end\n\n    if e.info.type == tes3.dialogueType.greeting then\n        -- e.text is empty by default.\n        e.text = e:loadOriginalText() .. \"\\n\\nSweet sugar! Have some.\"\n        tes3.addItem({\n            reference = tes3.player,\n            item = \"ingred_moon_sugar_01\",\n            count = 2,\n        })\n    end\nend\n\nevent.register(tes3.event.infoGetText, onInfoGetText)\n</code></pre>"},{"location":"events/infoLinkResolve/","title":"infoLinkResolve","text":""},{"location":"events/infoLinkResolve/#infolinkresolve","title":"infoLinkResolve","text":"<p>This event fires when a dialogue hyperlink is being resolved to a topic, during UI layout (not on link activation).</p> <pre><code>--- @param e infoLinkResolveEventData\nlocal function infoLinkResolveCallback(e)\nend\nevent.register(tes3.event.infoLinkResolve, infoLinkResolveCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/infoLinkResolve/#event-data","title":"Event Data","text":"<ul> <li><code>topic</code> (string): The topic that activates when this hyperlink is clicked. Initially set to the link text. Set this value to change the target topic.</li> </ul>"},{"location":"events/infoResponse/","title":"infoResponse","text":""},{"location":"events/infoResponse/#inforesponse","title":"infoResponse","text":"<p>This event fires when a dialogue response is triggered.</p> <pre><code>--- @param e infoResponseEventData\nlocal function infoResponseCallback(e)\nend\nevent.register(tes3.event.infoResponse, infoResponseCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/infoResponse/#event-data","title":"Event Data","text":"<ul> <li><code>command</code> (string): Read-only. The command.</li> <li><code>dialogue</code> (tes3dialogue): Read-only. The dialogue object.</li> <li><code>info</code> (tes3dialogueInfo): Read-only. The dialogue info object.</li> <li><code>reference</code> (tes3reference): Read-only. The reference.</li> <li><code>variables</code> (tes3scriptVariables): Read-only. The script variables.</li> </ul>"},{"location":"events/initialized/","title":"Initialized","text":""},{"location":"events/initialized/#initialized","title":"initialized","text":"<p>The initialized event fires when game code has finished initializing, and all .esm and .esp files have been loaded.</p> <pre><code>--- @param e initializedEventData\nlocal function initializedCallback(e)\nend\nevent.register(tes3.event.initialized, initializedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/isGuard/","title":"isGuard","text":""},{"location":"events/isGuard/#isguard","title":"isGuard","text":"<p>The isGuard event triggers whenever the game engine checks if an NPC object is a guard. The guard status can be modified. This alone will not make an NPC behave like a guard, though.</p> <pre><code>--- @param e isGuardEventData\nlocal function isGuardCallback(e)\nend\nevent.register(tes3.event.isGuard, isGuardCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/isGuard/#event-data","title":"Event Data","text":"<ul> <li><code>isGuard</code> (boolean): The previously calculated guard status.</li> <li><code>npc</code> (tes3npc): Read-only. The NPC that the guard status is being checked for.</li> </ul>"},{"location":"events/itemDropped/","title":"itemDropped","text":""},{"location":"events/itemDropped/#itemdropped","title":"itemDropped","text":"<p>This event fires when an item is dropped.</p> <pre><code>--- @param e itemDroppedEventData\nlocal function itemDroppedCallback(e)\nend\nevent.register(tes3.event.itemDropped, itemDroppedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/itemDropped/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference.</li> </ul>"},{"location":"events/itemTileUpdated/","title":"itemTileUpdated","text":""},{"location":"events/itemTileUpdated/#itemtileupdated","title":"itemTileUpdated","text":"<p>This event is fired whenever an inventory item tile is updated, as well as when the tile is created. This can be used to easily manipulate or extend the appearance of inventory tiles.</p> <pre><code>--- @param e itemTileUpdatedEventData\nlocal function itemTileUpdatedCallback(e)\nend\nevent.register(tes3.event.itemTileUpdated, itemTileUpdatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/itemTileUpdated/#event-data","title":"Event Data","text":"<ul> <li><code>element</code> (tes3uiElement): Read-only. The UI element that the tile is displayed on.</li> <li><code>item</code> (tes3item): Read-only. The tile's item.</li> <li><code>itemData</code> (tes3itemData): Read-only. The tile's item data, if any.</li> <li><code>menu</code> (tes3uiElement): Read-only. The root menu of the tile. This will typically be the MenuInventory, MenuContents, or MenuBarter menus.</li> <li><code>tile</code> (tes3inventoryTile): Read-only. The tile data itself. This typically contains references to all the other event fields, among other tile-specific information.</li> </ul>"},{"location":"events/journal/","title":"Journal","text":""},{"location":"events/journal/#journal","title":"journal","text":"<p>The journal event is invoked when a journal state progresses.</p> <pre><code>--- @param e journalEventData\nlocal function journalCallback(e)\nend\nevent.register(tes3.event.journal, journalCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/journal/#event-data","title":"Event Data","text":"<ul> <li><code>index</code> (number): Read-only. The new index of the journal state.</li> <li><code>info</code> (tes3dialogueInfo): Read-only. The info for the newly set journal index.</li> <li><code>new</code> (boolean): Read-only. If true, the journal is newly added to the player. This effectively means that index has increased past 0.</li> <li><code>previousIndex</code> (number): Read-only. The previous index of the journal state.</li> <li><code>previousInfo</code> (tes3dialogueInfo, nil): Read-only. The info for the previously set journal index. If the journal entry is <code>new</code>ly added, this will be <code>nil</code>.</li> <li><code>topic</code> (tes3dialogue): Read-only. The topic that dictates the journal entry.</li> </ul>"},{"location":"events/jump/","title":"Jump","text":""},{"location":"events/jump/#jump","title":"jump","text":"<p>This event is called when an actor tries to jump. The <code>velocity</code> and <code>applyFatigueCost</code> can be modified.</p> <pre><code>--- @param e jumpEventData\nlocal function jumpCallback(e)\nend\nevent.register(tes3.event.jump, jumpCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/jump/#event-data","title":"Event Data","text":"<ul> <li><code>applyFatigueCost</code> (boolean): If <code>false</code>, this jump will not reduce fatigue.</li> <li><code>isDefaultJump</code> (boolean): Read-only. If <code>true</code>, the jump has been initiated from the ground and without custom velocity or fatigue cost. This does not change if other event callbacks change any of these parameters.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that is trying to jump.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile's related reference.</li> <li><code>velocity</code> (tes3vector3): The velocity of the jump.</li> </ul>"},{"location":"events/jump/#examples","title":"Examples","text":"<p>Example: Disable jumping while encumbered</p> <p>Disables jumping for the player if their current encumbrance is over 50%.</p> <pre><code>local function onJump(e)\n    -- Check if the actor that is trying to jump is the player.\n    if e.mobile == tes3.mobilePlayer then\n        -- Define the threshold at which we no longer want to be able to jump.\n        -- This is set to 50% of the player's maximum encumbrance.\n        local encumbranceThreshold = e.mobile.encumbrance.base * 0.5\n\n        -- Check if the current encumbrance is higher than our defined threshold and prevent jumping.\n        if e.mobile.encumbrance.current &gt; encumbranceThreshold then\n            -- Show a message to the player to inform them that jumping is not possible.\n            tes3.messageBox(\"You are unable to jump.\")\n\n            -- Block the vanilla jump logic and prevent other jump events from being triggered.\n            return false\n        end\n    end\nend\nevent.register(tes3.event.jump, onJump)\n</code></pre> <p>Example: Double jump height</p> <p>Double the height of every jump.</p> <pre><code>local function onJump(e)\n    -- Multiply the velocity on the Z-Axis (Up/Down) by 2.\n    e.velocity.z = e.velocity.z * 2\nend\nevent.register(tes3.event.jump, onJump)\n</code></pre> <p>Example: Force player jump height</p> <p>Forces the jump height of the player to a fixed value, not taking into account attributes, skills, fatigue, encumbrance and other factors.</p> <pre><code>local function onJump(e)\n    -- Check if the actor that is trying to jump is the player.\n    if e.mobile == tes3.mobilePlayer then\n        -- Define the fixed height of the jump.\n        local jumpHeight = 300\n\n        -- Multiply the normalized direction vector of the jump by the fixed jump height.\n        -- This will make jumps initiated during movement behave like they normally do.\n        e.velocity = e.velocity:normalized() * jumpHeight\n    end\nend\nevent.register(tes3.event.jump, onJump)\n</code></pre>"},{"location":"events/key/","title":"Key","text":""},{"location":"events/key/#key","title":"key","text":"<p>The key event fires when a key up or key down input is detected. It is preferred that the keyDown and keyUp events are used instead.</p> <pre><code>--- @param e keyEventData\nlocal function keyCallback(e)\nend\nevent.register(tes3.event.key, keyCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>keyCode</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/key/#event-data","title":"Event Data","text":"<ul> <li><code>isAltDown</code> (number): Read-only. True if either alt key is held.</li> <li><code>isControlDown</code> (number): Read-only. True if either control key is held.</li> <li><code>isShiftDown</code> (number): Read-only. True if either shift key is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> <li><code>keyCode</code> (number): Read-only. The scan code of the key that raised the event.</li> <li><code>pressed</code> (boolean): Read-only. True if this is a key down event, false for a key up event.</li> </ul>"},{"location":"events/key/#examples","title":"Examples","text":"<p>Example: Show a Message when Ctrl-Z is Pressed</p> <p>Displays a simple message when Z is pressed while control is held.</p> <pre><code>local function myOnKeyCallback(e)\n    if( e.pressed and e.isControlDown ) then\n        tes3.messageBox({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" })\n    end\nend\n\n-- Filter by the scan code to get Z key presses only.\nevent.register(tes3.event.key, myOnKeyCallback, { filter = tes3.scanCode.z } )\n</code></pre>"},{"location":"events/keyDown/","title":"keyDown","text":""},{"location":"events/keyDown/#keydown","title":"keyDown","text":"<p>The key event fires when a key is pressed.</p> <pre><code>--- @param e keyDownEventData\nlocal function keyDownCallback(e)\nend\nevent.register(tes3.event.keyDown, keyDownCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>keyCode</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/keyDown/#event-data","title":"Event Data","text":"<ul> <li><code>isAltDown</code> (number): Read-only. True if either alt key is held.</li> <li><code>isControlDown</code> (number): Read-only. True if either control key is held.</li> <li><code>isShiftDown</code> (number): Read-only. True if either shift key is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> <li><code>keyCode</code> (number): Read-only. The scan code of the key that raised the event.</li> </ul>"},{"location":"events/keyDown/#examples","title":"Examples","text":"<p>Example: Show a Message when Ctrl-Z is Pressed</p> <p>Displays a simple message when Z is pressed while control is held.</p> <pre><code>local function myOnKeyCallback(e)\n    if( e.isControlDown ) then\n        tes3.messageBox({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" })\n    end\nend\n\n-- Filter by the scan code to get Z key presses only.\nevent.register(tes3.event.keyDown, myOnKeyCallback, { filter = tes3.scanCode.z } )\n</code></pre>"},{"location":"events/keyUp/","title":"keyUp","text":""},{"location":"events/keyUp/#keyup","title":"keyUp","text":"<p>The key event fires when a key is released.</p> <pre><code>--- @param e keyUpEventData\nlocal function keyUpCallback(e)\nend\nevent.register(tes3.event.keyUp, keyUpCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>keyCode</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/keyUp/#event-data","title":"Event Data","text":"<ul> <li><code>isAltDown</code> (number): Read-only. True if either alt key is held.</li> <li><code>isControlDown</code> (number): Read-only. True if either control key is held.</li> <li><code>isShiftDown</code> (number): Read-only. True if either shift key is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> <li><code>keyCode</code> (number): Read-only. The scan code of the key that raised the event.</li> </ul>"},{"location":"events/keybindTested/","title":"keybindTested","text":""},{"location":"events/keybindTested/#keybindtested","title":"keybindTested","text":"<p>This event fires whenever a keybind is tested by the game. A keybind test is often used to see if a button is pressed, but it can also be done to see if an input was toggled or released. Blocking this event is equivalent to setting the <code>result</code> event data to false.</p> <pre><code>--- @param e keybindTestedEventData\nlocal function keybindTestedCallback(e)\nend\nevent.register(tes3.event.keybindTested, keybindTestedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>keybind</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/keybindTested/#event-data","title":"Event Data","text":"<ul> <li><code>keybind</code> (number): Read-only. The keybind that was tested. This maps to the <code>tes3.keybind.*</code> constants.</li> <li><code>result</code> (boolean): The read state of the keybind. If true, the key was pressed/released/toggled as determined by the <code>transition</code> event data.</li> <li><code>transition</code> (number): Read-only. The transition for the keybind that was tested. This is typically <code>tes3.keyTransition.down</code> but not guaranteed to be. Always be sure to check what transition is being used.</li> </ul>"},{"location":"events/keybindTested/#examples","title":"Examples","text":"<p>Example: Block Journal Keybind</p> <p>Prevents the journal keybind from ever being registered as pressed.</p> <pre><code>--- @param e keybindTestedEventData\nlocal function noJournalMenu(e)\n    -- We only care about checks to see if the key was pressed.\n    if (e.transition ~= tes3.keyTransition.down) then\n        return\n    end\n\n    -- If the result was false, we also don't care.\n    if (not e.result) then\n        return\n    end\n\n    -- Set the result to false to make the game think the key wasn't pressed.\n    -- We could also block this event by using `return false`.\n    tes3.messageBox(\"You aren't allowed to open your journal.\")\n    e.result = false\nend\nevent.register(tes3.event.keybindTested, noJournalMenu, { filter = tes3.keybind.journal })\n</code></pre>"},{"location":"events/keyframesLoad/","title":"keyframesLoad","text":""},{"location":"events/keyframesLoad/#keyframesload","title":"keyframesLoad","text":"<p>This event is triggered before a keyframes file is loaded. The path can be changed to instead load a different keyframes file.</p> <pre><code>--- @param e keyframesLoadEventData\nlocal function keyframesLoadCallback(e)\nend\nevent.register(tes3.event.keyframesLoad, keyframesLoadCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>path</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/keyframesLoad/#event-data","title":"Event Data","text":"<ul> <li><code>path</code> (string): The path to the keyframes file, relative to Data Files\\Meshes.</li> <li><code>sequenceName</code> (string): The name of the associated NiSequence object.</li> </ul>"},{"location":"events/levelUp/","title":"levelUp","text":""},{"location":"events/levelUp/#levelup","title":"levelUp","text":"<p>This even is called whenever the player successfully finishes leveling up.</p> <pre><code>--- @param e levelUpEventData\nlocal function levelUpCallback(e)\nend\nevent.register(tes3.event.levelUp, levelUpCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>level</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/levelUp/#event-data","title":"Event Data","text":"<ul> <li><code>level</code> (number): Read-only. The new level obtained.</li> </ul>"},{"location":"events/leveledCreaturePicked/","title":"leveledCreaturePicked","text":""},{"location":"events/leveledCreaturePicked/#leveledcreaturepicked","title":"leveledCreaturePicked","text":"<p>This event is called after any leveled creature list is resolved. The event may be filtered by its list, and its pick can be overwritten. While this event allows for customization, the leveled list may be altered directly as well.</p> <pre><code>--- @param e leveledCreaturePickedEventData\nlocal function leveledCreaturePickedCallback(e)\nend\nevent.register(tes3.event.leveledCreaturePicked, leveledCreaturePickedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>list</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/leveledCreaturePicked/#event-data","title":"Event Data","text":"<ul> <li><code>cell</code> (tes3cell, nil): The cell associated with the pick, if any. This may be the <code>spawner</code>'s cell, the temporarily created empty cell, or the cell the player's sleep was interrupted in.</li> <li><code>list</code> (tes3leveledCreature): Read-only. The list responsible for creating a pick.</li> <li><code>pick</code> (tes3creature, nil): The result of the pick by vanilla mechanism. This can be modified to change the result to something else.</li> <li><code>source</code> (string): The context that the creature is being spawned in. Valid values include: <code>\"reference\"</code> for when spawned from a placed leveled spawn; <code>\"emptyCell\"</code> for when the player is exploring empty, undefined exterior cells; <code>\"sleepInterrupt\"</code> for when a random creature is chosen to attack the player when resting; and <code>\"script\"</code> for otherwise scripted picking.</li> <li><code>spawner</code> (tes3reference, nil): If spawned from a placed leveled creature reference, this is a handle to the creating reference.</li> </ul>"},{"location":"events/leveledItemPicked/","title":"leveledItemPicked","text":""},{"location":"events/leveledItemPicked/#leveleditempicked","title":"leveledItemPicked","text":"<p>This event is called after any leveled item list is resolved.</p> <pre><code>--- @param e leveledItemPickedEventData\nlocal function leveledItemPickedCallback(e)\nend\nevent.register(tes3.event.leveledItemPicked, leveledItemPickedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>list</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/leveledItemPicked/#event-data","title":"Event Data","text":"<ul> <li><code>list</code> (tes3leveledItem): Read-only. The list responsible for creating a pick.</li> <li><code>pick</code> (tes3item): The result of the pick by vanilla mechanism.</li> <li><code>spawner</code> (tes3reference, nil): The reference for the inventory that the item is being picked in. In many cases this may be <code>nil</code>.</li> </ul>"},{"location":"events/load/","title":"Load","text":""},{"location":"events/load/#load","title":"load","text":"<p>The load event fires when the game is about to load. This event allows scripts to block loading.</p> <pre><code>--- @param e loadEventData\nlocal function loadCallback(e)\nend\nevent.register(tes3.event.load, loadCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>filename</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/load/#event-data","title":"Event Data","text":"<ul> <li><code>filename</code> (string): The filename of the save we want to load, not including file extension. Can be modified to redirect to another save.</li> <li><code>newGame</code> (boolean): Read-only. If true, a new game is being started.</li> <li><code>quickload</code> (boolean): Read-only. If true, the load came from the quickload system.</li> </ul>"},{"location":"events/loaded/","title":"Loaded","text":""},{"location":"events/loaded/#loaded","title":"loaded","text":"<p>The loaded event fires after the game has been successfully loaded. This event is preceded by the load event.</p> <pre><code>--- @param e loadedEventData\nlocal function loadedCallback(e)\nend\nevent.register(tes3.event.loaded, loadedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/loaded/#event-data","title":"Event Data","text":"<ul> <li><code>filename</code> (string): Read-only. The filename of the save that was loaded, not including file extension.</li> <li><code>newGame</code> (boolean): Read-only. If true, a new game was started.</li> <li><code>quickload</code> (boolean): Read-only. If true, the load came from the quickload system.</li> </ul>"},{"location":"events/lockPick/","title":"lockPick","text":""},{"location":"events/lockPick/#lockpick","title":"lockPick","text":"<p>This event fires when a lock is being picked.</p> <pre><code>--- @param e lockPickEventData\nlocal function lockPickCallback(e)\nend\nevent.register(tes3.event.lockPick, lockPickCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/lockPick/#event-data","title":"Event Data","text":"<ul> <li><code>chance</code> (number): Read-only. The chance the lockpick will be successful.</li> <li><code>lockData</code> (tes3lockNode): Read-only. The lock data of the reference.</li> <li><code>lockPresent</code> (boolean): Read-only. Indicates if a lock is present on the reference.</li> <li><code>picker</code> (tes3mobileNPC): Read-only. The Mobile NPC doing the disarming.</li> <li><code>reference</code> (tes3reference): Read-only. The reference that triggered the event (container, door, etc.).</li> <li><code>tool</code> (tes3item): Read-only. The item the picker is using to pick the lock.</li> <li><code>toolItemData</code> (tes3itemData): Read-only. The item data for the tool.</li> </ul>"},{"location":"events/magicCasted/","title":"magicCasted","text":""},{"location":"events/magicCasted/#magiccasted","title":"magicCasted","text":"<p>This event is triggered when any spell or enchant is cast successfully, or when any alchemy item is used. This includes spells cast via scripts. For spells, this occurs at the end of the casting animation. For spells and enchants, it is just after the magic projectile has been constructed.</p> <pre><code>--- @param e magicCastedEventData\nlocal function magicCastedCallback(e)\nend\nevent.register(tes3.event.magicCasted, magicCastedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/magicCasted/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>target</code> (tes3reference): Read-only. The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have <code>target</code> parameter. On target spells don't have <code>target</code> parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.</li> </ul>"},{"location":"events/magicEffectRemoved/","title":"magicEffectRemoved","text":""},{"location":"events/magicEffectRemoved/#magiceffectremoved","title":"magicEffectRemoved","text":"<p>This event triggers when a magic effect has been removed from an actor. This includes magic effects that have been resisted or are part of abilities like racial passives and diseases.</p> <pre><code>--- @param e magicEffectRemovedEventData\nlocal function magicEffectRemovedCallback(e)\nend\nevent.register(tes3.event.magicEffectRemoved, magicEffectRemovedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/magicEffectRemoved/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the magic source that contained the magic effect. Can be <code>nil</code>.</li> <li><code>effect</code> (tes3effect): Read-only. The specific effect that triggered the event. This is equal to <code>e.source.effects[e.effectIndex]</code>. Can be <code>nil</code>.</li> <li><code>effectIndex</code> (number): Read-only. The index of the effect in the magic source's effects list.</li> <li><code>effectInstance</code> (tes3magicEffectInstance): Read-only. The effect instance of the effect.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor the magic effect is removed from.</li> <li><code>reference</code> (tes3reference): Read-only. The reference of the mobile actor the magic effect is removed from.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source that contains the effect.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source that contains the effect.</li> <li><code>target</code> (tes3reference): Read-only. The target of the magic source that contained the magic effect. Can be <code>nil</code>.</li> </ul>"},{"location":"events/magicEffectRemoved/#examples","title":"Examples","text":"<p>Example: Show removed effect</p> <p>Show the name of the magic effect and spell/enchantment/alchemy that has been removed from the player.</p> <pre><code>local function onMagicEffectRemoved(e)\n    -- Make sure we are only showing messages for effects that are applied to the player.\n    if e.mobile == tes3.mobilePlayer then\n        -- Get the name of the magic effect that has been removed.\n        local effectName = tes3.getMagicEffect(e.effect.id).name\n\n        -- Get the name of the spell/enchantment/alchemy this magic effect belongs to.\n        local sourceName = e.source.name\n\n        -- Show a message containing the effect and spell/enchantment/alchemy names to the player.\n        tes3.messageBox(\"Effect '%s' from '%s' has been removed.\", effectName, sourceName)\n    end\nend\nevent.register(tes3.event.magicEffectRemoved, onMagicEffectRemoved)\n</code></pre>"},{"location":"events/magicEffectsResolved/","title":"magicEffectsResolved","text":""},{"location":"events/magicEffectsResolved/#magiceffectsresolved","title":"magicEffectsResolved","text":"<p>This event triggers after all magic effect links have been resolved. This event is used to add new magic effects by using the <code>tes3.addMagicEffect()</code> function. For examples of this event in practice see the <code>tes3.addMagicEffect()</code> example.</p> <pre><code>--- @param e magicEffectsResolvedEventData\nlocal function magicEffectsResolvedCallback(e)\nend\nevent.register(tes3.event.magicEffectsResolved, magicEffectsResolvedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/menuEnter/","title":"menuEnter","text":""},{"location":"events/menuEnter/#menuenter","title":"menuEnter","text":"<p>The menuEnter event fires when the player enters menu mode.</p> <pre><code>--- @param e menuEnterEventData\nlocal function menuEnterCallback(e)\nend\nevent.register(tes3.event.menuEnter, menuEnterCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>menu.name</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/menuEnter/#event-data","title":"Event Data","text":"<ul> <li><code>menu</code> (tes3uiElement): Read-only. The new top-level menu.</li> <li><code>menuMode</code> (boolean): Read-only. Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.</li> </ul>"},{"location":"events/menuExit/","title":"menuExit","text":""},{"location":"events/menuExit/#menuexit","title":"menuExit","text":"<p>The menuExit event fires when the player leaves menu mode.</p> <pre><code>--- @param e menuExitEventData\nlocal function menuExitCallback(e)\nend\nevent.register(tes3.event.menuExit, menuExitCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/menuExit/#event-data","title":"Event Data","text":"<ul> <li><code>menuMode</code> (boolean): Read-only. Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.</li> </ul>"},{"location":"events/meshLoad/","title":"meshLoad","text":""},{"location":"events/meshLoad/#meshload","title":"meshLoad","text":"<p>This event is triggered before a mesh is loaded. The path can be changed to instead load a different mesh.</p> <pre><code>--- @param e meshLoadEventData\nlocal function meshLoadCallback(e)\nend\nevent.register(tes3.event.meshLoad, meshLoadCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>path</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/meshLoad/#event-data","title":"Event Data","text":"<ul> <li><code>path</code> (string): The path to the mesh, relative to Data Files\\Meshes</li> </ul>"},{"location":"events/meshLoaded/","title":"meshLoaded","text":""},{"location":"events/meshLoaded/#meshloaded","title":"meshLoaded","text":"<p>This event is triggered when a mesh is loaded.</p> <pre><code>--- @param e meshLoadedEventData\nlocal function meshLoadedCallback(e)\nend\nevent.register(tes3.event.meshLoaded, meshLoadedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>path</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/meshLoaded/#event-data","title":"Event Data","text":"<ul> <li><code>node</code> (niAVObject): The niAVObject-derived object of the loaded mesh.</li> <li><code>path</code> (string): The path to the mesh, relative to Data Files\\Meshes</li> </ul>"},{"location":"events/mobileActivated/","title":"mobileActivated","text":""},{"location":"events/mobileActivated/#mobileactivated","title":"mobileActivated","text":"<p>This event is called when a mobile object is activated. This includes NPCs, creatures and projectiles, but not the player. This may be the first time that a given reference has an associated mobile object attached to it. Typically this happens when a projectile gets fired, a creature gets summoned or when the player transitions from one cell to another, causing actors in newly loaded cells to get activated.</p> <pre><code>--- @param e mobileActivatedEventData\nlocal function mobileActivatedCallback(e)\nend\nevent.register(tes3.event.mobileActivated, mobileActivatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mobileActivated/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileObject): Read-only. The activated mobile object.</li> <li><code>reference</code> (tes3reference): Read-only. The reference that the mobile object has been activated for.</li> </ul>"},{"location":"events/mobileDeactivated/","title":"mobileDeactivated","text":""},{"location":"events/mobileDeactivated/#mobiledeactivated","title":"mobileDeactivated","text":"<p>This event is called when a mobile object is deactivated. This includes NPCs, creatures and projectiles, but not the player. Typically this happens when an actor dies, a creature gets unsummoned, a projectile collides with something or expires or when the player transitions from one cell to another, causing actors in previously visited cells to get deactivated.</p> <pre><code>--- @param e mobileDeactivatedEventData\nlocal function mobileDeactivatedCallback(e)\nend\nevent.register(tes3.event.mobileDeactivated, mobileDeactivatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mobileDeactivated/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileObject): Read-only. The deactivated mobile object.</li> <li><code>reference</code> (tes3reference): Read-only. The reference that the mobile object has been deactivated for.</li> </ul>"},{"location":"events/modConfigReady/","title":"modConfigReady","text":""},{"location":"events/modConfigReady/#modconfigready","title":"modConfigReady","text":"<p>This event fires once MWSE's internal mod configuration menu code has initialized. This event is used in mods to register settings configuration menu using MCM API.</p> <pre><code>--- @param e modConfigReadyEventData\nlocal function modConfigReadyCallback(e)\nend\nevent.register(tes3.event.modConfigReady, modConfigReadyCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/modConfigReady/#examples","title":"Examples","text":"<p>Example: Basic MCM.</p> <pre><code>local config = require(\"MyMod.config\")\n\nlocal function onModConfigReady()\n    local template = mwse.mcm.createTemplate({ name = \"My Mod\" })\n    template:saveOnClose(\"My Mod\", config)\n\n    local settings = template:createSideBarPage({ label = \"Settings\" })\n    settings.sidebar:createInfo({\n        -- This text will be on the right-hand side block\n        text = \"My Mod v. 1.0\\n\\nCreated by me.\\n\\nHover over a feature for more info.\"\n    })\n\n    settings:createOnOffButton({\n        label = \"Feature\",\n        -- The text in the description will replace the text\n        -- in sidebar on the right-hand side, when this button\n        -- is hovered over.\n        description = \"This feature does...\",\n        variable = mwse.mcm.createTableVariable({\n            id = \"feature\",\n            table = config,\n        })\n    })\n\nend\n\nevent.register(tes3.event.modConfigReady, onModConfigReady)\n</code></pre>"},{"location":"events/mouseAxis/","title":"mouseAxis","text":""},{"location":"events/mouseAxis/#mouseaxis","title":"mouseAxis","text":"<p>The mouseAxis event fires when the mouse is moved, providing deltaX and deltaY values.</p> <pre><code>--- @param e mouseAxisEventData\nlocal function mouseAxisCallback(e)\nend\nevent.register(tes3.event.mouseAxis, mouseAxisCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mouseAxis/#event-data","title":"Event Data","text":"<ul> <li><code>deltaX</code> (number): Read-only. The difference in horizontal mouse position from the previous frame.</li> <li><code>deltaY</code> (number): Read-only. The difference in vertical mouse position from the previous frame.</li> <li><code>isAltDown</code> (number): Read-only. True if alt  is held.</li> <li><code>isControlDown</code> (number): Read-only. True if control is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> </ul>"},{"location":"events/mouseButtonDown/","title":"mouseButtonDown","text":""},{"location":"events/mouseButtonDown/#mousebuttondown","title":"mouseButtonDown","text":"<p>This event fires when a button on the mouse is pressed.</p> <pre><code>--- @param e mouseButtonDownEventData\nlocal function mouseButtonDownCallback(e)\nend\nevent.register(tes3.event.mouseButtonDown, mouseButtonDownCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>button</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mouseButtonDown/#event-data","title":"Event Data","text":"<ul> <li><code>button</code> (number): Read-only. The button index that was pressed.</li> <li><code>isAltDown</code> (number): Read-only. True if alt  is held.</li> <li><code>isControlDown</code> (number): Read-only. True if control is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> </ul>"},{"location":"events/mouseButtonUp/","title":"mouseButtonUp","text":""},{"location":"events/mouseButtonUp/#mousebuttonup","title":"mouseButtonUp","text":"<p>This event fires when a button on the mouse is released.</p> <pre><code>--- @param e mouseButtonUpEventData\nlocal function mouseButtonUpCallback(e)\nend\nevent.register(tes3.event.mouseButtonUp, mouseButtonUpCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>button</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mouseButtonUp/#event-data","title":"Event Data","text":"<ul> <li><code>button</code> (number): Read-only. The button index that was released.</li> <li><code>isAltDown</code> (number): Read-only. True if alt  is held.</li> <li><code>isControlDown</code> (number): Read-only. True if control is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> </ul>"},{"location":"events/mouseWheel/","title":"mouseWheel","text":""},{"location":"events/mouseWheel/#mousewheel","title":"mouseWheel","text":"<p>The mouseWheel event fires when the mouse wheel is used, providing a delta value.</p> <pre><code>--- @param e mouseWheelEventData\nlocal function mouseWheelCallback(e)\nend\nevent.register(tes3.event.mouseWheel, mouseWheelCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/mouseWheel/#event-data","title":"Event Data","text":"<ul> <li><code>delta</code> (number): Read-only. The direction and strength of the mouse wheel movement. This value is hardware dependent.</li> <li><code>isAltDown</code> (number): Read-only. True if alt is held.</li> <li><code>isControlDown</code> (number): Read-only. True if control is held.</li> <li><code>isSuperDown</code> (number): Read-only. True if super (Windows key) is held.</li> </ul>"},{"location":"events/musicSelectTrack/","title":"musicSelectTrack","text":""},{"location":"events/musicSelectTrack/#musicselecttrack","title":"musicSelectTrack","text":"<p>The musicSelectTrack event occurs when new music is needed after a playing music track ends, or the combat situation changes. It allows you to select your own music for the current conditions by setting eventData.music. However, it does not control transitions to combat music, which in the future will be available in another event.</p> <pre><code>--- @param e musicSelectTrackEventData\nlocal function musicSelectTrackCallback(e)\nend\nevent.register(tes3.event.musicSelectTrack, musicSelectTrackCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/musicSelectTrack/#event-data","title":"Event Data","text":"<ul> <li><code>music</code> (string): Optional. If set to the path of a given track (relative to Data Files/music), it will play the given path instead of a random one.</li> <li><code>situation</code> (number): Read-only. Maps to <code>tes3.musicSituation</code>, indicating combat or non-combat music.</li> </ul>"},{"location":"events/objectInvalidated/","title":"objectInvalidated","text":""},{"location":"events/objectInvalidated/#objectinvalidated","title":"objectInvalidated","text":"<p>This event is raised when reference is invalidated. This includes being removed from memory. This event can be used to safely remove references from tables.</p> <pre><code>--- @param e objectInvalidatedEventData\nlocal function objectInvalidatedCallback(e)\nend\nevent.register(tes3.event.objectInvalidated, objectInvalidatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>object</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/objectInvalidated/#event-data","title":"Event Data","text":"<ul> <li><code>object</code> (tes3baseObject): Read-only. The object being invalidated. Can be a tes3reference.</li> </ul>"},{"location":"events/playGroup/","title":"playGroup","text":""},{"location":"events/playGroup/#playgroup","title":"playGroup","text":"<p>This event is triggered when an animation is about to be played.</p> <pre><code>--- @param e playGroupEventData\nlocal function playGroupCallback(e)\nend\nevent.register(tes3.event.playGroup, playGroupCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/playGroup/#event-data","title":"Event Data","text":"<ul> <li><code>animationData</code> (tes3animationData): Read-only. The related animation data.</li> <li><code>flags</code> (number): Maps to values in <code>tes3.animationStartFlag</code> namespace.</li> <li><code>group</code> (number): The animation group about to be played. Maps to values in <code>tes3.animationGroup</code> namespace.</li> <li><code>index</code> (number): Read-only. The index of the body section the animation will be played on. Maps to values in <code>tes3.animationBodySection</code> namespace.</li> <li><code>loopCount</code> (number): The number of times the animation is going to be played. Infinite looping is marked by <code>-1</code>, while <code>0</code> means the animation will be played only once (no looping).</li> <li><code>reference</code> (tes3reference): Read-only. The actor that is about to play the animation.</li> </ul>"},{"location":"events/playItemSound/","title":"playItemSound","text":""},{"location":"events/playItemSound/#playitemsound","title":"playItemSound","text":"<p>This event is triggered when the game is about to play a sound from an item. Can be blocked to play custom sound instead.</p> <pre><code>--- @param e playItemSoundEventData\nlocal function playItemSoundCallback(e)\nend\nevent.register(tes3.event.playItemSound, playItemSoundCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>item</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/playItemSound/#event-data","title":"Event Data","text":"<ul> <li><code>item</code> (tes3baseObject): Read-only. The item for which the sound is about to be played.</li> <li><code>reference</code> (tes3reference): Read-only. The actor reference that picked or dropped the item that's now about to play the sound.</li> <li><code>state</code> (number): Read-only. Maps to values in tes3.itemSoundState namespace.</li> </ul>"},{"location":"events/postInfoResponse/","title":"postInfoResponse","text":""},{"location":"events/postInfoResponse/#postinforesponse","title":"postInfoResponse","text":"<p>This event fires immediately after a dialogue response is processed.</p> <pre><code>--- @param e postInfoResponseEventData\nlocal function postInfoResponseCallback(e)\nend\nevent.register(tes3.event.postInfoResponse, postInfoResponseCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/postInfoResponse/#event-data","title":"Event Data","text":"<ul> <li><code>command</code> (string): Read-only. The command.</li> <li><code>dialogue</code> (tes3dialogue): Read-only. The dialogue object.</li> <li><code>info</code> (tes3dialogueInfo): Read-only. The dialogue info object.</li> <li><code>reference</code> (tes3reference): Read-only. The reference.</li> <li><code>variables</code> (tes3scriptVariables): Read-only. The script variables.</li> </ul>"},{"location":"events/potionBrewFailed/","title":"potionBrewFailed","text":""},{"location":"events/potionBrewFailed/#potionbrewfailed","title":"potionBrewFailed","text":"<p>The potionBrewFailed event is raised when the player fails a potion brew attempt.</p> <pre><code>--- @param e potionBrewFailedEventData\nlocal function potionBrewFailedCallback(e)\nend\nevent.register(tes3.event.potionBrewFailed, potionBrewFailedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/potionBrewFailed/#event-data","title":"Event Data","text":"<ul> <li><code>alembic</code> (tes3apparatus): Read-only. The alembic apparatus used to create the potion.</li> <li><code>calcinator</code> (tes3apparatus): Read-only. The calcinator apparatus used to create the potion.</li> <li><code>ingredients</code> (tes3ingredient[]): Read-only. Ingredients which were used to create the potion.</li> <li><code>mortar</code> (tes3apparatus): Read-only. The mortar apparatus used to create the potion.</li> <li><code>retort</code> (tes3apparatus): Read-only. The retort apparatus used to create the potion.</li> </ul>"},{"location":"events/potionBrewSkillCheck/","title":"potionBrewSkillCheck","text":""},{"location":"events/potionBrewSkillCheck/#potionbrewskillcheck","title":"potionBrewSkillCheck","text":"<p>This event is triggered when the player attempts to brew a potion. It controls both the strength of the potion's effects, and if the brew is successful. These both use the player's stats, so the game combines them into one function. Because the potion effects are not determined yet, the potion data is not available. When using this event, use the example as a template for your own code.</p> <pre><code>--- @param e potionBrewSkillCheckEventData\nlocal function potionBrewSkillCheckCallback(e)\nend\nevent.register(tes3.event.potionBrewSkillCheck, potionBrewSkillCheckCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/potionBrewSkillCheck/#event-data","title":"Event Data","text":"<ul> <li><code>alembic</code> (tes3apparatus): Read-only. The alembic apparatus used to create the potion.</li> <li><code>calcinator</code> (tes3apparatus): Read-only. The calcinator apparatus used to create the potion.</li> <li><code>ingredients</code> (tes3ingredient[]): Read-only. Ingredients which were used to create the potion.</li> <li><code>mortar</code> (tes3apparatus): Read-only. The mortar apparatus used to create the potion.</li> <li><code>potionStrength</code> (number): Can be modified. The strength multiplier used to scale the potion effects. For each different effect, it can modify magnitude, duration, or both. This is initially equal to -1 if the potion failed to brew.</li> <li><code>retort</code> (tes3apparatus): Read-only. The retort apparatus used to create the potion.</li> <li><code>success</code> (boolean): Can be modified. Whether the brewing is successful.</li> </ul>"},{"location":"events/potionBrewSkillCheck/#examples","title":"Examples","text":"<p>Example: Vanilla potion skill check function</p> <pre><code>local function brewSkillCheck(e)\n    local player = tes3.mobilePlayer\n    local x = player.alchemy.current + 0.1 * player.intelligence.current + 0.1 * player.luck.current\n\n    local roll = math.floor(100 * math.random())\n    if (roll &lt;= x) then\n        local fPotionStrengthMult = tes3.findGMST(tes3.gmst.fPotionStrengthMult).value\n        e.potionStrength = fPotionStrengthMult * e.mortar.quality * x\n        e.success = true\n    else\n        e.potionStrength = -1\n        e.success = false\n    end\nend\n\nevent.register(tes3.event.potionBrewSkillCheck, brewSkillCheck)\n</code></pre>"},{"location":"events/potionBrewed/","title":"potionBrewed","text":""},{"location":"events/potionBrewed/#potionbrewed","title":"potionBrewed","text":"<p>The potionBrewed event is raised when the player brews a new potion.</p> <pre><code>--- @param e potionBrewedEventData\nlocal function potionBrewedCallback(e)\nend\nevent.register(tes3.event.potionBrewed, potionBrewedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/potionBrewed/#event-data","title":"Event Data","text":"<ul> <li><code>alembic</code> (tes3apparatus): Read-only. The alembic apparatus used to create the potion.</li> <li><code>calcinator</code> (tes3apparatus): Read-only. The calcinator apparatus used to create the potion.</li> <li><code>ingredients</code> (tes3ingredient[]): Read-only. Ingredients which were used to create the potion.</li> <li><code>mortar</code> (tes3apparatus): Read-only. The mortar apparatus used to create the potion.</li> <li><code>object</code> (tes3alchemy): Read-only. The potion created by the player.</li> <li><code>retort</code> (tes3apparatus): Read-only. The retort apparatus used to create the potion.</li> </ul>"},{"location":"events/potionBrewed/#examples","title":"Examples","text":"<p>Example: Replace a brewed potion with a modified version</p> <pre><code>event.register(tes3.event.potionBrewed, function(e)\n    local p = {\n        [\"name\"] = \"[*]\" .. e.object.name,\n        [\"mesh\"] = e.object.mesh,\n        [\"icon\"] = e.object.icon,\n        [\"weight\"] = e.object.weight * 2,\n        [\"value\"] = e.object.value * 50,\n        [\"effects\"] = {},\n    }\n    for i = 1, 8 do\n        p.effects[i] = e.object.effects[i]\n    end\n\n    local newPotion = tes3alchemy.create(p)\n    tes3.removeItem{reference = tes3.player, item = e.object, playSound = false}\n    tes3.addItem{reference = tes3.player, item = newPotion, playSound = false}\nend)\n</code></pre>"},{"location":"events/powerRecharged/","title":"powerRecharged","text":""},{"location":"events/powerRecharged/#powerrecharged","title":"powerRecharged","text":"<p>This event triggers when a power is recharged, and may be used again. In Morrowind, powers are a type of spells which may be cast once per day and don't cost any magicka.</p> <pre><code>--- @param e powerRechargedEventData\nlocal function powerRechargedCallback(e)\nend\nevent.register(tes3.event.powerRecharged, powerRechargedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>power</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/powerRecharged/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The actor whose power recharged.</li> <li><code>power</code> (tes3spell): Read-only. A power which recharged.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile\u2019s associated reference.</li> </ul>"},{"location":"events/preLevelUp/","title":"preLevelUp","text":""},{"location":"events/preLevelUp/#prelevelup","title":"preLevelUp","text":"<p>This event is triggered just before the player levels up.</p> <pre><code>--- @param e preLevelUpEventData\nlocal function preLevelUpCallback(e)\nend\nevent.register(tes3.event.preLevelUp, preLevelUpCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>level</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/preLevelUp/#event-data","title":"Event Data","text":"<ul> <li><code>level</code> (number): Read-only. The new level about to be obtained.</li> </ul>"},{"location":"events/preventRest/","title":"preventRest","text":""},{"location":"events/preventRest/#preventrest","title":"preventRest","text":"<p>This event can be used to prevent the player from resting by returning false.</p> <pre><code>--- @param e preventRestEventData\nlocal function preventRestCallback(e)\nend\nevent.register(tes3.event.preventRest, preventRestCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>mobile</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/preventRest/#event-data","title":"Event Data","text":"<ul> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that is preventing the player from resting.</li> <li><code>reference</code> (tes3reference): Read-only. Mobile's associated reference.</li> </ul>"},{"location":"events/projectileExpire/","title":"projectileExpire","text":""},{"location":"events/projectileExpire/#projectileexpire","title":"projectileExpire","text":"<p>The projectileExpire event fires just prior to a fired projectile expiring.</p> <pre><code>--- @param e projectileExpireEventData\nlocal function projectileExpireCallback(e)\nend\nevent.register(tes3.event.projectileExpire, projectileExpireCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/projectileExpire/#event-data","title":"Event Data","text":"<ul> <li><code>firingReference</code> (tes3reference): Read-only. Reference to the actor that fired the projectile.</li> <li><code>firingWeapon</code> (tes3weapon): Read-only. The weapon that fired the projectile.</li> <li><code>mobile</code> (tes3mobileProjectile): Read-only. The mobile projectile that is expiring.</li> </ul>"},{"location":"events/projectileHitActor/","title":"projectileHitActor","text":""},{"location":"events/projectileHitActor/#projectilehitactor","title":"projectileHitActor","text":"<p>The projectileHitActor event fires when a projectile collides with an actor.</p> <pre><code>--- @param e projectileHitActorEventData\nlocal function projectileHitActorCallback(e)\nend\nevent.register(tes3.event.projectileHitActor, projectileHitActorCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/projectileHitActor/#event-data","title":"Event Data","text":"<ul> <li><code>firingReference</code> (tes3reference): Read-only. Reference to the actor that fired the projectile.</li> <li><code>firingWeapon</code> (tes3weapon): Read-only. The weapon that fired the projectile.</li> <li><code>mobile</code> (tes3mobileProjectile): Read-only. The mobile projectile that is expiring.</li> <li><code>target</code> (tes3reference): Read-only. Reference to the actor that was hit.</li> </ul>"},{"location":"events/projectileHitObject/","title":"projectileHitObject","text":""},{"location":"events/projectileHitObject/#projectilehitobject","title":"projectileHitObject","text":"<p>The projectileHitObject event fires when a projectile collides with an object.</p> <pre><code>--- @param e projectileHitObjectEventData\nlocal function projectileHitObjectCallback(e)\nend\nevent.register(tes3.event.projectileHitObject, projectileHitObjectCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/projectileHitObject/#event-data","title":"Event Data","text":"<ul> <li><code>collisionPoint</code> (tes3vector3): Read-only. The collision point of the mobile projectile.</li> <li><code>firingReference</code> (tes3reference): Read-only. Reference to the actor that fired the projectile.</li> <li><code>firingWeapon</code> (tes3weapon): Read-only. The weapon that fired the projectile.</li> <li><code>mobile</code> (tes3mobileProjectile): Read-only. The mobile projectile that is expiring.</li> <li><code>target</code> (tes3reference): Read-only. Reference to the object that was hit.</li> </ul>"},{"location":"events/projectileHitTerrain/","title":"projectileHitTerrain","text":""},{"location":"events/projectileHitTerrain/#projectilehitterrain","title":"projectileHitTerrain","text":"<p>The projectileHitTerrain event fires when a projectile collides with terrain.</p> <pre><code>--- @param e projectileHitTerrainEventData\nlocal function projectileHitTerrainCallback(e)\nend\nevent.register(tes3.event.projectileHitTerrain, projectileHitTerrainCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/projectileHitTerrain/#event-data","title":"Event Data","text":"<ul> <li><code>collisionPoint</code> (tes3vector3): Read-only. The collision point of the mobile projectile.</li> <li><code>firingReference</code> (tes3reference): Read-only. Reference to the actor that fired the projectile.</li> <li><code>firingWeapon</code> (tes3weapon): Read-only. The weapon that fired the projectile.</li> <li><code>mobile</code> (tes3mobileProjectile): Read-only. The mobile projectile that is expiring.</li> <li><code>position</code> (tes3vector3): Read-only. The position of the mobile projectile.</li> <li><code>velocity</code> (tes3vector3): Read-only. The velocity of the mobile projectile.</li> </ul>"},{"location":"events/referenceActivated/","title":"referenceActivated","text":""},{"location":"events/referenceActivated/#referenceactivated","title":"referenceActivated","text":"<p>This event is triggered when a reference is activated.</p> <pre><code>--- @param e referenceActivatedEventData\nlocal function referenceActivatedCallback(e)\nend\nevent.register(tes3.event.referenceActivated, referenceActivatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/referenceActivated/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference which was activated.</li> </ul>"},{"location":"events/referenceDeactivated/","title":"referenceDeactivated","text":""},{"location":"events/referenceDeactivated/#referencedeactivated","title":"referenceDeactivated","text":"<p>This event is triggered when a reference is deactivated.</p> <pre><code>--- @param e referenceDeactivatedEventData\nlocal function referenceDeactivatedCallback(e)\nend\nevent.register(tes3.event.referenceDeactivated, referenceDeactivatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/referenceDeactivated/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference which was deactivated.</li> </ul>"},{"location":"events/referenceSceneNodeCreated/","title":"referenceSceneNodeCreated","text":""},{"location":"events/referenceSceneNodeCreated/#referencescenenodecreated","title":"referenceSceneNodeCreated","text":"<p>This event fires when a SceneNode is created for a reference.</p> <pre><code>--- @param e referenceSceneNodeCreatedEventData\nlocal function referenceSceneNodeCreatedCallback(e)\nend\nevent.register(tes3.event.referenceSceneNodeCreated, referenceSceneNodeCreatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/referenceSceneNodeCreated/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. Reference that the SceneNode was created for.</li> </ul>"},{"location":"events/repair/","title":"Repair","text":""},{"location":"events/repair/#repair","title":"repair","text":"<p>This event is invoked when an item is being repaired. Currently, the event only fires when the player repairs an item.</p> <pre><code>--- @param e repairEventData\nlocal function repairCallback(e)\nend\nevent.register(tes3.event.repair, repairCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/repair/#event-data","title":"Event Data","text":"<ul> <li><code>chance</code> (number): The percent chance of the repair being successful. This can be changed to modify the player's chance of repairing. It is not limited at 100.</li> <li><code>item</code> (tes3item): Read-only. The item being repaired.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data relevant to the repaired item.</li> <li><code>repairAmount</code> (number): The amount of condition that will be restored to the item.</li> <li><code>repairer</code> (tes3mobileActor): Read-only. The actor performing the repair. Note that this is currently always the player, but this may change in future updates.</li> <li><code>tool</code> (tes3repairTool): Read-only. The repair tool being used.</li> <li><code>toolData</code> (tes3itemData): Read-only. The item data relevant to repair tool.</li> </ul>"},{"location":"events/restInterrupt/","title":"restInterrupt","text":""},{"location":"events/restInterrupt/#restinterrupt","title":"restInterrupt","text":"<p>This event is invoked when a rest is about to be interrupted. The ambushing spawn can be overridden by changing the creature parameter.</p> <pre><code>--- @param e restInterruptEventData\nlocal function restInterruptCallback(e)\nend\nevent.register(tes3.event.restInterrupt, restInterruptCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/restInterrupt/#event-data","title":"Event Data","text":"<ul> <li><code>creature</code> (tes3creature, tes3npc, tes3leveledCreature): The creature that is interrupting rest. Can be set to a creature, NPC, or leveled creature.</li> <li><code>resting</code> (boolean): Read-only. If true, the player is attempting to rest, as opposed to wait.</li> <li><code>waiting</code> (boolean): Read-only. If true, the player is attempting to wait, as opposed to rest.</li> </ul>"},{"location":"events/save/","title":"Save","text":""},{"location":"events/save/#save","title":"save","text":"<p>The save event fires when the game is about to save. This event allows scripts to block saving.</p> <pre><code>--- @param e saveEventData\nlocal function saveCallback(e)\nend\nevent.register(tes3.event.save, saveCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>filename</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/save/#event-data","title":"Event Data","text":"<ul> <li><code>filename</code> (string): The filename of the save, not including file extension.</li> <li><code>name</code> (string): The user facing name of the save, shown in the load/save game menu.</li> </ul>"},{"location":"events/saved/","title":"Saved","text":""},{"location":"events/saved/#saved","title":"saved","text":"<p>The saved event fires after the game has successfully been saved. This event is preceded by the save event.</p> <pre><code>--- @param e savedEventData\nlocal function savedCallback(e)\nend\nevent.register(tes3.event.saved, savedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/saved/#event-data","title":"Event Data","text":"<ul> <li><code>filename</code> (string): The filename of the save, not including file extension.</li> <li><code>name</code> (string): The user facing name of the save, shown in the load/save game menu.</li> </ul>"},{"location":"events/simulate/","title":"Simulate","text":""},{"location":"events/simulate/#simulate","title":"simulate","text":"<p>The simulate event occurs at the start of every frame, excluding when the game is paused or in menu mode.</p> <pre><code>--- @param e simulateEventData\nlocal function simulateCallback(e)\nend\nevent.register(tes3.event.simulate, simulateCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/simulate/#event-data","title":"Event Data","text":"<ul> <li><code>delta</code> (number): Read-only. The number of seconds since the last frame.</li> <li><code>menuMode</code> (boolean): Read-only. Always false, maintained only for consistency with the enterFrame event.</li> <li><code>timestamp</code> (number): Read-only. The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).</li> </ul>"},{"location":"events/skillRaised/","title":"skillRaised","text":""},{"location":"events/skillRaised/#skillraised","title":"skillRaised","text":"<p>This event is invoked whenever the player naturally gains a new level a skill. This is typically through exercise, training, or reading books.</p> <pre><code>--- @param e skillRaisedEventData\nlocal function skillRaisedCallback(e)\nend\nevent.register(tes3.event.skillRaised, skillRaisedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>skill</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/skillRaised/#event-data","title":"Event Data","text":"<ul> <li><code>level</code> (number): Read-only. The new level of the skill.</li> <li><code>skill</code> (integer): Read-only. The skill that gained a new level experience. Maps to values from <code>tes3.skill</code> table.</li> <li><code>source</code> (string): Read-only. The source of the skill raise. Maps to values in <code>tes3.skillRaiseSource</code> enumeration.</li> </ul>"},{"location":"events/soundObjectPlay/","title":"soundObjectPlay","text":""},{"location":"events/soundObjectPlay/#soundobjectplay","title":"soundObjectPlay","text":"<p>This event triggers before certain object sounds are about to be played. For example, item pickup sounds.</p> <pre><code>--- @param e soundObjectPlayEventData\nlocal function soundObjectPlayCallback(e)\nend\nevent.register(tes3.event.soundObjectPlay, soundObjectPlayCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>sound</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/soundObjectPlay/#event-data","title":"Event Data","text":"<ul> <li><code>flags</code> (number): A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops.</li> <li><code>isNot3D</code> (boolean): </li> <li><code>pitch</code> (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25].</li> <li><code>sound</code> (tes3sound): The sound about to be played.</li> <li><code>volume</code> (number): The volume of the sound. In range [1, 250].</li> </ul>"},{"location":"events/spellCast/","title":"spellCast","text":""},{"location":"events/spellCast/#spellcast","title":"spellCast","text":"<p>This event is triggered just before a spell cast is resolved, at the end of the casting animation. It can control the success chance of the spell cast.</p> <pre><code>--- @param e spellCastEventData\nlocal function spellCastCallback(e)\nend\nevent.register(tes3.event.spellCast, spellCastCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellCast/#event-data","title":"Event Data","text":"<ul> <li><code>castChance</code> (number): The percentage chance of the caster successfully casting the spell. May be modified. Setting it to 0 will cause the cast to fail.</li> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>source</code> (tes3spell): Read-only. The magic source.</li> <li><code>weakestSchool</code> (number): Read-only. Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast.</li> </ul>"},{"location":"events/spellCasted/","title":"spellCasted","text":""},{"location":"events/spellCasted/#spellcasted","title":"spellCasted","text":"<p>This event is triggered when any spell is cast successfully; this includes spells cast via scripts. This occurs at the end of the casting animation, just after the magic projectile has been constructed.</p> <pre><code>--- @param e spellCastedEventData\nlocal function spellCastedCallback(e)\nend\nevent.register(tes3.event.spellCasted, spellCastedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellCasted/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>expGainSchool</code> (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation.</li> <li><code>source</code> (tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>target</code> (tes3reference): Read-only. The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have <code>target</code> parameter. On target spells don't have <code>target</code> parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.</li> </ul>"},{"location":"events/spellCastedFailure/","title":"spellCastedFailure","text":""},{"location":"events/spellCastedFailure/#spellcastedfailure","title":"spellCastedFailure","text":"<p>This event is triggered when any spell fails to cast due to failing the cast chance check. It does not trigger when there is insufficient magicka.</p> <pre><code>--- @param e spellCastedFailureEventData\nlocal function spellCastedFailureCallback(e)\nend\nevent.register(tes3.event.spellCastedFailure, spellCastedFailureCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellCastedFailure/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>expGainSchool</code> (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation.</li> <li><code>source</code> (tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>target</code> (tes3reference): Read-only. The target of the spell. For self-targeted spells, this matches caster.</li> </ul>"},{"location":"events/spellCreated/","title":"spellCreated","text":""},{"location":"events/spellCreated/#spellcreated","title":"spellCreated","text":"<p>This event is triggered when a new spell is created using spellmaking services or by a script using <code>tes3spell.create()</code>.</p> <pre><code>--- @param e spellCreatedEventData\nlocal function spellCreatedCallback(e)\nend\nevent.register(tes3.event.spellCreated, spellCreatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellCreated/#event-data","title":"Event Data","text":"<ul> <li><code>source</code> (string): Was the origin of the spell spellmaker or a script?  Maps to values in <code>tes3.spellSource</code> namespace.</li> <li><code>spell</code> (tes3spell): A spell which was created.</li> </ul>"},{"location":"events/spellMagickaUse/","title":"spellMagickaUse","text":""},{"location":"events/spellMagickaUse/#spellmagickause","title":"spellMagickaUse","text":"<p>This event is triggered just before a spell or power is used by any actor. It allows modification of the magicka required to cast the spell. Magicka cost change is not reflected in the UI system, because the UI does not expect spell costs to change.</p> <pre><code>--- @param e spellMagickaUseEventData\nlocal function spellMagickaUseCallback(e)\nend\nevent.register(tes3.event.spellMagickaUse, spellMagickaUseCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>caster</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellMagickaUse/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>cost</code> (integer): The magicka cost required to cast the spell. May be modified.</li> <li><code>instance</code> (tes3magicSourceInstance): The magic source instance.</li> <li><code>spell</code> (tes3spell): Read-only. The spell being cast.</li> </ul>"},{"location":"events/spellResist/","title":"spellResist","text":""},{"location":"events/spellResist/#spellresist","title":"spellResist","text":"<p>This event is used when calculating an actor's magic effect resistance, and allows Lua scripts to override the behavior of magic effect resistance by changing the <code>resistedPercent</code> value. This can be used to enable willpower-based resistance checks, provide specific resistances to specific spells, spells that heal instead of harm, and a variety of new mechanics.</p> <pre><code>--- @param e spellResistEventData\nlocal function spellResistCallback(e)\nend\nevent.register(tes3.event.spellResist, spellResistCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellResist/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>effect</code> (tes3effect): Read-only. The specific effect that triggered the event. This is equal as doing <code>e.source.effects[effectIndex]</code>. This field may not always be available.</li> <li><code>effectIndex</code> (number): Read-only. The index of the effect in source's effects list.</li> <li><code>effectInstance</code> (tes3magicEffectInstance): Read-only. The unique instance of the magic effect.</li> <li><code>resistAttribute</code> (number): Read-only. The attribute resisted. This is an index into a <code>tes3mobileActor.effectAttributes</code>. Note that the index here is 0-based, while Lua is 1-based.</li> <li><code>resistedPercent</code> (number): The percent of the spell that has been resisted. This can be modified, but a value outside the range of 0 to 100 does not have consistent effects. For fire damage, for example, a value over 100 causes the spell to heal the target instead of harming them.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>spellCastChance</code> (number): Read-only. The cast chance of the magic source. This is only available if the <code>source</code> is a spell or an enchantment.</li> <li><code>target</code> (tes3reference): Read-only. The target of the spell. For self-targeted spells, this matches caster.</li> </ul>"},{"location":"events/spellResisted/","title":"spellResisted","text":""},{"location":"events/spellResisted/#spellresisted","title":"spellResisted","text":"<p>This event triggers when a magic effect has been resisted by an actor, including magic effects from sources like spells, enchantments and potions. This event can trigger multiple times per source, once for each resisted effect.</p> <pre><code>--- @param e spellResistedEventData\nlocal function spellResistedCallback(e)\nend\nevent.register(tes3.event.spellResisted, spellResistedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>reference</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellResisted/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the magic source that contained the magic effect. Can be <code>nil</code>.</li> <li><code>effect</code> (tes3effect): Read-only. The specific effect that triggered the event. This is equal to <code>e.source.effects[e.effectIndex]</code>.</li> <li><code>effectIndex</code> (number): Read-only. The index of the effect in the magic source's effects list.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that resisted the magic effect.</li> <li><code>reference</code> (tes3reference): Read-only. The reference of the mobile actor that resisted the magic effect.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source that contains the effect.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source that contains the effect.</li> <li><code>target</code> (tes3reference): Read-only. The target of the magic source that contained the magic effect. Can be <code>nil</code>.</li> </ul>"},{"location":"events/spellResisted/#examples","title":"Examples","text":"<p>Example: Learn resisted spells</p> <p>Makes actors learn the spell they resisted.</p> <pre><code>local function onSpellResisted(e)\n    -- We only want this to apply to spells. This event can also trigger for other sources like potions/enchantments.\n    if e.source.objectType == tes3.objectType.spell then\n        -- Add the resisted spell to the actor that resisted it.\n        tes3.addSpell{\n            reference = e.reference,\n            spell = e.source\n        }\n\n        -- If it is the player that learned the spell, show a message with the name of the spell.\n        if e.reference == tes3.player then\n            tes3.messageBox(\"You learned the '%s' spell.\", e.source.name)\n        end\n    end\nend\nevent.register(tes3.register.spellResisted, onSpellResisted)\n</code></pre>"},{"location":"events/spellTick/","title":"spellTick","text":""},{"location":"events/spellTick/#spelltick","title":"spellTick","text":"<p>The spellTick event happens every frame that an effect is active on a target. This can be used to aid in scripted spells, cancel active spells, or otherwise monitor spell activity on actors.</p> <pre><code>--- @param e spellTickEventData\nlocal function spellTickCallback(e)\nend\nevent.register(tes3.event.spellTick, spellTickCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/spellTick/#event-data","title":"Event Data","text":"<ul> <li><code>caster</code> (tes3reference): Read-only. The caster of the spell.</li> <li><code>deltaTime</code> (number): Read-only. The number of seconds since the last spell tick.</li> <li><code>effect</code> (tes3magicEffect): Read-only. The individual effect structure on source.</li> <li><code>effectId</code> (number): Read-only. The magic effect ID that is being ticked. Maps to values in <code>tes3.effect</code> namespace.</li> <li><code>effectIndex</code> (number): Read-only. The index of the effect in source\u2019s effects list.</li> <li><code>effectInstance</code> (tes3magicEffectInstance): Read-only. The unique instance of the magic effect.</li> <li><code>source</code> (tes3alchemy, tes3enchantment, tes3spell): Read-only. The magic source.</li> <li><code>sourceInstance</code> (tes3magicSourceInstance): Read-only. The unique instance of the magic source.</li> <li><code>target</code> (tes3reference): Read-only. The target of the spell. For self-targeted spells, this matches caster.</li> </ul>"},{"location":"events/topicAdded/","title":"topicAdded","text":""},{"location":"events/topicAdded/#topicadded","title":"topicAdded","text":"<p>This event is raised when the player gains access to a new dialogue topic.</p> <pre><code>--- @param e topicAddedEventData\nlocal function topicAddedCallback(e)\nend\nevent.register(tes3.event.topicAdded, topicAddedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/topicAdded/#event-data","title":"Event Data","text":"<ul> <li><code>topic</code> (tes3dialogue): Read-only. The topic that was newly added to the player's list of topics.</li> </ul>"},{"location":"events/trapDisarm/","title":"trapDisarm","text":""},{"location":"events/trapDisarm/#trapdisarm","title":"trapDisarm","text":"<p>This event fires when a trap is being disarmed.</p> <pre><code>--- @param e trapDisarmEventData\nlocal function trapDisarmCallback(e)\nend\nevent.register(tes3.event.trapDisarm, trapDisarmCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/trapDisarm/#event-data","title":"Event Data","text":"<ul> <li><code>chance</code> (number): Read-only. The chance the trap disarm will be successful.</li> <li><code>disarmer</code> (tes3mobileNPC): Read-only. The Mobile NPC doing the disarming.</li> <li><code>lockData</code> (tes3lockNode): Read-only. The lock data of the reference.</li> <li><code>reference</code> (tes3reference): Read-only. The reference that triggered the event (container, door, etc.).</li> <li><code>tool</code> (tes3item): Read-only. The item the disarmer is using to disarm the trap.</li> <li><code>toolItemData</code> (tes3itemData): Read-only. The item data for the tool.</li> <li><code>trapPresent</code> (boolean): Read-only. Indicates if a trap is present on the reference.</li> </ul>"},{"location":"events/uiActivated/","title":"uiActivated","text":""},{"location":"events/uiActivated/#uiactivated","title":"uiActivated","text":"<p>This event is invoked after a UI menu has been built or made visible, at the point that all menu elements contain updated data.</p> <p>Supported Menus: <code>MenuAlchemy</code>, <code>MenuAttributes</code>, <code>MenuAttributesList</code> (Enchanting/spellmaking effect attribute), <code>MenuAudio</code> (Options, audio), <code>MenuBarter</code>, <code>MenuBirthSign</code>, <code>MenuBook</code>, <code>MenuChooseClass</code>, <code>MenuClassChoice</code>, <code>MenuClassMessage</code>, <code>MenuConsole</code>, <code>MenuContents</code> (Container/NPC inventory), <code>MenuCreateClass</code>, <code>MenuCtrls</code> (Options, controls), <code>MenuDialog</code>, <code>MenuEnchantment</code>, <code>MenuInput</code>, <code>MenuInputSave</code>, <code>MenuInventory</code> (Player inventory), <code>MenuInventorySelect</code> (Item selector), <code>MenuJournal</code>, <code>MenuLevelUp</code>, <code>MenuLoad</code>, <code>MenuLoading</code>, <code>MenuMagic</code> (Spell/enchanted item selector), <code>MenuMagicSelect</code>, <code>MenuMap</code>, <code>MenuMapNoteEdit</code>, <code>MenuMessage</code>, <code>MenuMulti</code> (Status bars, current weapon/magic, active effects and minimap), <code>MenuName</code>, <code>MenuNotify1</code>, <code>MenuNotify2</code>, <code>MenuNotify3</code>, <code>MenuOptions</code> (Main menu), <code>MenuPersuasion</code>, <code>MenuPrefs</code> (Options, prefs), <code>MenuQuantity</code>, <code>MenuQuick</code> (Quick keys), <code>MenuRaceSex</code>, <code>MenuRepair</code>, <code>MenuRestWait</code>, <code>MenuSave</code>, <code>MenuScroll</code>, <code>MenuServiceRepair</code>, <code>MenuServiceSpells</code>, <code>MenuServiceTraining</code>, <code>MenuServiceTravel</code>, <code>MenuSetValues</code> (Enchanting/spellmaking effect values), <code>MenuSkills</code>, <code>MenuSkillsList</code> (Enchanting/spellmaking effect skill), <code>MenuSpecialization</code>, <code>MenuSpellmaking</code>, <code>MenuStat</code> (Player attributes, skills, factions etc.), <code>MenuStatReview</code>, <code>MenuSwimFillBar</code>, <code>MenuTimePass</code>, <code>MenuTopic</code>, <code>MenuVideo</code> (Options, video)</p> <pre><code>--- @param e uiActivatedEventData\nlocal function uiActivatedCallback(e)\nend\nevent.register(tes3.event.uiActivated, uiActivatedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>element.name</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiActivated/#event-data","title":"Event Data","text":"<ul> <li><code>element</code> (tes3uiElement): Read-only. The menu element that was created. The event is filtered on element.name.</li> <li><code>newlyCreated</code> (boolean): Read-only. true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.</li> </ul>"},{"location":"events/uiEvent/","title":"uiEvent","text":""},{"location":"events/uiEvent/#uievent","title":"uiEvent","text":"<p>uiEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities.</p> <pre><code>--- @param e uiEventEventData\nlocal function uiEventCallback(e)\nend\nevent.register(tes3.event.uiEvent, uiEventCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source.id</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiEvent/#event-data","title":"Event Data","text":"<ul> <li><code>block</code> (tes3uiElement): Read-only. Deprecated, please use <code>source</code> instead. The UI element that is firing this event.</li> <li><code>parent</code> (tes3uiElement): Read-only. The calling element's parent.</li> <li><code>property</code> (number): Read-only. The property identifier that is being triggered.</li> <li><code>source</code> (tes3uiElement): Read-only. The UI element that is firing this event.</li> <li><code>var1</code> (number): Read-only. One of two undefined variables related to the event.</li> <li><code>var2</code> (number): Read-only. One of two undefined variables related to the event.</li> </ul>"},{"location":"events/uiObjectTooltip/","title":"uiObjectTooltip","text":""},{"location":"events/uiObjectTooltip/#uiobjecttooltip","title":"uiObjectTooltip","text":"<p>The uiObjectTooltip event triggers when a new tooltip is displayed for all in-world objects and items, and inventory tiles in all dialogues. The tooltip will be already be built. Tooltips for inventory tiles are built on mouseover, while tooltips for in-world objects are rebuilt every frame.</p> <pre><code>--- @param e uiObjectTooltipEventData\nlocal function uiObjectTooltipCallback(e)\nend\nevent.register(tes3.event.uiObjectTooltip, uiObjectTooltipCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiObjectTooltip/#event-data","title":"Event Data","text":"<ul> <li><code>count</code> (number): Read-only. The number of items in the stack.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data of object, if any.</li> <li><code>object</code> (tes3physicalObject): Read-only. The object being examined.</li> <li><code>reference</code> (tes3reference): Read-only. The reference being examined. Only valid for in-world objects. For inventory tiles it will always be nil.</li> <li><code>tooltip</code> (tes3uiElement): Read-only. The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.</li> </ul>"},{"location":"events/uiPreEvent/","title":"uiPreEvent","text":""},{"location":"events/uiPreEvent/#uipreevent","title":"uiPreEvent","text":"<p>uiPreEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. This event fires before uiEvent, and has the additional advantage of being able to be blocked.</p> <pre><code>--- @param e uiPreEventEventData\nlocal function uiPreEventCallback(e)\nend\nevent.register(tes3.event.uiPreEvent, uiPreEventCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>source.id</code> event data.</p> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiPreEvent/#event-data","title":"Event Data","text":"<ul> <li><code>parent</code> (tes3uiElement): Read-only. The calling element's parent.</li> <li><code>property</code> (number): Read-only. The property identifier that is being triggered.</li> <li><code>source</code> (tes3uiElement): Read-only. The UI element that is firing this event.</li> <li><code>var1</code> (number): Read-only. One of two undefined variables related to the event.</li> <li><code>var2</code> (number): Read-only. One of two undefined variables related to the event.</li> </ul>"},{"location":"events/uiRefreshed/","title":"uiRefreshed","text":""},{"location":"events/uiRefreshed/#uirefreshed","title":"uiRefreshed","text":"<p>This event is invoked after a UI menu has been created or recreated. This can be useful for when important game subcomponents are destroyed and remade, without the entire UI being activated.</p> <p>Supported Elements: <code>MenuStat_scroll_pane</code></p> <pre><code>--- @param e uiRefreshedEventData\nlocal function uiRefreshedCallback(e)\nend\nevent.register(tes3.event.uiRefreshed, uiRefreshedCallback)\n</code></pre> <p>Tip</p> <p>This event can be filtered based on the <code>element.name</code> event data.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiRefreshed/#event-data","title":"Event Data","text":"<ul> <li><code>element</code> (tes3uiElement): Read-only. The menu element that was recreated or refreshed. The event is filtered on element.name</li> </ul>"},{"location":"events/uiShowRestMenu/","title":"uiShowRestMenu","text":""},{"location":"events/uiShowRestMenu/#uishowrestmenu","title":"uiShowRestMenu","text":"<p>The uiShowRestMenu event is raised when the rest menu is about to be displayed. It allows the callback to change if sleeping is allowed, or to prevent the UI from showing at all.</p> <pre><code>--- @param e uiShowRestMenuEventData\nlocal function uiShowRestMenuCallback(e)\nend\nevent.register(tes3.event.uiShowRestMenu, uiShowRestMenuCallback)\n</code></pre> <p>Tip</p> <p>This event supports blocking by setting <code>e.block</code> to <code>true</code> or returning <code>false</code>. Blocking the event prevents vanilla behavior from happening. For example, blocking an <code>equip</code> event prevents the item from being equipped.</p> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiShowRestMenu/#event-data","title":"Event Data","text":"<ul> <li><code>allowRest</code> (boolean): true if the player is allowed to sleep (determined primarily from the cell flags), or false if they must wait instead. This value can be modified.</li> <li><code>scripted</code> (boolean): Read-only. This value is true when the menu is shown from using the ShowRestMenu or equivalent function.</li> </ul>"},{"location":"events/uiSpellTooltip/","title":"uiSpellTooltip","text":""},{"location":"events/uiSpellTooltip/#uispelltooltip","title":"uiSpellTooltip","text":"<p>The uiSpellTooltip event triggers when a new tooltip is displayed for a spell. The tooltip will be already be built.</p> <pre><code>--- @param e uiSpellTooltipEventData\nlocal function uiSpellTooltipCallback(e)\nend\nevent.register(tes3.event.uiSpellTooltip, uiSpellTooltipCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/uiSpellTooltip/#event-data","title":"Event Data","text":"<ul> <li><code>spell</code> (tes3spell): Read-only. The spell being examined.</li> <li><code>tooltip</code> (tes3uiElement): Read-only. The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.</li> </ul>"},{"location":"events/unequipped/","title":"Unequipped","text":""},{"location":"events/unequipped/#unequipped","title":"unequipped","text":"<p>The unequipped event fires after an actor has successfully unequipped an item.</p> <pre><code>--- @param e unequippedEventData\nlocal function unequippedCallback(e)\nend\nevent.register(tes3.event.unequipped, unequippedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/unequipped/#event-data","title":"Event Data","text":"<ul> <li><code>actor</code> (tes3actor): Read-only. The actor that has unequipped the item.</li> <li><code>item</code> (tes3baseObject): Read-only. The object that has been unequipped.</li> <li><code>itemData</code> (tes3itemData): Read-only. The item data of item.</li> <li><code>mobile</code> (tes3mobileActor): Read-only. The mobile actor that has unequipped the item.</li> <li><code>reference</code> (tes3reference): Read-only. actor\u2019s associated reference.</li> </ul>"},{"location":"events/vfxCreated/","title":"vfxCreated","text":""},{"location":"events/vfxCreated/#vfxcreated","title":"vfxCreated","text":"<p>The vfxCreated event fires when a managed visual effect is created by the game engine or through <code>tes3.createVisualEffect</code>.</p> <pre><code>--- @param e vfxCreatedEventData\nlocal function vfxCreatedCallback(e)\nend\nevent.register(tes3.event.vfxCreated, vfxCreatedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/vfxCreated/#event-data","title":"Event Data","text":"<ul> <li><code>context</code> (string): Read-only. Context for what type of VFX this was created at. For example, if the VFX was created at a position the value will be <code>tes3.vfxContext.position</code>, while an effect created onto the caster's hands will be created with the context of a <code>tes3.vfxContext.niNode</code>. This maps to the values in <code>tes3.vfxContext</code>.</li> <li><code>vfx</code> (tes3vfx): Read-only. The created visual effect.</li> </ul>"},{"location":"events/weaponReadied/","title":"weaponReadied","text":""},{"location":"events/weaponReadied/#weaponreadied","title":"weaponReadied","text":"<p>This event is called when a weapon is readied, and pairs with the weaponUnreadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time.</p> <pre><code>--- @param e weaponReadiedEventData\nlocal function weaponReadiedCallback(e)\nend\nevent.register(tes3.event.weaponReadied, weaponReadiedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weaponReadied/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference associated with the change in readied weapon.</li> <li><code>weaponStack</code> (tes3equipmentStack): Read-only. The stack that contains the newly readied weapon and its associated data.</li> </ul>"},{"location":"events/weaponUnreadied/","title":"weaponUnreadied","text":""},{"location":"events/weaponUnreadied/#weaponunreadied","title":"weaponUnreadied","text":"<p>This event is called when a weapon is no longer readied, and pairs with the weaponReadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. If an actor equips a weapon while having their hands up to attack with, the event will fire for the new weapon.</p> <pre><code>--- @param e weaponUnreadiedEventData\nlocal function weaponUnreadiedCallback(e)\nend\nevent.register(tes3.event.weaponUnreadied, weaponUnreadiedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weaponUnreadied/#event-data","title":"Event Data","text":"<ul> <li><code>reference</code> (tes3reference): Read-only. The reference associated with the change in readied weapon.</li> </ul>"},{"location":"events/weatherChangedImmediate/","title":"weatherChangedImmediate","text":""},{"location":"events/weatherChangedImmediate/#weatherchangedimmediate","title":"weatherChangedImmediate","text":"<p>The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the <code>weatherTransitionFinished</code> event will not be triggered.</p> <pre><code>--- @param e weatherChangedImmediateEventData\nlocal function weatherChangedImmediateCallback(e)\nend\nevent.register(tes3.event.weatherChangedImmediate, weatherChangedImmediateCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weatherChangedImmediate/#event-data","title":"Event Data","text":"<ul> <li><code>to</code> (tes3weather): The weather object that is the new current weather. Can be modified to change behavior.</li> </ul>"},{"location":"events/weatherCycled/","title":"weatherCycled","text":""},{"location":"events/weatherCycled/#weathercycled","title":"weatherCycled","text":"<p>The weatherCycled event occurs when region weathers are randomized. This occurs at an interval set by the ini option \u201cHours Between Weather Changes\u201d. Regions may select the same weather as before, and there will be no transition in this case.</p> <pre><code>--- @param e weatherCycledEventData\nlocal function weatherCycledCallback(e)\nend\nevent.register(tes3.event.weatherCycled, weatherCycledCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weatherTransitionFinished/","title":"weatherTransitionFinished","text":""},{"location":"events/weatherTransitionFinished/#weathertransitionfinished","title":"weatherTransitionFinished","text":"<p>The weatherTransitionFinished event occurs when the currently simulated weather finished transitioning to a new weather.</p> <p>Weather will continue transitioning in interiors, and may finish while in an interior. The transition may be interrupted at any time by the <code>weatherChangedImmediate</code> event, and this finish event will not be triggered.</p> <pre><code>--- @param e weatherTransitionFinishedEventData\nlocal function weatherTransitionFinishedCallback(e)\nend\nevent.register(tes3.event.weatherTransitionFinished, weatherTransitionFinishedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weatherTransitionFinished/#event-data","title":"Event Data","text":"<ul> <li><code>to</code> (tes3weather): The weather object that will be transitioned to.</li> </ul>"},{"location":"events/weatherTransitionStarted/","title":"weatherTransitionStarted","text":""},{"location":"events/weatherTransitionStarted/#weathertransitionstarted","title":"weatherTransitionStarted","text":"<p>The weatherTransitionStarted event occurs when the currently simulated weather has started to gradually transition to a new weather. This can occur when moving between regions, or when the weather cycles.</p> <p>Weather will not start transitioning in interiors, but will continue transitioning, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and the weatherTransitionFinished event will not occur.</p> <pre><code>--- @param e weatherTransitionStartedEventData\nlocal function weatherTransitionStartedCallback(e)\nend\nevent.register(tes3.event.weatherTransitionStarted, weatherTransitionStartedCallback)\n</code></pre> <p>Tip</p> <p>An event can be claimed by setting <code>e.claim</code> to <code>true</code>, or by returning <code>false</code> from the callback. Claiming the event prevents any lower priority callbacks from being called.</p>"},{"location":"events/weatherTransitionStarted/#event-data","title":"Event Data","text":"<ul> <li><code>from</code> (tes3weather): Read-only. The weather object that is the current weather.</li> <li><code>to</code> (tes3weather): The weather object that will be transitioned to.</li> </ul>"},{"location":"guides/creating-a-mod/","title":"Creating a Mod","text":"<p>This guide will demonstrate the most basic steps of creating a mod for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua.</p> <p>To facilitate this, this guide will explain how to create a mod that displays a unique messagebox every time the player draws a two-handed weapon.</p>"},{"location":"guides/creating-a-mod/#development-workflow","title":"Development Workflow","text":"<p>A Development Workflow is the environment and processes used to facilitate software development. This guide assumes that you have setup a development environment.</p> <p>If you have not set up a development environment, or do not know how to, please refer to the Development Workflow guide to set one up.</p>"},{"location":"guides/creating-a-mod/#introduction-to-the-lua-scripting-language","title":"Introduction to the Lua Scripting Language","text":"<p>If you have basic knowledge of the Lua scripting language, you may skip this section. If you are not familiar with the Lua scripting language, please take a moment to read the Introduction to Lua guide.</p>"},{"location":"guides/creating-a-mod/#introduction-to-event-based-programming","title":"Introduction to Event Based Programming","text":"<p>If you have basic knowledge of event based programming, you may skip this section. If you are not familiar with event based programming, please take a moment to read the Introduction to Event Based Programming guide.</p>"},{"location":"guides/creating-a-mod/#creating-the-mod-file-structure","title":"Creating the Mod File Structure","text":"<p>Now that you have setup a development workflow, you are ready to create a mod.</p> <p>Next, the folder structure for MWSE must be created:</p> <ul> <li>In the Morrowind \"Data Files\" directory, create a folder named \"MWSE\". This is the folder that contains any MWSE code.</li> <li>In \"MWSE\", create a folder named \"mods\". This is the folder that contains any MWSE mod code. Other options include \"lib\" for user-made frameworks and libraries.</li> <li>In \"mods\", create a folder named \"MWSE-Guide-Demo\". This is the folder that contains the MWSE code for our mod. This folder can include spaces in the folder name. In a normal Morrowind install, you may see other folders here. These represent other mod's code files.</li> </ul> <p>The newly created folder structure should look like this:</p> <ul> <li>Morrowind\\Data Files\\MWSE\\mods\\MWSE-Guide-Demo</li> </ul> <p>Now that the folder structure is complete, you must create a code file to run your code in.</p> <ul> <li>In \"MWSE-Guide-Demo\", create a file named main.lua. This file will contain the Lua code for the mod.</li> </ul> <p>The main file of your mod must be named main.lua. This file should configure and initialize any other code files in your mod. The name main.lua is required by MWSE.</p>"},{"location":"guides/creating-a-mod/#registering-an-event","title":"Registering an Event","text":"<p>The Morrowind game engine, through MWSE, provides a variety of events that can be used to trigger code. An event is a trigger that will notify any registered functions of it's occurrence.</p> <p>For example, consider the <code>loaded</code> event. This event is triggered whenever the player loads a save game. If you register a function to be called when this event occurs, your function will be called when the player loads a save game. By cleverly using Morrowind's events, powerful functionality can be created.</p> <p>In our file, main.lua, we will register an event to trigger our code. It is convention to register your mod's events inside of another event, the <code>initialized</code> event. The <code>initialized</code> event represents the point when the game and it's mods have been loaded. You can imagine this as the point which the title screen is first shown.</p> <p>So, first, we will create the <code>initialized</code> event.</p> <pre><code>-- The function to call on the initialized event.\nlocal function initialized() -- 1.\n\n    -- Print a \"Ready!\" statement to the MWSE.log file.\n    print(\"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\") --2.\nend\n\n-- Register our initialized function to the initialized event.\nevent.register(tes3.event.initialized, initialized) --3.\n</code></pre> <ol> <li>Declare a function to call whenever the <code>initialized</code> event is triggered.</li> <li>It is convention to print a statement stating your mod is initialized at the end of your initialized event function. This is used for debugging.</li> <li>Register our <code>initialized</code> function to the <code>initialized</code> event.</li> </ol> <p>Now, we want to register an event for what we are actually interested in. In this guide, we are creating a mod that displays a unique messagebox every time the player draws a two-handed weapon. There is an event for that! It is called the <code>weaponReadied</code> event.</p> <pre><code>-- The function to call on the showMessageboxOnWeaponReadied event.\nlocal function showMessageboxOnWeaponReadied(e) -- 1.\n    tes3.messageBox(\"I just drew some weapon.\") -- 2.\nend\n\n-- The function to call on the initialized event.\nlocal function initialized()\n    -- Register our function to the weaponReadied event.\n    event.register(tes3.event.weaponReadied, showMessageboxOnWeaponReadied) --3.\n\n    -- Print a \"Ready!\" statement to the MWSE.log file.\n    print(\"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\")\nend\n\n-- Register our initialized function to the initialized event.\nevent.register(tes3.event.initialized, initialized)\n</code></pre> <ol> <li>Declare a function to call whenever the <code>weaponReadied</code> event is triggered.</li> <li>Add a simple messagebox command.</li> <li>Register our <code>showMessageboxOnWeaponReadied</code> function to the <code>weaponReadied</code> event.</li> </ol> <p>At this point, the mod can be tested to confirm the events are set up correctly. To do this, follow the workflow described at the beginning of this guide. When you draw your weapon in-game, you should see a messagebox popup!</p> <p>The details of which events are available and what event data is exposed to them can be found on the events page.</p>"},{"location":"guides/creating-a-mod/#validating-the-event-showing-a-messagebox","title":"Validating the Event &amp; Showing a Messagebox","text":"<p>Now that the required events have been set up, the <code>showMessageboxOnWeaponReadied</code> function should be updated to restrict the types of actions that our code applies to. For the purposes of this guide, the function will only apply to two-handed weapons, and only to the player. The updated function is as follows:</p> <pre><code>-- The function to call on the showMessageboxOnWeaponReadied event.\nlocal function showMessageboxOnWeaponReadied(e)\n    -- Exit the function is the actor is not the player.\n    if (e.reference ~= tes3.player) then --1.\n        return\n    end\n\n    -- Locally store the weapon reference being readied in the event.\n    local weaponStack = e.weaponStack --2.\n\n    -- Check that the reference exists and the reference object is a two-handed weapon.\n    if (weaponStack and weaponStack.object.isTwoHanded) then --3.\n        -- Print our statement.\n        tes3.messageBox(\"I just drew \" .. weaponStack.object.name .. \", destroyer of worlds!\") --4.\n    end\nend\n</code></pre> <ol> <li>We must check that the event was triggered by the player. Without this step, the code would be executed for all actors, including NPCs and creatures! <code>e.reference</code> is an property of the <code>weaponedReadied</code> event. <code>tes3.player</code> is an easy way to access the player reference.</li> <li>Store a copy of the weaponStack reference in a local variable to prevent typing <code>e.weaponStack</code> more than once.</li> <li>The first part of this if condition checks that the reference exists. This should be done to prevent null reference exceptions. The second part of this if condition performs our validation: it ensures that the weapon being readied is a two-handed weapon.</li> <li>Show a messagebox with some custom object information. <code>.name</code> is available on any object.</li> </ol> <p>The mod should be tested again. When drawing a two-handed weapon, you should now see a custom messagebox!</p>"},{"location":"guides/creating-a-mod/#conclusion","title":"Conclusion","text":"<p>This guide provided a simple introduction to modding The Elder Scrolls III: Morrowind using MWSE 2.1 Lua.</p> <p>This guide:</p> <ul> <li>explained the required folder structure to create a MWSE-Lua mod.</li> <li>explained the basics of event registration and callbacks.</li> <li>explained how to implement some basic logic in an event callback.</li> </ul> <p>At this point, you can continue reading the MWSE-Lua documentation. Documentation is constantly being improved upon, so ask a question in the Morrowind Modding Discord if you need help.</p> <p>Here is the final code in main.lua for the demo mod:</p> <pre><code>-- The function to call on the showMessageboxOnWeaponReadied event.\nlocal function showMessageboxOnWeaponReadied(e)\n    -- Exit the function is the actor is not the player.\n    if (e.reference ~= tes3.player) then\n        return\n    end\n\n    -- Locally store the weapon reference being readied in the event.\n    local weaponStack = e.weaponStack\n\n    -- Check that the reference exists and the reference object is a two-handed weapon.\n    if (weaponStack and weaponStack.object.isTwoHanded) then\n        -- Print our statement.\n        tes3.messageBox(\"I just drew \" .. weaponStack.object.name .. \", destroyer of worlds!\")\n    end\nend\n\n-- The function to call on the initialized event.\nlocal function initialized()\n    -- Register our function to the onReadied event.\n    event.register(tes3.event.weaponReadied, showMessageboxOnWeaponReadied)\n\n    -- Print a \"Ready!\" statement to the MWSE.log file.\n    print(\"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\")\nend\n\n-- Register our initialized function to the initialized event.\nevent.register(tes3.event.initialized, initialized)\n</code></pre>"},{"location":"guides/development-workflows/","title":"Development Workflows","text":"<p>This guide will demonstrate how to set up your workflow for modding The Elder Scrolls III: Morrowind using MWSE-Lua.</p> <p>A development workflow is the environment and processes used to facilitate software development. There are many ways that you can develop MWSE-Lua mods. This guide will show you how to to use Visual Studio Code to get syntax highlighting, autocompletion, and doc integration. It will also show you how to use a simple install, Wrye Mash, or Mod Organizer 2 to work on your mods.</p> <p>Summary</p> <p>Want to simply get to work? Open the <code>Data Files\\MWSE</code> folder in Visual Studio Code. Install the recommended plugins MWSE suggests in that workspace. You're good to go.</p>"},{"location":"guides/development-workflows/#requirements","title":"Requirements","text":"<p>All workflows require an installation of Visual Studio Code. After it is installed, we will also need some Lua-focused extensions. You will also need to make sure that MWSE is up to date. Install MWSE and run MWSE-Update.</p> <p>The simplest way to install these extensions is to open the <code>Data Files\\MWSE</code> folder in Visual Studio Code using <code>File &gt; Open Folder</code>. A prompt should show up to install a few extensions.</p> <p>Other editors can be used if desired, but little support will be offered. All MWSE-Lua content is in simple text files, and any text editor can be used. However, MWSE has only generated meta files for autocompletion with the suggested Visual Studio Code extension in mind.</p>"},{"location":"guides/development-workflows/#workflows","title":"Workflows","text":""},{"location":"guides/development-workflows/#simple","title":"Simple","text":"<p>The simplest workflow is already complete for you. There's nothing extra to download, simple open </p> <p>Note</p> <p>This workflow has some drawbacks. If you develop your mods directly in your Morrowind-Dev install, you have to be aware of other mod installations to prevent conflicts during testing.</p>"},{"location":"guides/development-workflows/#wrye-mash","title":"Wrye Mash","text":"<p>A advanced development environment uses Wrye Mash to manage your mod.</p> <p>To setup this environment, do the following:</p> <ol> <li>Create a clean Morrowind install, Morrowind-Dev.</li> <li>Install MWSE and all its requirements. Be sure to run <code>MWSE-Update.exe</code> to get the latest version.</li> <li>Install Wrye Mash.</li> <li>Configure Wrye Mash to use your Morrowind-Dev install as the Morrowind directory.</li> <li>Configure Wrye Mash to use your development folder as the mod directory. This can be any location on your computer where you want to store your development files.</li> <li>Open the <code>Data Files\\MWSE</code> folder in Visual Studio Code.</li> </ol> <p>To use this environment to develop mods while maintaining a clean install, you can do the following:</p> <ol> <li>Make changes as needed to your code.</li> <li>Open Wrye Mash.</li> <li>If you created or deleted files as part of your code changes, use Wrye Mash's Refresh Data tool to reload the install files for your mod.</li> <li>Install your updated mod using Wrye Mash.</li> <li>Start Morrowind and complete testing as needed.</li> <li>Close Morrowind.</li> <li>Uninstall your updated mod using Wrye Mash.</li> </ol> <p>This workflow ensures that you maintain a clean Morrowind-Dev install, do not have mod conflicts during testing, and are always testing with the most up-to-date files.</p>"},{"location":"guides/development-workflows/#other-recommendations","title":"Other Recommendations","text":""},{"location":"guides/development-workflows/#lua-formatting-configuration","title":"Lua Formatting Configuration","text":"<p>One of the recommended plugins (vscode-lua-format) allows the formatting of lua code. Some bits of this may want to be customized. To do so, create a <code>Data Files\\MWSE\\.lua-format</code> file. Information on the style options can be found here.</p> <p>Below are some preferred formatting config files for developers.</p> NullCascade's Styling <pre><code>column_limit: 120\nindent_width: 1\nuse_tab: true\ntab_width: 4\ncontinuation_indent_width: 0\nspaces_before_call: 1\nkeep_simple_control_block_one_line: false\nkeep_simple_function_one_line: false\nalign_args: true\nbreak_after_functioncall_lp: false\nbreak_before_functioncall_rp: false\nspaces_inside_functioncall_parens: false\nspaces_inside_functiondef_parens: false\nalign_parameter: true\nchop_down_parameter: false\nbreak_after_functiondef_lp: false\nbreak_before_functiondef_rp: false\nalign_table_field: true\nbreak_after_table_lb: true\nbreak_before_table_rb: true\nchop_down_table: true\nchop_down_kv_table: true\ntable_sep: \",\"\ncolumn_table_limit: 120\nextra_sep_at_table_end: true\nspaces_inside_table_braces: true\nbreak_after_operator: true\ndouble_quote_to_single_quote: false\nsingle_quote_to_double_quote: false\nspaces_around_equals_in_field: true\nline_breaks_after_function_body: 1\nline_separator: input\n</code></pre>"},{"location":"guides/introduction-to-event-based-programming/","title":"Introduction to Event Based Programming","text":"<p>Event Based Programming, also known as Event Driven Programming or Event Driven Architecture, is an architectural design where code is executed in response to the triggering of an event, also known as a notification, in a software system.</p> <p>A practical example of this is this website. If you click a button on this website, something happens. In other words, your action, clicking on a button, triggers an event. More generally, an action starts a chain of events that results in some other action occurring.</p> <p>This architectural design is the means through which mods can be made for Morrowind using the MWSE-Lua API.</p>"},{"location":"guides/introduction-to-event-based-programming/#event-based-programming-in-context","title":"Event Based Programming In Context","text":"<p>MWSE provides a variety of events that can be used to execute code. The details of which events are available and what event data is exposed to them can be found on the events page.</p> <p>For example, consider the loaded event. This event occurs after a save game has been loaded. When you register a function for this event, your function will be executed when the event occurs. MWSE will automatically handle triggering the event. All you have to do is register your code to be executed.</p> <p>Here is an example of how to register a function for the loaded event:</p> <pre><code>-- The function to call on the loaded event.\nlocal function loadedHandler()\n    -- Execute our code.\nend\n\n-- Register our loadedHandler function to the loaded event.\nevent.register(tes3.event.loaded, loadedHandler)\n</code></pre> <p>By registering functions to be executed on certain events, powerful functions that extend, override, or alter game logic can be created.</p>"},{"location":"guides/introduction-to-event-based-programming/#event-filtering","title":"Event Filtering","text":"<p>Whenever you register your function for an event, it is executed every time the event occurs. This is not always what you want. For example, you may want to register a function for the keyDown event, but only have your code trigger when a certain key is pressed. You can use event filters for this.</p> <pre><code>-- Filter by the scan code to get Z key presses only.\nevent.register(tes3.event.key, myOnKeyCallback, { filter = tes3.scanCode.z } )\n</code></pre> <p>Different filters can be applied to different events. Please refer to the documentation for the event that you want to filter for more information.</p>"},{"location":"guides/introduction-to-event-based-programming/#priority","title":"Priority","text":"<p>The order in which functions registered for the same event are executed can be controlled by providing 'priority' argument.</p> <pre><code>event.register(tes3.event.activate, onActivateObject, { priority = -111 });\n</code></pre> <p>Functions registered with higher priority will run first. Priority defaults to 0 if the argument is not provided.</p>"},{"location":"guides/introduction-to-event-based-programming/#conclusion","title":"Conclusion","text":"<p>This guide introduced Event Based Programming and explained some aspects of it in relation to MWSE. This guide also explained how to use event filtering when registering events in MWSE.</p> <p>For more in-depth documentation on Event Based Programming, please refer to this Event Based Programming article, or other external sources.</p>"},{"location":"guides/introduction-to-lua/","title":"Introduction to Lua","text":"<p>This guide will introduce the Lua scripting language, which is used when developing mods for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua.</p> <p>MWSE uses LuaJIT 2.1.0-beta3, which contains functionality from up to version 5.3 of the Lua scripting language.</p>"},{"location":"guides/introduction-to-lua/#lua-in-context","title":"Lua In Context","text":"<p>The following information is based on information from the Lua 5.1 Reference Manual.</p> <p>Lua is an extension programming language. It can be executed by other, traditional languages, such as C, C++, and C#. In the context of MWSE, this means that the MWSE executable can load Lua code and execute it. This ability allows modders to use Lua to create powerful mods for Morrowind, accomplishing things that were previously impossible.</p> <p>One important detail of Lua is that, unlike other languages, it does not have a Main method. This means that it has no mechanism through which to execute itself. In other words, it can only be executed if embedded in another program, called a host client. In the context of MWSE, MWSE is the host client. However, MWSE does require a files named main.lua to execute your code. The MWSE executable will load any file named main.lua and execute the code within. </p> <p>In practice, this means that the main.lua file performs the same role as a traditional main method in C or C++: it provides an entry point into your code. Specifically, it is used to register and initialize your mod. Unlike traditional main methods in C or C++, there are no required functions for main.lua. The file can consist of anything or nothing. However, registering an event is usually required to develop a mod.</p>"},{"location":"guides/introduction-to-lua/#conclusion","title":"Conclusion","text":"<p>This article introduced the Lua scripting language and explained it in the context of MWSE.</p> <p>For in-depth documentation of the Lua scripting language, please refer to the Lua 5.1 Reference Manual.</p>"},{"location":"guides/introduction/","title":"Introduction","text":"<p>Welcome to the MWSE-Lua interface. Starting in MWSE 2.1, modders are able to create powerful, event-driven modifications to The Elder Scrolls III: Morrowind using the Lua scripting language.</p> <p>Unlike traditional mwscript, Lua scripting is responsive. Instead of checking every frame to see if an object is being activated, a mod might register to see if their reference was activated. This introduction covers the surface of the different components important to scripting with MWSE-Lua.</p> <p>Lua files do not reside in esms/esps, but rather live in the <code>Data Files\\MWSE</code> directory.</p>"},{"location":"guides/introduction/#lua-scripting-language","title":"Lua Scripting Language","text":"<p>This guide is not meant to be a comprehensive introduction to the Lua language. Its syntax is simple. The following code block demonstrates what the language looks like:</p> <pre><code>-- Define a simple function that takes a single parameter.\nlocal function myFunctionName(firstFunctionParameter)\n    -- Print to the MWSE log, with the value that was passed.\n    mwse.log(\"Called my function with parameter = %s\", firstFunctionParameter)\nend\n\n-- Print \"foo\" to the MWSE log, prefixed with the function above.\nmyFunctionName(\"foo\")\n</code></pre> <p>For a broader introduction to the Lua scripting language, refer to the Introduction to Lua guide.</p>"},{"location":"guides/introduction/#morrowind-object-types","title":"Morrowind Object Types","text":"<p>MWSE provides many bindings to more directly manipulate the object types that the Morrowind engine uses. In this example, we find the skooma object, and rename it No-No Juice.</p> <pre><code>-- Tell MWSE that we want to find the skooma object.\nlocal skooma = tes3.getObject(\"potion_skooma_01\")\n\n-- Set the skooma object's name.\nskooma.name = \"No-No Juice\"\n</code></pre> <p>A complete list of exposed TES3 types and their associated properties/functions can be seen on the respective <code>tes3 types</code>_ page.</p>"},{"location":"guides/introduction/#events","title":"Events","text":"<p>Events are the primary way in which script modules interact with the game. There are many event hooks, covering everything from player level up to object collisions to world activations. Using an event typically looks like this:</p> <pre><code>-- Define our callback, which will get called when the event happens.\nlocal function myKeyEvent(eventData)\n    if (eventData.pressed) then\n        mwse.log(\"Key #%d was pressed.\", eventData.keyCode)\n    else\n        mwse.log(\"Key #%d was released.\", eventData.keyCode)\n    end\nend\n\n-- Tell MWSE that we want our callback to be invoked when a key is pressed.\nevent.register(tes3.event.key, myKeyEvent)\n</code></pre> <p>We can also pass filters to events. For the key event, the filter is the key that was pressed/released.</p> <pre><code>-- If we use this instead of the above registration, we filter to key 22 (U).\nevent.register(tes3.event.key, myKeyEvent, { filter = tes3.scanCode.u })\n</code></pre> <p>For a broader introduction to event based programming, refer to the Introduction to Event Based Programming guide.</p> <p>The details of which events are available and what event data is exposed to them can be found on the events page.</p>"},{"location":"guides/introduction/#support-libraries","title":"Support Libraries","text":"<p>On top of all this are support libraries to help make modding easier. An example library is timer, which helps to manage time-based operations.</p> <pre><code>-- Define the function we want to call when our timer completes.\nlocal function myTimerCallback()\n    tes3.messageBox({ message = \"My timer completed!\" })\nend\n\n-- Start a timer that finishes after 5 seconds.\n-- When it does finish it will call the above function.\ntimer.start(5, myTimerCallback)\n</code></pre>"},{"location":"guides/introduction/#an-unsandboxed-world","title":"An Unsandboxed World","text":"<p>MWSE does not do any sandboxing for mods. This enables clever innovations, like Sky Diversity, without the need for externally running programs. This also means that MWSE mods can bring in any lua modules they wish to package. Additionally, they can bring in native code -- allowing powerful extensions that Oblivion and Skyrim have had for years.</p>"},{"location":"guides/introduction/#mod-initialization-scripts","title":"Mod Initialization Scripts","text":"<p>So how do you access all this, and start getting your fingers into the event systems? Unlike vanilla mwscript, Lua scripts are not explicitly restricted to an actively running game. They are also not restricted to esp files -- many MWSE-Lua mods do not require an esp (though may choose to see if an esp is active for an easier user experience).</p> <p>By placing a file with the name <code>main.lua</code> inside the lua folder or any of its subdirectories, that file will get executed when the game is being initialized (e.g. before any esm/esp files are accessed).</p> <p>For example, with the file <code>Data Files\\MWSE\\mods\\demo\\main.lua</code> in place, it will get executed. With the following contents, it will ensure that when a save game is loaded, we get the save game filename printed to our log.</p> <pre><code>local function myLoadedGameCallback(e)\n    mwse.log(\"Loaded game: %s\", e.filename)\nend\nevent.register(tes3.event.loaded, myLoadedGameCallback)\n</code></pre>"},{"location":"guides/introduction/#script-overrides-and-openmw-semi-compatibility","title":"Script Overrides and OpenMW Semi-Compatibility","text":"<p>Another feature of MWSE-Lua is the ability to override the normal execution of mwscript. This means that if we have a script in an esp file called <code>myScript</code> we can do the following code to override its behavior:</p> <pre><code>local function myOverrideFunction(params)\n    tes3.messageBox(string.format(\"I'm running script '%s' on reference '%s' from Lua, not mwscript!\", params.script.id, params.reference.id))\nend\n\n-- Use the above function instead of mwscript logic.\nmwse.overrideScript(\"myScript\", myOverrideFunction)\n</code></pre> <p>OpenMW will not be adding compatibility with MWSE mods, legacy or Lua-based. But script overrides exposes a way for modders to write mods that have extended MWSE functionality without causing issues in OpenMW. Basic functionality can be kept to mwscript, while the script can be overriden to enable advanced functionality using Lua.</p>"},{"location":"guides/introduction/#getting-started","title":"Getting Started","text":"<p>Not sure where to start? Take a look at setting up a Development Workflow, Then, try the Creating a Mod guide, which covers the creation of a new mod from start to finish using MWSE-Lua.</p>"},{"location":"guides/logging/","title":"Logging","text":"<p>The MWSE Logger library allows you to register a logger for your mod. It provides the following features:</p> <ul> <li>Mod-specific log levels</li> <li>Change log level via MCM</li> <li>Log messages can be color coded according to log level (via MWSE MCM)</li> <li>Optional setting to print messages to a separate log file</li> <li>Optional setting to print messages to the in-game console</li> </ul>"},{"location":"guides/logging/#log-levels","title":"Log Levels","text":"<p>Log levels are ordered as follows: <code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, and <code>ERROR</code>. Only logs at or below the current log level will be printed to the log file. For example, if log level is set to <code>INFO</code>, then <code>INFO</code>, <code>WARN</code> and <code>ERROR</code> messages will be logged, but <code>TRACE</code> and <code>DEBUG</code> messages will not.</p>"},{"location":"guides/logging/#log-colors","title":"Log Colors","text":"<p>In the MWSE MCM, there is an option to enable log colors. This will display logs in different colors according to their log level when tailing the log in the console. However, it is recommended that non-modders keep this turned off, as it makes the log file harder to read in a regular text editor.</p>"},{"location":"guides/logging/#log-level-colors","title":"Log Level Colors:","text":"<ul> <li><code>TRACE</code>: Bright White</li> <li><code>DEBUG</code>: Green</li> <li><code>INFO</code>: White</li> <li><code>WARN</code>: Yellow</li> <li><code>ERROR</code>: Red</li> </ul>"},{"location":"guides/logging/#registering-and-using-your-logger","title":"Registering and using your Logger","text":"<pre><code>local logger = require(\"logging.logger\")\nlocal log = logger.new{\n    name = \"Test Mod\",\n    logLevel = \"TRACE\",\n    logToConsole = true,\n}\nlog:trace(\"This is a trace message\")\nlog:debug(\"This is a debug message\")\nlog:info(\"This is an info message\")\nlog:warn(\"This is a warn message\")\nlog:error(\"This is an error message\")\n\nlog:setLogLevel(\"INFO\")\n\n-- To disable logging to the in-game console, set the logToConsole field to false\nlog.logToConsole = false\n\n-- After this point no logging messages will be logged to the in-game console\n</code></pre>"},{"location":"guides/logging/#using-your-logger-in-different-source-files","title":"Using your logger in different source files","text":"<p>In your main.lua, place the logger creation before other source files are included or required. This is to ensure the logger is created and accessible to these other source files.</p> <p>In the other source files: <pre><code>local logger = require(\"logging.logger\")\nlocal log = logger.getLogger(\"Test Mod\")\n\nlog:info(\"This is an info message\")\n</code></pre></p>"},{"location":"guides/logging/#creating-an-mcm-to-control-log-level","title":"Creating an MCM to control Log Level","text":"<p>In your MCM config, create a dropdown with the following options: <pre><code>settings:createDropdown{\n    label = \"Logging Level\",\n    description = \"Set the log level.\",\n    options = {\n        { label = \"TRACE\", value = \"TRACE\"},\n        { label = \"DEBUG\", value = \"DEBUG\"},\n        { label = \"INFO\", value = \"INFO\"},\n        { label = \"WARN\", value = \"WARN\"},\n        { label = \"ERROR\", value = \"ERROR\"},\n        { label = \"NONE\", value = \"NONE\"},\n    },\n    variable = mwse.mcm.createTableVariable{ id = \"logLevel\", table = mcmConfig },\n    callback = function(self)\n        log:setLogLevel(self.variable.value)\n    end\n}\n</code></pre></p>"},{"location":"guides/lua-in-dialogues/","title":"Lua in Dialogues","text":"<p>It is possible to use lua inside the mwscript results pane in the dialogue menu of the Construction Set.</p> <p>Additional functions are available to extend the usefulness of this feature, including <code>tes3ui.choice</code> and <code>tes3.applyTextDefines</code>.</p> <p>Note</p> <p>The execution order of the Results pane is not mixed. All lua commands will be executed before the mwscript is parsed and executed.</p> <p>Tip</p> <p>The keyboard shortcut Control+A does not work in the Construction Set. Right-clicking still allows selecting all text for quick replacement.</p>"},{"location":"guides/lua-in-dialogues/#environment","title":"Environment","text":"<p>All commands from the same results text share the same lua environment. This allows persistent values between lines. To do this however, the <code>local</code> keyword cannot be used. This does not pollute the normal global namespace.</p> <p>Example: Multi Line Values</p> <pre><code>;lua playerName = tes3.player.object.name\n;lua tes3.messageBox(\"Hello %s\", playerName)\n</code></pre> <p>Additionally, some information has been provided in the environment. These values are <code>reference</code>, <code>dialogue</code>, and <code>info</code> for the specifics of what result is being executed, and on who.</p> <p>Example: Print Results Context</p> <pre><code>;lua tes3.messageBox(\"Reference: %s; Dialogue/INFO: %s/%s;\", reference, dialogue, info.id)\n</code></pre> <p>The environment can also be extended through the <code>dialogueEnvironmentCreated</code> event. This allows libraries to extend what functionality is available to dialogue scripters more easily.</p> <p>Example: Extending the Dialogue Environment</p> <p>In your library's main.lua file, create the event hook:</p> <pre><code>local function onDialogueEnvironmentCreated(e)\n    -- Cache the environment variables outside the function for easier access.\n    -- Dialogue scripters shouldn't have to constantly pass these to the functions anyway.\n    local env = e.environment\n    local reference = env.reference\n    local dialogue = env.dialogue\n    local info = env.info\n\n    -- Define the \"global\" function.\n    function env.DisplayDialogueContext()\n        tes3.messageBox(\"Reference: %s; Dialogue/INFO: %s/%s;\", reference, dialogue, info.id)\n    end\nend\nevent.register(tes3.event.dialogueEnvironmentCreated, onDialogueEnvironmentCreated)\n</code></pre> <p>Then, any dialogue scripts can make use of the new function:</p> <pre><code>;lua DisplayDialogueContext()\n</code></pre>"},{"location":"guides/lua-in-dialogues/#usage","title":"Usage","text":""},{"location":"guides/lua-in-dialogues/#basics","title":"Basics","text":"<p>To write lines with lua, prefix them with a mwscript comment starting with <code>;lua</code>. This allows the lua commands to be backwards-compatible for users that do not have MWSE, including users of OpenMW.</p> <p>Example: Goodbye with a Message</p> <pre><code>; The next line will execute lua.\n;lua tes3.messageBox(\"This will run as lua!\")\n\n; The next line will just be normal mwscript.\ngoodbye\n</code></pre> <p>Note</p> <p>All lua logic is contained to a single line. This a limitation of the approach to keep things as compatible as possible.</p>"},{"location":"guides/lua-in-dialogues/#executing-a-lua-file","title":"Executing a Lua File","text":"<p>It may be useful to move the majority of your script logic to an actual .lua file, and use <code>dofile</code>.</p> <p>Example: Execute Lua File from Dialogue</p> <pre><code>;lua dofile(\"myMod.onSomeDialogueResult\")\n</code></pre> <p>The environment variables are not inherited with <code>dofile</code>. To pass the data, it is best to make a call from a module.</p> <p>Example: Passing Results Context to a Lua Module</p> <p>Define your module with a function to be called:</p> <pre><code>local myDialogueModule = {}\n\n--- A function designed to be called from a dialogue result.\n--- @param reference tes3reference The reference the dialogue is running on.\n--- @param dialogue tes3dialogue The parent dialogue for our info.\n--- @param info tes3dialogueInfo The specific INFO object that is being executed.\nfunction myDialogueModule.myFunction(reference, dialogue, info)\n    tes3.messageBox(\"Reference: %s; Dialogue/INFO: %s/%s;\", reference, dialogue, info.id)\nend\n\nreturn myDialogueModule\n</code></pre> <p>Call your module from the dialogue result:</p> <pre><code>;lua myDialogueModule = require(\"myMod.myDialogueModule\")\n;lua myDialogueModule.myFunction(reference, dialogue, info)\n</code></pre>"},{"location":"guides/lua-in-dialogues/#preventing-default-scripts","title":"Preventing Default Scripts","text":"<p>For better compatibility with OpenMW, it can be useful to prevent any vanilla result behavior from happening. This can be done by setting the environment variable <code>noMorrowindScript</code>.</p> <p>Example: Preventing Morrowind Script</p> <pre><code>;lua noMorrowindScript = true\n</code></pre> <p>This will not prevent other associated events, but will prevent the mwscript from the result box from being executed. This can be done conditionally as well.</p> <p>Example: Sometimes Preventing Morrowind Script</p> <pre><code>;lua myDialogueModule = require(\"myMod.myDialogueModule\")\n;lua myDialogueModule.myFunction(reference, dialogue, info)\n;lua if (myDialogueModule.wasSuccessful()) then noMorrowindScript = true end\n</code></pre>"},{"location":"guides/mod-config/","title":"Mod Configuration Menu","text":"<p>Mods can create new GUIs. One GUI that that MWSE ships with is the Mod Configuration Menu. By registering into this system, mods can create settings pages for their mods in a place where users can easily find and manipulate them.</p> <p>Out of Date Information</p> <p>The information here is out of date, and does not use the new EasyMCM system. These docs will be updated in the future to cover EasyMCM features.</p>"},{"location":"guides/mod-config/#creating-a-config-package","title":"Creating a Config Package","text":"<p>The mod config system operates through a single package that is registered. Below is the simplest code required to get a mod's name into the mod config list:</p> <pre><code>-- Define our mod config package. For now, there's nothing interesting.\nlocal modConfigPackage = {}\n\n-- The callback to create the mod config GUI when our mod was clicked.\nfunction modConfigPackage.onCreate(container)\n    container:createLabel({ text = \"Hello world!\" })\nend\n\n-- When the mod config menu is ready to start accepting registrations, register this mod.\nlocal function registerModConfig()\n    mwse.registerModConfig(\"My Awesome Mod\", modConfigPackage)\nend\nevent.register(tes3.event.modConfigReady, registerModConfig)\n</code></pre> <p>After loading up the game, you should see \"My Awesome Mod\" in the mod config menu, with a single \"Hello world!\" in its configuration pane.</p>"},{"location":"guides/mod-config/#handling-close-state","title":"Handling Close State","text":"<p>It may be desirable to put off saving config options until after the close button has been clicked, or until after the user switched to a new mod. The optional <code>modConfigPackage.onClose</code> callback is called in both cases.</p> <pre><code>-- The callback to do any cleanup needed when our menu is about to be destroyed.\nfunction modConfigPackage.onClose(container)\n    tes3.messageBox(\"Goodbye!\")\nend\n</code></pre>"},{"location":"guides/mod-config/#hiding-from-the-config-menu","title":"Hiding from the Config Menu","text":"<p>It may become desirable to hide a mod from the config menu. For example, you may not wish it to be displayed until after the player is in-game if settings are stored in the save game file instead of another file. This can be done by setting the <code>modConfigPackage.hidden</code> field to <code>true</code>. In the below example, we'll hide the mod from the config menu until the game has loaded.</p> <pre><code>local modConfigPackage = { hidden = true }\n\nlocal function enableModConfigOnLoaded()\n    modConfigPackage.hidden = false\nend\nevent.register(tes3.event.loaded, enableModConfigOnLoaded)\n</code></pre>"},{"location":"guides/mod-translations/","title":"Mod Translations","text":"<p>MWSE provides means to translate mods using an i18n library. With this, users can write their mods with native support for other languages, or they can write their mods in such a way that other modders can provide translation files.</p>"},{"location":"guides/mod-translations/#hello-world-translated","title":"Hello World, Translated","text":"<p>To begin, let's look at some source code that we want to enable translations for. It is a simple mod that displays a message when the player hits the Z key.</p> <p>The Hello World Mod\\main.lua</p> <pre><code>local function onPressZ(e)\n    tes3.messageBox(\"Hello world!\")\nend\nevent.register(tes3.event.keyDown, onPressZ, { filter = tes3.scanCode.z })\n</code></pre> <p>Here we just want to allow translators to provide a different string instead of <code>\"Hello world!\"</code>. To do this, we need to make an i18n folder in our project to define our language files in. For example:</p> <ul> <li>The Hello World Mod<ul> <li>i18n<ul> <li>deu.lua</li> <li>eng.lua</li> <li>fra.lua</li> <li>pol.lua</li> <li>rus.lua</li> </ul> </li> <li>main.lua</li> </ul> </li> </ul> <p>The Hello World Mod\\i18n\\deu.lua</p> <pre><code>return {\n    [\"Hello world!\"] = \"Hallo Welt!\",\n}\n</code></pre> <p>The Hello World Mod\\i18n\\eng.lua</p> <pre><code>return {\n    [\"Hello world!\"] = \"Hello world!\",\n}\n</code></pre> <p>The Hello World Mod\\i18n\\fra.lua</p> <pre><code>return {\n    [\"Hello world!\"] = \"Bonjour le monde!\",\n}\n</code></pre> <p>The Hello World Mod\\i18n\\pol.lua</p> <pre><code>return {\n    [\"Hello world!\"] = \"Witaj \u015bwiecie!\",\n}\n</code></pre> <p>The Hello World Mod\\i18n\\rus.lua</p> <pre><code>return {\n    [\"Hello world!\"] = \"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\",\n}\n</code></pre> <p>The Hello World Mod\\main.lua</p> <pre><code>local i18n = mwse.loadTranslations(\"The Hello World Mod\")\n\nlocal function onPressZ(e)\n    tes3.messageBox(i18n(\"Hello world!\"))\nend\nevent.register(tes3.event.keyDown, onPressZ, { filter = tes3.scanCode.z })\n</code></pre> <p>This code looks pretty simple, but what is really happening here? <code>mwse.loadTranslations(\"The Hello World Mod\")</code> loads content from The Hello World Mod\\i18n\\eng.lua as well as an optional additional file, based on the player's game language. This can be deu.lua, fra.lua, or rus.lua. When the <code>i18n</code> translation result is called, it returns the translation for the player's current language with the key <code>\"Hello world!\"</code>.</p>"},{"location":"guides/mod-translations/#translation-files","title":"Translation Files","text":"<p>The translation files available in the i18n folder follow a simple format, but it warrants description here. Each is a simple lua file that returns a table. The keys in that table can be passed to the <code>i18n</code> value returned from <code>mwse.loadTranslations</code> to get a translation for the player's language.</p> <p>A translation value is typically a string, but it can also have support for different translations based on values fed.</p> <p>File Encoding</p> <p>MWSE automatically handles encoding of language files. All language files should be written using UTF-8.</p> <p>Dots in Translation Keys</p> <p>When using dots to break apart translation keys, be careful of not to use a category as a value. For example, the following will create an error: <pre><code>return {\n    [\"mcm.component.console\"] = \"Enable console component?\",\n    [\"mcm.component.console.description\"] = \"It's really cool, so you should.\",\n}\n</code></pre> Instead, use something like: <pre><code>return {\n    [\"mcm.component.console.label\"] = \"Enable console component?\",\n    [\"mcm.component.console.description\"] = \"It's really cool, so you should.\",\n}\n</code></pre></p>"},{"location":"guides/mod-translations/#pluralization","title":"Pluralization","text":"<p>i18n supports the unicode.org plural rules, to make translations more intelligent and context-sensitive. We will discuss feeding values for this shortly. Consider this example, handling how to display the number of iron daggers the player has:</p> <p>Pluralization</p> <p>i18n\\eng.lua: <pre><code>return {\n    itemCountNotification = {\n        zero = \"You have no %{item}s.\",\n        one = \"You have 1 %{item}.\",\n        other = \"You have %{count} %{item}s.\",\n    },\n}\n</code></pre> main.lua: <pre><code>local i18n = mwse.loadTranslations(\"Iron Dagger Counter\")\nlocal function onPressZ(e)\n    local dagger = tes3.getObject(\"iron dagger\")\n    local daggerCount = tes3.getItemCount({ reference = tes3.player, item = dagger })\n    tes3.messageBox(i18n(\"itemCountNotification\", { count = daggerCount, item = dagger.name }))\nend\nevent.register(tes3.event.keyDown, onPressZ, { filter = tes3.scanCode.z })\n</code></pre></p> <p>Here, the correct language will be chosen depending on the context of <code>daggerCount</code>. If the player has no iron daggers, <code>\"You have no Iron Daggers.\"</code> will be displayed. If the player has exactly 1 iron dagger, <code>\"You have 1 Iron Dagger.\"</code>. Finally, in any other case, the <code>other</code> key is used.</p> <p>A few other pluralization fields are available: <code>few</code> and <code>many</code>. <code>few</code> is used when <code>value % 100</code> is between 3 and 10. <code>many</code> is used when <code>value % 100</code> is between 11 and 99.</p>"},{"location":"guides/mod-translations/#interpolation","title":"Interpolation","text":"<p>Values can be passed to translation strings in a few different ways:</p> <p>Named Style</p> <p>i18n\\eng.lua: <pre><code>return {\n    itemCountNotification = {\n        zero = \"You have no %{item}s.\",\n        one = \"You have 1 %{item}.\",\n        other = \"You have %{count} %{item}s.\",\n    },\n}\n</code></pre> main.lua: <pre><code>tes3.messageBox(i18n(\"itemCountNotification\", { count = daggerCount, item = dagger.name }))\n</code></pre></p> <p><code>string.format</code> Style</p> <p>i18n\\eng.lua: <pre><code>return {\n    itemCountNotification = {\n        zero = \"You have no %ss.\",\n        one = \"You have 1 %s.\",\n        other = \"You have %d %ss.\",\n    },\n}\n</code></pre> main.lua: <pre><code>if (daggerCount &gt; 1) then\n    tes3.messageBox(i18n(\"itemCountNotification\", { daggerCount, dagger.name }))\nelse\n    tes3.messageBox(i18n(\"itemCountNotification\", { dagger.name }))\nend\n</code></pre></p> <p>Named with <code>string.format</code> Style</p> <p>i18n\\eng.lua: <pre><code>return {\n    itemCountNotification = {\n        zero = \"You have no %&lt;item&gt;ss.\",\n        one = \"You have 1 %&lt;item&gt;d.\",\n        other = \"You have %&lt;count&gt;d %&lt;item&gt;ss.\",\n    },\n}\n</code></pre> main.lua: <pre><code>tes3.messageBox(i18n(\"itemCountNotification\", { count = daggerCount, item = dagger.name }))\n</code></pre></p>"},{"location":"guides/storing-data/","title":"Storing Data","text":"<p>MWSE offers various ways to store data persistently. Be at across save sessions for the same character or even persistently across different player characters. To store data that is meant to persist between different characters, you can use provided json API. It provides a set of functions needed to save Lua's values to json files and load the data to Lua's tables. This process is called serialization. One requirement is that the value can be serialized. Even functions used to work with configuration files <code>mwse.saveConfig</code> and <code>mwse.loadConfig</code> are implemented with json API.</p>"},{"location":"guides/storing-data/#serialization","title":"Serialization","text":"<p>Serializible values are Lua's primitive types:</p> <ul> <li><code>boolean</code></li> <li><code>number</code></li> <li><code>string</code></li> <li><code>table</code>'s made of above values</li> </ul> <p>You can't serialize MWSE classes such as <code>tes3reference</code>, <code>tes3mobilePlayer</code>, etc.</p>"},{"location":"guides/storing-data/#persistent-storage-for-the-same-player-character","title":"Persistent Storage for the Same Player Character","text":"<p>Besides saving your data to files, you can save your data to some of the MWSE's classes that have a <code>data</code> or <code>tempData</code> property. Those are:</p> <ul> <li><code>tes3combatSession.data</code></li> <li><code>tes3itemData.data</code></li> <li><code>tes3reference.data</code></li> <li><code>tes3itemData.tempData</code></li> <li><code>tes3reference.tempData</code></li> </ul> <p>Note</p> <p>Both <code>data</code> and <code>tempData</code> tables can only be used to store serializible data.</p> <p>Data stored in the <code>data</code> table on a certain object will persist between savegame sessions, while data stored in <code>tempData</code> table will be cleared on game reload. There are some peculiarities when working with these tables - each of the table fields needs to be declared one by one.</p> <p>Example: creating a table inside <code>data</code> table on the player's reference</p> <pre><code>-- Correct way\ntes3.player.data.myMod = {}\ntes3.player.data.myMod.var1 = {}\ntes3.player.data.myMod.var2 = 32\n\n-- Wrong way, this would rise an error\ntes3.player.data.myMod = {\n    var1 = {},\n    var2 = 32\n}\n\n\n-- On the other hand we can save our created\n-- table to a local variable for easy access\n-- Let's create our table first\ntes3.player.data.myMod = {}\n\n-- Now let's save it to a local variable\nlocal myData = tes3.player.data.myMod\n\n-- Let's save something now\nmyData.var1 = {}\nmyData.var2 = 32\n</code></pre> <p>The field <code>data</code> on the player's reference could be the perfect way to store some mod-related player statistics. For example, a mod implementing a karma system could save the player's current karma level inside that table, so that it can persist between save sessions. On the other hand, the data that the mod's user would want to persist between whichever character the player or savegame is played would be saved to a configuration file instead. For instance, keybindings for new abilities are a good candidate for that.</p>"},{"location":"guides/storing-data/#usage-of-data-table","title":"Usage of data table","text":"<p>Here an example of a simple mod is given which stores some variables to <code>tes3.player.data</code> and <code>tes3.player.tempData</code>.</p> <pre><code>local shrineIds = {\n    [\"fields of kummu\"] = true,\n    [\"vivec, temple\"] = true,\n    [\"vivec, puzzle canal, center\"] = true,\n    [\"gnisis, temple\"] = true,\n    [\"koal cave\"] = true,\n    [\"ghostgate, temple\"] = true\n}\nlocal regions = {\n    [\"balmora\"] = true,\n    [\"seyda neen\"] = true,\n    [\"ald-ruhn\"] = true\n}\n\n-- This is the default layout for the table\n-- stored on tes3.player.data\nlocal defaults = {\n    reginalBounties = {\n        [\"balmora\"] = 0,\n        [\"seyda neen\"] = 0,\n        [\"ald-ruhn\"] = 0\n    },\n    karma = 0,\n    shrinesVisited = {}\n}\n\n--- This function will recursively set all the fields on our\n--- tes3.player.data table if they don't exist already\n---@param data table\n---@param t table\nlocal function initTableValues(data, t)\n    for k, v in pairs(t) do\n        -- If a field already exists - we did work with\n        -- this character before. Don't do anything.\n        if data[k] == nil then\n            if type(v) ~= \"table\" then\n                data[k] = v\n            elseif v == {} then\n                data[k] = {}\n            else\n                -- Fill out the sub-table\n                data[k] = {}\n                initTableValues(data[k], v)\n            end\n        end\n    end\nend\n\n--- This is a standard function that will create\n--- a table for our mod's storage in tes3.player.data\nlocal function initializeData()\n    local data = tes3.player.data\n    data.myMod = data.myMod or {}\n    local myData = data.myMod\n    initTableValues(myData, defaults)\nend\nevent.register(tes3.event.loaded, initializeData)\n\n--- This is a convinience function to get our storage\n---@return table myData\nlocal function getData()\n    return tes3.player.data.myMod\nend\n\n--- This function will handle updating the player's Current\n--- karma level, and handle if it passes over -100 or 100\n---@param delta integer\nlocal function modKarma(delta)\n    local myData = getData()\n    local oldKarma = myData.karma\n    myData.karma = myData.karma + delta\n\n    local barrierCrossed = (math.abs(oldKarma) &gt;= 100 and math.abs(myData.karma) &lt; 100) or\n                                    (math.abs(myData.karma) &gt; 100 and math.abs(oldKarma) &lt;= 100)\n\n    if barrierCrossed then\n        -- Let's log to see what's happening\n        tes3.messageBox(\"Current karma: %s\", myData.karma)\n        if myData.karma &lt; -100 then\n            tes3.messageBox(\"Because of your deeds your karma now reached evil level.\")\n\n            -- Now let's store that to tes3.player.tempData for later use\n            -- We can use table.getset to create a table for our mod in\n            -- tes3.player.tempData if it doesn't exist yet.\n            local temp = table.getset(tes3.player.tempData, \"myMod\", {})\n\n            -- Now actually store player's karma range\n            temp.encounter = \"bad\"\n\n        elseif myData.karma &lt; 100 then\n            -- -100 &lt; karmy &lt; 100\n            tes3.messageBox(\"Because of your deeds your karma now reached neutral level.\")\n            local temp = table.getset(tes3.player.tempData, \"myMod\", {})\n            temp.encounter = \"neutral\"\n\n        elseif myData.karma &gt;= 100 then\n            tes3.messageBox(\"Through your deeds your karma now reached good level.\")\n            local temp = table.getset(tes3.player.tempData, \"myMod\", {})\n            temp.encounter = \"good\"\n        end\n    end\nend\n\n---@param e cellChangedEventData\nlocal function onCellChange(e)\n    local cell = e.cell\n    local cellId = cell.id:lower()\n\n    -- Check if visited cell is on\n    -- the list of valid shrines\n    if shrineIds[cellId] then\n        local data = getData()\n\n        -- Make sure player didn't already visit this shrine,\n        -- not to award the karma boost twice.\n        if not data.shrinesVisited[cellId] then\n            -- Player visited this shrine for the first time,\n            -- award some karma points\n            modKarma(50)\n\n            -- Let's save that to the list of visited shrines in\n            -- a table on tes3.player.data, so it can persist\n            -- between savegames.\n            data.shrinesVisited[cellId] = true\n        end\n    end\nend\nevent.register(tes3.event.cellChanged, onCellChange)\n\n\n---@param e lockPickEventData|trapDisarmEventData\nlocal function onPick(e)\n    local doorReference = e.reference\n    local hasAccess = tes3.hasOwnershipAccess({ target = doorReference })\n\n    if not hasAccess then\n        tes3.messageBox(\"That isn't allowed!\")\n        modKarma(-25)\n        local cellId = tes3.player.cell.id:lower()\n        if regions[cellId] then\n            local myData = getData()\n            myData.reginalBounties[cellId] = myData.reginalBounties[cellId] + 25\n        end\n\n    end\nend\nevent.register(tes3.event.lockPick, onPick)\nevent.register(tes3.event.trapDisarm, onPick)\n\n---@param e calcRestInterruptEventData\nlocal function onCalcRestInterrupt(e)\n    if not tes3.player.tempData.myMod then return end\n\n    local roll = math.random(100)\n    if roll &gt; 60 then return end\n\n    local encounterType = tes3.player.tempData.myMod.encounter\n    if encounterType == \"good\" then\n        -- The player has good karma, let's block\n        -- the rest interruption\n        e.count = 0\n\n        -- Log what happened. This kind of message wouldn't\n        -- be in the final release of the mod.\n        tes3.messageBox(\"Blocking encounter!\")\n    elseif encounterType == \"neutral\" then\n        local roll = math.random(100)\n        if roll &lt; 50 then\n            e.count = 0\n            tes3.messageBox(\"Blocking encounter!\")\n        end\n    else\n        -- Player is bad, let's increase the amount\n        -- of spawned creatures by a random number\n        local mod = math.random(10)\n        e.count = e.count + mod\n        tes3.messageBox(\"Increased the spawned enemy count!\")\n    end\nend\nevent.register(tes3.event.calcRestInterrupt, onCalcRestInterrupt)\n</code></pre>"},{"location":"guides/tes3ui-events/","title":"TES3 UI Events Guide","text":"<p>These example functions allows you to access magic effect tooltips, as seen on the bottom right of the HUD and on the magic menu.</p> <pre><code>local function magicEffectTooltip()\n    local helpMenu = tes3ui.findHelpLayerMenu(\"HelpMenu\")\n    if (helpMenu) then\n        local t = string.format(\"&lt;&lt; %s &gt;&gt;\", e.source.contentPath)\n        helpMenu:createLabel{text = t}\n        helpMenu:updateLayout()\n    end\nend\n\nlocal function editMagicEffectTooltips()\n    multi = tes3ui.findMenu(\"MenuMulti\")\n    iconBar = multi:findChild(\"MenuMulti_magic_icons_1\")\n\n    for _, x in pairs(iconBar.children) do\n        x:registerAfter(tes3.uiEvent.help, magicEffectTooltip)\n    end\n\n    multi = tes3ui.findMenu(\"MenuMagic\")\n    iconBar = multi:findChild(\"MagicMenu_t_icon_row_1\")\n\n    for _, x in pairs(iconBar.children) do\n        x:registerAfter(tes3.uiEvent.help, magicEffectTooltip)\n    end\nend\n</code></pre>"},{"location":"guides/tes3ui/","title":"TES3 UI Example","text":"<p>This example allows you to rename the object you are targetting. When the '/' key is pressed, a custom input window is opened.</p> <pre><code>--[[\n    Mod: TES3UI TextInput\n    Author: Hrnchamd\n]]--\n\nlocal this = {}\n\n\nfunction this.init()\n    this.id_menu = tes3ui.registerID(\"example:MenuTextInput\")\n    this.id_input = tes3ui.registerID(\"example:MenuTextInput_Text\")\n    this.id_ok = tes3ui.registerID(\"example:MenuTextInput_Ok\")\n    this.id_cancel = tes3ui.registerID(\"example:MenuTextInput_Cancel\")\nend\n\n\n-- Create window and layout. Called by onCommand.\nfunction this.createWindow()\n    -- Return if window is already open\n    if (tes3ui.findMenu(this.id_menu) ~= nil) then\n        return\n    end\n\n    -- Create window and frame\n    local menu = tes3ui.createMenu{ id = this.id_menu, fixedFrame = true }\n\n    -- To avoid low contrast, text input windows should not use menu transparency settings\n    menu.alpha = 1.0\n\n    -- Create layout\n    local input_label = menu:createLabel{ text = \"Rename your item\" }\n    input_label.borderBottom = 5\n\n    local input_block = menu:createBlock{}\n    input_block.width = 300\n    input_block.autoHeight = true\n    input_block.childAlignX = 0.5  -- centre content alignment\n\n    local border = input_block:createThinBorder{}\n    border.width = 300\n    border.height = 30\n    border.childAlignX = 0.5\n    border.childAlignY = 0.5\n\n    local input = border:createTextInput{ id = this.id_input }\n    input.text = this.item.name  -- initial text\n    input.borderLeft = 5\n    input.borderRight = 5\n    input.widget.lengthLimit = 31  -- TextInput custom properties\n    input.widget.eraseOnFirstKey = true\n\n    local button_block = menu:createBlock{}\n    button_block.widthProportional = 1.0  -- width is 100% parent width\n    button_block.autoHeight = true\n    button_block.childAlignX = 1.0  -- right content alignment\n\n    local button_cancel = button_block:createButton{ id = this.id_cancel, text = tes3.findGMST(\"sCancel\").value }\n    local button_ok = button_block:createButton{ id = this.id_ok, text = tes3.findGMST(\"sOK\").value }\n\n    -- Events\n    button_cancel:register(tes3.uiEvent.mouseClick, this.onCancel)\n    menu:register(tes3.uiEvent.keyEnter, this.onOK) -- only works when text input is not captured\n    input:register(tes3.uiEvent.keyEnter, this.onOK)\n    button_ok:register(tes3.uiEvent.mouseClick, this.onOK)\n\n    -- Final setup\n    menu:updateLayout()\n    tes3ui.enterMenuMode(this.id_menu)\n    tes3ui.acquireTextInput(input) -- automatically reset when menu is closed\nend\n\n\n-- OK button callback.\nfunction this.onOK(e)\n    local menu = tes3ui.findMenu(this.id_menu)\n\n    if (menu) then\n        -- Copy text *before* the menu is destroyed\n        local name = menu:findChild(this.id_input).text\n\n        tes3ui.leaveMenuMode()\n        menu:destroy()\n\n        tes3.messageBox{ message = this.item.name .. \" renamed to \" .. name }\n        this.item.name = name\n    end\nend\n\n-- Cancel button callback.\nfunction this.onCancel(e)\n    local menu = tes3ui.findMenu(this.id_menu)\n\n    if (menu) then\n        tes3ui.leaveMenuMode()\n        menu:destroy()\n    end\nend\n\n-- Keydown callback.\nfunction this.onCommand(e)\n    local t = tes3.getPlayerTarget()\n    if (t) then\n        t = t.object.baseObject or t.object -- Select actor base object\n\n        if (t.name) then\n            this.item = t\n            this.createWindow()\n        end\n    end\nend\n\nevent.register(tes3.event.initialized, this.init)\nevent.register(tes3.event.keyDown, this.onCommand, { filter = tes3.scanCode[\"/\"] }) -- \"/\" key\n</code></pre>"},{"location":"guides/timers/","title":"Timers","text":"<p>Timers are a way to keep track with the passage of time. They are volatile, meaning that they do not persist between saved games.</p>"},{"location":"guides/timers/#creating-a-basic-timer","title":"Creating a Basic Timer","text":"<p>To create a timer, pass a table of options to <code>timer.start()</code>.</p> <pre><code>-- The function we want to run when the timer completes.\nlocal function onTimerComplete()\n    tes3.messageBox(\"30 seconds have passed!\")\nend\n\n-- Create our timer to fire the above function after 30 seconds.\ntimer.start({ duration = 30, callback = onTimerComplete })\n</code></pre> <p>In the above example, we create a message box after 30 seconds.</p>"},{"location":"guides/timers/#repeating-a-timer","title":"Repeating a Timer","text":"<p>Timers can repeat, based on an iterations parameter. This can be used to define a timer that will trigger multiple times.</p> <pre><code>-- The function we want to run when the timer completes.\nlocal function onTimerComplete()\n    tes3.messageBox(\"A minute has passed!\")\nend\n\n-- Create our timer to fire the above function every minute for 5 minutes.\ntimer.start({ duration = 60, callback = onTimerComplete, iterations = 5 })\n</code></pre> <p>Additionally, a value of <code>-1</code> will create a timer that will repeat forever.</p>"},{"location":"guides/timers/#controlling-timer-state","title":"Controlling Timer State","text":"<p>A timer's state (read through the <code>.state</code> property), can be <code>timer.active</code>, <code>timer.paused</code>, or <code>timer.expired</code>. An active timer is running normally. A paused timer doesn't run, but can be resumed to pick back up where it left off. An expired timer has finished running (and has no more iterations).</p> <p>A timer can be told to pause, resume, reset, or cancel.</p> <pre><code>-- Create a timer.\nlocal myTimer = timer.start({ duration = 60, callback = onTimerComplete })\n\n-- Pause the timer. It can be resumed again using myTimer:resume()\nmyTimer:pause()\n\n-- Resume the timer. It's now active again.\nmyTimer:resume()\n\n-- Reset the timer. It will take 60 seconds from right now to finish.\nmyTimer:reset()\n\n-- Cancel the timer. We will no longer care about it.\nmyTimer:cancel()\n</code></pre>"},{"location":"guides/timers/#creating-different-types-of-timers","title":"Creating Different Types of Timers","text":"<p>Three different types of timers are available, though an advanced user can create their own types of timers and manage their clock cycles. The default types are:</p> <ul> <li>Real, defined by <code>timer.real</code>. Real timers operate primarily on real time, incrementing seconds whenever the game window is active.</li> <li>Simulate, defined by <code>timer.simulate</code>. Simulate timers operate much like real timers, incrementing seconds but only when the game is simulating (i.e. not in menu mode). This is the default type of timer.</li> <li>Game, defined by <code>timer.game</code>. Game timers operate by game hour, matching game time.</li> </ul> <pre><code>-- Create a timer that ends after 60 seconds.\nlocal myTimer = timer.start({ duration = 60, callback = onTimerComplete, type = timer.real })\n\n-- Create a timer that ends after 30 unpaused seconds.\nlocal myTimer = timer.start({ duration = 30, callback = onTimerComplete, type = timer.simulate })\n\n-- Create a timer that ends after 4 game hours.\nlocal myTimer = timer.start({ duration = 4, callback = onTimerComplete, type = timer.game })\n</code></pre>"},{"location":"references/action-flags/","title":"Action Flags","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.actionFlag</code> table. For example, <code>tes3.actionFlag.onMurder</code> has a value of <code>64</code>.</p> Index Value useEnabled <code>1</code> onActivate <code>2</code> onDeath <code>16</code> onKnockout <code>32</code> onMurder <code>64</code> doorOpening <code>256</code> doorClosing <code>512</code> doorJammedOpening <code>1024</code> doorJammedClosing <code>2048</code>"},{"location":"references/active-body-part-layers/","title":"Active Body Part Layers","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.activeBodyPartLayer</code> table. For example, <code>tes3.activeBodyPartLayer.base</code> has a value of <code>0</code>.</p> Index Value base <code>0</code> clothing <code>1</code> armor <code>2</code>"},{"location":"references/active-body-parts/","title":"Active Body Parts","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.activeBodyPart</code> table. For example, <code>tes3.activeBodyPart.hair</code> has a value of <code>1</code>.</p> Index Value head <code>0</code> hair <code>1</code> neck <code>2</code> chest <code>3</code> groin <code>4</code> skirt <code>5</code> rightHand <code>6</code> leftHand <code>7</code> rightWrist <code>8</code> leftWrist <code>9</code> shield <code>10</code> rightForearm <code>11</code> leftForearm <code>12</code> rightUpperArm <code>13</code> leftUpperArm <code>14</code> rightFoot <code>15</code> leftFoot <code>16</code> rightAnkle <code>17</code> leftAnkle <code>18</code> rightKnee <code>19</code> leftKnee <code>20</code> rightUpperLeg <code>21</code> leftUpperLeg <code>22</code> rightPauldron <code>23</code> leftPauldron <code>24</code> weapon <code>25</code> tail <code>26</code>"},{"location":"references/actor-types/","title":"Actor Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.actorType</code> table. For example, <code>tes3.actorType.creature</code> has a value of <code>0</code>.</p> Index Value creature <code>0</code> npc <code>1</code> player <code>2</code>"},{"location":"references/ai-behavior-states/","title":"AI Behavior States","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.aiBehaviorState</code> table. For example, <code>tes3.aiBehaviorState.undecided</code> has a value of <code>-1</code>.</p> Index Value undecided <code>-1</code> hello <code>0</code> idle <code>2</code> attack <code>3</code> avoid <code>4</code> flee <code>6</code> walk <code>8</code> greet <code>12</code>"},{"location":"references/ai-packages/","title":"AI Packages","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.aiPackage</code> table. For example, <code>tes3.aiPackage.none</code> has a value of <code>-1</code>.</p> Index Value none <code>-1</code> wander <code>0</code> travel <code>1</code> escort <code>2</code> follow <code>3</code> activate <code>4</code>"},{"location":"references/animation-body-sections/","title":"Animation Body Sections","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.animationBodySection</code> table. For example, <code>tes3.animationBodySection.leftArm</code> has a value of <code>2</code>.</p> Index Value lower <code>0</code> upper <code>1</code> leftArm <code>2</code>"},{"location":"references/animation-groups/","title":"Animation Groups","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.animationGroup</code> table. For example, <code>tes3.animationGroup.swimKnockOut</code> has a value of <code>41</code>.</p> Index Value idle <code>0</code> idle2 <code>1</code> idle3 <code>2</code> idle4 <code>3</code> idle5 <code>4</code> idle6 <code>5</code> idle7 <code>6</code> idle8 <code>7</code> idle9 <code>8</code> idleHandToHand <code>9</code> idle1h <code>10</code> idle2c <code>11</code> idle2w <code>12</code> idleSwim <code>13</code> idleSpell <code>14</code> idleCrossbow <code>15</code> idleSneak <code>16</code> idleStorm <code>17</code> torch <code>18</code> hit1 <code>19</code> hit2 <code>20</code> hit3 <code>21</code> hit4 <code>22</code> hit5 <code>23</code> swimHit1 <code>24</code> swimHit2 <code>25</code> swimHit3 <code>26</code> death1 <code>27</code> death2 <code>28</code> death3 <code>29</code> death4 <code>30</code> death5 <code>31</code> deathKnockDown <code>32</code> deathKnockOut <code>33</code> knockDown <code>34</code> knockOut <code>35</code> swimDeath <code>36</code> swimDeath2 <code>37</code> swimDeath3 <code>38</code> swimDeathKnockDown <code>39</code> swimDeathKnockOut <code>40</code> swimKnockOut <code>41</code> swimKnockDown <code>42</code> swimWalkForward <code>43</code> swimWalkBack <code>44</code> swimWalkLeft <code>45</code> swimWalkRight <code>46</code> swimRunForward <code>47</code> swimRunBack <code>48</code> swimRunLeft <code>49</code> swimRunRight <code>50</code> swimTurnLeft <code>51</code> swimTurnRight <code>52</code> walkForward <code>53</code> walkBack <code>54</code> walkLeft <code>55</code> walkRight <code>56</code> turnLeft <code>57</code> turnRight <code>58</code> runForward <code>59</code> runBack <code>60</code> runLeft <code>61</code> runRight <code>62</code> sneakForward <code>63</code> sneakBack <code>64</code> sneakLeft <code>65</code> sneakRight <code>66</code> jump <code>67</code> walkForwardHandToHand <code>68</code> walkBackHandToHand <code>69</code> walkLeftHandToHand <code>70</code> walkRightHandToHand <code>71</code> turnLeftHandToHand <code>72</code> turnRightHandToHand <code>73</code> runForwardHandToHand <code>74</code> runBackHandToHand <code>75</code> runLeftHandToHand <code>76</code> runRightHandToHand <code>77</code> sneakForwardHandToHand <code>78</code> sneakBackHandToHand <code>79</code> sneakLeftHandToHand <code>80</code> sneakRightHandToHand <code>81</code> jumpHandToHand <code>82</code> walkForward1h <code>83</code> walkBack1h <code>84</code> walkLeft1h <code>85</code> walkRight1h <code>86</code> turnLeft1h <code>87</code> turnRight1h <code>88</code> runForward1h <code>89</code> runBack1h <code>90</code> runLeft1h <code>91</code> runRight1h <code>92</code> sneakForward1h <code>93</code> sneakBack1h <code>94</code> sneakLeft1h <code>95</code> sneakRight1h <code>96</code> jump1h <code>97</code> walkForward2c <code>98</code> walkBack2c <code>99</code> walkLeft2c <code>100</code> walkRight2c <code>101</code> turnLeft2c <code>102</code> turnRight2c <code>103</code> runForward2c <code>104</code> runBack2c <code>105</code> runLeft2c <code>106</code> runRight2c <code>107</code> sneakForward2c <code>108</code> sneakBack2c <code>109</code> sneakLeft2c <code>110</code> sneakRight2c <code>111</code> jump2c <code>112</code> walkForward2w <code>113</code> walkBack2w <code>114</code> walkLeft2w <code>115</code> walkRight2w <code>116</code> turnLeft2w <code>117</code> turnRight2w <code>118</code> runForward2w <code>119</code> runBack2w <code>120</code> runLeft2w <code>121</code> runRight2w <code>122</code> sneakForward2w <code>123</code> sneakBack2w <code>124</code> sneakLeft2w <code>125</code> sneakRight2w <code>126</code> jump2w <code>127</code> spellCast <code>128</code> spellTurnLeft <code>129</code> spellTurnRight <code>130</code> attack1 <code>131</code> attack2 <code>132</code> attack3 <code>133</code> swimAttack1 <code>134</code> swimAttack2 <code>135</code> swimAttack3 <code>136</code> handToHand <code>137</code> crossbow <code>138</code> bowAndArrow <code>139</code> throwWeapon <code>140</code> weaponOneHand <code>141</code> weaponTwoHand <code>142</code> weaponTwoWide <code>143</code> shield <code>144</code> pickProbe <code>145</code> inventoryHandToHand <code>146</code> inventoryWeaponOneHand <code>147</code> inventoryWeaponTwoHand <code>148</code> inventoryWeaponTwoWide <code>149</code>"},{"location":"references/animation-start-flags/","title":"Animation Start Flags","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.animationStartFlag</code> table. For example, <code>tes3.animationStartFlag.normal</code> has a value of <code>0</code>.</p> Index Value normal <code>0</code> immediate <code>1</code> immediateLoop <code>2</code>"},{"location":"references/animation-states/","title":"Animation States","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.animationState</code> table. For example, <code>tes3.animationState.readyingWeap</code> has a value of <code>8</code>.</p> Index Value idle <code>0</code> ready <code>1</code> swingUp <code>2</code> swingDown <code>3</code> swingHit <code>4</code> swingFollowLight <code>5</code> swingFollowMed <code>6</code> swingFollowHeavy <code>7</code> readyingWeap <code>8</code> unreadyWeap <code>9</code> casting <code>10</code> casting2 <code>11</code> readyingMagic <code>12</code> unreadyMagic <code>13</code> knockdown <code>14</code> knockedOut <code>15</code> pickingProbing <code>16</code> dying <code>18</code> dead <code>19</code>"},{"location":"references/apparatus-types/","title":"Apparatus Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.apparatusType</code> table. For example, <code>tes3.apparatusType.calcinator</code> has a value of <code>2</code>.</p> Index Value mortarAndPestle <code>0</code> alembic <code>1</code> calcinator <code>2</code> retort <code>3</code>"},{"location":"references/armor-slots/","title":"Armor Slots","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.armorSlot</code> table. For example, <code>tes3.armorSlot.boots</code> has a value of <code>5</code>.</p> Index Value helmet <code>0</code> cuirass <code>1</code> leftPauldron <code>2</code> rightPauldron <code>3</code> greaves <code>4</code> boots <code>5</code> leftGauntlet <code>6</code> rightGauntlet <code>7</code> shield <code>8</code> leftBracer <code>9</code> rightBracer <code>10</code>"},{"location":"references/armor-weight-classes/","title":"Armor Weight Classes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.armorWeightClass</code> table. For example, <code>tes3.armorWeightClass.heavy</code> has a value of <code>2</code>.</p> Index Value light <code>0</code> medium <code>1</code> heavy <code>2</code>"},{"location":"references/attachment-types/","title":"Attachment Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.attachmentType</code> table. For example, <code>tes3.attachmentType.activator</code> has a value of <code>9</code>.</p> Index Value lock <code>3</code> variable <code>6</code> actor <code>8</code> activator <code>9</code>"},{"location":"references/attribute-names/","title":"Attribute Names","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.attributeName</code> table. For example, <code>tes3.attributeName[0]</code> has a value of <code>\"strength\"</code>.</p> Index Value 3 <code>\"agility\"</code> 5 <code>\"endurance\"</code> 1 <code>\"intelligence\"</code> 7 <code>\"luck\"</code> 6 <code>\"personality\"</code> 4 <code>\"speed\"</code> 0 <code>\"strength\"</code> 2 <code>\"willpower\"</code>"},{"location":"references/attributes/","title":"Attributes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.attribute</code> table. For example, <code>tes3.attribute.strength</code> has a value of <code>0</code>.</p> Index Value strength <code>0</code> intelligence <code>1</code> willpower <code>2</code> agility <code>3</code> speed <code>4</code> endurance <code>5</code> personality <code>6</code> luck <code>7</code>"},{"location":"references/body-part-attachments/","title":"Body Part Attachments","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.bodyPartAttachment</code> table. For example, <code>tes3.bodyPartAttachment.root</code> has a value of <code>0</code>.</p> Index Value root <code>0</code> head <code>1</code> neck <code>2</code> spine <code>3</code> pelvis <code>4</code> rightHand <code>5</code> leftHand <code>6</code> rightForearm1 <code>7</code> leftForearm1 <code>8</code> rightForearm2 <code>9</code> leftForearm2 <code>10</code> rightUpperArm <code>11</code> leftUpperArm <code>12</code> rightFoot <code>13</code> leftFoot <code>14</code> rightCalf1 <code>15</code> leftCalf1 <code>16</code> rightCalf2 <code>17</code> leftCalf2 <code>18</code> rightThigh <code>19</code> leftThigh <code>20</code> rightClavicle <code>21</code> leftClavicle <code>22</code> weapon <code>23</code> shield <code>24</code>"},{"location":"references/book-types/","title":"Book Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.bookType</code> table. For example, <code>tes3.bookType.book</code> has a value of <code>0</code>.</p> Index Value book <code>0</code> scroll <code>1</code>"},{"location":"references/clothing-slots/","title":"Clothing Slots","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.clothingSlot</code> table. For example, <code>tes3.clothingSlot.leftGlove</code> has a value of <code>6</code>.</p> Index Value pants <code>0</code> shoes <code>1</code> shirt <code>2</code> belt <code>3</code> robe <code>4</code> rightGlove <code>5</code> leftGlove <code>6</code> skirt <code>7</code> ring <code>8</code> amulet <code>9</code>"},{"location":"references/code-patch-features/","title":"Code Patch Features","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.codePatchFeature</code> table. For example, <code>tes3.codePatchFeature.incorrectInventorySoundsFix</code> has a value of <code>113</code>.</p> Index Value savegameCorruptionFix <code>1</code> mercantileFix <code>2</code> unarmoredFix <code>3</code> calendarFix <code>4</code> merchantEquippingFix <code>5</code> restoreDrainAttributesFix <code>6</code> streamMusicMasterVolumeFix <code>7</code> calmSpellsFix <code>8</code> vampireStatsFix <code>9</code> reflectedSpellsFix <code>10</code> showTransparentClothesInTheInventory <code>11</code> enchantGlowInFogFix <code>12</code> showNPCHealthBarOnHealing <code>13</code> enchantingIncreasesItemValue <code>14</code> allowStealingFromKOedNPCs <code>15</code> spellmakingMaxMagnitudeIncrease <code>16</code> spellmakingMaxDurationReduced <code>17</code> exhaustNPCsWithDamageFatigue <code>18</code> dispositionFix <code>19</code> spellMagnitudeFix <code>20</code> dispelFix <code>21</code> creatureArmorDamageFix <code>22</code> inventoryBugsFix <code>23</code> npcPotionUseAI <code>24</code> blindFix <code>25</code> glossMapFix <code>26</code> lightingFixesGroup <code>27</code> particleEffectsFix <code>29</code> projectileAimingFix <code>30</code> waterwalkFix <code>32</code> trainingPriceStatsFix <code>33</code> travelPriceFix <code>34</code> allowReflectionEffectsOnSkinnedModels <code>35</code> createmapsFillmapFix <code>36</code> delayedSpellCrashFix <code>37</code> loudInterfaceGameplaySoundsFix <code>38</code> betterQualitySplashAndTitleScreens <code>39</code> strengthBasedHandToHandDamage <code>40</code> spellmakerEnchantMultipleEffects <code>41</code> spellmakerAreaEffectCost <code>42</code> arrowEnchanting <code>43</code> fortifyMaximumHealth <code>44</code> toggleSneak <code>45</code> placeAtDropFix <code>46</code> spellDeselectionBugFix <code>47</code> levelupStatsBugFix <code>48</code> boundItemsExpiryFix <code>49</code> stableEnchantmentSort <code>50</code> fogOfWarFix <code>51</code> intimidateFix <code>52</code> magickaDisplayAccuracy <code>53</code> hiDefCutsceneSupport <code>54</code> alchemyNamingStackingFix <code>55</code> spellmakerEnchantEditEffectFix <code>56</code> allowScrollEnchantPriceModifier <code>57</code> saveFileLimitWarning <code>58</code> multipleAttributeFortifyPotions <code>64</code> soulgemValueRebalance <code>65</code> onUseRingExtraSlot <code>66</code> npcAICastsZeroCostPowers <code>67</code> permanentBarterDispositionChanges <code>68</code> enchantedItemCooldown <code>69</code> hiddenTraps <code>70</code> swiftCasting <code>71</code> blightStormDiseaseFix <code>72</code> racialVariationInSpeedFix <code>73</code> gameFormulaRestoration <code>74</code> creatureArmorRatingFix <code>75</code> disableWeaponTransitionOnUnequip <code>76</code> pickpocketOverhaul <code>77</code> slowfallOnCompanionsFix <code>79</code> drainIntelligenceExploitFix <code>80</code> mouseoverMenuDisplayFixes <code>81</code> shortcutKeyImprovements <code>82</code> detectWaterLevelFix <code>83</code> serviceRefusalFiltering <code>84</code> armorIndicatorFix <code>85</code> detectLifeSpellVariant <code>86</code> scriptedMusicUninterruptible <code>87</code> argonianClothingChoice <code>88</code> vanityCameraLock <code>89</code> alchemyPotionWeightRebalance <code>90</code> itemRechargingRebalance <code>91</code> summonedCreatureCrashFix <code>92</code> repairItemFixes <code>93</code> bookAndScrollScalingFix <code>94</code> voiceoverScriptFunctionsFix <code>95</code> weaponReachIssues <code>96</code> initializingDataFix <code>97</code> animatedContainerCrashFix <code>98</code> lightSpellFix <code>99</code> allowFactionLeaving <code>100</code> slowMovementAnimFix <code>101</code> modRemovalFixes <code>102</code> playSoundVPVolumeFix <code>103</code> fixEnchantOptionsOnRanged <code>104</code> preventEmptyMessages <code>105</code> hiddenLocks <code>106</code> dontLootOnDispose <code>107</code> attributeUncap <code>108</code> hitFaderFix <code>109</code> skillUncap <code>110</code> weaponResistanceChange <code>111</code> disintegrateFix <code>112</code> incorrectInventorySoundsFix <code>113</code> separateAxeInventorySounds <code>114</code> confiscatedItemFix <code>115</code> waterEnvironmentSoundFix <code>116</code> talkedToPCExtension <code>117</code> droppingFromInventoryFix <code>118</code> creatureVoiceoverEnable <code>119</code> lockLevelScripting <code>120</code> selfEnchantingFix <code>121</code> ammunitionFix <code>122</code> placeItemFix <code>123</code> creatureMagickaFatigueFix <code>124</code> positionPositionCellFix <code>125</code> telekinesisFix <code>126</code> mapTextureConflictFix <code>127</code> rainSnowCollision <code>128</code> overTheShoulderFirstPersonCamera <code>130</code> overTheShoulderThirdPersonCamera <code>130</code> bumpReflectMapLocalLighting <code>131</code> improvedAnimationSupport <code>132</code> reduceCameraClipping <code>133</code> npcMinorBehaviourFixes <code>134</code> ammoFixes <code>135</code> resolutionOptionsFix <code>136</code> slowfallOverhaul <code>137</code> cellChangedFix <code>138</code> barterGoldResetFix <code>139</code> improvedLoadingSpeed <code>140</code> scriptExpressionParserFix <code>141</code> twoHandedWeaponRemovesShield <code>142</code> getSetAngleEnhancement <code>143</code> betterRecharging <code>144</code> qualityBasedPotionIconsModels <code>145</code> arrowDenocker <code>146</code> healthyAppetite <code>147</code> spellmakerEnchantingImprovement <code>148</code> safeDisposeCorpse <code>149</code> shieldHitLocationFix <code>150</code> selfEnchantingSuccessChance <code>151</code> firstPersonSwimAnimations <code>152</code> mouseCursorMovementFix <code>153</code> scriptDataFix <code>154</code> sneakingBootsPenaltyFix <code>155</code> spellmakingMatchesEditor <code>156</code> allowGlovesWithBracers <code>157</code> getWeaponTypeFix <code>158</code> probeQualityFix <code>159</code> removeItemWeightFix <code>160</code> getSpellEffectsTweak <code>161</code> seeAllStandardPotionEffects <code>162</code> bowSoundGlitchFix <code>163</code> fixReadingVarsFromAGlobalScript <code>164</code> aiActivateEnhancement <code>165</code> scriptablePotionUse <code>166</code> containerRespawnTimescale <code>167</code> avoidBlameForNeutralNPCDeaths <code>168</code> multipleSummonsOverlapFix <code>169</code> barterHaggleFix <code>170</code> menuModeWorldInteractionFix <code>171</code> enchantedItemRebalance <code>172</code> npcRankChangeFix <code>173</code> addItemWithLevelledItems <code>174</code> moveWorldZFix <code>175</code> spellEffectTooltipFix <code>176</code> getEffectRemoveEffectsFix <code>177</code> loadWarningCrashFix <code>178</code> followersDefendImmediately <code>179</code> equipScriptFix <code>180</code> dopplerAudioFix <code>181</code> autoStackAmmunition <code>182</code> seaWaterSoundFalloffFix <code>183</code> actorCollisionBoxFix <code>184</code> slidingAfterJumpingFix <code>185</code> fallingCreaturesCollisionFix <code>186</code> mapExpansionForTamrielRebuilt <code>256</code> mainMenuWiderTextures <code>257</code> disableMapSmoothing <code>258</code> displayMoreAccurateItemWeight <code>259</code> polishKeyboardSupport <code>260</code> unrestrictMenuSize <code>261</code> largerServiceChargenMenus <code>262</code> japaneseLocalization <code>263</code> russianFixes <code>264</code> journalTextColourConfiguration <code>265</code> polishCharacterCorrections <code>266</code> uiDisplayQualityFix <code>267</code> spellSelectByName <code>268</code> betterIngredientAndItemSelector <code>269</code> betterTypography <code>270</code> persuasionImprovement <code>271</code> improvedInventoryFilters <code>272</code> ownershipTooltip <code>273</code> betterSpellMerchants <code>274</code> levelupSkillsTooltip <code>275</code> convenientDefaults <code>276</code> betterHaggling <code>277</code>"},{"location":"references/content-types/","title":"Content Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.contentType</code> table. For example, <code>tes3.contentType.image</code> has a value of <code>\"image\"</code>.</p> Index Value image <code>\"image\"</code> layout <code>\"layout\"</code> model <code>\"model\"</code> rect <code>\"rect\"</code> text <code>\"text\"</code>"},{"location":"references/creature-types/","title":"Creature Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.creatureType</code> table. For example, <code>tes3.creatureType.normal</code> has a value of <code>0</code>.</p> Index Value normal <code>0</code> daedra <code>1</code> undead <code>2</code> humanoid <code>3</code>"},{"location":"references/crime-types/","title":"Crime Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.crimeType</code> table. For example, <code>tes3.crimeType.werewolf</code> has a value of <code>7</code>.</p> Index Value Description attack <code>1</code> Attacked NPCs or creatures killing <code>2</code> Killed NPCs or creatures pickpocket <code>4</code> Pickpocketed NPCs or creatures theft <code>5</code> Picked up owned objects trespass <code>6</code> Lockpicked, probed, unlocked or tried to sleep in owned objects werewolf <code>7</code> Detected while transforming into a werewolf"},{"location":"references/damage-sources/","title":"Damage Sources","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.damageSource</code> table. For example, <code>tes3.damageSource.magic</code> has a value of <code>\"magic\"</code>.</p> Index Value attack <code>\"attack\"</code> fall <code>\"fall\"</code> magic <code>\"magic\"</code> script <code>\"script\"</code> shield <code>\"shield\"</code> suffocation <code>\"suffocation\"</code>"},{"location":"references/dialogue-pages/","title":"Dialogue Pages","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.dialoguePage.voice</code> table. For example, <code>tes3.dialoguePage.voice.hello</code> has a value of <code>0</code>.</p> Index Value hello <code>0</code> idle <code>1</code> intruder <code>2</code> thief <code>3</code> hit <code>4</code> attack <code>5</code> flee <code>6</code> <p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.dialoguePage.greeting</code> table. For example, <code>tes3.dialoguePage.greeting.greeting0</code> has a value of <code>0</code>.</p> Index Value greeting0 <code>0</code> greeting1 <code>1</code> greeting2 <code>2</code> greeting3 <code>3</code> greeting4 <code>4</code> greeting5 <code>5</code> greeting6 <code>6</code> greeting7 <code>7</code> greeting8 <code>8</code> greeting9 <code>9</code> <p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.dialoguePage.service</code> table. For example, <code>tes3.dialoguePage.service.infoRefusal</code> has a value of <code>0</code>.</p> Index Value infoRefusal <code>0</code> admireSuccess <code>1</code> admireFail <code>2</code> initimidateSuccess <code>3</code> initimidateFail <code>4</code> tauntSuccess <code>5</code> tauntFail <code>6</code> serviceRefusal <code>7</code> bribeSuccess <code>8</code> bribeFail <code>9</code>"},{"location":"references/dialogue-types/","title":"Dialogue Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.dialogueType</code> table. For example, <code>tes3.dialogueType.voice</code> has a value of <code>1</code>.</p> Index Value topic <code>0</code> voice <code>1</code> greeting <code>2</code> service <code>3</code> journal <code>4</code>"},{"location":"references/effect-attributes/","title":"Effect Attributes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.effectAttribute</code> table. For example, <code>tes3.effectAttribute.swiftSwim</code> has a value of <code>15</code>.</p> Index Value attackBonus <code>0</code> sanctuary <code>1</code> resistMagicka <code>2</code> resistFire <code>3</code> resistFrost <code>4</code> resistShock <code>5</code> resistCommonDisease <code>6</code> resistBlightDisease <code>7</code> resistCorprus <code>8</code> resistPoison <code>9</code> resistParalysis <code>10</code> chameleon <code>11</code> resistNormalWeapons <code>12</code> waterBreathing <code>13</code> waterWalking <code>14</code> swiftSwim <code>15</code> jump <code>16</code> levitate <code>17</code> shield <code>18</code> sound <code>19</code> silence <code>20</code> blind <code>21</code> paralyze <code>22</code> invisibility <code>23</code> fight <code>24</code> flee <code>25</code> hello <code>26</code> alarm <code>27</code> nonResistable <code>28</code>"},{"location":"references/effect-event-types/","title":"Effect Event Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.effectEventType</code> table. For example, <code>tes3.effectEventType.bool</code> has a value of <code>0</code>.</p> Index Value bool <code>0</code> boolean <code>0</code> integer <code>1</code> int <code>1</code> float <code>2</code> modStatistic <code>3</code>"},{"location":"references/effect-ranges/","title":"Effect Ranges","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.effectRange</code> table. For example, <code>tes3.effectRange.self</code> has a value of <code>0</code>.</p> Index Value self <code>0</code> touch <code>1</code> target <code>2</code>"},{"location":"references/enchantment-types/","title":"Enchantment Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.enchantmentType</code> table. For example, <code>tes3.enchantmentType.castOnce</code> has a value of <code>0</code>.</p> Index Value castOnce <code>0</code> onStrike <code>1</code> onUse <code>2</code> constant <code>3</code>"},{"location":"references/events/","title":"Events","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.event</code> table. For example, <code>tes3.event.uiShowRestMenu</code> has a value of <code>\"uiShowRestMenu\"</code>.</p> Index Value Event absorbedMagic <code>\"absorbedMagic\"</code> <code>absorbedMagic</code> activate <code>\"activate\"</code> <code>activate</code> activationTargetChanged <code>\"activationTargetChanged\"</code> <code>activationTargetChanged</code> activeMagicEffectIconsUpdated <code>\"activeMagicEffectIconsUpdated\"</code> <code>activeMagicEffectIconsUpdated</code> addSound <code>\"addSound\"</code> <code>addSound</code> addTempSound <code>\"addTempSound\"</code> <code>addTempSound</code> attack <code>\"attack\"</code> <code>attack</code> attackHit <code>\"attackHit\"</code> <code>attackHit</code> attackStart <code>\"attackStart\"</code> <code>attackStart</code> barterOffer <code>\"barterOffer\"</code> <code>barterOffer</code> bodyPartAssigned <code>\"bodyPartAssigned\"</code> <code>bodyPartAssigned</code> bodyPartsUpdated <code>\"bodyPartsUpdated\"</code> <code>bodyPartsUpdated</code> bookGetText <code>\"bookGetText\"</code> <code>bookGetText</code> buttonPressed <code>\"buttonPressed\"</code> <code>buttonPressed</code> calcArmorPieceHit <code>\"calcArmorPieceHit\"</code> <code>calcArmorPieceHit</code> calcArmorRating <code>\"calcArmorRating\"</code> <code>calcArmorRating</code> calcBarterPrice <code>\"calcBarterPrice\"</code> <code>calcBarterPrice</code> calcBlockChance <code>\"calcBlockChance\"</code> <code>calcBlockChance</code> calcEnchantmentPrice <code>\"calcEnchantmentPrice\"</code> <code>calcEnchantmentPrice</code> calcFlySpeed <code>\"calcFlySpeed\"</code> <code>calcFlySpeed</code> calcHitChance <code>\"calcHitChance\"</code> <code>calcHitChance</code> calcMoveSpeed <code>\"calcMoveSpeed\"</code> <code>calcMoveSpeed</code> calcRepairPrice <code>\"calcRepairPrice\"</code> <code>calcRepairPrice</code> calcRestInterrupt <code>\"calcRestInterrupt\"</code> <code>calcRestInterrupt</code> calcRunSpeed <code>\"calcRunSpeed\"</code> <code>calcRunSpeed</code> calcSoulValue <code>\"calcSoulValue\"</code> <code>calcSoulValue</code> calcSpellmakingPrice <code>\"calcSpellmakingPrice\"</code> <code>calcSpellmakingPrice</code> calcSpellmakingSpellPointCost <code>\"calcSpellmakingSpellPointCost\"</code> <code>calcSpellmakingSpellPointCost</code> calcSpellPrice <code>\"calcSpellPrice\"</code> <code>calcSpellPrice</code> calcSunDamageScalar <code>\"calcSunDamageScalar\"</code> <code>calcSunDamageScalar</code> calcSwimRunSpeed <code>\"calcSwimRunSpeed\"</code> <code>calcSwimRunSpeed</code> calcSwimSpeed <code>\"calcSwimSpeed\"</code> <code>calcSwimSpeed</code> calcTrainingPrice <code>\"calcTrainingPrice\"</code> <code>calcTrainingPrice</code> calcTravelPrice <code>\"calcTravelPrice\"</code> <code>calcTravelPrice</code> calcWalkSpeed <code>\"calcWalkSpeed\"</code> <code>calcWalkSpeed</code> cellActivated <code>\"cellActivated\"</code> <code>cellActivated</code> cellChanged <code>\"cellChanged\"</code> <code>cellChanged</code> cellDeactivated <code>\"cellDeactivated\"</code> <code>cellDeactivated</code> charGenFinished <code>\"charGenFinished\"</code> <code>charGenFinished</code> collideWater <code>\"collideWater\"</code> <code>collideWater</code> collision <code>\"collision\"</code> <code>collision</code> combatStart <code>\"combatStart\"</code> <code>combatStart</code> combatStarted <code>\"combatStarted\"</code> <code>combatStarted</code> combatStop <code>\"combatStop\"</code> <code>combatStop</code> combatStopped <code>\"combatStopped\"</code> <code>combatStopped</code> consoleReferenceChanged <code>\"consoleReferenceChanged\"</code> <code>consoleReferenceChanged</code> containerClosed <code>\"containerClosed\"</code> <code>containerClosed</code> convertReferenceToItem <code>\"convertReferenceToItem\"</code> <code>convertReferenceToItem</code> crimeWitnessed <code>\"crimeWitnessed\"</code> <code>crimeWitnessed</code> damage <code>\"damage\"</code> <code>damage</code> damaged <code>\"damaged\"</code> <code>damaged</code> damagedHandToHand <code>\"damagedHandToHand\"</code> <code>damagedHandToHand</code> damageHandToHand <code>\"damageHandToHand\"</code> <code>damageHandToHand</code> death <code>\"death\"</code> <code>death</code> detectSneak <code>\"detectSneak\"</code> <code>detectSneak</code> determineAction <code>\"determineAction\"</code> <code>determineAction</code> determinedAction <code>\"determinedAction\"</code> <code>determinedAction</code> dialogueEnvironmentCreated <code>\"dialogueEnvironmentCreated\"</code> <code>dialogueEnvironmentCreated</code> disposition <code>\"disposition\"</code> <code>disposition</code> enchantChargeUse <code>\"enchantChargeUse\"</code> <code>enchantChargeUse</code> enchantedItemCreated <code>\"enchantedItemCreated\"</code> <code>enchantedItemCreated</code> enchantedItemCreateFailed <code>\"enchantedItemCreateFailed\"</code> <code>enchantedItemCreateFailed</code> enterFrame <code>\"enterFrame\"</code> <code>enterFrame</code> equip <code>\"equip\"</code> <code>equip</code> equipmentReevaluated <code>\"equipmentReevaluated\"</code> <code>equipmentReevaluated</code> equipped <code>\"equipped\"</code> <code>equipped</code> exerciseSkill <code>\"exerciseSkill\"</code> <code>exerciseSkill</code> fadersCreated <code>\"fadersCreated\"</code> <code>fadersCreated</code> filterBarterMenu <code>\"filterBarterMenu\"</code> <code>filterBarterMenu</code> filterContentsMenu <code>\"filterContentsMenu\"</code> <code>filterContentsMenu</code> filterInventory <code>\"filterInventory\"</code> <code>filterInventory</code> filterInventorySelect <code>\"filterInventorySelect\"</code> <code>filterInventorySelect</code> filterSoulGemTarget <code>\"filterSoulGemTarget\"</code> <code>filterSoulGemTarget</code> infoFilter <code>\"infoFilter\"</code> <code>infoFilter</code> infoGetText <code>\"infoGetText\"</code> <code>infoGetText</code> infoLinkResolve <code>\"infoLinkResolve\"</code> <code>infoLinkResolve</code> infoResponse <code>\"infoResponse\"</code> <code>infoResponse</code> initialized <code>\"initialized\"</code> <code>initialized</code> isGuard <code>\"isGuard\"</code> <code>isGuard</code> itemDropped <code>\"itemDropped\"</code> <code>itemDropped</code> itemTileUpdated <code>\"itemTileUpdated\"</code> <code>itemTileUpdated</code> journal <code>\"journal\"</code> <code>journal</code> jump <code>\"jump\"</code> <code>jump</code> key <code>\"key\"</code> <code>key</code> keybindTested <code>\"keybindTested\"</code> <code>keybindTested</code> keyDown <code>\"keyDown\"</code> <code>keyDown</code> keyframesLoad <code>\"keyframesLoad\"</code> <code>keyframesLoad</code> keyUp <code>\"keyUp\"</code> <code>keyUp</code> leveledCreaturePicked <code>\"leveledCreaturePicked\"</code> <code>leveledCreaturePicked</code> leveledItemPicked <code>\"leveledItemPicked\"</code> <code>leveledItemPicked</code> levelUp <code>\"levelUp\"</code> <code>levelUp</code> load <code>\"load\"</code> <code>load</code> loaded <code>\"loaded\"</code> <code>loaded</code> lockPick <code>\"lockPick\"</code> <code>lockPick</code> magicCasted <code>\"magicCasted\"</code> <code>magicCasted</code> magicEffectRemoved <code>\"magicEffectRemoved\"</code> <code>magicEffectRemoved</code> magicEffectsResolved <code>\"magicEffectsResolved\"</code> <code>magicEffectsResolved</code> menuEnter <code>\"menuEnter\"</code> <code>menuEnter</code> menuExit <code>\"menuExit\"</code> <code>menuExit</code> meshLoad <code>\"meshLoad\"</code> <code>meshLoad</code> meshLoaded <code>\"meshLoaded\"</code> <code>meshLoaded</code> mobileActivated <code>\"mobileActivated\"</code> <code>mobileActivated</code> mobileDeactivated <code>\"mobileDeactivated\"</code> <code>mobileDeactivated</code> modConfigReady <code>\"modConfigReady\"</code> <code>modConfigReady</code> mouseAxis <code>\"mouseAxis\"</code> <code>mouseAxis</code> mouseButtonDown <code>\"mouseButtonDown\"</code> <code>mouseButtonDown</code> mouseButtonUp <code>\"mouseButtonUp\"</code> <code>mouseButtonUp</code> mouseWheel <code>\"mouseWheel\"</code> <code>mouseWheel</code> musicSelectTrack <code>\"musicSelectTrack\"</code> <code>musicSelectTrack</code> objectInvalidated <code>\"objectInvalidated\"</code> <code>objectInvalidated</code> playGroup <code>\"playGroup\"</code> <code>playGroup</code> playItemSound <code>\"playItemSound\"</code> <code>playItemSound</code> postInfoResponse <code>\"postInfoResponse\"</code> <code>postInfoResponse</code> potionBrewed <code>\"potionBrewed\"</code> <code>potionBrewed</code> potionBrewFailed <code>\"potionBrewFailed\"</code> <code>potionBrewFailed</code> potionBrewSkillCheck <code>\"potionBrewSkillCheck\"</code> <code>potionBrewSkillCheck</code> powerRecharged <code>\"powerRecharged\"</code> <code>powerRecharged</code> preLevelUp <code>\"preLevelUp\"</code> <code>preLevelUp</code> preventRest <code>\"preventRest\"</code> <code>preventRest</code> projectileExpire <code>\"projectileExpire\"</code> <code>projectileExpire</code> projectileHitActor <code>\"projectileHitActor\"</code> <code>projectileHitActor</code> projectileHitObject <code>\"projectileHitObject\"</code> <code>projectileHitObject</code> projectileHitTerrain <code>\"projectileHitTerrain\"</code> <code>projectileHitTerrain</code> referenceActivated <code>\"referenceActivated\"</code> <code>referenceActivated</code> referenceDeactivated <code>\"referenceDeactivated\"</code> <code>referenceDeactivated</code> referenceSceneNodeCreated <code>\"referenceSceneNodeCreated\"</code> <code>referenceSceneNodeCreated</code> restInterrupt <code>\"restInterrupt\"</code> <code>restInterrupt</code> save <code>\"save\"</code> <code>save</code> saved <code>\"saved\"</code> <code>saved</code> simulate <code>\"simulate\"</code> <code>simulate</code> skillRaised <code>\"skillRaised\"</code> <code>skillRaised</code> soundObjectPlay <code>\"soundObjectPlay\"</code> <code>soundObjectPlay</code> spellCast <code>\"spellCast\"</code> <code>spellCast</code> spellCasted <code>\"spellCasted\"</code> <code>spellCasted</code> spellCastedFailure <code>\"spellCastedFailure\"</code> <code>spellCastedFailure</code> spellCreated <code>\"spellCreated\"</code> <code>spellCreated</code> spellMagickaUse <code>\"spellMagickaUse\"</code> <code>spellMagickaUse</code> spellResist <code>\"spellResist\"</code> <code>spellResist</code> spellResisted <code>\"spellResisted\"</code> <code>spellResisted</code> spellTick <code>\"spellTick\"</code> <code>spellTick</code> topicAdded <code>\"topicAdded\"</code> <code>topicAdded</code> trapDisarm <code>\"trapDisarm\"</code> <code>trapDisarm</code> uiActivated <code>\"uiActivated\"</code> <code>uiActivated</code> uiEvent <code>\"uiEvent\"</code> <code>uiEvent</code> uiObjectTooltip <code>\"uiObjectTooltip\"</code> <code>uiObjectTooltip</code> uiPreEvent <code>\"uiPreEvent\"</code> <code>uiPreEvent</code> uiRefreshed <code>\"uiRefreshed\"</code> <code>uiRefreshed</code> uiShowRestMenu <code>\"uiShowRestMenu\"</code> <code>uiShowRestMenu</code> uiSpellTooltip <code>\"uiSpellTooltip\"</code> <code>uiSpellTooltip</code> unequipped <code>\"unequipped\"</code> <code>unequipped</code> vfxCreated <code>\"vfxCreated\"</code> <code>vfxCreated</code> weaponReadied <code>\"weaponReadied\"</code> <code>weaponReadied</code> weaponUnreadied <code>\"weaponUnreadied\"</code> <code>weaponUnreadied</code> weatherChangedImmediate <code>\"weatherChangedImmediate\"</code> <code>weatherChangedImmediate</code> weatherCycled <code>\"weatherCycled\"</code> <code>weatherCycled</code> weatherTransitionStarted <code>\"weatherTransitionStarted\"</code> <code>weatherTransitionStarted</code>"},{"location":"references/flow-directions/","title":"Flow Directions","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.flowDirection</code> table. For example, <code>tes3.flowDirection.leftToRight</code> has a value of <code>\"left_to_right\"</code>.</p> Index Value leftToRight <code>\"left_to_right\"</code> topToBottom <code>\"top_to_bottom\"</code>"},{"location":"references/gmst/","title":"Game Settings (GMSTs)","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.gmst</code> table. For example, <code>tes3.gmst.sLevelUpMsg</code> has a value of <code>682</code>.</p> <p>Tip</p> <p>The value of a GMST can be retrieved by using the <code>tes3.findGMST()</code> function. For example, <code>tes3.findGMST(tes3.gmst.sMonthMorningstar).value</code> has a value of <code>\"Morning Star\"</code> in an unmodded english installation of Morrowind.</p> Index Value Type Default GMST Value sMonthMorningstar <code>0</code> string <code>\"Morning Star\"</code> sMonthSunsdawn <code>1</code> string <code>\"Sun's Dawn\"</code> sMonthFirstseed <code>2</code> string <code>\"First Seed\"</code> sMonthRainshand <code>3</code> string <code>\"Rain's Hand\"</code> sMonthSecondseed <code>4</code> string <code>\"Second Seed\"</code> sMonthMidyear <code>5</code> string <code>\"Mid Year\"</code> sMonthSunsheight <code>6</code> string <code>\"Sun's Height\"</code> sMonthLastseed <code>7</code> string <code>\"Last Seed\"</code> sMonthHeartfire <code>8</code> string <code>\"Heartfire\"</code> sMonthFrostfall <code>9</code> string <code>\"Frost Fall\"</code> sMonthSunsdusk <code>10</code> string <code>\"Sun's Dusk\"</code> sMonthEveningstar <code>11</code> string <code>\"Evening Star\"</code> sSpecialization <code>12</code> string <code>\"Specialization\"</code> sSpecializationCombat <code>13</code> string <code>\"Combat\"</code> sSpecializationMagic <code>14</code> string <code>\"Magic\"</code> sSpecializationStealth <code>15</code> string <code>\"Stealth\"</code> sSkillClassMajor <code>16</code> string <code>\"Major Skills\"</code> sSkillClassMinor <code>17</code> string <code>\"Minor Skills\"</code> sSkillClassMisc <code>18</code> string <code>\"Misc Skills\"</code> sRacialTraits <code>19</code> string <code>\"Racial Traits\"</code> sHealthPerHourOfRest <code>20</code> string <code>\"Health per hour of rest\"</code> sHealthPerLevel <code>21</code> string <code>\"Health per level\"</code> sGoverningAttribute <code>22</code> string <code>\"Governing Attribute\"</code> sClass <code>23</code> string <code>\"Class\"</code> sTraits <code>24</code> string <code>\"Traits\"</code> sJournal <code>25</code> string <code>\"Journal\"</code> sOK <code>26</code> string <code>\"OK\"</code> sClose <code>27</code> string <code>\"Close\"</code> sPrev <code>28</code> string <code>\"Prev\"</code> sNext <code>29</code> string <code>\"Next\"</code> sTake <code>30</code> string <code>\"Take\"</code> sWeaponTab <code>31</code> string <code>\"Weapon\"</code> sApparelTab <code>32</code> string <code>\"Apparel\"</code> sMagicTab <code>33</code> string <code>\"Magic\"</code> sMiscTab <code>34</code> string <code>\"Misc\"</code> sWornTab <code>35</code> string <code>\"Worn\"</code> sAllTab <code>36</code> string <code>\"All\"</code> sAttack <code>37</code> string <code>\"Attack\"</code> sUses <code>38</code> string <code>\"Uses\"</code> sQuality <code>39</code> string <code>\"Quality\"</code> sCharges <code>40</code> string <code>\"Charge:\"</code> sArmorRating <code>41</code> string <code>\"Armor Rating\"</code> sSlash <code>42</code> string <code>\"Slash\"</code> sThrust <code>43</code> string <code>\"Thrust\"</code> sChop <code>44</code> string <code>\"Chop\"</code> sEncumbrance <code>45</code> string <code>\"Encumbrance\"</code> sCondition <code>46</code> string <code>\"Condition\"</code> sWeight <code>47</code> string <code>\"Weight\"</code> sValue <code>48</code> string <code>\"Value\"</code> sLight <code>49</code> string <code>\"Light\"</code> sMedium <code>50</code> string <code>\"Medium\"</code> sHeavy <code>51</code> string <code>\"Heavy\"</code> sCancel <code>52</code> string <code>\"Cancel\"</code> sTakeAll <code>53</code> string <code>\"Take All\"</code> sUntilHealed <code>54</code> string <code>\"Until Healed\"</code> sRest <code>55</code> string <code>\"Rest\"</code> sWait <code>56</code> string <code>\"Wait\"</code> sRestIllegal <code>57</code> string <code>\"Resting here is illegal. You'll need to find a bed.\"</code> sGold <code>58</code> string <code>\"Gold\"</code> sMove <code>59</code> string <code>\"Move\"</code> sTo <code>60</code> string <code>\"to\"</code> sActorInCombat <code>61</code> string <code>\"This character is in combat.\"</code> sArmor <code>62</code> string <code>\"Armor\"</code> sTopics <code>63</code> string <code>\"Topics\"</code> sService <code>64</code> string <code>\"Service\"</code> sPersuasion <code>65</code> string <code>\"Persuasion\"</code> sBye <code>66</code> string <code>\"Bye\"</code> sGoodbye <code>67</code> string <code>\"Goodbye\"</code> sYes <code>68</code> string <code>\"Yes\"</code> sNo <code>69</code> string <code>\"No\"</code> sOn <code>70</code> string <code>\"On\"</code> sOff <code>71</code> string <code>\"Off\"</code> sFull <code>72</code> string <code>\"Full\"</code> sWorld <code>73</code> string <code>\"World\"</code> sExpelled <code>74</code> string <code>\"EXPELLED\"</code> sExpelledMessage <code>75</code> string <code>\"You have been expelled from\"</code> sFavoriteSkills <code>76</code> string <code>\"Favorite Skills\"</code> sGame <code>77</code> string <code>\"Game\"</code> sVideo <code>78</code> string <code>\"Video\"</code> sAudio <code>79</code> string <code>\"Audio\"</code> sControls <code>80</code> string <code>\"Controls\"</code> sPrefs <code>81</code> string <code>\"Prefs\"</code> sPreferences <code>82</code> string <code>\"Preferences\"</code> sNewGame <code>83</code> string <code>\"New Game\"</code> sExitGame <code>84</code> string <code>\"Exit Game\"</code> sOptions <code>85</code> string <code>\"Options Menu\"</code> sSaveGame <code>86</code> string <code>\"Save Game\"</code> sLoadGame <code>87</code> string <code>\"Load Game\"</code> sDeleteGame <code>88</code> string <code>\"Delete Game\"</code> sSaveGameDenied <code>89</code> string <code>\"You cannot save your game right now.\"</code> sSaveGameFailed <code>90</code> string <code>\"An error was encountered while saving the game.\"</code> sSaveGameTooBig <code>91</code> string <code>\"There is not enough space to save this game. Free up at least %i blocks and try again.\"</code> sSaveGameNoMemory <code>92</code> string <code>\"Unable to create Save Game. Free up 100 blocks and try again.\"</code> sMaximumSaveGameMessage <code>93</code> string <code>\"You have reached the limit of Morrowind saved games. Please delete a Morrowind saved game and try again.\"</code> sRender_Distance <code>94</code> string <code>\"View Distance\"</code> sNear <code>95</code> string <code>\"Near\"</code> sFar <code>96</code> string <code>\"Far\"</code> sGamma_Correction <code>97</code> string <code>\"Gamma Correction\"</code> sLight_Gamma <code>98</code> string <code>\"Light\"</code> sDark_Gamma <code>99</code> string <code>\"Dark\"</code> sSeldom <code>100</code> string <code>\"Seldom\"</code> sAlways <code>101</code> string <code>\"Always\"</code> sWaterTerrainReflect <code>102</code> string <code>\"Reflect Terrain\"</code> sWaterReflectUpdate <code>103</code> string <code>\"Reflection Updating\"</code> fWaterReflectUpdateAlways <code>104</code> float <code>0</code> fWaterReflectUpdateSeldom <code>105</code> float <code>10</code> sMaster <code>106</code> string <code>\"Master\"</code> sVoice <code>107</code> string <code>\"Voice\"</code> sEffects <code>108</code> string <code>\"Effects\"</code> sFootsteps <code>109</code> string <code>\"Footsteps\"</code> sMusic <code>110</code> string <code>\"Music\"</code> sTransparency_Menu <code>111</code> string <code>\"Menu Transparency\"</code> sMenu_Help_Delay <code>112</code> string <code>\"Menu Help Delay\"</code> sAIDistance <code>113</code> string <code>\"AI Distance\"</code> sHigh <code>114</code> string <code>\"High\"</code> sLow <code>115</code> string <code>\"Low\"</code> sDetail_Level <code>116</code> string <code>\"Detail Level\"</code> sMenus <code>117</code> string <code>\"Menus\"</code> sStrip <code>118</code> string <code>\"Strip\"</code> sReturnToGame <code>119</code> string <code>\"Return To Game\"</code> sForward <code>120</code> string <code>\"Forward\"</code> sBack <code>121</code> string <code>\"Back\"</code> sLeft <code>122</code> string <code>\"Left\"</code> sRight <code>123</code> string <code>\"Right\"</code> sUse <code>124</code> string <code>\"Use\"</code> sActivate <code>125</code> string <code>\"Activate\"</code> sReady_Weapon <code>126</code> string <code>\"Ready Weapon\"</code> sReady_Magic <code>127</code> string <code>\"Ready Magic\"</code> sCrouch_Sneak <code>128</code> string <code>\"Sneak\"</code> sRun <code>129</code> string <code>\"Run\"</code> sAlways_Run <code>130</code> string <code>\"Always Run\"</code> sAuto_Run <code>131</code> string <code>\"Auto Run\"</code> sJump <code>132</code> string <code>\"Jump\"</code> sNextWeapon <code>133</code> string <code>\"Next Weapon\"</code> sPrevWeapon <code>134</code> string <code>\"Previous Weapon\"</code> sNextSpell <code>135</code> string <code>\"Next Spell\"</code> sPrevSpell <code>136</code> string <code>\"Previous Spell\"</code> sTogglePOVCmd <code>137</code> string <code>\"Toggle POV\"</code> sMenu_Mode <code>138</code> string <code>\"Menu Mode\"</code> sJournalCmd <code>139</code> string <code>\"Journal\"</code> sRestKey <code>140</code> string <code>\"Rest\"</code> sQuickMenu <code>141</code> string <code>\"Quick Menu\"</code> sQuick1Cmd <code>142</code> string <code>\"Quick 1\"</code> sQuick2Cmd <code>143</code> string <code>\"Quick 2\"</code> sQuick3Cmd <code>144</code> string <code>\"Quick 3\"</code> sQuick4Cmd <code>145</code> string <code>\"Quick 4\"</code> sQuick5Cmd <code>146</code> string <code>\"Quick 5\"</code> sQuick6Cmd <code>147</code> string <code>\"Quick 6\"</code> sQuick7Cmd <code>148</code> string <code>\"Quick 7\"</code> sQuick8Cmd <code>149</code> string <code>\"Quick 8\"</code> sQuick9Cmd <code>150</code> string <code>\"Quick 9\"</code> sQuick10Cmd <code>151</code> string <code>\"Quick 10\"</code> sQuickSaveCmd <code>152</code> string <code>\"Quick Save\"</code> sQuickLoadCmd <code>153</code> string <code>\"Quick Load\"</code> sKeyName_00 <code>154</code> string <code>\"\"</code> sKeyName_01 <code>155</code> string <code>\"ESC\"</code> sKeyName_02 <code>156</code> string <code>\"1\"</code> sKeyName_03 <code>157</code> string <code>\"2\"</code> sKeyName_04 <code>158</code> string <code>\"3\"</code> sKeyName_05 <code>159</code> string <code>\"4\"</code> sKeyName_06 <code>160</code> string <code>\"5\"</code> sKeyName_07 <code>161</code> string <code>\"6\"</code> sKeyName_08 <code>162</code> string <code>\"7\"</code> sKeyName_09 <code>163</code> string <code>\"8\"</code> sKeyName_0A <code>164</code> string <code>\"9\"</code> sKeyName_0B <code>165</code> string <code>\"0\"</code> sKeyName_0C <code>166</code> string <code>\"-\"</code> sKeyName_0D <code>167</code> string <code>\"=\"</code> sKeyName_0E <code>168</code> string <code>\"Back Space\"</code> sKeyName_0F <code>169</code> string <code>\"Tab\"</code> sKeyName_10 <code>170</code> string <code>\"Q\"</code> sKeyName_11 <code>171</code> string <code>\"W\"</code> sKeyName_12 <code>172</code> string <code>\"E\"</code> sKeyName_13 <code>173</code> string <code>\"R\"</code> sKeyName_14 <code>174</code> string <code>\"T\"</code> sKeyName_15 <code>175</code> string <code>\"Y\"</code> sKeyName_16 <code>176</code> string <code>\"U\"</code> sKeyName_17 <code>177</code> string <code>\"I\"</code> sKeyName_18 <code>178</code> string <code>\"O\"</code> sKeyName_19 <code>179</code> string <code>\"P\"</code> sKeyName_1A <code>180</code> string <code>\"[\"</code> sKeyName_1B <code>181</code> string <code>\"]\"</code> sKeyName_1C <code>182</code> string <code>\"Return\"</code> sKeyName_1D <code>183</code> string <code>\"Left Ctrl\"</code> sKeyName_1E <code>184</code> string <code>\"A\"</code> sKeyName_1F <code>185</code> string <code>\"S\"</code> sKeyName_20 <code>186</code> string <code>\"D\"</code> sKeyName_21 <code>187</code> string <code>\"F\"</code> sKeyName_22 <code>188</code> string <code>\"G\"</code> sKeyName_23 <code>189</code> string <code>\"H\"</code> sKeyName_24 <code>190</code> string <code>\"J\"</code> sKeyName_25 <code>191</code> string <code>\"K\"</code> sKeyName_26 <code>192</code> string <code>\"L\"</code> sKeyName_27 <code>193</code> string <code>\";\"</code> sKeyName_28 <code>194</code> string <code>\"'\"</code> sKeyName_29 <code>195</code> string <code>\"Grave\"</code> sKeyName_2A <code>196</code> string <code>\"Left Shift\"</code> sKeyName_2B <code>197</code> string <code>\"\\\"</code> sKeyName_2C <code>198</code> string <code>\"Z\"</code> sKeyName_2D <code>199</code> string <code>\"X\"</code> sKeyName_2E <code>200</code> string <code>\"C\"</code> sKeyName_2F <code>201</code> string <code>\"V\"</code> sKeyName_30 <code>202</code> string <code>\"B\"</code> sKeyName_31 <code>203</code> string <code>\"N\"</code> sKeyName_32 <code>204</code> string <code>\"M\"</code> sKeyName_33 <code>205</code> string <code>\",\"</code> sKeyName_34 <code>206</code> string <code>\".\"</code> sKeyName_35 <code>207</code> string <code>\"/\"</code> sKeyName_36 <code>208</code> string <code>\"Right Shift\"</code> sKeyName_37 <code>209</code> string <code>\"Numpad *\"</code> sKeyName_38 <code>210</code> string <code>\"Left Alt\"</code> sKeyName_39 <code>211</code> string <code>\"SPACEBAR\"</code> sKeyName_3A <code>212</code> string <code>\"Caps Lock\"</code> sKeyName_3B <code>213</code> string <code>\"F1\"</code> sKeyName_3C <code>214</code> string <code>\"F2\"</code> sKeyName_3D <code>215</code> string <code>\"F3\"</code> sKeyName_3E <code>216</code> string <code>\"F4\"</code> sKeyName_3F <code>217</code> string <code>\"F5\"</code> sKeyName_40 <code>218</code> string <code>\"F6\"</code> sKeyName_41 <code>219</code> string <code>\"F7\"</code> sKeyName_42 <code>220</code> string <code>\"F8\"</code> sKeyName_43 <code>221</code> string <code>\"F9\"</code> sKeyName_44 <code>222</code> string <code>\"F10\"</code> sKeyName_45 <code>223</code> string <code>\"Num Lock\"</code> sKeyName_46 <code>224</code> string <code>\"Scroll Lock\"</code> sKeyName_47 <code>225</code> string <code>\"Numpad 7\"</code> sKeyName_48 <code>226</code> string <code>\"Numpad 8\"</code> sKeyName_49 <code>227</code> string <code>\"Numpad 9\"</code> sKeyName_4A <code>228</code> string <code>\"Numpad -\"</code> sKeyName_4B <code>229</code> string <code>\"Numpad 4\"</code> sKeyName_4C <code>230</code> string <code>\"Numpad 5\"</code> sKeyName_4D <code>231</code> string <code>\"Numpad 6\"</code> sKeyName_4E <code>232</code> string <code>\"Numpad +\"</code> sKeyName_4F <code>233</code> string <code>\"Numpad 1\"</code> sKeyName_50 <code>234</code> string <code>\"Numpad 2\"</code> sKeyName_51 <code>235</code> string <code>\"Numpad 3\"</code> sKeyName_52 <code>236</code> string <code>\"Numpad 0\"</code> sKeyName_53 <code>237</code> string <code>\"Decimal\"</code> sKeyName_54 <code>238</code> string <code>\"\"</code> sKeyName_55 <code>239</code> string <code>\"\"</code> sKeyName_56 <code>240</code> string <code>\"OEM 102\"</code> sKeyName_57 <code>241</code> string <code>\"F11\"</code> sKeyName_58 <code>242</code> string <code>\"F12\"</code> sKeyName_59 <code>243</code> string <code>\"\"</code> sKeyName_5A <code>244</code> string <code>\"\"</code> sKeyName_5B <code>245</code> string <code>\"\"</code> sKeyName_5C <code>246</code> string <code>\"\"</code> sKeyName_5D <code>247</code> string <code>\"\"</code> sKeyName_5E <code>248</code> string <code>\"\"</code> sKeyName_5F <code>249</code> string <code>\"\"</code> sKeyName_60 <code>250</code> string <code>\"\"</code> sKeyName_61 <code>251</code> string <code>\"\"</code> sKeyName_62 <code>252</code> string <code>\"\"</code> sKeyName_63 <code>253</code> string <code>\"\"</code> sKeyName_64 <code>254</code> string <code>\"F13\"</code> sKeyName_65 <code>255</code> string <code>\"F14\"</code> sKeyName_66 <code>256</code> string <code>\"F15\"</code> sKeyName_67 <code>257</code> string <code>\"\"</code> sKeyName_68 <code>258</code> string <code>\"\"</code> sKeyName_69 <code>259</code> string <code>\"\"</code> sKeyName_6A <code>260</code> string <code>\"\"</code> sKeyName_6B <code>261</code> string <code>\"\"</code> sKeyName_6C <code>262</code> string <code>\"\"</code> sKeyName_6D <code>263</code> string <code>\"\"</code> sKeyName_6E <code>264</code> string <code>\"\"</code> sKeyName_6F <code>265</code> string <code>\"\"</code> sKeyName_70 <code>266</code> string <code>\"Kana\"</code> sKeyName_71 <code>267</code> string <code>\"\"</code> sKeyName_72 <code>268</code> string <code>\"\"</code> sKeyName_73 <code>269</code> string <code>\"Abnt C1\"</code> sKeyName_74 <code>270</code> string <code>\"\"</code> sKeyName_75 <code>271</code> string <code>\"\"</code> sKeyName_76 <code>272</code> string <code>\"\"</code> sKeyName_77 <code>273</code> string <code>\"\"</code> sKeyName_78 <code>274</code> string <code>\"\"</code> sKeyName_79 <code>275</code> string <code>\"Cnvrt\"</code> sKeyName_7A <code>276</code> string <code>\"\"</code> sKeyName_7B <code>277</code> string <code>\"No Cnvrt\"</code> sKeyName_7C <code>278</code> string <code>\"\"</code> sKeyName_7D <code>279</code> string <code>\"Yen\"</code> sKeyName_7E <code>280</code> string <code>\"Abnt C2\"</code> sKeyName_7F <code>281</code> string <code>\"\"</code> sKeyName_80 <code>282</code> string <code>\"\"</code> sKeyName_81 <code>283</code> string <code>\"\"</code> sKeyName_82 <code>284</code> string <code>\"\"</code> sKeyName_83 <code>285</code> string <code>\"\"</code> sKeyName_84 <code>286</code> string <code>\"\"</code> sKeyName_85 <code>287</code> string <code>\"\"</code> sKeyName_86 <code>288</code> string <code>\"\"</code> sKeyName_87 <code>289</code> string <code>\"\"</code> sKeyName_88 <code>290</code> string <code>\"\"</code> sKeyName_89 <code>291</code> string <code>\"\"</code> sKeyName_8A <code>292</code> string <code>\"\"</code> sKeyName_8B <code>293</code> string <code>\"\"</code> sKeyName_8C <code>294</code> string <code>\"\"</code> sKeyName_8D <code>295</code> string <code>\"Np Equals\"</code> sKeyName_8E <code>296</code> string <code>\"\"</code> sKeyName_8F <code>297</code> string <code>\"\"</code> sKeyName_90 <code>298</code> string <code>\"PrvTrk\"</code> sKeyName_91 <code>299</code> string <code>\"AT\"</code> sKeyName_92 <code>300</code> string <code>\":\"</code> sKeyName_93 <code>301</code> string <code>\"_\"</code> sKeyName_94 <code>302</code> string <code>\"Kanji\"</code> sKeyName_95 <code>303</code> string <code>\"Stop\"</code> sKeyName_96 <code>304</code> string <code>\"Ax\"</code> sKeyName_97 <code>305</code> string <code>\"Unlabeled\"</code> sKeyName_98 <code>306</code> string <code>\"\"</code> sKeyName_99 <code>307</code> string <code>\"NxtTrk\"</code> sKeyName_9A <code>308</code> string <code>\"\"</code> sKeyName_9B <code>309</code> string <code>\"\"</code> sKeyName_9C <code>310</code> string <code>\"Right Enter\"</code> sKeyName_9D <code>311</code> string <code>\"Right Ctrl\"</code> sKeyName_9E <code>312</code> string <code>\"\"</code> sKeyName_9F <code>313</code> string <code>\"\"</code> sKeyName_A0 <code>314</code> string <code>\"Mute\"</code> sKeyName_A1 <code>315</code> string <code>\"Calc\"</code> sKeyName_A2 <code>316</code> string <code>\"Play Pause\"</code> sKeyName_A3 <code>317</code> string <code>\"\"</code> sKeyName_A4 <code>318</code> string <code>\"Media Stop\"</code> sKeyName_A5 <code>319</code> string <code>\"\"</code> sKeyName_A6 <code>320</code> string <code>\"\"</code> sKeyName_A7 <code>321</code> string <code>\"\"</code> sKeyName_A8 <code>322</code> string <code>\"\"</code> sKeyName_A9 <code>323</code> string <code>\"\"</code> sKeyName_AA <code>324</code> string <code>\"\"</code> sKeyName_AB <code>325</code> string <code>\"\"</code> sKeyName_AC <code>326</code> string <code>\"\"</code> sKeyName_AD <code>327</code> string <code>\"\"</code> sKeyName_AE <code>328</code> string <code>\"Volume Down\"</code> sKeyName_AF <code>329</code> string <code>\"\"</code> sKeyName_B0 <code>330</code> string <code>\"Volume Up\"</code> sKeyName_B1 <code>331</code> string <code>\"\"</code> sKeyName_B2 <code>332</code> string <code>\"Web Home\"</code> sKeyName_B3 <code>333</code> string <code>\"Numpad ,\"</code> sKeyName_B4 <code>334</code> string <code>\"\"</code> sKeyName_B5 <code>335</code> string <code>\"Numpad /\"</code> sKeyName_B6 <code>336</code> string <code>\"\"</code> sKeyName_B7 <code>337</code> string <code>\"SysRq\"</code> sKeyName_B8 <code>338</code> string <code>\"Right Alt\"</code> sKeyName_B9 <code>339</code> string <code>\"\"</code> sKeyName_BA <code>340</code> string <code>\"\"</code> sKeyName_BB <code>341</code> string <code>\"\"</code> sKeyName_BC <code>342</code> string <code>\"\"</code> sKeyName_BD <code>343</code> string <code>\"\"</code> sKeyName_BE <code>344</code> string <code>\"\"</code> sKeyName_BF <code>345</code> string <code>\"\"</code> sKeyName_C0 <code>346</code> string <code>\"\"</code> sKeyName_C1 <code>347</code> string <code>\"\"</code> sKeyName_C2 <code>348</code> string <code>\"\"</code> sKeyName_C3 <code>349</code> string <code>\"\"</code> sKeyName_C4 <code>350</code> string <code>\"\"</code> sKeyName_C5 <code>351</code> string <code>\"Pause\"</code> sKeyName_C6 <code>352</code> string <code>\"\"</code> sKeyName_C7 <code>353</code> string <code>\"Home\"</code> sKeyName_C8 <code>354</code> string <code>\"Up\"</code> sKeyName_C9 <code>355</code> string <code>\"Page Up\"</code> sKeyName_CA <code>356</code> string <code>\"\"</code> sKeyName_CB <code>357</code> string <code>\"Left\"</code> sKeyName_CC <code>358</code> string <code>\"\"</code> sKeyName_CD <code>359</code> string <code>\"Right\"</code> sKeyName_CE <code>360</code> string <code>\"\"</code> sKeyName_CF <code>361</code> string <code>\"End\"</code> sKeyName_D0 <code>362</code> string <code>\"Down\"</code> sKeyName_D1 <code>363</code> string <code>\"Page Down\"</code> sKeyName_D2 <code>364</code> string <code>\"Insert\"</code> sKeyName_D3 <code>365</code> string <code>\"Delete\"</code> sKeyName_D4 <code>366</code> string <code>\"\"</code> sKeyName_D5 <code>367</code> string <code>\"\"</code> sKeyName_D6 <code>368</code> string <code>\"\"</code> sKeyName_D7 <code>369</code> string <code>\"\"</code> sKeyName_D8 <code>370</code> string <code>\"\"</code> sKeyName_D9 <code>371</code> string <code>\"\"</code> sKeyName_DA <code>372</code> string <code>\"\"</code> sKeyName_DB <code>373</code> string <code>\"Left Win\"</code> sKeyName_DC <code>374</code> string <code>\"Right Win\"</code> sKeyName_DD <code>375</code> string <code>\"Apps\"</code> sKeyName_DE <code>376</code> string <code>\"Power\"</code> sKeyName_DF <code>377</code> string <code>\"Sleep\"</code> sKeyName_E0 <code>378</code> string <code>\"\"</code> sKeyName_E1 <code>379</code> string <code>\"\"</code> sKeyName_E2 <code>380</code> string <code>\"\"</code> sKeyName_E3 <code>381</code> string <code>\"Wake\"</code> sKeyName_E4 <code>382</code> string <code>\"\"</code> sKeyName_E5 <code>383</code> string <code>\"Web Search\"</code> sKeyName_E6 <code>384</code> string <code>\"Web Favs\"</code> sKeyName_E7 <code>385</code> string <code>\"Web Ref\"</code> sKeyName_E8 <code>386</code> string <code>\"Web Stop\"</code> sKeyName_E9 <code>387</code> string <code>\"Web Fwd\"</code> sKeyName_EA <code>388</code> string <code>\"Web Back\"</code> sKeyName_EB <code>389</code> string <code>\"My Comp\"</code> sKeyName_EC <code>390</code> string <code>\"\"</code> sKeyName_ED <code>391</code> string <code>\"\"</code> sKeyName_EE <code>392</code> string <code>\"\"</code> sKeyName_EF <code>393</code> string <code>\"\"</code> sKeyName_F0 <code>394</code> string <code>\"\"</code> sKeyName_F1 <code>395</code> string <code>\"\"</code> sKeyName_F2 <code>396</code> string <code>\"\"</code> sKeyName_F3 <code>397</code> string <code>\"\"</code> sKeyName_F4 <code>398</code> string <code>\"\"</code> sKeyName_F5 <code>399</code> string <code>\"\"</code> sKeyName_F6 <code>400</code> string <code>\"\"</code> sKeyName_F7 <code>401</code> string <code>\"\"</code> sKeyName_F8 <code>402</code> string <code>\"\"</code> sKeyName_F9 <code>403</code> string <code>\"\"</code> sKeyName_FA <code>404</code> string <code>\"\"</code> sKeyName_FB <code>405</code> string <code>\"\"</code> sKeyName_FC <code>406</code> string <code>\"\"</code> sKeyName_FD <code>407</code> string <code>\"\"</code> sKeyName_FE <code>408</code> string <code>\"\"</code> sKeyName_FF <code>409</code> string <code>\"\"</code> sForwardXbox <code>410</code> string <code>\"Move Forward\"</code> sBackXbox <code>411</code> string <code>\"Move Backward\"</code> sSlideLeftXbox <code>412</code> string <code>\"Slide Left\"</code> sSlideRightXbox <code>413</code> string <code>\"Slide Right\"</code> sMenuModeXbox <code>414</code> string <code>\"Menu Mode\"</code> sActivateXbox <code>415</code> string <code>\"Activate\"</code> sUseXbox <code>416</code> string <code>\"Use\"</code> sReadyItemXbox <code>417</code> string <code>\"Ready Item\"</code> sReadyMagicXbox <code>418</code> string <code>\"Ready Magic\"</code> sCrouchXbox <code>419</code> string <code>\"Sneak\"</code> sRunXbox <code>420</code> string <code>\"Run\"</code> sToggleRunXbox <code>421</code> string <code>\"Toggle Run\"</code> sJumpXbox <code>422</code> string <code>\"Jump\"</code> sTogglePOVXbox <code>423</code> string <code>\"Toggle View\"</code> sMenuNextXbox <code>424</code> string <code>\"Next Menu\"</code> sMenuPrevXbox <code>425</code> string <code>\"Previous Menu\"</code> sJournalXbox <code>426</code> string <code>\"Journal\"</code> sQuick4Xbox <code>427</code> string <code>\"sQuick4Xbox\"</code> sQuick5Xbox <code>428</code> string <code>\"sQuick5Xbox\"</code> sQuick6Xbox <code>429</code> string <code>\"sQuick6Xbox\"</code> sQuick7Xbox <code>430</code> string <code>\"sQuick7Xbox\"</code> sQuick8Xbox <code>431</code> string <code>\"sQuick8Xbox\"</code> sQuick9Xbox <code>432</code> string <code>\"sQuick9Xbox\"</code> sQuick0Xbox <code>433</code> string <code>\"sQuick0Xbox\"</code> sOptionsMenuXbox <code>434</code> string <code>\"Options Menu\"</code> sSystemMenuXbox <code>435</code> string <code>\"System Menu\"</code> sRestMenuXbox <code>436</code> string <code>\"Rest/Wait\"</code> sQuickSaveXbox <code>437</code> string <code>\"Quick Save\"</code> sQuickLoadXbox <code>438</code> string <code>\"Quick Load\"</code> sMoveUpXbox <code>439</code> string <code>\"Move Up\"</code> sMoveDownXbox <code>440</code> string <code>\"Move Down\"</code> sLookUpXbox <code>441</code> string <code>\"Look Up\"</code> sLookDownXbox <code>442</code> string <code>\"Look Down\"</code> sTurnLeftXbox <code>443</code> string <code>\"Turn Left\"</code> sTurnRightXbox <code>444</code> string <code>\"Turn Right\"</code> sNextWeaponXbox <code>445</code> string <code>\"Next Weapon\"</code> sPrevWeaponXbox <code>446</code> string <code>\"Previous Weapon\"</code> sNextSpellXbox <code>447</code> string <code>\"Next Spell\"</code> sPrevSpellXbox <code>448</code> string <code>\"Previous Spell\"</code> sDialogText1Xbox <code>449</code> string <code>\"PUSH\"</code> sDialogText2Xbox <code>450</code> string <code>\"TO GO BACK\"</code> sDialogText3Xbox <code>451</code> string <code>\"TO READ MORE\"</code> sQuick_Save <code>452</code> string <code>\"Auto-Save when Rest\"</code> sShadowText <code>453</code> string <code>\"Real-time Shadows\"</code> sLockSuccess <code>454</code> string <code>\"Lock pick success!\"</code> sLockFail <code>455</code> string <code>\"Lock pick failed.\"</code> sLockImpossible <code>456</code> string <code>\"Lock too complex.\"</code> sTrapSuccess <code>457</code> string <code>\"Trap disarmed!\"</code> sTrapFail <code>458</code> string <code>\"Disarm trap failed.\"</code> sTrapImpossible <code>459</code> string <code>\"Trap too complex, your chance to disarm it is zero\"</code> sTrapped <code>460</code> string <code>\"Trapped\"</code> sLockLevel <code>461</code> string <code>\"Lock Level\"</code> sKeyUsed <code>462</code> string <code>\"used to open lock\"</code> sUnlocked <code>463</code> string <code>\"Unlocked\"</code> fRepairMult <code>464</code> float <code>1</code> fRepairAmountMult <code>465</code> float <code>3</code> fSpellValueMult <code>466</code> float <code>10</code> fSpellMakingValueMult <code>467</code> float <code>7</code> fEnchantmentValueMult <code>468</code> float <code>1000</code> fTravelMult <code>469</code> float <code>4000</code> fTravelTimeMult <code>470</code> float <code>16000</code> fMagesGuildTravel <code>471</code> float <code>10</code> sBarter <code>472</code> string <code>\"Barter\"</code> sRepair <code>473</code> string <code>\"Repair\"</code> sSpells <code>474</code> string <code>\"Spells\"</code> sTraining <code>475</code> string <code>\"Training\"</code> sTravel <code>476</code> string <code>\"Travel\"</code> sSpellmaking <code>477</code> string <code>\"Spellmaking\"</code> sEnchanting <code>478</code> string <code>\"Enchanting\"</code> sJoystickNotFound <code>479</code> string <code>\"Joystick not found.\"</code> sJournalEntry <code>480</code> string <code>\"Your journal has been updated.\"</code> sDay <code>481</code> string <code>\"Day\"</code> sCreate <code>482</code> string <code>\"Create\"</code> sIngredients <code>483</code> string <code>\"Ingredients\"</code> sApparatus <code>484</code> string <code>\"Apparatus\"</code> sCreatedEffects <code>485</code> string <code>\"Created Effects\"</code> sOnetypeEffectMessage <code>486</code> string <code>\"This effect has already been added.\"</code> sName <code>487</code> string <code>\"Name\"</code> sNameTitle <code>488</code> string <code>\"Name\"</code> sSelect <code>489</code> string <code>\"Select\"</code> sBuy <code>490</code> string <code>\"Buy\"</code> sInfo <code>491</code> string <code>\"Info\"</code> sMagicEffects <code>492</code> string <code>\"Magic Effects\"</code> sOnce <code>493</code> string <code>\"Once\"</code> sCostCharge <code>494</code> string <code>\"Cost/Charge\"</code> sCostChance <code>495</code> string <code>\"Cost/Chance\"</code> sAttributesMenu1 <code>496</code> string <code>\"Choose an Attribute\"</code> sBirthsignmenu1 <code>497</code> string <code>\"Abilities:\"</code> sBirthsignmenu2 <code>498</code> string <code>\"Spells:\"</code> sChooseClassMenu1 <code>499</code> string <code>\"Specialization:\"</code> sChooseClassMenu2 <code>500</code> string <code>\"Favorite Attributes:\"</code> sChooseClassMenu3 <code>501</code> string <code>\"Major Skills:\"</code> sChooseClassMenu4 <code>502</code> string <code>\"Minor Skills:\"</code> sCreateClassMenuWarning <code>503</code> string <code>\"Reselect your class?\"</code> sClassChoiceMenu1 <code>504</code> string <code>\"Answer his questions (Generates Class)\"</code> sClassChoiceMenu2 <code>505</code> string <code>\"Give him the info (Pick from Class List)\"</code> sClassChoiceMenu3 <code>506</code> string <code>\"Fill out forms yourself (Create Custom Class)\"</code> sNotifyMessage1 <code>507</code> string <code>\"You can only rest on solid ground.\"</code> sNotifyMessage2 <code>508</code> string <code>\"You can't rest here enemies are nearby.\"</code> sNotifyMessage3 <code>509</code> string <code>\"You cannot sleep when dreaming.\"</code> sNotifyMessage4 <code>510</code> string <code>\"Saving...\"</code> sNotifyMessage4XBOX <code>511</code> string <code>\"Saving. Please don't turn off your Xbox console.\"</code> sNotifyMessage5 <code>512</code> string <code>\"You must place the object you are holding into a container before exiting menus.\"</code> sNotifyMessage6 <code>513</code> string <code>\"Only one of each ingredient can be used to make a potion.\"</code> sNotifyMessage6a <code>514</code> string <code>\"At least two ingredients are needed to make a potion.\"</code> sNotifyMessage7 <code>515</code> string <code>\"Only four ingredients can be used in a potion.\"</code> sNotifyMessage8 <code>516</code> string <code>\"Your potion failed.\"</code> sNotifyMessage9 <code>517</code> string <code>\"Your offer is refused.\"</code> sNotifyMessage10 <code>518</code> string <code>\"You have to name the spell before buying it.\"</code> sNotifyMessage11 <code>519</code> string <code>\"You have to have an item to enchant.\"</code> sNotifyMessage12 <code>520</code> string <code>\"You don't have enough gold to buy this spell.\"</code> sNotifyMessage13 <code>521</code> string <code>\"Beast races cannot wear full helmets.\"</code> sNotifyMessage14 <code>522</code> string <code>\"Beast races cannot wear boots.\"</code> sNotifyMessage15 <code>523</code> string <code>\"Beast races cannot wear shoes.\"</code> sNotifyMessage16 <code>524</code> string <code>\"You can only wear one clothing item at a time.\"</code> sNotifyMessage16_a <code>525</code> string <code>\"You can only equip one item of that type at a time.\"</code> sNotifyMessage17 <code>526</code> string <code>\"You cannot train a skill above its governing attribute.\"</code> sNotifyMessage18 <code>527</code> string <code>\"You don't have enough gold to buy this spell.\"</code> sNotifyMessage19 <code>528</code> string <code>\"Only one apparatus can be placed in each slot of the alchemy menu.\"</code> sNotifyMessage20 <code>529</code> string <code>\"Please remove the object already in the mortar and pestle slot.\"</code> sNotifyMessage21 <code>530</code> string <code>\"Please remove the object already in the alembic slot.\"</code> sNotifyMessage22 <code>531</code> string <code>\"Please remove the object already in the calcinator slot.\"</code> sNotifyMessage23 <code>532</code> string <code>\"Please remove the object already in the retort slot.\"</code> sNotifyMessage24 <code>533</code> string <code>\"You need to assign all the major and minor skill slots.\"</code> sNotifyMessage25 <code>534</code> string <code>\"You need to pick two favorite attributes.\"</code> sNotifyMessage26 <code>535</code> string <code>\"You need to pick a specialization.\"</code> sNotifyMessage27 <code>536</code> string <code>\"You need to assign all the major and minor skill slots.\"</code> sNotifyMessage28 <code>537</code> string <code>\"You can only add eight effects to a spell.\"</code> sNotifyMessage29 <code>538</code> string <code>\"You cannot add more enchantment to an object then it can hold.\"</code> sNotifyMessage30 <code>539</code> string <code>\"You have to add at least one effect to a spell.\"</code> sNotifyMessage31 <code>540</code> string <code>\"Items already enchanted cannot have another enchantment added.\"</code> sNotifyMessage32 <code>541</code> string <code>\"Only soul gems with a soul can be put in the soul gem slot.\"</code> sNotifyMessage33 <code>542</code> string <code>\"Only soul gems put in the soul gem slot.\"</code> sNotifyMessage34 <code>543</code> string <code>\"The enchantment failed and your gem is destroyed.\"</code> sNotifyMessage35 <code>544</code> string <code>\"Only one apparatus item can be equipped at a time.\"</code> sNotifyMessage36 <code>545</code> string <code>\"You have to distribute all you points before exiting.\"</code> sNotifyMessage37 <code>546</code> string <code>\"You need to type in your name.\"</code> sNotifyMessage38 <code>547</code> string <code>\"Skill Increase:\"</code> sNotifyMessage39 <code>548</code> string <code>\"Your %s skill increased to %d.\"</code> sNotifyMessage40 <code>549</code> string <code>\"Skill Maximum Reached.\"</code> sNotifyMessage41 <code>550</code> string <code>\"Your %s skill has reached the limit of your %s.\"</code> sNotifyMessage42 <code>551</code> string <code>\"You have been released after %d day. A skill has been affected by your time in prison.\"</code> sNotifyMessage43 <code>552</code> string <code>\"You have been released after %d days. Your skills have been affected by your time in prison.\"</code> sNotifyMessage44 <code>553</code> string <code>\"Your %s skill decreased to %d.\"</code> sNotifyMessage45 <code>554</code> string <code>\"You need a Mortar and Pestle to use\"</code> sNotifyMessage46 <code>555</code> string <code>\"You need a Alembic to use\"</code> sNotifyMessage47 <code>556</code> string <code>\"You need a Calcinator to use\"</code> sNotifyMessage48 <code>557</code> string <code>\"You need a Retort to use\"</code> sNotifyMessage49 <code>558</code> string <code>\"That %s is mine.\"</code> sNotifyMessage50 <code>559</code> string <code>\"%s has no effect on you.\"</code> sNotifyMessage51 <code>560</code> string <code>\"The %s has been used up.\"</code> sNotifyMessage52 <code>561</code> string <code>\"You must have a soul gem with a soul to make an Enchanted Item\"</code> sNotifyMessage53 <code>562</code> string <code>\"Your menu sizes and positions have been saved for exploring mode.\"</code> sNotifyMessage54 <code>563</code> string <code>\"Do you want to start a new game and lose your current game?\"</code> sNotifyMessage55 <code>564</code> string <code>\"Please reconnect the controller and press START to continue.\"</code> sNotifyMessage56 <code>565</code> string <code>\"There's a problem with the disc you're using. It may be dirty or damaged.  Press A to continue.\"</code> sNotifyMessage57 <code>566</code> string <code>\"Please press START to begin.\"</code> sNotifyMessage58 <code>567</code> string <code>\"Your Xbox Hard Disk doesn't have enough free blocks to save games.  Press A to continue without saving  or B to free more blocks.\"</code> sNotifyMessage59 <code>568</code> string <code>\"You are over-encumbered.\"</code> sNotifyMessage60 <code>569</code> string <code>\"%s has been added to your inventory.\"</code> sNotifyMessage61 <code>570</code> string <code>\"%d %s has been added to your inventory.\"</code> sNotifyMessage62 <code>571</code> string <code>\"%s has been removed from your inventory.\"</code> sNotifyMessage63 <code>572</code> string <code>\"%d %s has been removed from your inventory.\"</code> sNotifyMessage64 <code>573</code> string <code>\"You can't sleep in someone else's bed!\"</code> sNotifyMessage65 <code>574</code> string <code>\"You can't save a game with no name!\"</code> sNotifyMessage66 <code>575</code> string <code>\"This will reset all controls to the default settings.  Do you wish to continue?\"</code> sNotifyMessage67 <code>576</code> string <code>\"This will immediately change your resolution.  Do you want to continue?\"</code> sTeleportDisabled <code>577</code> string <code>\"Teleportation magic does not work here.\"</code> sLevitateDisabled <code>578</code> string <code>\"Levitation magic does not work here.\"</code> sInPrisonTitle <code>579</code> string <code>\"Serving time...\"</code> sInfoRefusal <code>580</code> string <code>\"Info Refusal\"</code> sAdmireSuccess <code>581</code> string <code>\"Admire Success\"</code> sAdmireFail <code>582</code> string <code>\"Admire Fail\"</code> sIntimidateSuccess <code>583</code> string <code>\"Intimidate Success\"</code> sIntimidateFail <code>584</code> string <code>\"Intimidate Fail\"</code> sTauntSuccess <code>585</code> string <code>\"Taunt Success\"</code> sTauntFail <code>586</code> string <code>\"Taunt Fail\"</code> sServiceRefusal <code>587</code> string <code>\"Service Refusal\"</code> sBribeSuccess <code>588</code> string <code>\"Bribe Success\"</code> sBribeFail <code>589</code> string <code>\"Bribe Fail\"</code> sWerewolfRefusal <code>590</code> string <code>\"You cannot do this as a werewolf.\"</code> sWerewolfPopup <code>591</code> string <code>\"Werewolf\"</code> sWerewolfRestMessage <code>592</code> string <code>\"You cannot rest in werewolf form.\"</code> sWerewolfAlarmMessage <code>593</code> string <code>\"You have been detected as a known werewolf.\"</code> sBookSkillMessage <code>594</code> string <code>\"You have gained knowledge from this book.\"</code> sLoadingMessage1 <code>595</code> string <code>\"Loading Master/Plugin Files\"</code> sLoadingMessage2 <code>596</code> string <code>\"Loading Area\"</code> sLoadingMessage3 <code>597</code> string <code>\"Loading Area\"</code> sLoadingMessage4 <code>598</code> string <code>\"Initializing Data...\"</code> sLoadingMessage5 <code>599</code> string <code>\"Parsing Quests (this may take a while) Re-save when done.\"</code> sLoadingMessage9 <code>600</code> string <code>\"Clearing Data...\"</code> sLoadingMessage14 <code>601</code> string <code>\"Loading Save Game\"</code> sLoadingMessage15 <code>602</code> string <code>\"Loading (%s)\"</code> sInvalidSaveGameMsg <code>603</code> string <code>\"This file is an invalid Save Game.\"</code> sInvalidSaveGameMsgXBOX <code>604</code> string <code>\"Unable to load saved game. Press A to continue.\"</code> sLoadingErrorsMsg <code>605</code> string <code>\"Errors were encountered loading from file '%s'.\"</code> sMissingMastersMsg <code>606</code> string <code>\"The currently selected master files and plugins do not match the ones used by this save game. Errors may occur during load or game play. Do you wish to continue?\"</code> sChangedMastersMsg <code>607</code> string <code>\"The selected master files and plugins may have changed since this save game was created. Errors may occur during load or game play. Do you wish to continue?\"</code> sMastPlugMismatchMsg <code>608</code> string <code>\"One of the files that \"%s\" is dependent on has changed since the last save.  This may result in errors. Saving again will clear this message  but not necessarily fix any errors.\"</code> sGeneralMastPlugMismatchMsg <code>609</code> string <code>\"One or more plugins could not find the correct versions of the master files they depend on. Errors may occur during load or game play. Check the \"Warnings.txt\" file for more information.\"</code> sLoadLastSaveMsg <code>610</code> string <code>\"The most recent Save Game is '%s'.  Would you like to load it?\"</code> sMessage1 <code>611</code> string <code>\"Do you want to Load a save game and lose your current game?\"</code> sMessage2 <code>612</code> string <code>\"Quit Morrowind?\"</code> sMessage3 <code>613</code> string <code>\"Are you sure you want to delete this Save Game?\"</code> sMessage4 <code>614</code> string <code>\"Are you sure you want to overwrite this Save Game?\"</code> sMessage5 <code>615</code> string <code>\"Do you wish to quit your current game?  All unsaved progress will be lost.\"</code> sMessageQuestionAnswer1 <code>616</code> string <code>\"Your personality and past reflect a:\"</code> sMessageQuestionAnswer2 <code>617</code> string <code>\"Accept this Class\"</code> sMessageQuestionAnswer3 <code>618</code> string <code>\"Choose Another Class\"</code> sBarterDialog1 <code>619</code> string <code>\"You cannot afford this transaction.\"</code> sBarterDialog2 <code>620</code> string <code>\"I cannot afford this transaction.\"</code> sBarterDialog3 <code>621</code> string <code>\"This is to heavy for you to carry.\"</code> sBarterDialog4 <code>622</code> string <code>\"I don't buy that item.\"</code> sBarterDialog5 <code>623</code> string <code>\"Thank you, Please Come Again.\"</code> sBarterDialog6 <code>624</code> string <code>\"You need to place the bartered item before existing Barter Menu!\"</code> sBarterDialog7 <code>625</code> string <code>\"Price\"</code> sBarterDialog8 <code>626</code> string <code>\"Offer\"</code> sBarterDialog9 <code>627</code> string <code>\"You cannot sell summoned items!\"</code> sBarterDialog10 <code>628</code> string <code>\"You cannot buy summoned items!\"</code> sBarterDialog11 <code>629</code> string <code>\"You need to trade items before making an offer.\"</code> sBarterDialog12 <code>630</code> string <code>\"You cannot drop summoned items!\"</code> sInventoryMessage1 <code>631</code> string <code>\"This object is broken and cannot be equipped until fixed.\"</code> sInventoryMessage2 <code>632</code> string <code>\"You cannot repair items during battle.\"</code> sInventoryMessage3 <code>633</code> string <code>\"You cannot make potions during battle.\"</code> sInventoryMessage4 <code>634</code> string <code>\"You cannot read during battle.\"</code> sInventoryMessage5 <code>635</code> string <code>\"You cannot use soul gems during battle.\"</code> sContentsMessage1 <code>636</code> string <code>\"You cannot remove summoned items from their container.\"</code> sContentsMessage2 <code>637</code> string <code>\"You cannot place items in this container.\"</code> sContentsMessage3 <code>638</code> string <code>\"The item will not fit.\"</code> sAttributeListTitle <code>639</code> string <code>\"Attribute List\"</code> sConsoleTitle <code>640</code> string <code>\"Console\"</code> sCreateClassMenu1 <code>641</code> string <code>\"Class Description\"</code> sCreateClassMenu2 <code>642</code> string <code>\"Close the Description menu before leaving Class Creation\"</code> sCreateClassMenu3 <code>643</code> string <code>\"The class needs a description.\"</code> sCreateClassMenuHelp1 <code>644</code> string <code>\"You'll get +5 to all skills of your specialization. They'll also be easier to increase.\"</code> sCreateClassMenuHelp2 <code>645</code> string <code>\"You'll get +10 to each of your favored attributes.\"</code> sControlsMenu1 <code>646</code> string <code>\"Reset Controls\"</code> sControlsMenu2 <code>647</code> string <code>\"Mouse Sensitivity\"</code> sControlsMenu3 <code>648</code> string <code>\"Press a key or push a button to set this command.\"</code> sControlsMenu4 <code>649</code> string <code>\"Vertical Sensitivity\"</code> sControlsMenu5 <code>650</code> string <code>\"Horizontal Sensitivity\"</code> sControlsMenu6 <code>651</code> string <code>\"Push a button to set this command.\"</code> sGameWithoutLauncherXbox <code>652</code> string <code>\"The game was started without the launcher.  Press START to continue.\"</code> sDialogMenu1 <code>653</code> string <code>\"Final Disposition:\"</code> sEnchantmentMenu1 <code>654</code> string <code>\"Enchantment Menu\"</code> sEnchantmentMenu2 <code>655</code> string <code>\"Enchantment Name\"</code> sEnchantmentMenu3 <code>656</code> string <code>\"Enchantment\"</code> sEnchantmentMenu4 <code>657</code> string <code>\"Point Cost\"</code> sEnchantmentMenu5 <code>658</code> string <code>\"Buy\"</code> sEnchantmentMenu6 <code>659</code> string <code>\"Chance\"</code> sEnchantmentMenu7 <code>660</code> string <code>\"Please remove the current soul gem before placing a different soul gem.\"</code> sEnchantmentMenu8 <code>661</code> string <code>\"You cannot buy a spell that has a zero point cost.\"</code> sEnchantmentMenu9 <code>662</code> string <code>\"You cannot enchant more then one item of that type at a time.\"</code> sEnchantmentMenu10 <code>663</code> string <code>\"The cast cost cannot exceed the charge amount put into the time\"</code> sEnchantmentMenu11 <code>664</code> string <code>\"You must add at least one effect to an enchantment\"</code> sEnchantmentMenu12 <code>665</code> string <code>\"You have successfully created an enchanted item\"</code> sEnchantmentHelp1 <code>666</code> string <code>\"Slot for item to enchant. Only weapons, armor, scrolls and clothing that are not already enchanted can be enchanted.\"</code> sEnchantmentHelp2 <code>667</code> string <code>\"Slot for the soul gem used to enchant an item. Only soul gems filled with a soul can be used. The soul amount is the total charge placed into the item.\"</code> sEnchantmentHelp3 <code>668</code> string <code>\"The first number is the total amount the enchantment would cost to cast. The second number is the total enchantment cost that can be placed on this type of item.\"</code> sEnchantmentHelp4 <code>669</code> string <code>\"The amount of charge points needed each time this enchantment is cast. This number is modified by your enchant skill.\"</code> sEnchantmentHelp5 <code>670</code> string <code>\"The amount of soul in the soul gem in the soul gem slot\"</code> sEnchantmentHelp6 <code>671</code> string <code>\"Amount of gold to buy this enchantment\"</code> sEnchantmentHelp7 <code>672</code> string <code>\"Type of cast for the enchantment.\"</code> sEnchantmentHelp8 <code>673</code> string <code>\"Name you give the spell.\"</code> sEnchantmentHelp9 <code>674</code> string <code>\"Magic effects you know that you can add to an item\"</code> sEnchantmentHelp10 <code>675</code> string <code>\"Current effects on the item\"</code> sInputMenu1 <code>676</code> string <code>\"Enter\"</code> sInventoryMenu1 <code>677</code> string <code>\"You cannot equip items being bartered.\"</code> sLevelUpMenu1 <code>678</code> string <code>\"You have ascended to Level\"</code> sLevelUpMenu2 <code>679</code> string <code>\"It's all suddenly obvious to you. You just have to concentrate. All the energy and time you've wasted is a sin, but without the experience you've gained, taking risks, taking responsibility for failure how could you have understood?\"</code> sLevelUpMenu3 <code>680</code> string <code>\"x2\"</code> sLevelUpMenu4 <code>681</code> string <code>\"x3\"</code> sLevelUpMsg <code>682</code> string <code>\"You should rest and meditate on what you've learned.\"</code> sLevelUp <code>683</code> string <code>\"Level Up\"</code> sRange <code>684</code> string <code>\"Range\"</code> sArea <code>685</code> string <code>\"Area\"</code> sMagnitude <code>686</code> string <code>\"Magnitude\"</code> sDuration <code>687</code> string <code>\"Duration\"</code> sDrain <code>688</code> string <code>\"Drain\"</code> sAbsorb <code>689</code> string <code>\"Absorb\"</code> sFortify <code>690</code> string <code>\"Fortify\"</code> sRestore <code>691</code> string <code>\"Restore\"</code> sDamage <code>692</code> string <code>\"Damage\"</code> spoint <code>693</code> string <code>\"pt\"</code> spoints <code>694</code> string <code>\"pts\"</code> spercent <code>695</code> string <code>\"%\"</code> sfor <code>696</code> string <code>\"for\"</code> ssecond <code>697</code> string <code>\"sec\"</code> sseconds <code>698</code> string <code>\"secs\"</code> sin <code>699</code> string <code>\"in\"</code> sfootarea <code>700</code> string <code>\"ft\"</code> sfeet <code>701</code> string <code>\"ft\"</code> sXTimes <code>702</code> string <code>\"x\"</code> sXTimesINT <code>703</code> string <code>\"x INT\"</code> sonword <code>704</code> string <code>\"on\"</code> sNone <code>705</code> string <code>\"None\"</code> sDone <code>706</code> string <code>\"Done\"</code> sStartCell <code>707</code> string <code>\"Cavern of the Incarnate\"</code> sStartError <code>708</code> string <code>\"Cannot start in an empty interior cell!\"</code> sStartCellError <code>709</code> string <code>\"Starting interior cell \"Cavern of the Incarnate\" not found!\"</code> sAdmire <code>710</code> string <code>\"Admire\"</code> sIntimidate <code>711</code> string <code>\"Intimidate\"</code> sTaunt <code>712</code> string <code>\"Taunt\"</code> sBribe 10 Gold <code>713</code> string <code>\"Bribe 10 Gold\"</code> sBribe10Gold <code>713</code> string <code>\"Bribe 10 Gold\"</code> sBribe100Gold <code>714</code> string <code>\"Bribe 100 Gold\"</code> sBribe 100 Gold <code>714</code> string <code>\"Bribe 100 Gold\"</code> sBribe1000Gold <code>715</code> string <code>\"Bribe 1000 Gold\"</code> sBribe 1000 Gold <code>715</code> string <code>\"Bribe 1000 Gold\"</code> sPersuasionMenuTitle <code>716</code> string <code>\"Persuasion\"</code> sFast <code>717</code> string <code>\"Fast\"</code> sSlow <code>718</code> string <code>\"Slow\"</code> sBestAttack <code>719</code> string <code>\"Always Use Best Attack\"</code> sSubtitles <code>720</code> string <code>\"Subtitles\"</code> sMouseFlip <code>721</code> string <code>\"Invert Y Axis\"</code> sCursorOff <code>722</code> string <code>\"Crosshair\"</code> sEnableJoystick <code>723</code> string <code>\"Enable Joystick\"</code> sXStrafe <code>724</code> string <code>\"X-Axis Movement\"</code> sStrafe <code>725</code> string <code>\"Strafe\"</code> sTurn <code>726</code> string <code>\"Turn\"</code> sMouseWheelUpShort <code>727</code> string <code>\"MWheel Up\"</code> sMouseWheelDownShort <code>728</code> string <code>\"MWheel Down\"</code> sMouse <code>729</code> string <code>\"Mouse\"</code> sJoystickShort <code>730</code> string <code>\"Joy\"</code> sJoystickHatShort <code>731</code> string <code>\"JHat\"</code> sPickUp <code>732</code> string <code>\"Take\"</code> sItemName <code>733</code> string <code>\"Item Name\"</code> sNoName <code>734</code> string <code>\"NO NAME GIVEN!\"</code> sItem <code>735</code> string <code>\"Item\"</code> sRaceMenu1 <code>736</code> string <code>\"Appearance\"</code> sRaceMenu2 <code>737</code> string <code>\"Change Sex\"</code> sRaceMenu3 <code>738</code> string <code>\"Change Face\"</code> sRaceMenu4 <code>739</code> string <code>\"Change Hair\"</code> sRaceMenu5 <code>740</code> string <code>\"Race\"</code> sRaceMenu6 <code>741</code> string <code>\"Race Description\"</code> sRaceMenu7 <code>742</code> string <code>\"Specials\"</code> sRestMenu1 <code>743</code> string <code>\"How many hours?\"</code> sRestMenu2 <code>744</code> string <code>\"Hours\"</code> sRestMenu3 <code>745</code> string <code>\"REST\"</code> sRestMenu4 <code>746</code> string <code>\"You can't rest right now.\"</code> fRestMagicMult <code>747</code> float <code>0.15</code> sSaveMenu1 <code>748</code> string <code>\"New Save Game\"</code> sServiceRepairTitle <code>749</code> string <code>\"Repair Service Menu\"</code> sServiceTravelTitle <code>750</code> string <code>\"Travel\"</code> sServiceTrainingTitle <code>751</code> string <code>\"Training\"</code> sServiceTrainingWords <code>752</code> string <code>\"I can teach nothing more about that skill\"</code> sServiceSpellsTitle <code>753</code> string <code>\"Spells\"</code> sSkillsMenu1 <code>754</code> string <code>\"Choose a Skill\"</code> sBonusSkillTitle <code>755</code> string <code>\"Skill Bonus\"</code> sSpecializationMenu1 <code>756</code> string <code>\"Choose a Specialization\"</code> sSpellmakingMenuTitle <code>757</code> string <code>\"Spellmaking\"</code> sSpellmakingMenu1 <code>758</code> string <code>\"Spell Chance\"</code> sSpellmakingHelp1 <code>759</code> string <code>\"Name you give the spell.\"</code> sSpellmakingHelp2 <code>760</code> string <code>\"Amount of Magika one cast of the spell will cost\"</code> sSpellmakingHelp3 <code>761</code> string <code>\"The chance you have to cast the spell at your current skill level\"</code> sSpellmakingHelp4 <code>762</code> string <code>\"How much gold the spell will cost you.\"</code> sSpellmakingHelp5 <code>763</code> string <code>\"Magic effects you know that you can add to a spell\"</code> sSpellmakingHelp6 <code>764</code> string <code>\"Current effects on the spell\"</code> sKilledEssential <code>765</code> string <code>\"With this character's death, the thread of prophecy is severed. Restore a saved game to restore the weave of fate, or persist in the doomed world you have created.\"</code> sCrimeMessage <code>766</code> string <code>\"Your crime has been reported!\"</code> sPotionSuccess <code>767</code> string <code>\"You created a potion\"</code> sMagicItem <code>768</code> string <code>\"Magic Items\"</code> sMagnitudeDes <code>769</code> string <code>\"The range of a spells power\"</code> sAreaDes <code>770</code> string <code>\"The radius the spell attempt to affect\"</code> sDurationDes <code>771</code> string <code>\"The length a spell lasts\"</code> sRangeDes <code>772</code> string <code>\"What the spell is directed at such as yourself, a target or who you touch\"</code> sCrimeHelp <code>773</code> string <code>\"The penalty you must pay for your crimes, if caught.\"</code> sSoulGem <code>774</code> string <code>\"Soul\"</code> sCastCost <code>775</code> string <code>\"Cast Cost\"</code> sTravelServiceTitle <code>776</code> string <code>\"Select destination\"</code> sSpellServiceTitle <code>777</code> string <code>\"Select spell to buy\"</code> sRepairServiceTitle <code>778</code> string <code>\"Select item to repair\"</code> sTrainingServiceTitle <code>779</code> string <code>\"Select skill to train\"</code> sMortar <code>780</code> string <code>\"Mortar\"</code> sCalcinator <code>781</code> string <code>\"Calcinator\"</code> sAlembic <code>782</code> string <code>\"Alembic\"</code> sRetort <code>783</code> string <code>\"Retort\"</code> sQuestionMark <code>784</code> string <code>\"?\"</code> s3dAudio <code>785</code> string <code>\"3D Audio\"</code> s3dHardware <code>786</code> string <code>\"Hardware Accelerated\"</code> s3dSoftware <code>787</code> string <code>\"Software Mode\"</code> sYourGold <code>788</code> string <code>\"YOUR GOLD\"</code> sSellerGold <code>789</code> string <code>\"SELLER GOLD\"</code> sMaxSale <code>790</code> string <code>\"Max Sale\"</code> sTotalCost <code>791</code> string <code>\"TOTAL COST\"</code> sTotalSold <code>792</code> string <code>\"TOTAL SOLD\"</code> sOffer <code>793</code> string <code>\"Offer\"</code> sLess <code>794</code> string <code>\"Less\"</code> sMore <code>795</code> string <code>\"More\"</code> sInventory <code>796</code> string <code>\"Inventory\"</code> sBookPageOne <code>797</code> string <code>\"1\"</code> sBookPageTwo <code>798</code> string <code>\"2\"</code> sDisposeofCorpse <code>799</code> string <code>\"Dispose of Corpse\"</code> sCaughtStealingMessage <code>800</code> string <code>\"Hey he's stealing my stuff!\"</code> sUserDefinedClass <code>801</code> string <code>\"User Defined Class\"</code> sAsk <code>802</code> string <code>\"Ask\"</code> sEnchantItems <code>803</code> string <code>\"Items to Enchant\"</code> sSoulGemsWithSouls <code>804</code> string <code>\"Soul Gems with Souls\"</code> sDoYouWantTo <code>805</code> string <code>\"Do you want to\"</code> sRechargeEnchantment <code>806</code> string <code>\"Recharge Enchanted Item\"</code> sMake <code>807</code> string <code>\"Make an Enchanted Item\"</code> sSell <code>808</code> string <code>\"Sell\"</code> sEquip <code>809</code> string <code>\"Equip\"</code> sDrop <code>810</code> string <code>\"Drop\"</code> sContainer <code>811</code> string <code>\"Container\"</code> sStats <code>812</code> string <code>\"Stats\"</code> sMap <code>813</code> string <code>\"Map\"</code> sCenter <code>814</code> string <code>\"Center\"</code> sSaveMenuHelp01 <code>815</code> string <code>\"th of\"</code> sSaveMenuHelp02 <code>816</code> string <code>\"month\"</code> sSaveMenuHelp03 <code>817</code> string <code>\"day\"</code> sSaveMenuHelp04 <code>818</code> string <code>\"a.m.\"</code> sSaveMenuHelp05 <code>819</code> string <code>\"p.m.\"</code> sSaveMenuHelp06 <code>820</code> string <code>\"Delete Game?\"</code> sDeleteNote <code>821</code> string <code>\"Delete Note?\"</code> sEditNote <code>822</code> string <code>\"Edit Note\"</code> sBlocks <code>823</code> string <code>\"Blocks\"</code> sFileSize <code>824</code> string <code>\"File Size\"</code> sSave <code>825</code> string <code>\"Save\"</code> sDeleteSpell <code>826</code> string <code>\"Delete Spell\"</code> sQuestionDeleteSpell <code>827</code> string <code>\"Are you sure you wish to delete %s?\"</code> sDeleteSpellError <code>828</code> string <code>\"You cannot delete this item from the Magic Menu\"</code> sLocal <code>829</code> string <code>\"Local\"</code> sLoadFailedMessage <code>830</code> string <code>\"Your last load failed. You must load another game or start a new game.\"</code> sShadows <code>831</code> string <code>\"Shadows\"</code> sControlerVibration <code>832</code> string <code>\"Controller Vibration\"</code> sQuanityMenuMessage01 <code>833</code> string <code>\"Amount to Sell\"</code> sQuanityMenuMessage02 <code>834</code> string <code>\"Amount to Buy\"</code> sSex <code>835</code> string <code>\"Sex\"</code> sHair <code>836</code> string <code>\"Hair\"</code> sFace <code>837</code> string <code>\"Face\"</code> sRepairFailed <code>838</code> string <code>\"Your repair failed!\"</code> sRepairSuccess <code>839</code> string <code>\"Your repair succeeded!\"</code> sHeal <code>840</code> string <code>\"Heal\"</code> sgp <code>841</code> string <code>\"gp\"</code> sSetValueMessage01 <code>842</code> string <code>\"The maximum magnitude cannot be less then the minimum magnitude!\"</code> sDelete <code>843</code> string <code>\"Delete\"</code> sVideoWarning <code>844</code> string <code>\"Warning: Video Resolution does not allow shadows.\"</code> sResChangeWarning <code>845</code> string <code>\"Desired resolution not supported by video card.\"</code> sShift <code>846</code> string <code>\"Shift\"</code> sBackspace <code>847</code> string <code>\"Backspace\"</code> sCustomClassName <code>848</code> string <code>\"Adventurer\"</code> sSpace <code>849</code> string <code>\"Space\"</code> sInventorySelectNoItems <code>850</code> string <code>\"You have no items to fill this slot.\"</code> sInventorySelectNoSoul <code>851</code> string <code>\"You have no filled Soul Gems\"</code> sInventorySelectNoIngredients <code>852</code> string <code>\"You have no ingredients\"</code> sDisposeCorpseFail <code>853</code> string <code>\"You can not remove this corpse\"</code> sQuickMenuTitle <code>854</code> string <code>\"Quick Keys\"</code> sQuickMenuInstruc <code>855</code> string <code>\"Click on quick key slot to add a spell, magic item or inventory item\"</code> sQuickMenu1 <code>856</code> string <code>\"Item to QuickKey\"</code> sQuickMenu2 <code>857</code> string <code>\"Inventory Menu Item\"</code> sQuickMenu3 <code>858</code> string <code>\"Magic Menu Item\"</code> sQuickMenu4 <code>859</code> string <code>\"Delete QuickKey Item\"</code> sQuickMenu5 <code>860</code> string <code>\"You no longer have\"</code> sQuickMenu6 <code>861</code> string <code>\"Inventory Items to Quick key\"</code> sMagicSelectTitle <code>862</code> string <code>\"Select a magic to Quick key.\"</code> sNextRank <code>863</code> string <code>\"Next Rank:\"</code> sNeedOneSkill <code>864</code> string <code>\"Need one skill at\"</code> sNeedTwoSkills <code>865</code> string <code>\"Need two skills at\"</code> sand <code>866</code> string <code>\"and\"</code> sOneHanded <code>867</code> string <code>\"One Handed\"</code> sTwoHanded <code>868</code> string <code>\"Two Handed\"</code> sType <code>869</code> string <code>\"Type:\"</code> sAt <code>870</code> string <code>\"At\"</code> sUnequip <code>871</code> string <code>\"Unequip\"</code> sScrolldown <code>872</code> string <code>\"Scroll Down\"</code> sScrollup <code>873</code> string <code>\"Scroll Up\"</code> sSleepInterrupt <code>874</code> string <code>\"Your rest has been interrupted.\"</code> sSoultrapSuccess <code>875</code> string <code>\"Your have trapped a soul\"</code> sCantEquipWeapWarning <code>876</code> string <code>\"Finish your current attack before equipping a new weapon\"</code> sOfferMenuTitle <code>877</code> string <code>\"Offer Menu\"</code> sPowers <code>878</code> string <code>\"Powers\"</code> sBreath <code>879</code> string <code>\"Breath\"</code> sDifficulty <code>880</code> string <code>\"Difficulty\"</code> sEasy <code>881</code> string <code>\"Easy\"</code> sHard <code>882</code> string <code>\"Hard\"</code> sProfitValue <code>883</code> string <code>\"Profit Value\"</code> sCompanionShare <code>884</code> string <code>\"Companion Share\"</code> sCompanionWarningMessage <code>885</code> string <code>\"Your mercenary is poorer now than when he contracted with you.  Your mercenary will quit if you do not give him gold or goods to bring his Profit Value to a positive value.\"</code> sCompanionWarningButtonOne <code>886</code> string <code>\"Let the mercenary quit.\"</code> sCompanionWarningButtonTwo <code>887</code> string <code>\"Return to Companion Share display.\"</code> sAttributeStrength <code>888</code> string <code>\"Strength\"</code> sAttributeIntelligence <code>889</code> string <code>\"Intelligence\"</code> sAttributeWillpower <code>890</code> string <code>\"Willpower\"</code> sAttributeAgility <code>891</code> string <code>\"Agility\"</code> sAttributeSpeed <code>892</code> string <code>\"Speed\"</code> sAttributeEndurance <code>893</code> string <code>\"Endurance\"</code> sAttributePersonality <code>894</code> string <code>\"Personality\"</code> sAttributeLuck <code>895</code> string <code>\"Luck\"</code> sSkillBlock <code>896</code> string <code>\"Block\"</code> sSkillArmorer <code>897</code> string <code>\"Armorer\"</code> sSkillMediumarmor <code>898</code> string <code>\"Medium Armor\"</code> sSkillHeavyarmor <code>899</code> string <code>\"Heavy Armor\"</code> sSkillBluntweapon <code>900</code> string <code>\"Blunt Weapon\"</code> sSkillLongblade <code>901</code> string <code>\"Long Blade\"</code> sSkillAxe <code>902</code> string <code>\"Axe\"</code> sSkillSpear <code>903</code> string <code>\"Spear\"</code> sSkillAthletics <code>904</code> string <code>\"Athletics\"</code> sSkillEnchant <code>905</code> string <code>\"Enchant\"</code> sSkillDestruction <code>906</code> string <code>\"Destruction\"</code> sSkillAlteration <code>907</code> string <code>\"Alteration\"</code> sSkillIllusion <code>908</code> string <code>\"Illusion\"</code> sSkillConjuration <code>909</code> string <code>\"Conjuration\"</code> sSkillMysticism <code>910</code> string <code>\"Mysticism\"</code> sSkillRestoration <code>911</code> string <code>\"Restoration\"</code> sSkillAlchemy <code>912</code> string <code>\"Alchemy\"</code> sSkillUnarmored <code>913</code> string <code>\"Unarmored\"</code> sSkillSecurity <code>914</code> string <code>\"Security\"</code> sSkillSneak <code>915</code> string <code>\"Sneak\"</code> sSkillAcrobatics <code>916</code> string <code>\"Acrobatics\"</code> sSkillLightarmor <code>917</code> string <code>\"Light Armor\"</code> sSkillShortblade <code>918</code> string <code>\"Short Blade\"</code> sSkillMarksman <code>919</code> string <code>\"Marksman\"</code> sSkillMercantile <code>920</code> string <code>\"Mercantile\"</code> sSkillSpeechcraft <code>921</code> string <code>\"Speechcraft\"</code> sSkillHandtohand <code>922</code> string <code>\"Hand-to-hand\"</code> sHealth <code>923</code> string <code>\"Health\"</code> sRace <code>924</code> string <code>\"Race\"</code> sLevel <code>925</code> string <code>\"Level\"</code> sLevels <code>926</code> string <code>\"Levels\"</code> sFaction <code>927</code> string <code>\"Faction\"</code> sBirthSign <code>928</code> string <code>\"Sign\"</code> sBounty <code>929</code> string <code>\"Bounty\"</code> sReputation <code>930</code> string <code>\"Reputation\"</code> sSchool <code>931</code> string <code>\"School\"</code> sSkill <code>932</code> string <code>\"Skill\"</code> sSkillProgress <code>933</code> string <code>\"Progress towards skill increase\"</code> sSkillMaxReached <code>934</code> string <code>\"Maximum proficiency has been reached.\"</code> sLevelProgress <code>935</code> string <code>\"Progress towards level increase\"</code> sMagic <code>936</code> string <code>\"Magicka\"</code> sMagicMenu <code>937</code> string <code>\"Magic\"</code> sFatigue <code>938</code> string <code>\"Fatigue\"</code> sSkillsMenuReputationHelp <code>939</code> string <code>\"Your fame rating in the world of Morrowind.\"</code> sStrDesc <code>940</code> string <code>\"Affects your starting Health, how much you can carry, your maximum Fatigue, and how much damage you do in melee.\"</code> sIntDesc <code>941</code> string <code>\"Determines your maximum amount of Magicka.\"</code> sWilDesc <code>942</code> string <code>\"Affects your ability to resist magic, and your maximum Fatigue.\"</code> sAgiDesc <code>943</code> string <code>\"Affects your ability to dodge and hit targets in melee as well as your maximum Fatigue.\"</code> sSpdDesc <code>944</code> string <code>\"Determines how fast you can move.\"</code> sEndDesc <code>945</code> string <code>\"Affects your starting Health, your Health gain per level, and your maximum Fatigue.\"</code> sPerDesc <code>946</code> string <code>\"Affects your ability to deal with other characters and how much they like you.\"</code> sLucDesc <code>947</code> string <code>\"Affects every action you do in a small way.\"</code> sFatDesc <code>948</code> string <code>\"How tired you are. Low fatigue makes it harder to successfully perform actions.\"</code> sHealthDesc <code>949</code> string <code>\"The amount of damage you can take before you die. Increases every time you gain a level.\"</code> sMagDesc <code>950</code> string <code>\"Used to cast spells. Magicka is naturally restored by resting.\"</code> fWortChanceValue <code>951</code> float <code>15</code> sDefaultCellname <code>952</code> string <code>\"Wilderness\"</code> fMinWalkSpeed <code>953</code> float <code>100</code> fMaxWalkSpeed <code>954</code> float <code>200</code> fMinWalkSpeedCreature <code>955</code> float <code>5</code> fMaxWalkSpeedCreature <code>956</code> float <code>300</code> fEncumberedMoveEffect <code>957</code> float <code>0.3</code> fBaseRunMultiplier <code>958</code> float <code>1.75</code> fAthleticsRunBonus <code>959</code> float <code>1</code> fJumpAcrobaticsBase <code>960</code> float <code>128</code> fJumpAcroMultiplier <code>961</code> float <code>4</code> fJumpEncumbranceBase <code>962</code> float <code>0.5</code> fJumpEncumbranceMultiplier <code>963</code> float <code>1</code> fJumpRunMultiplier <code>964</code> float <code>1</code> fJumpMoveBase <code>965</code> float <code>0.5</code> fJumpMoveMult <code>966</code> float <code>0.5</code> fSwimWalkBase <code>967</code> float <code>0.5</code> fSwimRunBase <code>968</code> float <code>0.5</code> fSwimWalkAthleticsMult <code>969</code> float <code>0.02</code> fSwimRunAthleticsMult <code>970</code> float <code>0.1</code> fSwimHeightScale <code>971</code> float <code>0.9</code> fHoldBreathTime <code>972</code> float <code>20</code> fHoldBreathEndMult <code>973</code> float <code>0.5</code> fSuffocationDamage <code>974</code> float <code>3</code> fMinFlySpeed <code>975</code> float <code>5</code> fMaxFlySpeed <code>976</code> float <code>300</code> fStromWindSpeed <code>977</code> float <code>0.7</code> fStromWalkMult <code>978</code> float <code>0.25</code> fFallDamageDistanceMin <code>979</code> float <code>400</code> fFallDistanceBase <code>980</code> float <code>0</code> fFallDistanceMult <code>981</code> float <code>0.07</code> fFallAcroBase <code>982</code> float <code>0.25</code> fFallAcroMult <code>983</code> float <code>0.01</code> iMaxActivateDist <code>984</code> integer <code>192</code> iMaxInfoDist <code>985</code> integer <code>192</code> fVanityDelay <code>986</code> float <code>30</code> fMaxHeadTrackDistance <code>987</code> float <code>400</code> fInteriorHeadTrackMult <code>988</code> float <code>0.5</code> iHelmWeight <code>989</code> integer <code>5</code> iPauldronWeight <code>990</code> integer <code>10</code> iCuirassWeight <code>991</code> integer <code>30</code> iGauntletWeight <code>992</code> integer <code>5</code> iGreavesWeight <code>993</code> integer <code>15</code> iBootsWeight <code>994</code> integer <code>20</code> iShieldWeight <code>995</code> integer <code>15</code> fLightMaxMod <code>996</code> float <code>0.6</code> fMedMaxMod <code>997</code> float <code>0.9</code> fUnarmoredBase1 <code>998</code> float <code>0.1</code> fUnarmoredBase2 <code>999</code> float <code>0.065</code> iBaseArmorSkill <code>1000</code> integer <code>30</code> fBlockStillBonus <code>1001</code> float <code>1.25</code> fDamageStrengthBase <code>1002</code> float <code>0.5</code> fDamageStrengthMult <code>1003</code> float <code>0.1</code> fSwingBlockBase <code>1004</code> float <code>1</code> fSwingBlockMult <code>1005</code> float <code>1</code> fFatigueBase <code>1006</code> float <code>1.25</code> fFatigueMult <code>1007</code> float <code>0.5</code> fFatigueReturnBase <code>1008</code> float <code>2.5</code> fFatigueReturnMult <code>1009</code> float <code>0.02</code> fEndFatigueMult <code>1010</code> float <code>0.04</code> fFatigueAttackBase <code>1011</code> float <code>2</code> fFatigueAttackMult <code>1012</code> float <code>0</code> fWeaponFatigueMult <code>1013</code> float <code>0.25</code> fFatigueBlockBase <code>1014</code> float <code>4</code> fFatigueBlockMult <code>1015</code> float <code>0</code> fWeaponFatigueBlockMult <code>1016</code> float <code>1</code> fFatigueRunBase <code>1017</code> float <code>5</code> fFatigueRunMult <code>1018</code> float <code>2</code> fFatigueJumpBase <code>1019</code> float <code>5</code> fFatigueJumpMult <code>1020</code> float <code>0</code> fFatigueSwimWalkBase <code>1021</code> float <code>2.5</code> fFatigueSwimRunBase <code>1022</code> float <code>7</code> fFatigueSwimWalkMult <code>1023</code> float <code>0</code> fFatigueSwimRunMult <code>1024</code> float <code>0</code> fFatigueSneakBase <code>1025</code> float <code>1.5</code> fFatigueSneakMult <code>1026</code> float <code>1.5</code> fMinHandToHandMult <code>1027</code> float <code>0.1</code> fMaxHandToHandMult <code>1028</code> float <code>0.5</code> fHandtoHandHealthPer <code>1029</code> float <code>0.1</code> fCombatInvisoMult <code>1030</code> float <code>0.2</code> fCombatKODamageMult <code>1031</code> float <code>1.5</code> fCombatCriticalStrikeMult <code>1032</code> float <code>4</code> iBlockMinChance <code>1033</code> integer <code>10</code> iBlockMaxChance <code>1034</code> integer <code>50</code> fLevelUpHealthEndMult <code>1035</code> float <code>0.1</code> fSoulGemMult <code>1036</code> float <code>3</code> fEffectCostMult <code>1037</code> float <code>0.5</code> fSpellPriceMult <code>1038</code> float <code>2</code> fFatigueSpellBase <code>1039</code> float <code>0</code> fFatigueSpellMult <code>1040</code> float <code>0</code> fFatigueSpellCostMult <code>1041</code> float <code>0</code> fPotionStrengthMult <code>1042</code> float <code>0.5</code> fPotionT1MagMult <code>1043</code> float <code>1.5</code> fPotionT1DurMult <code>1044</code> float <code>0.5</code> fPotionMinUsefulDuration <code>1045</code> float <code>20</code> fPotionT4BaseStrengthMult <code>1046</code> float <code>20</code> fPotionT4EquipStrengthMult <code>1047</code> float <code>12</code> fIngredientMult <code>1048</code> float <code>1</code> fMagicItemCostMult <code>1049</code> float <code>1</code> fMagicItemPriceMult <code>1050</code> float <code>1</code> fMagicItemOnceMult <code>1051</code> float <code>1</code> fMagicItemUsedMult <code>1052</code> float <code>1</code> fMagicItemStrikeMult <code>1053</code> float <code>1</code> fMagicItemConstantMult <code>1054</code> float <code>1</code> fEnchantmentMult <code>1055</code> float <code>0.1</code> fEnchantmentChanceMult <code>1056</code> float <code>3</code> fPCbaseMagickaMult <code>1057</code> float <code>1</code> fNPCbaseMagickaMult <code>1058</code> float <code>2</code> fAutoSpellChance <code>1059</code> float <code>80</code> fAutoPCSpellChance <code>1060</code> float <code>50</code> iAutoSpellTimesCanCast <code>1061</code> integer <code>3</code> iAutoSpellAttSkillMin <code>1062</code> integer <code>70</code> iAutoSpellAlterationMax <code>1063</code> integer <code>5</code> iAutoSpellConjurationMax <code>1064</code> integer <code>2</code> iAutoSpellDestructionMax <code>1065</code> integer <code>5</code> iAutoSpellIllusionMax <code>1066</code> integer <code>5</code> iAutoSpellMysticismMax <code>1067</code> integer <code>5</code> iAutoSpellRestorationMax <code>1068</code> integer <code>5</code> iAutoPCSpellMax <code>1069</code> integer <code>100</code> iAutoRepFacMod <code>1070</code> integer <code>2</code> iAutoRepLevMod <code>1071</code> integer <code>0</code> iMagicItemChargeOnce <code>1072</code> integer <code>1</code> iMagicItemChargeConst <code>1073</code> integer <code>10</code> iMagicItemChargeUse <code>1074</code> integer <code>5</code> iMagicItemChargeStrike <code>1075</code> integer <code>10</code> iMonthsToRespawn <code>1076</code> integer <code>4</code> fCorpseClearDelay <code>1077</code> float <code>72</code> fCorpseRespawnDelay <code>1078</code> float <code>72</code> fBarterGoldResetDelay <code>1079</code> float <code>24</code> fEncumbranceStrMult <code>1080</code> float <code>5</code> fPickLockMult <code>1081</code> float <code>-1</code> fTrapCostMult <code>1082</code> float <code>0</code> fMessageTimePerChar <code>1083</code> float <code>0.1</code> fMagicItemRechargePerSecond <code>1084</code> float <code>0.05</code> i1stPersonSneakDelta <code>1085</code> integer <code>10</code> iBarterSuccessDisposition <code>1086</code> integer <code>1</code> iBarterFailDisposition <code>1087</code> integer <code>-1</code> iLevelupTotal <code>1088</code> integer <code>10</code> iLevelupMajorMult <code>1089</code> integer <code>1</code> iLevelupMinorMult <code>1090</code> integer <code>1</code> iLevelupMajorMultAttribute <code>1091</code> integer <code>1</code> iLevelupMinorMultAttribute <code>1092</code> integer <code>1</code> iLevelupMiscMultAttriubte <code>1093</code> integer <code>1</code> iLevelupSpecialization <code>1094</code> integer <code>1</code> iLevelUp01Mult <code>1095</code> integer <code>2</code> iLevelUp02Mult <code>1096</code> integer <code>2</code> iLevelUp03Mult <code>1097</code> integer <code>2</code> iLevelUp04Mult <code>1098</code> integer <code>2</code> iLevelUp05Mult <code>1099</code> integer <code>3</code> iLevelUp06Mult <code>1100</code> integer <code>3</code> iLevelUp07Mult <code>1101</code> integer <code>3</code> iLevelUp08Mult <code>1102</code> integer <code>4</code> iLevelUp09Mult <code>1103</code> integer <code>4</code> iLevelUp10Mult <code>1104</code> integer <code>5</code> iSoulAmountForConstantEffect <code>1105</code> integer <code>400</code> fConstantEffectMult <code>1106</code> float <code>15</code> fEnchantmentConstantDurationMult <code>1107</code> float <code>100</code> fEnchantmentConstantChanceMult <code>1108</code> float <code>0.5</code> fWeaponDamageMult <code>1109</code> float <code>0.1</code> fSeriousWoundMult <code>1110</code> float <code>0</code> fKnockDownMult <code>1111</code> float <code>0.5</code> iKnockDownOddsBase <code>1112</code> integer <code>50</code> iKnockDownOddsMult <code>1113</code> integer <code>50</code> fCombatArmorMinMult <code>1114</code> float <code>0.25</code> fHandToHandReach <code>1115</code> float <code>1</code> fVoiceIdleOdds <code>1116</code> float <code>10</code> iVoiceAttackOdds <code>1117</code> integer <code>10</code> iVoiceHitOdds <code>1118</code> integer <code>30</code> fProjectileMinSpeed <code>1119</code> float <code>400</code> fProjectileMaxSpeed <code>1120</code> float <code>3000</code> fThrownWeaponMinSpeed <code>1121</code> float <code>300</code> fThrownWeaponMaxSpeed <code>1122</code> float <code>1000</code> fTargetSpellMaxSpeed <code>1123</code> float <code>1000</code> fProjectileThrownStoreChance <code>1124</code> float <code>25</code> iPickMinChance <code>1125</code> integer <code>5</code> iPickMaxChance <code>1126</code> integer <code>75</code> fDispRaceMod <code>1127</code> float <code>5</code> fDispPersonalityMult <code>1128</code> float <code>0.5</code> fDispPersonalityBase <code>1129</code> float <code>50</code> fDispFactionMod <code>1130</code> float <code>3</code> fDispFactionRankBase <code>1131</code> float <code>1</code> fDispFactionRankMult <code>1132</code> float <code>0.5</code> fDispCrimeMod <code>1133</code> float <code>0</code> fDispDiseaseMod <code>1134</code> float <code>-10</code> iDispAttackMod <code>1135</code> integer <code>-50</code> fDispWeaponDrawn <code>1136</code> float <code>-5</code> fDispBargainSuccessMod <code>1137</code> float <code>1</code> fDispBargainFailMod <code>1138</code> float <code>-1</code> fDispPickPocketMod <code>1139</code> float <code>-25</code> iDaysinPrisonMod <code>1140</code> integer <code>100</code> fDispAttacking <code>1141</code> float <code>-10</code> fDispStealing <code>1142</code> float <code>-0.5</code> iDispTresspass <code>1143</code> integer <code>-20</code> iDispKilling <code>1144</code> integer <code>-50</code> iTrainingMod <code>1145</code> integer <code>10</code> iAlchemyMod <code>1146</code> integer <code>2</code> fBargainOfferBase <code>1147</code> float <code>50</code> fBargainOfferMulti <code>1148</code> float <code>-4</code> fDispositionMod <code>1149</code> float <code>1</code> fPersonalityMod <code>1150</code> float <code>5</code> fLuckMod <code>1151</code> float <code>10</code> fReputationMod <code>1152</code> float <code>1</code> fLevelMod <code>1153</code> float <code>5</code> fBribe10Mod <code>1154</code> float <code>35</code> fBribe100Mod <code>1155</code> float <code>75</code> fBribe1000Mod <code>1156</code> float <code>150</code> fPerDieRollMult <code>1157</code> float <code>0.3</code> fPerTempMult <code>1158</code> float <code>1</code> iPerMinChance <code>1159</code> integer <code>5</code> iPerMinChange <code>1160</code> integer <code>10</code> fSpecialSkillBonus <code>1161</code> float <code>0.8</code> fMajorSkillBonus <code>1162</code> float <code>0.75</code> fMinorSkillBonus <code>1163</code> float <code>1</code> fMiscSkillBonus <code>1164</code> float <code>1.25</code> iAlarmKilling <code>1165</code> integer <code>90</code> iAlarmAttack <code>1166</code> integer <code>50</code> iAlarmStealing <code>1167</code> integer <code>1</code> iAlarmPickPocket <code>1168</code> integer <code>20</code> iAlarmTresspass <code>1169</code> integer <code>5</code> fAlarmRadius <code>1170</code> float <code>2000</code> iCrimeKilling <code>1171</code> integer <code>1000</code> iCrimeAttack <code>1172</code> integer <code>40</code> fCrimeStealing <code>1173</code> float <code>1</code> iCrimePickPocket <code>1174</code> integer <code>25</code> iCrimeTresspass <code>1175</code> integer <code>5</code> iCrimeThreshold <code>1176</code> integer <code>1000</code> iCrimeThresholdMultiplier <code>1177</code> integer <code>10</code> fCrimeGoldDiscountMult <code>1178</code> float <code>0.5</code> fCrimeGoldTurnInMult <code>1179</code> float <code>0.9</code> iFightAttack <code>1180</code> integer <code>100</code> iFightAttacking <code>1181</code> integer <code>50</code> iFightDistanceBase <code>1182</code> integer <code>20</code> fFightDistanceMultiplier <code>1183</code> float <code>0.005</code> iFightAlarmMult <code>1184</code> integer <code>1</code> fFightDispMult <code>1185</code> float <code>0.2</code> fFightStealing <code>1186</code> float <code>50</code> iFightPickpocket <code>1187</code> integer <code>25</code> iFightTrespass <code>1188</code> integer <code>25</code> iFightKilling <code>1189</code> integer <code>50</code> iFlee <code>1190</code> integer <code>0</code> iGreetDistanceMultiplier <code>1191</code> integer <code>6</code> iGreetDuration <code>1192</code> integer <code>4</code> fGreetDistanceReset <code>1193</code> float <code>512</code> fIdleChanceMultiplier <code>1194</code> float <code>0.75</code> fSneakUseDist <code>1195</code> float <code>500</code> fSneakUseDelay <code>1196</code> float <code>1</code> fSneakDistanceBase <code>1197</code> float <code>0.5</code> fSneakDistanceMultiplier <code>1198</code> float <code>0.002</code> fSneakSpeedMultiplier <code>1199</code> float <code>0.75</code> fSneakViewMult <code>1200</code> float <code>1.5</code> fSneakNoViewMult <code>1201</code> float <code>0.5</code> fSneakSkillMult <code>1202</code> float <code>1</code> fSneakBootMult <code>1203</code> float <code>-1</code> fCombatDistance <code>1204</code> float <code>128</code> fCombatAngleXY <code>1205</code> float <code>0.6666667</code> fCombatAngleZ <code>1206</code> float <code>0.6666667</code> fCombatForceSideAngle <code>1207</code> float <code>0.3333333</code> fCombatTorsoSideAngle <code>1208</code> float <code>0.5</code> fCombatTorsoStartPercent <code>1209</code> float <code>0.3</code> fCombatTorsoStopPercent <code>1210</code> float <code>0.8</code> fCombatBlockLeftAngle <code>1211</code> float <code>-1</code> fCombatBlockRightAngle <code>1212</code> float <code>0.3333333</code> fCombatDelayCreature <code>1213</code> float <code>0.1</code> fCombatDelayNPC <code>1214</code> float <code>0.1</code> sTargetCriticalStrike <code>1215</code> string <code>\"Critical Damage!\"</code> fAIMeleeWeaponMult <code>1216</code> float <code>2</code> fAIRangeMeleeWeaponMult <code>1217</code> float <code>5</code> fAIMagicSpellMult <code>1218</code> float <code>3</code> fAIRangeMagicSpellMult <code>1219</code> float <code>5</code> fAIMeleeArmorMult <code>1220</code> float <code>1</code> fAIMeleeSummWeaponMult <code>1221</code> float <code>1</code> fAIFleeHealthMult <code>1222</code> float <code>7</code> fAIFleeFleeMult <code>1223</code> float <code>0.3</code> fPickPocketMod <code>1224</code> float <code>0.3</code> fSleepRandMod <code>1225</code> float <code>0.25</code> fSleepRestMod <code>1226</code> float <code>0.3</code> iNumberCreatures <code>1227</code> integer <code>1</code> fAudioDefaultMinDistance <code>1228</code> float <code>5</code> fAudioDefaultMaxDistance <code>1229</code> float <code>40</code> fAudioVoiceDefaultMinDistance <code>1230</code> float <code>10</code> fAudioVoiceDefaultMaxDistance <code>1231</code> float <code>60</code> fAudioMinDistanceMult <code>1232</code> float <code>20</code> fAudioMaxDistanceMult <code>1233</code> float <code>50</code> fNPCHealthBarTime <code>1234</code> float <code>3</code> fNPCHealthBarFade <code>1235</code> float <code>0.5</code> fDifficultyMult <code>1236</code> float <code>5</code> fWereWolfRunMult <code>1237</code> float <code>1.3</code> fWereWolfSilverWeaponDamageMult <code>1238</code> float <code>2</code> iWereWolfBounty <code>1239</code> integer <code>1000</code> fWereWolfStrength <code>1240</code> float <code>150</code> fWereWolfAgility <code>1241</code> float <code>150</code> fWereWolfEndurance <code>1242</code> float <code>150</code> fWereWolfSpeed <code>1243</code> float <code>90</code> fWereWolfHandtoHand <code>1244</code> float <code>100</code> fWereWolfUnarmored <code>1245</code> float <code>100</code> iWereWolfLevelToAttack <code>1246</code> integer <code>20</code> iWereWolfFightMod <code>1247</code> integer <code>100</code> iWereWolfFleeMod <code>1248</code> integer <code>100</code> fWereWolfAthletics <code>1249</code> float <code>50</code> fWereWolfAcrobatics <code>1250</code> float <code>80</code> fWereWolfHealth <code>1251</code> float <code>2</code> fWereWolfFatigue <code>1252</code> float <code>400</code> fWereWolfMagicka <code>1253</code> float <code>100</code> fWereWolfIntellegence <code>1254</code> float <code>0</code> fWereWolfWillPower <code>1255</code> float <code>0</code> fWereWolfPersonality <code>1256</code> float <code>0</code> fWereWolfLuck <code>1257</code> float <code>25</code> fWereWolfBlock <code>1258</code> float <code>0</code> fWereWolfArmorer <code>1259</code> float <code>0</code> fWereWolfMediumArmor <code>1260</code> float <code>0</code> fWereWolfHeavyArmor <code>1261</code> float <code>0</code> fWereWolfBluntWeapon <code>1262</code> float <code>0</code> fWereWolfLongBlade <code>1263</code> float <code>0</code> fWereWolfAxe <code>1264</code> float <code>0</code> fWereWolfSpear <code>1265</code> float <code>0</code> fWereWolfDestruction <code>1266</code> float <code>0</code> fWereWolfAlteration <code>1267</code> float <code>0</code> fWereWolfIllusion <code>1268</code> float <code>0</code> fWereWolfConjuration <code>1269</code> float <code>0</code> fWereWolfMysticism <code>1270</code> float <code>0</code> fWereWolfRestoration <code>1271</code> float <code>0</code> fWereWolfEnchant <code>1272</code> float <code>0</code> fWereWolfAlchemy <code>1273</code> float <code>0</code> fWereWolfSecurity <code>1274</code> float <code>0</code> fWereWolfSneak <code>1275</code> float <code>95</code> fWereWolfLightArmor <code>1276</code> float <code>0</code> fWereWolfShortBlade <code>1277</code> float <code>0</code> fWereWolfMarksman <code>1278</code> float <code>0</code> fWereWolfMerchantile <code>1279</code> float <code>0</code> fWereWolfSpeechcraft <code>1280</code> float <code>0</code> fCombatDistanceWerewolfMod <code>1281</code> float <code>0.3</code> fFleeDistance <code>1282</code> float <code>3000</code> sEffectWaterBreathing <code>1283</code> string <code>\"Water Breathing\"</code> sEffectSwiftSwim <code>1284</code> string <code>\"Swift Swim\"</code> sEffectWaterWalking <code>1285</code> string <code>\"Water Walking\"</code> sEffectShield <code>1286</code> string <code>\"Shield\"</code> sEffectFireShield <code>1287</code> string <code>\"Fire Shield\"</code> sEffectLightningShield <code>1288</code> string <code>\"Lightning Shield\"</code> sEffectFrostShield <code>1289</code> string <code>\"Frost Shield\"</code> sEffectBurden <code>1290</code> string <code>\"Burden\"</code> sEffectFeather <code>1291</code> string <code>\"Feather\"</code> sEffectJump <code>1292</code> string <code>\"Jump\"</code> sEffectLevitate <code>1293</code> string <code>\"Levitate\"</code> sEffectSlowFall <code>1294</code> string <code>\"SlowFall\"</code> sEffectLock <code>1295</code> string <code>\"Lock\"</code> sEffectOpen <code>1296</code> string <code>\"Open\"</code> sEffectFireDamage <code>1297</code> string <code>\"Fire Damage\"</code> sEffectShockDamage <code>1298</code> string <code>\"Shock Damage\"</code> sEffectFrostDamage <code>1299</code> string <code>\"Frost Damage\"</code> sEffectDrainAttribute <code>1300</code> string <code>\"Drain Attribute\"</code> sEffectDrainHealth <code>1301</code> string <code>\"Drain Health\"</code> sEffectDrainSpellpoints <code>1302</code> string <code>\"Drain Magicka\"</code> sEffectDrainFatigue <code>1303</code> string <code>\"Drain Fatigue\"</code> sEffectDrainSkill <code>1304</code> string <code>\"Drain Skill\"</code> sEffectDamageAttribute <code>1305</code> string <code>\"Damage Attribute\"</code> sEffectDamageHealth <code>1306</code> string <code>\"Damage Health\"</code> sEffectDamageMagicka <code>1307</code> string <code>\"Damage Magicka\"</code> sEffectDamageFatigue <code>1308</code> string <code>\"Damage Fatigue\"</code> sEffectDamageSkill <code>1309</code> string <code>\"Damage Skill\"</code> sEffectPoison <code>1310</code> string <code>\"Poison\"</code> sEffectWeaknessToFire <code>1311</code> string <code>\"Weakness to Fire\"</code> sEffectWeaknessToFrost <code>1312</code> string <code>\"Weakness to Frost\"</code> sEffectWeaknessToShock <code>1313</code> string <code>\"Weakness to Shock\"</code> sEffectWeaknessToMagicka <code>1314</code> string <code>\"Weakness to Magicka\"</code> sEffectWeaknessToCommonDisease <code>1315</code> string <code>\"Weakness to Common Disease\"</code> sEffectWeaknessToBlightDisease <code>1316</code> string <code>\"Weakness to Blight Disease\"</code> sEffectWeaknessToCorprusDisease <code>1317</code> string <code>\"Weakness to Corprus Disease\"</code> sEffectWeaknessToPoison <code>1318</code> string <code>\"Weakness to Poison\"</code> sEffectWeaknessToNormalWeapons <code>1319</code> string <code>\"Weakness to Normal Weapons\"</code> sEffectDisintegrateWeapon <code>1320</code> string <code>\"Disintegrate Weapon\"</code> sEffectDisintegrateArmor <code>1321</code> string <code>\"Disintegrate Armor\"</code> sEffectInvisibility <code>1322</code> string <code>\"Invisibility\"</code> sEffectChameleon <code>1323</code> string <code>\"Chameleon\"</code> sEffectLight <code>1324</code> string <code>\"Light\"</code> sEffectSanctuary <code>1325</code> string <code>\"Sanctuary\"</code> sEffectNightEye <code>1326</code> string <code>\"Night Eye\"</code> sEffectCharm <code>1327</code> string <code>\"Charm\"</code> sEffectParalyze <code>1328</code> string <code>\"Paralyze\"</code> sEffectSilence <code>1329</code> string <code>\"Silence\"</code> sEffectBlind <code>1330</code> string <code>\"Blind\"</code> sEffectSound <code>1331</code> string <code>\"Sound\"</code> sEffectCalmHumanoid <code>1332</code> string <code>\"Calm Humanoid\"</code> sEffectCalmCreature <code>1333</code> string <code>\"Calm Creature\"</code> sEffectFrenzyHumanoid <code>1334</code> string <code>\"Frenzy Humanoid\"</code> sEffectFrenzyCreature <code>1335</code> string <code>\"Frenzy Creature\"</code> sEffectDemoralizeHumanoid <code>1336</code> string <code>\"Demoralize Humanoid\"</code> sEffectDemoralizeCreature <code>1337</code> string <code>\"Demoralize Creature\"</code> sEffectRallyHumanoid <code>1338</code> string <code>\"Rally Humanoid\"</code> sEffectRallyCreature <code>1339</code> string <code>\"Rally Creature\"</code> sEffectDispel <code>1340</code> string <code>\"Dispel\"</code> sEffectSoultrap <code>1341</code> string <code>\"Soultrap\"</code> sEffectTelekinesis <code>1342</code> string <code>\"Telekinesis\"</code> sEffectMark <code>1343</code> string <code>\"Mark\"</code> sEffectRecall <code>1344</code> string <code>\"Recall\"</code> sEffectDivineIntervention <code>1345</code> string <code>\"Divine Intervention\"</code> sEffectAlmsiviIntervention <code>1346</code> string <code>\"Almsivi Intervention\"</code> sEffectDetectAnimal <code>1347</code> string <code>\"Detect Animal\"</code> sEffectDetectEnchantment <code>1348</code> string <code>\"Detect Enchantment\"</code> sEffectDetectKey <code>1349</code> string <code>\"Detect Key\"</code> sEffectSpellAbsorption <code>1350</code> string <code>\"Spell Absorption\"</code> sEffectReflect <code>1351</code> string <code>\"Reflect\"</code> sEffectCureCommonDisease <code>1352</code> string <code>\"Cure Common Disease\"</code> sEffectCureBlightDisease <code>1353</code> string <code>\"Cure Blight Disease\"</code> sEffectCureCorprusDisease <code>1354</code> string <code>\"Cure Corprus Disease\"</code> sEffectCurePoison <code>1355</code> string <code>\"Cure Poison\"</code> sEffectCureParalyzation <code>1356</code> string <code>\"Cure Paralyzation\"</code> sEffectRestoreAttribute <code>1357</code> string <code>\"Restore Attribute\"</code> sEffectRestoreHealth <code>1358</code> string <code>\"Restore Health\"</code> sEffectRestoreSpellPoints <code>1359</code> string <code>\"Restore Magicka\"</code> sEffectRestoreFatigue <code>1360</code> string <code>\"Restore Fatigue\"</code> sEffectRestoreSkill <code>1361</code> string <code>\"Restore Skill\"</code> sEffectFortifyAttribute <code>1362</code> string <code>\"Fortify Attribute\"</code> sEffectFortifyHealth <code>1363</code> string <code>\"Fortify Health\"</code> sEffectFortifySpellpoints <code>1364</code> string <code>\"Fortify Magicka\"</code> sEffectFortifyFatigue <code>1365</code> string <code>\"Fortify Fatigue\"</code> sEffectFortifySkill <code>1366</code> string <code>\"Fortify Skill\"</code> sEffectFortifyMagickaMultiplier <code>1367</code> string <code>\"Fortify Maximum Magicka\"</code> sEffectAbsorbAttribute <code>1368</code> string <code>\"Absorb Attribute\"</code> sEffectAbsorbHealth <code>1369</code> string <code>\"Absorb Health\"</code> sEffectAbsorbSpellPoints <code>1370</code> string <code>\"Absorb Magicka\"</code> sEffectAbsorbFatigue <code>1371</code> string <code>\"Absorb Fatigue\"</code> sEffectAbsorbSkill <code>1372</code> string <code>\"Absorb Skill\"</code> sEffectResistFire <code>1373</code> string <code>\"Resist Fire\"</code> sEffectResistFrost <code>1374</code> string <code>\"Resist Frost\"</code> sEffectResistShock <code>1375</code> string <code>\"Resist Shock\"</code> sEffectResistMagicka <code>1376</code> string <code>\"Resist Magicka\"</code> sEffectResistCommonDisease <code>1377</code> string <code>\"Resist Common Disease\"</code> sEffectResistBlightDisease <code>1378</code> string <code>\"Resist Blight Disease\"</code> sEffectResistCorprusDisease <code>1379</code> string <code>\"Resist Corprus Disease\"</code> sEffectResistPoison <code>1380</code> string <code>\"Resist Poison\"</code> sEffectResistNormalWeapons <code>1381</code> string <code>\"Resist Normal Weapons\"</code> sEffectResistParalysis <code>1382</code> string <code>\"Resist Paralysis\"</code> sEffectRemoveCurse <code>1383</code> string <code>\"Remove Curse\"</code> sEffectTurnUndead <code>1384</code> string <code>\"Turn Undead\"</code> sEffectSummonScamp <code>1385</code> string <code>\"Summon Scamp\"</code> sEffectSummonClannfear <code>1386</code> string <code>\"Summon Clannfear\"</code> sEffectSummonDaedroth <code>1387</code> string <code>\"Summon Daedroth\"</code> sEffectSummonDremora <code>1388</code> string <code>\"Summon Dremora\"</code> sEffectSummonAncestralGhost <code>1389</code> string <code>\"Summon Ancestral Ghost\"</code> sEffectSummonSkeletalMinion <code>1390</code> string <code>\"Summon Skeletal Minion\"</code> sEffectSummonLeastBonewalker <code>1391</code> string <code>\"Summon Bonewalker\"</code> sEffectSummonGreaterBonewalker <code>1392</code> string <code>\"Summon Greater Bonewalker\"</code> sEffectSummonBonelord <code>1393</code> string <code>\"Summon Bonelord\"</code> sEffectSummonWingedTwilight <code>1394</code> string <code>\"Summon Winged Twilight\"</code> sEffectSummonHunger <code>1395</code> string <code>\"Summon Hunger\"</code> sEffectSummonGoldensaint <code>1396</code> string <code>\"Summon Golden Saint\"</code> sEffectSummonFlameAtronach <code>1397</code> string <code>\"Summon Flame Atronach\"</code> sEffectSummonFrostAtronach <code>1398</code> string <code>\"Summon Frost Atronach\"</code> sEffectSummonStormAtronach <code>1399</code> string <code>\"Summon Storm Atronach\"</code> sEffectFortifyAttackBonus <code>1400</code> string <code>\"Fortify Attack\"</code> sEffectCommandCreatures <code>1401</code> string <code>\"Command Creature\"</code> sEffectCommandHumanoids <code>1402</code> string <code>\"Command Humanoid\"</code> sEffectBoundDagger <code>1403</code> string <code>\"Bound Dagger\"</code> sEffectBoundLongsword <code>1404</code> string <code>\"Bound Longsword\"</code> sEffectBoundMace <code>1405</code> string <code>\"Bound Mace\"</code> sEffectBoundBattleAxe <code>1406</code> string <code>\"Bound Battle Axe\"</code> sEffectBoundSpear <code>1407</code> string <code>\"Bound Spear\"</code> sEffectBoundLongbow <code>1408</code> string <code>\"Bound Longbow\"</code> sEffectExtraSpell <code>1409</code> string <code>\"EXTRA SPELL\"</code> sEffectBoundCuirass <code>1410</code> string <code>\"Bound Cuirass\"</code> sEffectBoundHelm <code>1411</code> string <code>\"Bound Helm\"</code> sEffectBoundBoots <code>1412</code> string <code>\"Bound Boots\"</code> sEffectBoundShield <code>1413</code> string <code>\"Bound Shield\"</code> sEffectBoundGloves <code>1414</code> string <code>\"Bound Gloves\"</code> sEffectCorpus <code>1415</code> string <code>\"Corprus\"</code> sEffectVampirism <code>1416</code> string <code>\"Vampirism\"</code> sEffectSummonCenturionSphere <code>1417</code> string <code>\"Summon Centurion Sphere\"</code> sEffectSunDamage <code>1418</code> string <code>\"Sun Damage\"</code> sEffectStuntedMagicka <code>1419</code> string <code>\"Stunted Magicka\"</code> sEffectSummonFabricant <code>1420</code> string <code>\"Summon Fabricant\"</code> sEffectSummonCreature01 <code>1421</code> string <code>\"Call Wolf\"</code> sEffectSummonCreature02 <code>1422</code> string <code>\"Call Bear\"</code> sEffectSummonCreature03 <code>1423</code> string <code>\"Summon Bonewolf\"</code> sEffectSummonCreature04 <code>1424</code> string <code>\"sEffectSummonCreature04\"</code> sEffectSummonCreature05 <code>1425</code> string <code>\"sEffectSummonCreature05\"</code> sSchoolAlteration <code>1426</code> string <code>\"Alteration\"</code> sSchoolConjuration <code>1427</code> string <code>\"Conjuration\"</code> sSchoolDestruction <code>1428</code> string <code>\"Destruction\"</code> sSchoolIllusion <code>1429</code> string <code>\"Illusion\"</code> sSchoolMysticism <code>1430</code> string <code>\"Mysticism\"</code> sSchoolRestoration <code>1431</code> string <code>\"Restoration\"</code> sTypeSpell <code>1432</code> string <code>\"Spells\"</code> sTypeAbility <code>1433</code> string <code>\"Abilities\"</code> sTypeBlightDisease <code>1434</code> string <code>\"Blight Disease\"</code> sTypeDisease <code>1435</code> string <code>\"Disease\"</code> sTypeCurse <code>1436</code> string <code>\"Curse\"</code> sTypePower <code>1437</code> string <code>\"Powers\"</code> sItemCastOnce <code>1438</code> string <code>\"Cast Once\"</code> sItemCastWhenStrikes <code>1439</code> string <code>\"Cast When Strikes\"</code> sItemCastWhenUsed <code>1440</code> string <code>\"Cast When Used\"</code> sItemCastConstant <code>1441</code> string <code>\"Constant Effect\"</code> sRangeSelf <code>1442</code> string <code>\"Self\"</code> sRangeTouch <code>1443</code> string <code>\"Touch\"</code> sRangeTarget <code>1444</code> string <code>\"Target\"</code> sMagicSkillFail <code>1445</code> string <code>\"You failed casting the spell.\"</code> sMagicInsufficientSP <code>1446</code> string <code>\"You do not have enough Magicka to cast the spell.\"</code> sMagicInsufficientCharge <code>1447</code> string <code>\"Item does not have enough charge.\"</code> sPowerAlreadyUsed <code>1448</code> string <code>\"You already used that power today.\"</code> sMagicInvalidTarget <code>1449</code> string <code>\"Your spell did not get a target.\"</code> sMagicLockSuccess <code>1450</code> string <code>\"Your spell has locked its target.\"</code> sMagicOpenSuccess <code>1451</code> string <code>\"Your spell has unlocked its target.\"</code> sMagicTargetResistsWeapons <code>1452</code> string <code>\"Your weapon has no effect.\"</code> sMagicContractDisease <code>1453</code> string <code>\"You have contracted %s\"</code> fMagicDetectRefreshRate <code>1454</code> float <code>0.5</code> fMagicStartIconBlink <code>1455</code> float <code>3</code> fMagicCreatureCastDelay <code>1456</code> float <code>1.5</code> sMagicScampID <code>1457</code> string <code>\"Scamp_summon\"</code> sMagicClannfearID <code>1458</code> string <code>\"Clannfear_summon\"</code> sMagicDaedrothID <code>1459</code> string <code>\"Daedroth_summon\"</code> sMagicDremoraID <code>1460</code> string <code>\"Dremora_summon\"</code> sMagicAncestralGhostID <code>1461</code> string <code>\"Ancestor_Ghost_summon\"</code> sMagicSkeletalMinionID <code>1462</code> string <code>\"Skeleton_summon\"</code> sMagicLeastBonewalkerID <code>1463</code> string <code>\"Bonewalker_summon\"</code> sMagicGreaterBonewalkerID <code>1464</code> string <code>\"Bonewalker_Greater_summ\"</code> sMagicBonelordID <code>1465</code> string <code>\"Bonelord_summon\"</code> sMagicWingedTwilightID <code>1466</code> string <code>\"Winged Twilight_summon\"</code> sMagicHungerID <code>1467</code> string <code>\"Hunger_summon\"</code> sMagicGoldenSaintID <code>1468</code> string <code>\"Golden Saint_summon\"</code> sMagicFlameAtronachID <code>1469</code> string <code>\"Atronach_Flame_summon\"</code> sMagicFrostAtronachID <code>1470</code> string <code>\"Atronach_Frost_summon\"</code> sMagicStormAtronachID <code>1471</code> string <code>\"Atronach_Storm_summon\"</code> sMagicCenturionSphereID <code>1472</code> string <code>\"centurion_sphere_summon\"</code> sMagicFabricantID <code>1473</code> string <code>\"Fabricant_summon\"</code> sMagicCreature01ID <code>1474</code> string <code>\"BM_wolf_grey_summon\"</code> sMagicCreature02ID <code>1475</code> string <code>\"BM_bear_black_summon\"</code> sMagicCreature03ID <code>1476</code> string <code>\"BM_wolf_bone_summon\"</code> sMagicCreature04ID <code>1477</code> string <code>\"sMagicCreature04ID\"</code> sMagicCreature05ID <code>1478</code> string <code>\"sMagicCreature05ID\"</code> sMagicBoundDaggerID <code>1479</code> string <code>\"Bound_Dagger\"</code> sMagicBoundLongswordID <code>1480</code> string <code>\"Bound_Longsword\"</code> sMagicBoundMaceID <code>1481</code> string <code>\"Bound_Mace\"</code> sMagicBoundBattleAxeID <code>1482</code> string <code>\"Bound_Battle_Axe\"</code> sMagicBoundSpearID <code>1483</code> string <code>\"Bound_Spear\"</code> sMagicBoundLongbowID <code>1484</code> string <code>\"Bound_Longbow\"</code> sMagicBoundCuirassID <code>1485</code> string <code>\"Bound_Cuirass\"</code> sMagicBoundHelmID <code>1486</code> string <code>\"Bound_Helm\"</code> sMagicBoundBootsID <code>1487</code> string <code>\"Bound_Boots\"</code> sMagicBoundShieldID <code>1488</code> string <code>\"Bound_Shield\"</code> sMagicBoundLeftGauntletID <code>1489</code> string <code>\"Bound_Gauntlet_Left\"</code> sMagicBoundRightGauntletID <code>1490</code> string <code>\"Bound_Gauntlet_Right\"</code> fDiseaseXferChance <code>1491</code> float <code>2.5</code> fElementalShieldMult <code>1492</code> float <code>0.1</code> sMagicCorprusWorsens <code>1493</code> string <code>\"Your case of Corprus has worsened.\"</code> sMagicCannotRecast <code>1494</code> string <code>\"You cannot re-cast this spell while it is still in effect.\"</code> fMagicSunBlockedMult <code>1495</code> float <code>0.5</code> sMagicPCResisted <code>1496</code> string <code>\"You resisted magic.\"</code> sMagicTargetResisted <code>1497</code> string <code>\"Target resisted magic.\"</code> sMagicInvalidEffect <code>1498</code> string <code>\"You cannot cast this effect right now.\"</code> sAcrobat <code>1499</code> string <code>\"Acrobat\"</code> sAgent <code>1500</code> string <code>\"Agent\"</code> sArcher <code>1501</code> string <code>\"Archer\"</code> sAssassin <code>1502</code> string <code>\"Assassin\"</code> sBarbarian <code>1503</code> string <code>\"Barbarian\"</code> sBard <code>1504</code> string <code>\"Bard\"</code> sBattlemage <code>1505</code> string <code>\"Battlemage\"</code> sCrusader <code>1506</code> string <code>\"Crusader\"</code> sCustom <code>1507</code> string <code>\"Custom\"</code> sHealer <code>1508</code> string <code>\"Healer\"</code> sKnight <code>1509</code> string <code>\"Knight\"</code> sMage <code>1510</code> string <code>\"Mage\"</code> sMonk <code>1511</code> string <code>\"Monk\"</code> sNightblade <code>1512</code> string <code>\"Nightblade\"</code> sPilgrim <code>1513</code> string <code>\"Pilgrim\"</code> sRogue <code>1514</code> string <code>\"Rogue\"</code> sScout <code>1515</code> string <code>\"Scout\"</code> sSorceror <code>1516</code> string <code>\"Sorcerer\"</code> sSpellsword <code>1517</code> string <code>\"Spellsword\"</code> sThief <code>1518</code> string <code>\"Thief\"</code> sWarrior <code>1519</code> string <code>\"Warrior\"</code> sWitchhunter <code>1520</code> string <code>\"Witchhunter\"</code>"},{"location":"references/inventory-select-filters/","title":"Inventory Select Menu Filters","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.inventorySelectFilter</code> table. For example, <code>tes3.inventorySelectFilter.ingredients</code> has a value of <code>\"ingredients\"</code>.</p> Index Value alembic <code>\"alembic\"</code> calcinator <code>\"calcinator\"</code> enchanted <code>\"enchanted\"</code> ingredients <code>\"ingredients\"</code> mortar <code>\"mortar\"</code> quickUse <code>\"quickUse\"</code> retort <code>\"retort\"</code> soulGemFilled <code>\"soulGemFilled\"</code>"},{"location":"references/inventory-tile-types/","title":"Inventory Tile Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.inventoryTileType</code> table. For example, <code>tes3.inventoryTileType.magicBartered</code> has a value of <code>5</code>.</p> Index Value default <code>0</code> equipped <code>1</code> magic <code>2</code> magicEquipped <code>3</code> bartered <code>4</code> magicBartered <code>5</code>"},{"location":"references/item-sound-states/","title":"Item Sound States","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.itemSoundState</code> table. For example, <code>tes3.itemSoundState.down</code> has a value of <code>1</code>.</p> Index Value up <code>0</code> down <code>1</code> direct <code>2</code>"},{"location":"references/justify-text/","title":"Justify Text","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.justifyText</code> table. For example, <code>tes3.justifyText.right</code> has a value of <code>\"right\"</code>.</p> Index Value center <code>\"center\"</code> left <code>\"left\"</code> right <code>\"right\"</code>"},{"location":"references/key-transitions/","title":"Key Transitions","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.keyTransition</code> table. For example, <code>tes3.keyTransition.up</code> has a value of <code>1</code>.</p> Index Value test <code>0</code> up <code>1</code> down <code>2</code> toggled <code>3</code>"},{"location":"references/keybinds/","title":"Keybinds","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.keybind</code> table. For example, <code>tes3.keybind.quick9</code> has a value of <code>30</code>.</p> Index Value forward <code>0</code> back <code>1</code> left <code>2</code> right <code>3</code> use <code>4</code> activate <code>5</code> readyWeapon <code>6</code> readyMagic <code>7</code> sneak <code>8</code> run <code>9</code> alwaysRun <code>10</code> autoRun <code>11</code> jump <code>12</code> nextWeapon <code>13</code> previousWeapon <code>14</code> nextSpell <code>15</code> previousSpell <code>16</code> togglePOV <code>17</code> menuMode <code>18</code> journal <code>19</code> rest <code>20</code> quickMenu <code>21</code> quick1 <code>22</code> quick2 <code>23</code> quick3 <code>24</code> quick4 <code>25</code> quick5 <code>26</code> quick6 <code>27</code> quick7 <code>28</code> quick8 <code>29</code> quick9 <code>30</code> quick10 <code>31</code> quickSave <code>32</code> quickLoad <code>33</code> escape <code>34</code> console <code>35</code> screenshot <code>36</code> readyMagicMCP <code>37</code>"},{"location":"references/language-codes/","title":"Language Codes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.languageCode</code> table. For example, <code>tes3.languageCode.eng</code> has a value of <code>0</code>.</p> Index Value eng <code>0</code> fra <code>1</code> deu <code>2</code> rus <code>3</code> pol <code>4</code>"},{"location":"references/languages/","title":"Languages","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.language</code> table. For example, <code>tes3.language[0]</code> has a value of <code>\"eng\"</code>.</p> Index Value 0 <code>\"eng\"</code> 2 <code>\"deu\"</code> 1 <code>\"fra\"</code> 3 <code>\"rus\"</code> 4 <code>\"pol\"</code>"},{"location":"references/magic-effect-flags/","title":"Magic Effect Flags","text":"<p>Tip</p> <p>These values are available in Lua with their field access. Instead of manually setting the flags. For example use <code>.targetsSkills</code>. See the Magic Effect type page for more information.</p> Value Meaning 1 Targets skill. 2 Targets attribute. 4 No duration. 8 No magnitude. 16 Harmful. 32 Continuous VFX. 64 Cast self. 128 Cast touch. 256 Cast target. 512 Valid for spellmaking. 1024 Valid for enchanting. 2048 Negative lighting. 4096 Applied once. 8192 Stealth. 16384 Non-recastable. 32768 Illegal daedra. 65536 Unreflectable. 131072 Caster linked."},{"location":"references/magic-effects-modded/","title":"Magic Effects, Modded","text":"<p>These effects build off of the standard magic effects. If you would like to add your effect to the list, consider editing this page online, and submitting your change as a pull request. Alternatively, create an issue to list the information that needs to be added.</p> <p>Warning</p> <p>When registering a new effect ID, both the index and the value must be unique! Two mods cannot use the same magic effect id of <code>420</code>, nor can they both have the index of <code>tes3.effect.summonCreeper</code>.</p> <p>Tip</p> <p>These values are potentially available in Lua by their index in the <code>tes3.effect</code> table. For example, <code>tes3.effect.detectDaedra</code> has a value of <code>336</code>, but only if the Enhanced Detection mod is installed.</p> Index Value Mod banishDaedra 220 Magicka Expanded summonGoblinGrunt 223 Magicka Expanded summonGoblinOfficer 224 Magicka Expanded summonHulkingFabricant 225 Magicka Expanded summonAscendedSleeper 226 Magicka Expanded summonDraugr 227 Magicka Expanded summonLich 228 Magicka Expanded boundClaymore 229 Magicka Expanded boundClub 230 Magicka Expanded boundDaiKatana 231 Magicka Expanded boundKatana 232 Magicka Expanded boundShortSword 233 Magicka Expanded boundStaff 234 Magicka Expanded boundTanto 235 Magicka Expanded boundWakizashi 236 Magicka Expanded boundWarAxe 237 Magicka Expanded boundWarhammer 238 Magicka Expanded boundGreaves 239 Magicka Expanded boundLeftPauldron 240 Magicka Expanded teleportToAldRuhn 241 Magicka Expanded teleportToBalmora 242 Magicka Expanded teleportToEbonheart 243 Magicka Expanded teleportToVivec 244 Magicka Expanded teleportToCaldera 245 Magicka Expanded teleportToGnisis 246 Magicka Expanded teleportToMaarGan 247 Magicka Expanded teleportToMolagMar 248 Magicka Expanded teleportToPelagiad 249 Magicka Expanded teleportToSuran 250 Magicka Expanded teleportToTelMora 251 Magicka Expanded summonOgrim 252 Magicka Expanded summonWarDurzog 253 Magicka Expanded summonSpriggan 254 Magicka Expanded summonCenturionSteam 255 Magicka Expanded summonCenturionProjectile 256 Magicka Expanded summonAshGhoul 257 Magicka Expanded summonAshZombie 258 Magicka Expanded summonAshSlave 259 Magicka Expanded summonCenturionSpider 260 Magicka Expanded summonImperfect 261 Magicka Expanded summonGoblinWarchief 262 Magicka Expanded darkness 263 Magicka Expanded boundRightPauldron 264 Magicka Expanded teleportToAstralPocket 265 The Astral Pocket chrysopoeia 266 Chrysopoeia summonArmorCent 267 Magicka Expanded summonArmorCentChamp 268 Magicka Expanded summonDraugrHsCrl 269 Magicka Expanded summonDraugrLord 270 Magicka Expanded summonDridrea 271 Magicka Expanded summonDridreaMonarch 272 Magicka Expanded summonFrostLich 273 Magicka Expanded summonGiant 274 Magicka Expanded summonGoblinShaman 275 Magicka Expanded summonGreaterLich 276 Magicka Expanded summonLamia 277 Magicka Expanded summonMammoth 278 Magicka Expanded summonMinotaur 279 Magicka Expanded summonMudGolem 280 Magicka Expanded summonParastylus 281 Magicka Expanded summonPlainStrider 282 Magicka Expanded summonRaki 283 Magicka Expanded callSabreCat 284 Magicka Expanded summonSiltStrider 285 Magicka Expanded summonSload 286 Magicka Expanded summonSwampTroll 287 Magicka Expanded summonWelkyndSpirit 288 Magicka Expanded callWereboar 289 Magicka Expanded summonVelk 290 Magicka Expanded summonVermai 291 Magicka Expanded summonTrebataur 292 Magicka Expanded teleportToAkamora 293 Magicka Expanded teleportToFirewatch 294 Magicka Expanded teleportToHelnim 295 Magicka Expanded teleportToNecrom 296 Magicka Expanded teleportToOldEbonheart 297 Magicka Expanded teleportToPortTelvannis 298 Magicka Expanded teleportToAltBosara 299 Magicka Expanded teleportToBalOrya 300 Magicka Expanded teleportToGahSadrith 301 Magicka Expanded teleportToGorne 302 Magicka Expanded teleportToLlothanis 303 Magicka Expanded teleportToMarog 304 Magicka Expanded teleportToMeralag 305 Magicka Expanded teleportToTelAranyon 306 Magicka Expanded teleportToTelMothrivra 307 Magicka Expanded teleportToTelMuthada 308 Magicka Expanded teleportToTelOuada 309 Magicka Expanded teleportToMournhold 310 Magicka Expanded weatherBlizzard 312 Magicka Expanded weatherSnow 313 Magicka Expanded weatherThunderstorm 314 Magicka Expanded weatherAsh 315 Magicka Expanded weatherBlight 316 Magicka Expanded weatherClear 317 Magicka Expanded weatherCloudy 318 Magicka Expanded weatherFoggy 319 Magicka Expanded weatherOvercast 320 Magicka Expanded weatherRain 321 Magicka Expanded thunderbolt 323 Magicka Expanded iceBarrage 324 Magicka Expanded blink 325 Magicka Expanded callWerewolf 326 Magicka Expanded summonAlfiq 327 Magicka Expanded clone 328 Magicka Expanded cloneSource 329 Magicka Expanded mindScan 330 Magicka Expanded mindRip 331 Magicka Expanded soulScrye 332 Magicka Expanded coalesce 333 Magicka Expanded entomb 334 Magicka Expanded permutation 335 Magicka Expanded detectDaedra 336 Enhanced Detection detectAutomaton 337 Enhanced Detection detectHumanoid 338 Enhanced Detection detectDead 339 Enhanced Detection detectUndead 340 Enhanced Detection detectDoor 341 Enhanced Detection detectTrap 342 Enhanced Detection 343 Hircine's Maze magelight 344 MM - Enhanced Light detectAnimalLand 345 Enhanced Detection detectAnimalUnderwater 346 Enhanced Detection dispelLevitate 400 Deeper Dagoth Ur dispelLevitateJavelin 401 Deeper Dagoth Ur slowTime 402 Fortified Molag Mar annihilate 403 Fortified Molag Mar firesOfOblivion 404 Fortified Molag Mar spawnChair 405 Fortified Molag Mar summonCreeper 420 Summon Creeper float 424 3E 427 A Space Odyssey fargothIntervention 424 Fargoth Intervention daedricIntervention 425 Daedric Intervention Spell callIncarnate 426 Call Incarnate summonDarkSeducer 427 OAAB Integrations boundLeggings 429 Bound Leggings for Beasts summonAncestorGuardianPlayer 430 Power Fantasy summonAncestorGuardianNPC 431 Power Fantasy teleport 500 4NM_Magic recharge 501 4NM_Magic repairWeapon 502 4NM_Magic lightTarget 504 4NM_Magic projectileControl 506 4NM_Magic kineticShield 508 4NM_Magic timeShift 510 4NM_Magic chargeFire 511 4NM_Magic chargeShock 513 4NM_Magic chargeVitality 515 4NM_Magic auraFire 516 4NM_Magic auraShock 518 4NM_Magic auraVitality 520 4NM_Magic aoeFire 521 4NM_Magic aoeShock 523 4NM_Magic aoeVitality 525 4NM_Magic runeFire 526 4NM_Magic runeShock 528 4NM_Magic runeVitality 530 4NM_Magic prokFire 531 4NM_Magic prokShock 533 4NM_Magic prokVitality 535 4NM_Magic shotgunFire 536 4NM_Magic shotgunShock 538 4NM_Magic shotgunVitality 540 4NM_Magic dischargeFire 541 4NM_Magic dischargeShock 543 4NM_Magic dischargeVitality 545 4NM_Magic rayFire 546 4NM_Magic rayShock 548 4NM_Magic rayVitality 550 4NM_Magic totemFire 551 4NM_Magic totemShock 553 4NM_Magic totemVitality 555 4NM_Magic empowerFire 556 4NM_Magic empowerShock 558 4NM_Magic empowerVitality 560 4NM_Magic reflectFire 561 4NM_Magic reflectShock 563 4NM_Magic reflectVitality 565 4NM_Magic dash 600 4NM_Magic multiMark 601 Customizable MWSE Multi Mark and Harder Recall kineticStrike 602 4NM_Magic multiRecall 602 Customizable MWSE Multi Mark and Harder Recall bolt 610 Throw It multiMark 701 4NM - Total Gameplay Overhaul pocket 701 Extradimensional Pockets multiRecall 702 4NM - Total Gameplay Overhaul boundarrow 704 Bound Ammo animatedWeapon 711 Animate Weapon Spell enchantDrain 786 Enchant Drain soulRelease 787 Obedient Summons fortifyStrength 790 Class Starting Spells fortifyIntelligence 791 Class Starting Spells fortifyAgility 793 Class Starting Spells fortifyPersonality 796 Class Starting Spells forbidSleep 1201 Vaermina's Quest - Dreams of the Escaped summonCorruptedDouble 1202 Vaermina's Quest - Dreams of the Escaped summonCorruptedDoublePotion 1203 Vaermina's Quest - Dreams of the Escaped summonAshGolem 7700 Atronach Expansion summonBoneGolem 7701 Atronach Expansion summonCrystalGolem 7702 Atronach Expansion summonFleshAtronach 7703 Atronach Expansion summonIronGolem 7704 Atronach Expansion summonSwampMyconid 7705 Atronach Expansion summonTelvanniMyconid 7706 Atronach Expansion sanguineRose 7770 The Sanguine Rose flawedSummonDaedroth 7800 OOAB Grazelands ss20SoulManipulation 8113 Pimp My Shrine - The Daedric Legend of Vernaccus ss20ManipulateSouls 8114 Pimp My Shrine - The Daedric Legend of Vernaccus selfRepair 8500 DRIP - Dynamic Randomised Item Properties npcSoulTrap 10000 Seph's NPC Soul Trapping"},{"location":"references/magic-effects/","title":"Magic Effects","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.effect</code> table. For example, <code>tes3.effect.fortifySkill</code> has a value of <code>83</code>.</p> <p>Note</p> <p>Custom effects can be added, expanding the <code>tes3.effect</code> table. See the Magic Effects, Modded reference page for more information.</p> Index Value waterBreathing <code>0</code> swiftSwim <code>1</code> waterWalking <code>2</code> shield <code>3</code> fireShield <code>4</code> lightningShield <code>5</code> frostShield <code>6</code> burden <code>7</code> feather <code>8</code> jump <code>9</code> levitate <code>10</code> slowFall <code>11</code> lock <code>12</code> open <code>13</code> fireDamage <code>14</code> shockDamage <code>15</code> frostDamage <code>16</code> drainAttribute <code>17</code> drainHealth <code>18</code> drainMagicka <code>19</code> drainFatigue <code>20</code> drainSkill <code>21</code> damageAttribute <code>22</code> damageHealth <code>23</code> damageMagicka <code>24</code> damageFatigue <code>25</code> damageSkill <code>26</code> poison <code>27</code> weaknesstoFire <code>28</code> weaknesstoFrost <code>29</code> weaknesstoShock <code>30</code> weaknesstoMagicka <code>31</code> weaknesstoCommonDisease <code>32</code> weaknesstoBlightDisease <code>33</code> weaknesstoCorprusDisease <code>34</code> weaknesstoPoison <code>35</code> weaknesstoNormalWeapons <code>36</code> disintegrateWeapon <code>37</code> disintegrateArmor <code>38</code> invisibility <code>39</code> chameleon <code>40</code> light <code>41</code> sanctuary <code>42</code> nightEye <code>43</code> charm <code>44</code> paralyze <code>45</code> silence <code>46</code> blind <code>47</code> sound <code>48</code> calmHumanoid <code>49</code> calmCreature <code>50</code> frenzyHumanoid <code>51</code> frenzyCreature <code>52</code> demoralizeHumanoid <code>53</code> demoralizeCreature <code>54</code> rallyHumanoid <code>55</code> rallyCreature <code>56</code> dispel <code>57</code> soultrap <code>58</code> telekinesis <code>59</code> mark <code>60</code> recall <code>61</code> divineIntervention <code>62</code> almsiviIntervention <code>63</code> detectAnimal <code>64</code> detectEnchantment <code>65</code> detectKey <code>66</code> spellAbsorption <code>67</code> reflect <code>68</code> cureCommonDisease <code>69</code> cureBlightDisease <code>70</code> cureCorprusDisease <code>71</code> curePoison <code>72</code> cureParalyzation <code>73</code> restoreAttribute <code>74</code> restoreHealth <code>75</code> restoreMagicka <code>76</code> restoreFatigue <code>77</code> restoreSkill <code>78</code> fortifyAttribute <code>79</code> fortifyHealth <code>80</code> fortifyMagicka <code>81</code> fortifyFatigue <code>82</code> fortifySkill <code>83</code> fortifyMaximumMagicka <code>84</code> absorbAttribute <code>85</code> absorbHealth <code>86</code> absorbMagicka <code>87</code> absorbFatigue <code>88</code> absorbSkill <code>89</code> resistFire <code>90</code> resistFrost <code>91</code> resistShock <code>92</code> resistMagicka <code>93</code> resistCommonDisease <code>94</code> resistBlightDisease <code>95</code> resistCorprusDisease <code>96</code> resistPoison <code>97</code> resistNormalWeapons <code>98</code> resistParalysis <code>99</code> removeCurse <code>100</code> turnUndead <code>101</code> summonScamp <code>102</code> summonClannfear <code>103</code> summonDaedroth <code>104</code> summonDremora <code>105</code> summonAncestralGhost <code>106</code> summonSkeletalMinion <code>107</code> summonBonewalker <code>108</code> summonGreaterBonewalker <code>109</code> summonBonelord <code>110</code> summonWingedTwilight <code>111</code> summonHunger <code>112</code> summonGoldenSaint <code>113</code> summonFlameAtronach <code>114</code> summonFrostAtronach <code>115</code> summonStormAtronach <code>116</code> fortifyAttack <code>117</code> commandCreature <code>118</code> commandHumanoid <code>119</code> boundDagger <code>120</code> boundLongsword <code>121</code> boundMace <code>122</code> boundBattleAxe <code>123</code> boundSpear <code>124</code> boundLongbow <code>125</code> eXTRASPELL <code>126</code> boundCuirass <code>127</code> boundHelm <code>128</code> boundBoots <code>129</code> boundShield <code>130</code> boundGloves <code>131</code> corprus <code>132</code> vampirism <code>133</code> summonCenturionSphere <code>134</code> sunDamage <code>135</code> stuntedMagicka <code>136</code> summonFabricant <code>137</code> callWolf <code>138</code> callBear <code>139</code> summonBonewolf <code>140</code> sEffectSummonCreature04 <code>141</code> sEffectSummonCreature05 <code>142</code>"},{"location":"references/magic-schools/","title":"Magic Schools","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.magicSchool</code> table. For example, <code>tes3.magicSchool.destruction</code> has a value of <code>2</code>.</p> Index Value alteration <code>0</code> conjuration <code>1</code> destruction <code>2</code> illusion <code>3</code> mysticism <code>4</code> restoration <code>5</code> none <code>6</code>"},{"location":"references/magic-source-types/","title":"Magic Source Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.magicSourceType</code> table. For example, <code>tes3.magicSourceType.spell</code> has a value of <code>1</code>.</p> Index Value spell <code>1</code> enchantment <code>2</code> alchemy <code>3</code>"},{"location":"references/merchant-services/","title":"Merchant Services","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.merchantService</code> table. For example, <code>tes3.merchantService.training</code> has a value of <code>16384</code>.</p> Index Value spells <code>2048</code> training <code>16384</code> spellmaking <code>32768</code> enchanting <code>65536</code> repair <code>131072</code>"},{"location":"references/music-situations/","title":"Music Situations","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.musicSituation</code> table. For example, <code>tes3.musicSituation.explore</code> has a value of <code>0</code>.</p> Index Value explore <code>0</code> combat <code>1</code> uninterruptible <code>2</code>"},{"location":"references/object-types/","title":"Object Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.objectType</code> table. For example, <code>tes3.objectType.creature</code> has a value of <code>1095062083</code>.</p> <p>Note</p> <p>Their corresponding construction set ID (if available) and description are listed as well, but are not available through the <code>tes3.objectType.*</code> namespace.</p> <p>Note</p> <p>The AMMO object type is for arrows and bolts only, even though these usually show up in the weapons tab of the Construction Set. Thrown weapons do not have this type.</p> Index Value CS ID Description activator <code>1230259009</code> ACTI Activator alchemy <code>1212369985</code> ALCH Alchemy ammunition <code>1330466113</code> AMMO Ammunition apparatus <code>1095782465</code> APPA Apparatus armor <code>1330467393</code> ARMO Armor book <code>1263488834</code> BOOK Book clothing <code>1414483011</code> CLOT Clothing container <code>1414418243</code> CONT Container creature <code>1095062083</code> CREA Creature door <code>1380929348</code> DOOR Door enchantment <code>1212370501</code> ENCH Enchantment faction <code>1413693766</code> FACT Faction ingredient <code>1380404809</code> INGR Ingredient leveledCreature <code>1129727308</code> LEVC Levelled Creature leveledItem <code>1230390604</code> LEVI Levelled Item light <code>1212631372</code> LIGH Light lockpick <code>1262702412</code> LOCK Lockpick miscItem <code>1129531725</code> MISC Misc Item npc <code>1598246990</code> NPC_ NPC reference <code>1380336978</code> REFR Reference probe <code>1112494672</code> PROB Probe repairItem <code>1095779666</code> REPA Repair Item script <code>1414546259</code> SCPT Script sound <code>1314213715</code> SOUN Sound soundGenerator <code>1195658835</code> SNDG Sound Generator spell <code>1279610963</code> SPEL Spell static <code>1413567571</code> STAT Static weapon <code>1346454871</code> WEAP Weapon class <code>1396788291</code> Class mobileActor <code>1413693773</code> Mobile Actor mobileCreature <code>1380139341</code> Mobile Creature mobileNPC <code>1212367181</code> Mobile NPC mobilePlayer <code>1346584909</code> Mobile Player mobileProjectile <code>1246908493</code> Mobile Projectile mobileSpellProjectile <code>1347637325</code> Mobile Spell Projectile"},{"location":"references/palettes/","title":"Palettes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.palette</code> table. For example, <code>tes3.palette.answerColor</code> has a value of <code>\"answer_color\"</code>.</p> <p></p> <p>Above: All the palette colors in-game with default settings. Note that some entries are entirely black. In order of appearance, those are backgroundColor, blackColor, and journalTopicColor.</p> Index Value activeColor <code>\"active_color\"</code> activeOverColor <code>\"active_over_color\"</code> activePressedColor <code>\"active_pressed_color\"</code> answerColor <code>\"answer_color\"</code> answerOverColor <code>\"answer_over_color\"</code> answerPressedColor <code>\"answer_pressed_color\"</code> backgroundColor <code>\"background_color\"</code> bigAnswerColor <code>\"big_answer_color\"</code> bigAnswerOverColor <code>\"big_answer_over_color\"</code> bigAnswerPressedColor <code>\"big_answer_pressed_color\"</code> bigHeaderColor <code>\"big_header_color\"</code> bigLinkColor <code>\"big_link_color\"</code> bigLinkOverColor <code>\"big_link_over_color\"</code> bigLinkPressedColor <code>\"big_link_pressed_color\"</code> bigNormalColor <code>\"big_normal_color\"</code> bigNormalOverColor <code>\"big_normal_over_color\"</code> bigNormalPressedColor <code>\"big_normal_pressed_color\"</code> bigNotifyColor <code>\"big_notify_color\"</code> blackColor <code>\"black_color\"</code> countColor <code>\"count_color\"</code> disabledColor <code>\"disabled_color\"</code> disabledOverColor <code>\"disabled_over_color\"</code> disabledPressedColor <code>\"disabled_pressed_color\"</code> fatigueColor <code>\"fatigue_color\"</code> focusColor <code>\"focus_color\"</code> headerColor <code>\"header_color\"</code> healthColor <code>\"health_color\"</code> healthNpcColor <code>\"health_npc_color\"</code> journalFinishedQuestColor <code>\"journal_finished_quest_color\"</code> journalFinishedQuestOverColor <code>\"journal_finished_quest_over_color\"</code> journalFinishedQuestPressedColor <code>\"journal_finished_quest_pressed_color\"</code> journalLinkColor <code>\"journal_link_color\"</code> journalLinkOverColor <code>\"journal_link_over_color\"</code> journalLinkPressedColor <code>\"journal_link_pressed_color\"</code> journalTopicColor <code>\"journal_topic_color\"</code> journalTopicOverColor <code>\"journal_topic_over_color\"</code> journalTopicPressedColor <code>\"journal_topic_pressed_color\"</code> linkColor <code>\"link_color\"</code> linkOverColor <code>\"link_over_color\"</code> linkPressedColor <code>\"link_pressed_color\"</code> magicColor <code>\"magic_color\"</code> magicFillColor <code>\"magic_fill_color\"</code> miscColor <code>\"misc_color\"</code> negativeColor <code>\"negative_color\"</code> normalColor <code>\"normal_color\"</code> normalOverColor <code>\"normal_over_color\"</code> normalPressedColor <code>\"normal_pressed_color\"</code> notifyColor <code>\"notify_color\"</code> positiveColor <code>\"positive_color\"</code> weaponFillColor <code>\"weapon_fill_color\"</code> whiteColor <code>\"white_color\"</code>"},{"location":"references/part-indices/","title":"Part Indices","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.partIndex</code> table. For example, <code>tes3.partIndex.hair</code> has a value of <code>1</code>.</p> Index Value head <code>0</code> hair <code>1</code> neck <code>2</code> chest <code>3</code> groin <code>4</code> hand <code>5</code> wrist <code>6</code> forearm <code>7</code> upperArm <code>8</code> foot <code>9</code> ankle <code>10</code> knee <code>11</code> upperLeg <code>12</code> clavicle <code>13</code> tail <code>14</code>"},{"location":"references/physical-attack-types/","title":"Physical Attack Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.physicalAttackType</code> table. For example, <code>tes3.physicalAttackType.none</code> has a value of <code>0</code>.</p> Index Value none <code>0</code> slash <code>1</code> chop <code>2</code> thrust <code>3</code> projectile <code>4</code> creature1 <code>5</code> creature2 <code>6</code> creature3 <code>7</code>"},{"location":"references/quick-key-types/","title":"Quick Key Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.quickKeyType</code> table. For example, <code>tes3.quickKeyType.none</code> has a value of <code>0</code>.</p> Index Value none <code>0</code> item <code>1</code> magic <code>2</code>"},{"location":"references/scan-codes/","title":"Scan Codes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.scanCode</code> table. For example, <code>tes3.scanCode.one</code> has a value of <code>2</code>.</p> Index Value esc <code>1</code> escape <code>1</code> one <code>2</code> exclamationMark <code>2</code> bang <code>2</code> ! <code>2</code> 1 <code>2</code> @ <code>3</code> at <code>3</code> 2 <code>3</code> two <code>3</code> hash <code>4</code> three <code>4</code> # <code>4</code> 3 <code>4</code> dollarSign <code>5</code> four <code>5</code> $ <code>5</code> 4 <code>5</code> five <code>6</code> 5 <code>6</code> percent <code>6</code> hat <code>7</code> ^ <code>7</code> 6 <code>7</code> six <code>7</code> caret <code>7</code> seven <code>8</code> 7 <code>8</code> ampersand <code>8</code> &amp; <code>8</code> asterisk <code>9</code> 8 <code>9</code> eight <code>9</code> * <code>9</code> 9 <code>10</code> nine <code>10</code> openBracket <code>10</code> ( <code>10</code> zero <code>11</code> closeBracket <code>11</code> ) <code>11</code> 0 <code>11</code> - <code>12</code> underscore <code>12</code> dash <code>12</code> _ <code>12</code> plus <code>13</code> equals <code>13</code> = <code>13</code> + <code>13</code> backspace <code>14</code> tab <code>15</code> q <code>16</code> w <code>17</code> e <code>18</code> r <code>19</code> t <code>20</code> y <code>21</code> u <code>22</code> i <code>23</code> o <code>24</code> p <code>25</code> { <code>26</code> openSquareBracket <code>26</code> openCurlyBracket <code>26</code> [ <code>26</code> closeCurlyBracket <code>27</code> ] <code>27</code> } <code>27</code> closeSquareBracket <code>27</code> return <code>28</code> enter <code>28</code> leftCtrl <code>29</code> lCtrl <code>29</code> a <code>30</code> s <code>31</code> d <code>32</code> f <code>33</code> g <code>34</code> h <code>35</code> j <code>36</code> k <code>37</code> l <code>38</code> ; <code>39</code> colon <code>39</code> semicolon <code>39</code> : <code>39</code> ' <code>40</code> quoteMark <code>40</code> quotationMark <code>40</code> singleQuote <code>40</code> doubleQuote <code>40</code> quote <code>40</code> tilde <code>41</code> ~ <code>41</code> backTick <code>41</code> <code>|</code>41` lShift <code>42</code> leftShift <code>42</code> backSlash <code>43</code> pipe <code>43</code> backslash <code>43</code> z <code>44</code> x <code>45</code> c <code>46</code> v <code>47</code> b <code>48</code> n <code>49</code> m <code>50</code> comma <code>51</code> lessThan <code>51</code> &lt; <code>51</code> , <code>51</code> openPointyBracket <code>51</code> fullStop <code>52</code> greaterThan <code>52</code> . <code>52</code> period <code>52</code> &gt; <code>52</code> closePointyBracket <code>52</code> questionMark <code>53</code> ? <code>53</code> / <code>53</code> forwardSlash <code>53</code> rightShift <code>54</code> rShift <code>54</code> multiply <code>55</code> lAlt <code>56</code> leftAlt <code>56</code> space <code>57</code> capslock <code>58</code> caps <code>58</code> F1 <code>59</code> F2 <code>60</code> F3 <code>61</code> F4 <code>62</code> F5 <code>63</code> F6 <code>64</code> F7 <code>65</code> F8 <code>66</code> F9 <code>67</code> F10 <code>68</code> numLock <code>69</code> scrollLock <code>70</code> numpad7 <code>71</code> numpad8 <code>72</code> numpad9 <code>73</code> subtract <code>74</code> numpad4 <code>75</code> numpad5 <code>76</code> numpad6 <code>77</code> add <code>78</code> numpad1 <code>79</code> numpad2 <code>80</code> numpad3 <code>81</code> numpad0 <code>82</code> decimal <code>83</code> F11 <code>87</code> F12 <code>88</code> numpadEnter <code>156</code> rightCtrl <code>157</code> rCtrl <code>157</code> divide <code>181</code> rAlt <code>184</code> rightAlt <code>184</code> home <code>199</code> keyUp <code>200</code> pageUp <code>201</code> keyLeft <code>203</code> keyRight <code>205</code> end <code>207</code> keyDown <code>208</code> pageDown <code>209</code> insert <code>210</code> delete <code>211</code>"},{"location":"references/skill-names/","title":"Skill Names","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.skillName</code> table. For example, <code>tes3.skillName[0]</code> has a value of <code>\"Block\"</code>.</p> Index Value 20 <code>\"Acrobatics\"</code> 16 <code>\"Alchemy\"</code> 11 <code>\"Alteration\"</code> 1 <code>\"Armorer\"</code> 8 <code>\"Athletics\"</code> 6 <code>\"Axe\"</code> 0 <code>\"Block\"</code> 4 <code>\"Blunt Weapon\"</code> 13 <code>\"Conjuration\"</code> 10 <code>\"Destruction\"</code> 9 <code>\"Enchant\"</code> 26 <code>\"Hand to Hand\"</code> 3 <code>\"Heavy Armor\"</code> 12 <code>\"Illusion\"</code> 21 <code>\"Light Armor\"</code> 5 <code>\"Long Blade\"</code> 23 <code>\"Marksman\"</code> 2 <code>\"Medium Armor\"</code> 24 <code>\"Mercantile\"</code> 14 <code>\"Mysticism\"</code> 15 <code>\"Restoration\"</code> 18 <code>\"Security\"</code> 22 <code>\"Short Blade\"</code> 19 <code>\"Sneak\"</code> 7 <code>\"Spear\"</code> 25 <code>\"Speechcraft\"</code> 17 <code>\"Unarmored\"</code>"},{"location":"references/skill-raise-sources/","title":"Skill Raise Sources","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.skillRaiseSource</code> table. For example, <code>tes3.skillRaiseSource.progress</code> has a value of <code>\"progress\"</code>.</p> Index Value book <code>\"book\"</code> progress <code>\"progress\"</code> training <code>\"training\"</code>"},{"location":"references/skill-types/","title":"Skill Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.skillType</code> table. For example, <code>tes3.skillType.miscellaneous</code> has a value of <code>2</code>.</p> Index Value major <code>0</code> minor <code>1</code> misc <code>2</code> miscellaneous <code>2</code>"},{"location":"references/skills/","title":"Skills","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.skill</code> table. For example, <code>tes3.skill.alchemy</code> has a value of <code>16</code>.</p> Index Value block <code>0</code> armorer <code>1</code> mediumArmor <code>2</code> heavyArmor <code>3</code> bluntWeapon <code>4</code> longBlade <code>5</code> axe <code>6</code> spear <code>7</code> athletics <code>8</code> enchant <code>9</code> destruction <code>10</code> alteration <code>11</code> illusion <code>12</code> conjuration <code>13</code> mysticism <code>14</code> restoration <code>15</code> alchemy <code>16</code> unarmored <code>17</code> security <code>18</code> sneak <code>19</code> acrobatics <code>20</code> lightArmor <code>21</code> shortBlade <code>22</code> marksman <code>23</code> mercantile <code>24</code> speechcraft <code>25</code> handToHand <code>26</code>"},{"location":"references/sound-generator-types/","title":"Sound Gen Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.soundGenType</code> table. For example, <code>tes3.soundGenType.roar</code> has a value of <code>5</code>.</p> Index Value leftFoot <code>0</code> rightFoot <code>1</code> swimLeft <code>2</code> swimRight <code>3</code> moan <code>4</code> roar <code>5</code> scream <code>6</code> land <code>7</code>"},{"location":"references/sound-mix-types/","title":"Sound Mix Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.soundMix</code> table. For example, <code>tes3.soundMix.voice</code> has a value of <code>1</code>.</p> Index Value master <code>0</code> voice <code>1</code> effects <code>2</code> footsteps <code>3</code> music <code>4</code>"},{"location":"references/specialization-names/","title":"Specialization Names","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.specializationName</code> table. For example, <code>tes3.specializationName[0]</code> has a value of <code>\"combat\"</code>.</p> Index Value -1 <code>\"invalid\"</code> 0 <code>\"combat\"</code> 1 <code>\"magic\"</code> 2 <code>\"stealth\"</code>"},{"location":"references/specializations/","title":"Specializations","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.specialization</code> table. For example, <code>tes3.specialization.invalid</code> has a value of <code>-1</code>.</p> Index Value invalid <code>-1</code> combat <code>0</code> magic <code>1</code> stealth <code>2</code>"},{"location":"references/spell-sources/","title":"Spell Sources","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.spellSource</code> table. For example, <code>tes3.spellSource.script</code> has a value of <code>\"script\"</code>.</p> Index Value script <code>\"script\"</code> service <code>\"service\"</code>"},{"location":"references/spell-states/","title":"Spell States","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.spellState</code> table. For example, <code>tes3.spellState.retired</code> has a value of <code>7</code>.</p> Index Value Description preCast <code>0</code> Has not been cast yet cast <code>1</code> Has just been casted beginning <code>4</code> Has just been applied to a target working <code>5</code> Is applying its effects each frame ending <code>6</code> Is ending and being cleaned up retired <code>7</code> Has ended and will be deleted workingFortify <code>8</code> Same as working for fortify effects endingFortify <code>9</code> Same as ending for fortify effects"},{"location":"references/spell-types/","title":"Spell Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.spellType</code> table. For example, <code>tes3.spellType.disease</code> has a value of <code>3</code>.</p> Index Value spell <code>0</code> ability <code>1</code> blight <code>2</code> disease <code>3</code> curse <code>4</code> power <code>5</code>"},{"location":"references/tes3uiElement-types/","title":"UI Element Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.uiElementType</code> table. For example, <code>tes3.uiElementType.textInput</code> has a value of <code>\"textInput\"</code>.</p> Index Value button <code>\"button\"</code> fillbar <code>\"fillbar\"</code> image <code>\"image\"</code> layout <code>\"layout\"</code> model <code>\"model\"</code> paragraphInput <code>\"paragraphInput\"</code> rect <code>\"rect\"</code> scrollBar <code>\"scrollBar\"</code> scrollPane <code>\"scrollPane\"</code> text <code>\"text\"</code> textInput <code>\"textInput\"</code> textSelect <code>\"textSelect\"</code>"},{"location":"references/ui-events/","title":"UI Events","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.uiEvent</code> table. For example, <code>tes3.uiEvent.focus</code> has a value of <code>\"focus\"</code>.</p> Index Value destroy <code>\"destroy\"</code> focus <code>\"focus\"</code> help <code>\"help\"</code> keyEnter <code>\"keyEnter\"</code> keyPress <code>\"keyPress\"</code> mouseClick <code>\"mouseClick\"</code> mouseDoubleClick <code>\"mouseDoubleClick\"</code> mouseDown <code>\"mouseDown\"</code> mouseLeave <code>\"mouseLeave\"</code> mouseOver <code>\"mouseOver\"</code> mouseRelease <code>\"mouseRelease\"</code> mouseScrollDown <code>\"mouseScrollDown\"</code> mouseScrollUp <code>\"mouseScrollUp\"</code> mouseStillIdle <code>\"mouseStillIdle\"</code> mouseStillOver <code>\"mouseStillOver\"</code> mouseStillPressed <code>\"mouseStillPressed\"</code> mouseStillPressedOutside <code>\"mouseStillPressedOutside\"</code> partScrollBarChanged <code>\"PartScrollBar_changed\"</code> preUpdate <code>\"preUpdate\"</code> unfocus <code>\"unfocus\"</code> update <code>\"update\"</code>"},{"location":"references/ui-properties/","title":"UI Properties","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.uiProperty</code> table. For example, <code>tes3.uiProperty.doubleClick</code> has a value of <code>4294934584</code>.</p> Index Value mouseLeave <code>4294934578</code> mouseOver <code>4294934579</code> mouseDown <code>4294934580</code> mouseClick <code>4294934581</code> scrollUp <code>4294934582</code> scrollDown <code>4294934583</code> doubleClick <code>4294934584</code> stillIdle <code>4294934585</code> stillOver <code>4294934586</code> stillPressedOutside <code>4294934587</code> stillPressed <code>4294934588</code> release <code>4294934589</code> keyPress <code>4294934590</code> enter <code>4294934591</code> leaveMenuMode <code>4294934592</code> enterMenuMode <code>4294934593</code> focus <code>4294934594</code> unfocus <code>4294934595</code> update <code>4294934596</code> preUpdate <code>4294934597</code> destroy <code>4294934599</code>"},{"location":"references/ui-states/","title":"UI States","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.uiState</code> table. For example, <code>tes3.uiState.normal</code> has a value of <code>1</code>.</p> Index Value normal <code>1</code> disabled <code>2</code> active <code>4</code>"},{"location":"references/voiceovers/","title":"Voiceovers","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.voiceover</code> table. For example, <code>tes3.voiceover.hit</code> has a value of <code>4</code>.</p> Index Value hello <code>0</code> idle <code>1</code> intruder <code>2</code> thief <code>3</code> hit <code>4</code> attack <code>5</code> flee <code>6</code>"},{"location":"references/weapon-types/","title":"Weapon Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.weaponType</code> table. For example, <code>tes3.weaponType.bluntOneHand</code> has a value of <code>3</code>.</p> Index Value Description shortBladeOneHand <code>0</code> Short Blade, One Handed longBladeOneHand <code>1</code> Long Blade, One Handed longBladeTwoClose <code>2</code> Lon Blade, Two Handed bluntOneHand <code>3</code> Blunt Weapon, One Handed bluntTwoClose <code>4</code> Blunt Weapon, Two Handed (Warhammers) bluntTwoWide <code>5</code> Blunt Weapon, Two Handed (Staffs) spearTwoWide <code>6</code> Spear, Two Handed axeOneHand <code>7</code> Axe, One Handed axeTwoHand <code>8</code> Axe, Two Handed marksmanBow <code>9</code> Marksman, Bow marksmanCrossbow <code>10</code> Marksman, Crossbow marksmanThrown <code>11</code> Marksman, Thrown arrow <code>12</code> Arrows bolt <code>13</code> Bolts"},{"location":"references/weather-types/","title":"Weathers","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>tes3.weather</code> table. For example, <code>tes3.weather.snow</code> has a value of <code>8</code>.</p> Index Value clear <code>0</code> cloudy <code>1</code> foggy <code>2</code> overcast <code>3</code> rain <code>4</code> thunder <code>5</code> ash <code>6</code> blight <code>7</code> snow <code>8</code> blizzard <code>9</code>"},{"location":"references/mwse-mwscript/actor/","title":"Actor Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/actor/#xactivate","title":"<code>xActivate</code>","text":"<p>Parameters:</p> <ul> <li><code>reference</code> target: What the reference will try to activate.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function allows the forced activation of one reference onto another. Unlike the vanilla <code>Activate</code> function, this allows variable input and will work even when <code>OnActivate</code> hasn't been triggered in the script.</p> <p>Note</p> <p>Unlike the vanilla activate function, the reference is the actor that will activate something, rather than the object to activate.</p> Force the PC to Activate <pre><code>begin test\n\nlong targetRef\nlong pcRef\n\n; Don't force pickup if we're not sneaking.\nif ( GetPCSneaking == 0 )\n    return\nendif\n\n; Get a reference to what the player is looking at.\nsetx targetRef to xGetPCTarget\nif ( targetRef == 0 )\n    return\nendif\n\n; Get a reference to the player, and force them to activate what they are looking at.\nsetx pcRef to xGetRef \"player\"\npcRef-&gt;xActivate targetRef\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/actor/#xaddspell","title":"<code>xAddSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the spell to add.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla <code>AddSpell</code> function that can take variable input.</p>"},{"location":"references/mwse-mwscript/actor/#xaitravel","title":"<code>xAITravel</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> x: The position to travel to on the X axis.</li> <li><code>float</code> y: The position to travel to on the Y axis.</li> <li><code>float</code> z: The position to travel to on the Z axis.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla AITravel function that can take variable input.</p>"},{"location":"references/mwse-mwscript/actor/#xdrop","title":"<code>xDrop</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the item to drop.</li> <li><code>long</code> count: The number of items to drop.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla Drop function that can take variable input.</p> <p>Note</p> <p><code>xDrop</code> N+1 items will leave 1 phantom icon plus N real items in the dropping actors inventory.  <code>xGetItemCount</code> will not report the 1 phantom icon.  However, <code>xRemoveItem</code> will remove the phantom safely.  So \"safe\" procedure for <code>xDrop</code> seems to be to follow up with <code>xRemoveItem</code> of the same count.  Additionally for non-player actors in menumode, exit and re-entry to menumode is needed to refresh the icons and avoid phantom icon interaction that could result in permanent item doubling or CTD.  This also applies to the standard drop function.</p>"},{"location":"references/mwse-mwscript/actor/#xequip","title":"<code>xEquip</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the item to equip.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla Equip function that can take variable input.</p>"},{"location":"references/mwse-mwscript/actor/#xgetattribute","title":"<code>xGetAttribute</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> attributeID: The Attribute ID to get the value of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> value: Current value of the attribute.</li> </ul> <p>Returns the current value of the referenced object's attribute.</p> <p>Note</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetbaseattribute","title":"<code>xGetBaseAttribute</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> attributeID: The Attribute ID to get the value of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> value: Base value of the attribute.</li> </ul> <p>Returns the base current value of the referenced object's attribute.</p> <p>Note</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetbasegold","title":"<code>xGetBaseGold</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> gold: The base amount of bartering gold of the reference.</li> </ul> <p>Returns the base amount of barter gold assigned to the NPC (or creature). This is the value that resets automatically each day.</p>"},{"location":"references/mwse-mwscript/actor/#xgetbaseskill","title":"<code>xGetBaseSkill</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: The Skill ID to get the value of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> value: Base value of the skill.</li> </ul> <p>Returns the base value of the referenced object's skill.</p> <p>Note</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetclass","title":"<code>xGetClass</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> attributesMask: A bit mask to apply to the attributes value.</li> <li><code>long</code> majorMask: A bit mask to apply to the majorSkills value.</li> <li><code>long</code> minorMask: A bit mask to apply to the minorSkills value.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> classID: The unique string identifier of the class.</li> <li><code>string</code> name: The name of the class.</li> <li><code>long</code> playable: 1 if the class can be chosen by the PC, 0 otherwise.</li> <li><code>long</code> specialization: <code>0</code> = Combat, <code>1</code> = Magic, <code>2</code> = Stealth</li> <li><code>long</code> attributes: A bitmap of the two primary attributes. The result is obtained by adding the values found in the attributes table below.</li> <li><code>long</code> majorSkills: A bitmap of the 5 major skills. The result is obtained by adding the values found in the skills table below.</li> <li><code>long</code> minorSkills: A bitmap of the 5 minor skills. The result is obtained by adding the values found in the skills table below.</li> </ul> <p>Returns info about the class of the target NPC/PC, or 0 if the target is not an NPC or the PC.</p> <p>For a custom class created at PC creation, the classID is \"NEWCLASSID_CHARGEN\" and playable is <code>0</code>.</p>"},{"location":"references/mwse-mwscript/actor/#attribute-and-skill-bitmaps","title":"Attribute and Skill Bitmaps","text":"Value Attribute 1 Strength 2 Intelligence 4 Willpower 8 Agility 16 Speed 32 Endurance 64 Personality 128 Luck Value Skill 1 Block 2 Armorer 4 Medium Armor 8 Heavy Armor 16 Blunt Weapon 32 Long Blade 64 Axe 128 Spear 256 Athletics 512 Enchant 1024 Destruction 2048 Alteration 4096 Illusion 8192 Conjuration 16384 Mysticism 32768 Restoration 65536 Alchemy 131072 Unarmored 262144 Security 524288 Sneak 1048576 Acrobatics 2097152 Light Armor 4194304 Short Blade 8388608 Marksman 16777216 Mercantile 33554432 Speechcraft 67108864 Hand-to-Hand"},{"location":"references/mwse-mwscript/actor/#xgetcombat","title":"<code>xGetCombat</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>reference</code> reference: Reference to the current combat target.</li> </ul> <p>Returns a reference to the reference NPC/creature's combat target, or <code>0</code> if the reference is not in combat.</p>"},{"location":"references/mwse-mwscript/actor/#xgetgold","title":"<code>xGetGold</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> gold: The reference's current barter gold.</li> </ul> <p><code>xGetGold</code> returns the current amount of barter gold possessed by the NPC (or creature). The base gold amount is used if you haven't bartered with the NPC/creature recently.</p>"},{"location":"references/mwse-mwscript/actor/#xgetmagic","title":"<code>xGetMagic</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> objectType: The Object Type of the equipped magical source.</li> <li><code>string</code> objectID: The object ID of the spell or enchantment selected.</li> </ul> <p>Returns the currently equipped spell or enchanted item. This is specifically the object that appears in the equipped magic slot and includes on-use magical items as well as spells.</p> <p>Note</p> <p>The returned objectType and objectID will always be associated with a Spell or Enchantment object, not the Weapon, Armor, Clothing, or Book that the magic is placed on.</p>"},{"location":"references/mwse-mwscript/actor/#xgetmaxfatigue","title":"<code>xGetMaxFatigue</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> maxFatigue: The reference's maximum fatigue.</li> </ul> <p>!!! noteReturns maximum fatigue.     This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetmaxhealth","title":"<code>xGetMaxHealth</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> maxHealth: The reference's maximum health.</li> </ul> <p>!!! noteReturns maximum health.     This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetmaxmagicka","title":"<code>xGetMaxMagicka</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> maxMagicka: The reference's maximum magicka.</li> </ul> <p>!!! noteReturns maximum magicka.     This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetrace","title":"<code>xGetRace</code>","text":"<p>Parameters:</p> <ul> <li><code>short</code> returnType: The return pattern desired. See below for details.</li> </ul> <p>Returned (returnType is 0):</p> <ul> <li><code>string</code> raceID: The object ID of the target's race.</li> </ul> <p>Returned (returnType is 1):</p> <ul> <li><code>array</code> arrayID: An array ID containing the values of the race.</li> </ul> <p>This function fetches the objectID or complete details about the target's race.</p> <p>Warning</p> <p>The arrays returned by this function when returnType is <code>1</code> are volatile. They should not be used for custom storage. Whenever xGetRace is called, the arrays are cleared and refilled with up-to-date information.</p> <p>If returnType is <code>0</code>, the response is the race's object ID. Otherwise, the returned array contains the following values:</p> Index Type Contents 0 <code>string</code> Object ID. 1 <code>string</code> Name. 2 <code>array</code> Skill bonuses. 3 <code>array</code> Starting attributes. 4 <code>float</code> Male height. 5 <code>float</code> Female height. 6 <code>float</code> Male weight. 7 <code>float</code> Female weight. 8 <code>long</code> Playable flag. 9 <code>long</code> Beast flag. <p>The skill bonuses array begins with index 0 holding the number of skill bonuses (a value between 0 and 7). Pairs of values are then returned. The odd indexes hold the Skill while the even indexes hold the bonus to the given skill.</p> <p>The starting attributes array contains the following values:</p> Index Type Contents 0 <code>long</code> Male strength. 1 <code>long</code> Female strength. 2 <code>long</code> Male intelligence. 3 <code>long</code> Female intelligence. 4 <code>long</code> Male willpower. 5 <code>long</code> Female willpower. 6 <code>long</code> Male agility. 7 <code>long</code> Female agility. 8 <code>long</code> Male speed. 9 <code>long</code> Female speed. 10 <code>long</code> Male endurance. 11 <code>long</code> Female endurance. 12 <code>long</code> Male personality. 13 <code>long</code> Female personality. 14 <code>long</code> Male luck. 15 <code>long</code> Female luck."},{"location":"references/mwse-mwscript/actor/#xgetservice","title":"<code>xGetService</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> mask: A filter to limit the services returned.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> services: The services offered by the reference, limited by mask.</li> </ul> <p>This function returns a bitfield of services offered by a given reference.</p> <p>The service values are shown in the following table. If an NPC offers more than one service the sum of the service numbers will be returned. The mask parameter can be used as a filter to limit the return value to only consider the services indicated.</p> Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. <p>Note</p> <p>Previous versions of MWSE made use of <code>xIsTrader</code>, <code>xIsTrainer</code>, and <code>xIsProvider</code>. This function supersedes those. Old scripts that use them will continue to work, but new scripts should make use of <code>xGetService</code>.</p>"},{"location":"references/mwse-mwscript/actor/#xgetskill","title":"<code>xGetSkill</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: The Skill ID to get the value of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> value: Current value of the skill.</li> </ul> <p>Returns the current value of the referenced object's skill.</p> <p>Note</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xgetspell","title":"<code>xGetSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> spellID: The spell ID to search for.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the spell was found, otherwise <code>0</code>.</li> </ul> <p>Returns <code>1</code> if spellId is present, <code>0</code> otherwise. This is not a wrapper for <code>GetSpell</code>; it's a reimplementation. It only works for NPCs and the player.</p>"},{"location":"references/mwse-mwscript/actor/#xgetspelleffects","title":"<code>xGetSpellEffects</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> spellID: The spell ID to check for.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the object is equipped, otherwise <code>0</code>.</li> </ul> <p>Returns <code>1</code> if the calling object is under the effect of the given spell, or <code>0</code> otherwise.</p>"},{"location":"references/mwse-mwscript/actor/#xhasitemequipped","title":"<code>xHasItemEquipped</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID to check if equipped.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the object is equipped, otherwise <code>0</code>.</li> </ul> <p>Returns <code>1</code> if the NPC or creature has the object equipped, <code>0</code> otherwise.</p>"},{"location":"references/mwse-mwscript/actor/#xisfemale","title":"<code>xIsFemale</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result:  <code>1</code> if the reference is female, otherwise <code>0</code>.</li> </ul> <p>Returns <code>1</code> if the NPC is female and 0 otherwise.</p>"},{"location":"references/mwse-mwscript/actor/#xmodattribute","title":"<code>xModAttribute</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> attributeID: The Attribute ID to modify.</li> <li><code>float</code> value: The value to modify the attribute by.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: Result of the function.</li> </ul> <p>Modifies the current and base values of the specified attribute. This suffers from the same display issue as xSetLevel. It ignores the 100 max attribute limit.</p> <p>Note</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/actor/#xmodservice","title":"<code>xModService</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> services: The combined value of services the reference should offer (positive) or refuse (negative).</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Uses the services parameter to modify the services offered by an NPC. A positive value adds that service (or set of services) to those already offered. A negative value will remove a service or service. The changes are not permanent.</p> Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons."},{"location":"references/mwse-mwscript/actor/#xremovespell","title":"<code>xRemoveSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the spell to remove.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla <code>RemoveSpell</code> function that can take variable input.</p>"},{"location":"references/mwse-mwscript/actor/#xsetbasegold","title":"<code>xSetBaseGold</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> gold:  New value to set the reference's base barter gold to.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Changes the base amount of barter gold assigned to the NPC (or creature). Unfortunately this change won't be saved with the save game so you will need to reset it after each game reload or after the \"72-hour bug\" affects the merchant.</p>"},{"location":"references/mwse-mwscript/actor/#xsetgold","title":"<code>xSetGold</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> gold:  New value to set the reference's current barter gold to.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p><code>xSetGold</code> changes the current amount of barter gold possessed by the NPC (or creature). This value is stored in save game files so it will survive a game reload. Setting this will have no effect if you haven't recently bartered with the NPC/creature. But setting both this and the base gold amount at the same time will likely do what you want.</p>"},{"location":"references/mwse-mwscript/actor/#xsetlevel","title":"<code>xSetLevel</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> level:  New value to set the reference's level to.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Sets the level of the given reference. This function is a wrapper for <code>SetLevel</code>, and suffers from the same display issue: when using this function on the player, the character screen does not update with the new level.</p>"},{"location":"references/mwse-mwscript/actor/#xsetservice","title":"<code>xSetService</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> services: The combined value of services the reference should offer.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p><code>xSetService</code> uses the value parameter to change the NPC to offer the set of services represented by the number. The service number values are used and any old services are ignored.</p> <p>For example using a value of <code>8</code> will make the NPC a bookseller. A value of <code>131587</code> (<code>1+2+512+131072</code>) is typical for smiths. The values changed by this function are not permanent and may be reset after 72-hours or a game reload.</p> Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons."},{"location":"references/mwse-mwscript/actor/#xstartcombat","title":"<code>xStartCombat</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> reference: Target reference for the caller to initiate combat with.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p><code>xStartCombat</code> is a wrapper for the original StartCombat to take variables.</p>"},{"location":"references/mwse-mwscript/array/","title":"Array Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/array/#xcleararray","title":"<code>xClearArray</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> arrayId: The id of the array to clear.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the array was successfully cleared.</li> </ul> <p>This function clears an array, removing any values from it.</p>"},{"location":"references/mwse-mwscript/array/#xcreatearray","title":"<code>xCreateArray</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> arrayId: The id of the array that was created.</li> </ul> <p>This function creates an empty array, and returns the id of it.</p>"},{"location":"references/mwse-mwscript/array/#xgetarraysize","title":"<code>xGetArraySize</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> arrayId: The id of the array.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> size: The number of elements in the array.</li> </ul> <p>This function determines the size of an array.</p>"},{"location":"references/mwse-mwscript/array/#xgetarrayvalue","title":"<code>xGetArrayValue</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> arrayId: The id of the array to get a value from.</li> <li><code>long</code> index: The index in the array to fetch.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> value: The value in the array at the given index.</li> </ul> <p>This function retrieves a value in an array, identified by arrayId and at index.</p>"},{"location":"references/mwse-mwscript/array/#xsetarrayvalue","title":"<code>xSetArrayValue</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> arrayId: The id of the array to get a value from.</li> <li><code>long</code> index: The index in the array to fetch.</li> <li><code>long</code> value: The value to set into the array.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> status: <code>1</code> if the value was set, otherwise 0.</li> </ul> <p>This function retrieves sets a value in an array, identified by arrayId and at index.</p>"},{"location":"references/mwse-mwscript/file/","title":"File Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/file/#xfilereadfloat","title":"<code>xFileReadFloat</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to read values from.</li> <li><code>long</code> count: The number of values desired.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> valuesRead: The number of results actually read. This may differ from count if it encountered an error while reading.</li> <li><code>float</code> value: A value read. A number of values are returned equal to valuesRead.</li> </ul> <p>Reads a number of <code>float</code> (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read (valuesRead) followed by the values.</p>"},{"location":"references/mwse-mwscript/file/#xfilereadlong","title":"<code>xFileReadLong</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to read values from.</li> <li><code>long</code> count: The number of values desired.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> valuesRead: The number of results actually read. This may differ from count if it encountered an error while reading.</li> <li><code>long</code> value: A value read. A number of values are returned equal to valuesRead.</li> </ul> <p>Reads a number of <code>long</code> (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read (valuesRead) followed by the values.</p>"},{"location":"references/mwse-mwscript/file/#xfilereadshort","title":"<code>xFileReadShort</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to read values from.</li> <li><code>long</code> count: The number of values desired.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> valuesRead: The number of results actually read. This may differ from count if it encountered an error while reading.</li> <li><code>short</code> value: A value read. A number of values are returned equal to valuesRead.</li> </ul> <p>Reads a number of <code>short</code> (2 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read (valuesRead) followed by the values.</p>"},{"location":"references/mwse-mwscript/file/#xfilereadstring","title":"<code>xFileReadString</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to read values from.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> value: The value read from the file.</li> </ul> <p>Reads from filename at the current reading position, until a C-style null terminator (<code>\\0</code>/<code>0x00</code>) is read. The current position is advanced as read, and the resultant bytes are returned as a string.</p>"},{"location":"references/mwse-mwscript/file/#xfilereadtext","title":"<code>xFileReadText</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to read values from.</li> <li><code>string</code> pattern: The pattern to match when reading.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> numMatches: The number of values read.</li> <li><code>varies</code> matches: A value returned. A number of values will be returned matching numMatches.</li> </ul> <p>xFileReadText reads a text string from from the file at the current reading position. The current position is then advanced. The pattern string is then used to extract data from the string just read; the first return value indicates how much of the pattern is matched. The values matched by the pattern are also returned.</p> <p>The pattern and return values are the same as for the <code>xStringParse</code> function with one addition: placing a single <code>%</code> sign at the end of the pattern will cause the read routine to stop when it gets to the end of a line (CR/LF) allowing you to use this to read a normal text file instead of a binary file. Without the trailing % sign on the pattern this will read up to the first NULL character or to the end of the file if it doesn't find a NULL character.</p>"},{"location":"references/mwse-mwscript/file/#xfilerewind","title":"<code>xFileRewind</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to rewind.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function moves the current reading position to the start of the file.</p> <p>Call this or <code>xFileSeek</code> at the start of any script which uses file reading or writing functions, otherwise you will have problems with the current file position not being as expected.</p>"},{"location":"references/mwse-mwscript/file/#xfileseek","title":"<code>xFileSeek</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to seek in.</li> <li><code>long</code> position: </li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function moves the current reading position to the specified offset in the file.</p> <p>You should call this or <code>xFileRewind</code> every frame before using other file functions. Use an offset divisible by 2 to read shorts and an offset divisible by 4 to read longs.</p> <p>This function isn't very useful if the file contains string data.</p>"},{"location":"references/mwse-mwscript/file/#xfilewritefloat","title":"<code>xFileWriteFloat</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to write value to.</li> <li><code>float</code> value: The value to write to file.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes a <code>float</code> (4 byte) value to filename at the current position. The current position is then advanced.</p> <p>Note</p> <p>The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.</p>"},{"location":"references/mwse-mwscript/file/#xfilewritelong","title":"<code>xFileWriteLong</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to write value to.</li> <li><code>long</code> value: The value to write to file.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes a <code>long</code> (4 byte) value to filename at the current position. The current position is then advanced.</p> <p>Note</p> <p>The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.</p>"},{"location":"references/mwse-mwscript/file/#xfilewriteshort","title":"<code>xFileWriteShort</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to write value to.</li> <li><code>short</code> value: The value to write to file.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes a <code>short</code> (2 byte) value to filename at the current position. The current position is then advanced.</p> <p>Note</p> <p>The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.</p>"},{"location":"references/mwse-mwscript/file/#xfilewritestring","title":"<code>xFileWriteString</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to write value to.</li> <li><code>string</code> value: The value to write to file.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes a <code>string</code> value to filename at the current position. The string is stored in the file as a C-style null-terminated string. The current position is then advanced.</p> <p>Note</p> <p>The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.</p>"},{"location":"references/mwse-mwscript/file/#xfilewritetext","title":"<code>xFileWriteText</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> filename: The file to write value to.</li> <li><code>string</code> format: The format to use when writing to the file.</li> <li><code>varies</code> values: Multiple values that match the format.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes a formatted <code>string</code> to the file at the current position and advances. </p> <p>The formatting rules are the same as for the <code>xStringBuild</code> function with one addition. Placing a <code>%</code> at the end of the pattern will suppress the NULL that is normally printed, so a format string ending with <code>%N%</code> can be used to create a normal text file.</p> <p>Note</p> <p>The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.</p>"},{"location":"references/mwse-mwscript/iteration/","title":"Iteration Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/iteration/#xcontentlist","title":"<code>xContentList</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> node: For the first call, this should be <code>0</code> to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> id: The object ID string of the item.</li> <li><code>long</code> count: How many items are in the item stack.</li> <li><code>long</code> type: The Object Type of the item.</li> <li><code>long</code> value: The value of the item.</li> <li><code>float</code> weight: The weight of the item. (Always <code>0.000001</code> for LEVI objects.)</li> <li><code>string</code> name: The name of the item.</li> <li><code>long</code> nextNode: The next node to provide back into this function to continue looping. When this value is 0, there are no more items.</li> </ul> <p>This function allows a script to iterate through the inventory of an actor or container and retrieve information about the contents found. Unlike the <code>xInventory</code> and <code>xNextStack</code> functions, <code>xContentList</code> also provides access to the type, value, weight, and name of items processed.</p> <p>If you are only interested in items of specific types, consider using <code>xContentListFiltered</code> instead. If you are only interested in items currently equipped by the actor, consider using <code>xEquipmentList</code>.</p>"},{"location":"references/mwse-mwscript/iteration/#xcontentlistfiltered","title":"<code>xContentListFiltered</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> node: For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call.</li> <li><code>long</code> filter: A filter that matches the Filter Mask that is desired. Only items matching the type(s) will be returned. This means that passing a value of 0 will return nothing.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> id: The id string of the item.</li> <li><code>long</code> count: How many items are in the item stack.</li> <li><code>long</code> type: The Object Type of the item.</li> <li><code>long</code> value: The value of the item.</li> <li><code>float</code> weight: The weight of the item.</li> <li><code>string</code> name: The name of the item.</li> <li><code>long</code> nextNode: The next node to provide back into this function to continue looping. When this value is 0, there are no more items.</li> </ul> <p>This function behaves similar to <code>xContentList</code>, with the added convenience of filtering for one or more Object Type.</p> <p>If you are trying to specifically get the equipped items of an actor, consider using <code>xEquipmentList</code>.</p>"},{"location":"references/mwse-mwscript/iteration/#filter-mask","title":"Filter Mask","text":"<p>The filter mask below is meant to be summed for each Object Type desired in the filter. The exception to this rule is the ENCH filter, which restricts the results to enchanted items.</p> <p>For example, if you wanted clothing (<code>128</code>) and armor (<code>16</code>) results, you would pass a value of <code>144</code> (<code>128+16</code>).</p> Type Mask ACTI 1 ALCH 2 AMMO 4 APPA 8 ARMO 16 BODY 32 BOOK 64 CLOT 128 CONT 256 CREA 512 DOOR 1024 INGR 2048 LEVC 4096 LEVI 8192 LIGH 16384 LOCK 32768 MISC 65536 NPC 131072 PROB 262144 REPA 524288 STAT 1048576 WEAP 2097152 ENCH 4194304 Simple Filtered Loop <p>This example demonstrates how to loop through all potions the player is carrying.</p> <pre><code>begin Example_xContentListFiltered\n\nlong id\nlong count\nlong type\nlong value\nfloat weight\nlong name\n\nlong next\nlong filter\n\nlong ref\nlong loop\n\nsetx ref to xGetRef \"player\"\n\nset filter to 2 ; ALCH\n\nset loop to 1\nwhilex ( loop )\n    setx id count type value weight name next to ref-&gt;xContentListFiltered next filter\n\n    xLogMessage \"id: %s\" id\n    xLogMessage \"    count: %d\" count\n    xLogMessage \"    type: %l\" type\n    xLogMessage \"    value: %d\" value\n    xLogMessage \"    weight: %.2f\" weight\n    xLogMessage \"    name: %s\" name\n    xLogMessage \"    next: %d\" next\n\n    set loop to next\nendwhile\n\nStopScript Example_xContentListFiltered\n\nend\n</code></pre> Transfer Ingredients <p>This example shows how to efficiently transfer all ingredients and potions from the player to another container. A placeholder variable, such as \"_\", can be used to ignore return values that are not needed for your script.</p> <pre><code>begin TransferIngreds\n\nlong _\nlong id\nlong count\n\nlong src\nlong dst\n\nsetx src to xGetRef \"player\"\nsetx dst to xGetRef \"ingred_storage\"\n\nset count to 1\nwhilex ( count )\n    ; get the next ingred and count\n    setx id count _ _ _ _ _ to src-&gt;xContentListFiltered _ 2050 ; INGR + ALCH\n\n    ; remove the ingred from source\n    src-&gt;xRemoveItem id count\n\n    ; add the ingred to destination\n    dst-&gt;xAddItem id count\n\n    ; continue with next ingredient\n    set count to _\nendwhile\n\nsrc-&gt;PlaySound3D \"Item Ingredient Down\"\n\nStopScript TransferIngreds\n\nend\n</code></pre> Get first item of a specific type. <p>This example shows how to efficiently check if the player is carrying any weapons at all. No explicit loop is needed here, so evaluating the weapon id alone will suffice.</p> <pre><code>begin NoWeaponsAllowed\n\n; local script on a door\n\nlong pcRef\nlong weapID\n\nif ( OnActivate == 0 )\n    return\nendif\n\nsetx pcRef to xGetRef \"player\"\nsetx weapID to pcRef-&gt;xContentListFiltered 0 2097152 ; Weapon\n\nif ( weapID != 0 )\n    MessageBox \"No weapons are allowed inside the royal chamber!\"\n    PlaySound3D \"Door Heavy Close\"\n    return\nendif\n\nActivate\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/iteration/#xequipmentlist","title":"<code>xEquipmentList</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> node: For the first call, this should be 0 to get the first equipped item. In following iterations, this value will be what is returned as nextNode from the previous call.</li> <li><code>long</code> typeFilter: A type filter that matches the Object Type that is desired. Only equipped items matching that type will be returned. A value of 0 will perform no type filtering.</li> <li><code>long</code> subTypeFilter: An optional subtype filter, allowing the loop to search for a specific Armor Type, Clothing Type or Weapon Type. The value passed must be one higher than the value on the linked table. A value of 0 will perform no subtype filtering.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> id: The id string of the equipped item.</li> <li><code>long</code> count: This value will always be 1. Future version of MWSE may expand this to return the actual item count for arrows, bolts, and thrown weapons.</li> <li><code>long</code> type: The Object Type of the equipped item.</li> <li><code>long</code> subtype: The Armor Type, Clothing Type or Weapon Type of the equipped item, or <code>0</code> if it is not an armor, clothing, or weapon object. Note that the value returned is one higher than the value on the given table.</li> <li><code>long</code> value: The value of the equipped item.</li> <li><code>float</code> weight: The weight of the equipped item.</li> <li><code>string</code> name: The name of the equipped item.</li> <li><code>string</code> enchantId: The enchantment id of the equipped item. This can be fed to enchantment related functions that take an id.</li> <li><code>long</code> nextNode: The next node to provide back into this function to continue looping. When this value is 0, there are no more equipped items.</li> </ul> <p>This function behaves similar to <code>xContentList</code>/<code>xContentListFiltered</code>, returning inventory information. This allows looping over equipped items instead of all items in the target's inventory.</p> <p>Note</p> <p>The subTypeFilter parameter does not exactly match the associated table. Instead, the function requires one more than the value on the table. For example if searching for clothing objects, a value of <code>0</code> will perform no filtering by subtype, while a value of <code>1</code> will filter for only pants.</p> <p>Tip</p> <p>At present this function is the only way to reliably get the equipment a reference has currently worn. Using the typeFilter and subTypeFilter the script can quickly query to see if, for example, the player is wearing pants.</p> Simple Equipment Loop <p>This example demonstrates how to do a simple loop through all equipped items (on the player in this instance).</p> <pre><code>Begin loopEquippedItems\n\nlong id\nlong count\nlong type\nlong subtype\nlong value\nlong weight\nlong name\nlong enchantId\nlong node\n\nlong loop\n\nlong ref\n\nsetx ref to xGetRef \"player\"\n\nset loop to 1\nwhilex ( loop )\n    setx id count type subtype value weight name enchantId node to ref-&gt;xEquipmentList node 0 0\n\n    ; Code to be run for each looped item.\n\n    set loop to node\nendwhile\n\nEnd\n</code></pre> Get Equipped Weapon's Enchantment <p>This example shows how to get the enchantment objectId for the currently equipped weapon. Looping isn't required as the player can never have more than one equipped weapon.</p> <pre><code>begin GetPlayerWeaponInfo\n\nlong ref\n\nlong id\nlong count\nlong type\nlong subtype\nlong value\nlong weight\nlong name\nlong ench\nlong node\n\n; get the player reference\nsetx ref to xGetRef \"player\"\n\n; get info about his weapon\nsetx id count type subtype value weight name ench node to ref-&gt;xEquipmentList 0 1346454871 0\n\nifx ( name )\n    xMessageFix \"Weapon: %s\" name\n    MessageBox \"Weapon: ________________________________\"\nendif\n\nifx ( ench )\n    xMessageFix \"Enchantment: %s\" ench\n    MessageBox \"Enchantment: ________________________________\"\nendif\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/iteration/#xfirstitem","title":"<code>xFirstItem</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The first reference in the current cell's \"Item\" list.</li> </ul> <p><code>xFirstItem</code> returns the first reference in the current cell's \"Item\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to <code>xFirstNPC</code>. Once acquired, the reference can be used with various other MWSE functions, such as <code>xRefID</code> and <code>xRefType</code>. Passing the reference as the argument to the <code>xNextRef</code> function will return the next reference in its associated list.</p> <p>Note</p> <p>Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by <code>xFirstItem</code>, <code>xFirstStatic</code>, and <code>xFirstNPC</code>.</p>"},{"location":"references/mwse-mwscript/iteration/#xfirstnpc","title":"<code>xFirstNPC</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The first reference in the current cell's \"NPC\" list.</li> </ul> <p><code>xFirstNPC</code> returns the first reference in the current cell's \"NPC\" list. Once acquired, the reference can be used with various other MWSE functions, such as <code>xRefID</code> and <code>xRefType</code>. Passing the reference as the argument to the <code>xNextRef</code> function will return the next reference in its associated list.</p> <p>Note</p> <p>Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by <code>xFirstItem</code>, <code>xFirstStatic</code>, and <code>xFirstNPC</code>.</p>"},{"location":"references/mwse-mwscript/iteration/#xfirststatic","title":"<code>xFirstStatic</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The first reference in the current cell's \"Static\" list.</li> </ul> <p><code>xFirstStatic</code> returns the first reference in the current cell's \"Static\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to <code>xFirstNPC</code>. Once acquired, the reference can be used with various other MWSE functions, such as <code>xRefID</code> and <code>xRefType</code>. Passing the reference as the argument to the <code>xNextRef</code> function will return the next reference in its associated list.</p> <p>Note</p> <p>Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by <code>xFirstItem</code>, <code>xFirstStatic</code>, and <code>xFirstNPC</code>.</p>"},{"location":"references/mwse-mwscript/iteration/#xinventory","title":"<code>xInventory</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> objectID: The object ID of the item.</li> <li><code>long</code> count: The number of items in the stack.</li> <li><code>node</code> nextStack: A handle to the next stack in the inventory. This is 0 when no more items are in the inventory.</li> </ul> <p>Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into <code>xNextStack</code> to continue iteration.</p> <p>Warning</p> <p>This function is limited. Consider using <code>xContentList</code>, <code>xContentListFiltered</code> or <code>xEquipmentList</code> instead.</p>"},{"location":"references/mwse-mwscript/iteration/#xnextref","title":"<code>xNextRef</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> reference: A valid reference. See <code>xFirstItem</code>, <code>xFirstNPC</code>, <code>xFirstStatic</code>.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> nextReference: The next reference in the given reference's associated list.</li> </ul> <p><code>xNextRef</code> returns the next reference in the supplied reference's associated list.</p>"},{"location":"references/mwse-mwscript/iteration/#xnextstack","title":"<code>xNextStack</code>","text":"<p>Parameters:</p> <ul> <li><code>node</code> stack: The result from a previous <code>xInventory</code> or xNextStack call.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> objectID: The object ID of the item.</li> <li><code>long</code> count: The number of items in the stack.</li> <li><code>node</code> nextStack: A handle to the next stack in the inventory. This is 0 when no more items are in the inventory.</li> </ul> <p>Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration.</p> <p>Warning</p> <p>This function is limited. Consider using <code>xContentList</code>, <code>xContentListFiltered</code> or <code>xEquipmentList</code> instead.</p>"},{"location":"references/mwse-mwscript/iteration/#xspelllist","title":"<code>xSpellList</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> node: For the first call, this should be 0 to get the first spell. In following iterations, this value will be what is returned as nextNode from the previous call.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> totalSpells : Total number of spells the caller knows.</li> <li><code>long</code> spellId : The spell ID.</li> <li><code>long</code> name : The spell name.</li> <li><code>long</code> type : The spell type. (<code>0</code> = spell, <code>1</code> = ability, <code>2</code> = blight, <code>3</code> = disease, <code>4</code> = curse, <code>5</code> = power)</li> <li><code>long</code> cost : The spell cost.</li> <li><code>long</code> effects : The spell's number of effects (<code>1</code> to <code>8</code>).</li> <li><code>long</code> flags : The spell flags. (<code>1</code> = autocalc, <code>2</code> = PC start, <code>4</code> = always succeeds)</li> <li><code>long</code> nextNode : The next node to supply to function to continue looping. When this value is <code>0</code>, there are no more items.</li> </ul> <p>This function allows a script to iterate through the spell list of an actor and retrieve information about the spells found. Currently this function does not work on creatures.</p>"},{"location":"references/mwse-mwscript/logic/","title":"Logic Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/logic/#xand","title":"<code>xAnd</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the logical operation.</li> <li><code>long</code> rightValue: Second value for the logical operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the logical operation returns true.</li> </ul> <p>This function performs an AND logical operation, and returns its result. An AND operation returns true if both of the values are non-zero.</p> A B <code>xAnd A B</code> 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"references/mwse-mwscript/logic/#xnot","title":"<code>xNot</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> value: Value for the logical operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the logical operation returns true.</li> </ul> <p>This function performs a NOT logical operation, and returns its result. A NOT operation returns true if its parameter is zero.</p> A <code>xNot A</code> 0 1 1 0"},{"location":"references/mwse-mwscript/logic/#xor","title":"<code>xOr</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the logical operation.</li> <li><code>long</code> rightValue: Second value for the logical operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the logical operation returns true.</li> </ul> <p>This function performs an OR logical operation, and returns its result. An OR operation returns true if either of the values are non-zero.</p> A B <code>xOr A B</code> 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"references/mwse-mwscript/logic/#xxor","title":"<code>xXor</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the logical operation.</li> <li><code>long</code> rightValue: Second value for the logical operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the logical operation returns true.</li> </ul> <p>This function performs an XOR logical operation, and returns its result. An XOR operation returns true if one of the values is non-zero, but not both.</p> A B <code>xXor A B</code> 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"references/mwse-mwscript/lua/","title":"Lua Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/lua/#xluarunscript","title":"<code>xLuaRunScript</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> script: The name of the script to run. This is relative to Data Files\\MWSE\\mods.</li> <li><code>varies</code> (many) parameters: Values that the lua script can access. </li> </ul> <p>Returned:</p> <ul> <li><code>varies</code> (many) results: Values that the lua script passes back.</li> </ul> <p>This function allows calling code from an external lua file. This call is blocking. Unlike other MWSE functions, this one requires the author to manage the parameter stack via Lua. This makes for slightly more complicated scripting, but allows for this function to create shared logic. Custom functions can be written out to Lua files and invoked with this method.</p> Example <p>In this example we will create some values, log them, send them to Lua, confirm that we got the values, send more values back, and confirm our results. This demonstrates how to send information back and forth between the <code>xLuaRunScript</code> call and Lua.</p> <p>First, our mwscript:</p> <pre><code>Begin luaexec\n\nshort myShort\nlong myLong\nfloat myFloat\nlong myString\n\nshort retShort\nlong retLong\nfloat retFloat\nlong retString\n\nset myShort to 1\nsetx myLong to xRandomLong 0 2147483647\nsetx myFloat to xRandomFloat 0 1\nsetx myString to xStringBuild \"Hello World!\"\n\nxLogMessage \"[luaexec|mwscript] Sending values: %d, %d, %f, '%s'\" myShort myLong myFloat myString\n\nsetx retShort retLong retFloat retString to xLuaRunScript \"test_mod\\\\luaexec\" myShort myLong myFloat myString\n\nxLogMessage \"[luaexec|mwscript] Got results: %d, %d, %f, '%s'\" retShort, retLong, retFloat, retString\n\nStopScript luaexec\n\nEnd\n</code></pre> <p>Next, we have our Lua file (Data Files\\mods\\test_mod\\luaexec.lua) that gets the data, prints it, and sends more back.</p> <pre><code>local myShort = mwse.stack.popShort()\nlocal myLong = mwse.stack.popLong()\nlocal myFloat = mwse.stack.popFloat()\nlocal myString = mwse.stack.popString()\nprint(string.format(\"[luaexec|lua] Got values: %d, %d, %f, '%s'\", myShort, myLong, myFloat, myString))\n\nmwse.stack.pushString(\"poop\")\nmwse.stack.pushFloat(3.14)\nmwse.stack.pushLong(512)\nmwse.stack.pushShort(4)\nprint(\"[luaexec|lua] Sending back values: 4, 512, 3.14, 'poop'\")\n</code></pre>"},{"location":"references/mwse-mwscript/magic/","title":"Magic Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/magic/#xaddeffect","title":"<code>xAddEffect</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> objectType: Object Type value for the target's type.</li> <li><code>string</code> objectID: Object ID of target spell, enchantment, or potion.</li> <li><code>long</code> effectID: Magic Effect ID that will be added to the target.</li> <li><code>long</code> skillAttributeID: Skill or Attribute ID to be used. (Only for absorb/damage/drain/fortify/restore effects - ignored otherwise.)</li> <li><code>long</code> rangeType: New range type. (0 = SELF, 1 = TOUCH, 2 = TARGET)</li> <li><code>long</code> area: Area of effect.</li> <li><code>long</code> duration: Duration in seconds.</li> <li><code>long</code> magMin: Minimum magnitude.</li> <li><code>long</code> magMax: Maximum magnitude.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> success: <code>1</code> if the effect was added, or <code>0</code> if it wasn't.</li> </ul> <p>Adds a new effect to the given spell, enchantment, or potion.</p> Example <pre><code>begin Example_xAddEffect\n\nshort result\n\n; Fire Damage (14), On Touch (1), Duration (30), Magnitude (1 to 5)\nsetx result to xAddEffect 1279610963 \"fire bite\" 14 0 1 0 30 1 5\n\nif ( result != 0 )\n    MessageBox \"Your 'Fire Bite' spell has been upgraded!\"\nendif\n\nStopScript Example_xAddEffect\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/magic/#xcreatespell","title":"<code>xCreateSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> ID: The object ID of the spell to create.</li> <li><code>string</code> name: The name of the spell to create.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> wasCreated: <code>1</code> if the spell was successfully created.</li> </ul> <p>Creates a new spell with all flags cleared, origin set to spellmaker (<code>2</code>) and a single Water Breathing effect and adds it to the master spell list.</p> <p>Note</p> <p>This function will fail if ID already exists or if either ID or name are longer than 31 characters.</p>"},{"location":"references/mwse-mwscript/magic/#xdeleteeffect","title":"<code>xDeleteEffect</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> type: The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object.</li> <li><code>string</code> id: The object ID to remove an effect from.</li> <li><code>long</code> index: The index of the effect to remove. Must be between (inclusive) <code>1</code> and <code>8</code>.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the effect was deleted.</li> </ul> <p>Removes the effect at index from the given spell or enchantment.</p> <p>Other effects are reordered, e.g. if effect <code>1</code> is removed, effect <code>2</code> becomes <code>1</code>, <code>3</code> becomes <code>2</code>, etc.</p>"},{"location":"references/mwse-mwscript/magic/#xdeletespell","title":"<code>xDeleteSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> type: The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object.</li> <li><code>string</code> id: The object ID to remove an effect from.</li> <li><code>long</code> index: The index of the effect to remove. Must be between (inclusive) <code>1</code> and <code>8</code>.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> if the spell was deleted.</li> </ul> <p>Deletes a spell from the master spell list. It will no longer persist in save games.</p> <p>Notes: Be very careful using this command. The effect of deleting a spell originating from the CS is undefined. The effect of deleting a spell referenced by other entities (player, npcs, traps, etc.) in undefined. Do not attempt to add a deleted spell with AddSpell. AddSpell will succeed, but leave the game in an indeterminate state. It's not yet clear why this happens, but I hope to fix it in the future.</p>"},{"location":"references/mwse-mwscript/magic/#xgetalchemyinfo","title":"<code>xGetAlchemyInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> id: ID of the alchemy item to get information for.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> effectCount: The number of effects on the alchemy item, between <code>1</code> and <code>8</code>.</li> <li><code>long</code> flags: <code>1</code> = autocalc, <code>2</code> = PC Start, <code>4</code> = Always Succeeds</li> </ul> <p>Provides information important to a given alchemy object. Unlike the other related functions, there is no associated ability to set this information. The effects themselves can still be retrieved and modified using <code>xGetEffectInfo</code> and <code>xSetEffectInfo</code>.</p> <p>Tip</p> <p>Use this function to determine the state of a potion before modifying it with <code>xAddEffect</code>, <code>xDeleteEffect</code> or <code>xSetEffectInfo</code>.</p> Example <pre><code>begin Example_xGetAlchemyInfo\n\nlong numEffects\nlong flags\n\nsetx numEffects flags to xGetAlchemyInfo \"potion_skooma_01\"\n\nMessageBox \"flags: %g\" flags\nMessageBox \"numEffects: %g\" numEffects\nMessageBox \"potion_skooma_01\"\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/magic/#xgetbaseeffectinfo","title":"<code>xGetBaseEffectInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> attributeID: The School ID to get the value of.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> school: The School of the effect.</li> <li><code>float</code> baseCost: The base cost of the effect.</li> <li><code>long</code> flags: The flags of the effect.</li> </ul> <p>Returns the properties of a magic effect.</p> <p>This function only supports the player and NPCs.</p>"},{"location":"references/mwse-mwscript/magic/#xgeteffectinfo","title":"<code>xGetEffectInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> type: The Object Type to get the effect of.</li> <li><code>string</code> objectID: The Object ID of the object to get the effect of.</li> <li><code>long</code> index: The effect index to get the info from, from 1 to 8.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> effectId: The <code>Effect ID</code>_ of the effect.</li> <li><code>long</code> skillAttribId: The Attribute or Skill ID associated with the effect, if applicable.</li> <li><code>long</code> rangeType: <code>0</code> = self, <code>1</code> = touch, <code>2</code> = target</li> <li><code>long</code> area: Area of effect.</li> <li><code>long</code> duration: Duration in seconds.</li> <li><code>long</code> magMin: Minimum magnitude.</li> <li><code>long</code> magMax: Maximum magnitude.</li> </ul> <p>Returns the properties of an effect on the given alchemy item, spell, or enchantment.</p> <p>On failure, effectId is set to <code>-1</code>.</p>"},{"location":"references/mwse-mwscript/magic/#xgetenchantinfo","title":"<code>xGetEnchantInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The Object ID of the enchantment.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> type: <code>0</code> = Cast Once, <code>1</code> = Cast When Strikes, <code>2</code> = Cast When Used, <code>3</code> = Constant</li> <li><code>short</code> cost: The cost of using the enchantment.</li> <li><code>long</code> maxCharge: The maximum charge for the enchantment.</li> <li><code>short</code> numEffects: The number of effects on the enchantment.</li> <li><code>long</code> autocalc: <code>0</code> = off, <code>1</code> = on</li> </ul> <p>Returns info about the given enchantId, or <code>0</code> if enchantId is invalid.</p>"},{"location":"references/mwse-mwscript/magic/#xgetingredienteffect","title":"<code>xGetIngredientEffect</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> id: The id of the ingredient to fetch data for.</li> <li><code>long</code> effectIndex: A value between 1 and 4, matching the effect index desired.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> effectType: The Effect Type that the ingredient has at the given effectIndex.</li> <li><code>long</code> skillAttributeType: The Attribute Type or Skill Type, if the effectType supports one. Otherwise will always be -1.</li> </ul> <p>This function allows scripts to determine the effects of a given ingredient programmatically. Scripts can alter these values as well using <code>xSetIngredientEffect</code>.</p> Example <pre><code>begin Example_xGetIngredientEffect\n\nlong effect\nlong skillAttribute\n\nsetx effect skillAttribute to xGetIngredientEffect \"food_kwama_egg_01\" 1\n\nMessageBox \"skill / attribute: %g\" skillAttribute\nMessageBox \"effect: %g\" effectID\nMessageBox \"food_kwama_egg_01\"\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/magic/#xgetspellinfo","title":"<code>xGetSpellInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the spell to get information from.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> name: The spell's name.</li> <li><code>short</code> type: <code>0</code> = Spell, <code>1</code> = Ability, <code>2</code> = Blight, <code>3</code> = Disease, <code>4</code> = Curse, <code>5</code> = Power.</li> <li><code>short</code> cost: The cost to cast the spell.</li> <li><code>short</code> numEffects: The number of effects the spell has.</li> <li><code>long</code> flags: Bit array of spell flags. <code>1</code> = Auto-Calc, <code>2</code> = PC Starting Spell, <code>4</code> = Always Succeeds.</li> </ul> <p>This function gets information about a spell, given its objectID.</p> <p>The numEffects value is useful when looping over spell effects using <code>xGetEffectInfo</code>.</p>"},{"location":"references/mwse-mwscript/magic/#xsetbaseeffectinfo","title":"<code>xSetBaseEffectInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> effectID: The Magic Effect to modify.</li> <li><code>long</code> school: New spell School.</li> <li><code>float</code> cost: New base cost in magicka.</li> <li><code>long</code> flags: New Magic Effect Flags. Only spellmaking, enchanting, and negative lighting are valid here. All others are ignored.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> on success, <code>0</code> on failure.</li> </ul> <p>This function changes the properties of the effect for all magic that uses it. Changes to school and flags take effect immediately.</p> <p>E.g. if you have a spell with a Fire Damage effect and you change the Fire Damage school to Alteration, casting that spell will raise Alteration instead of Destruction. Likewise, if you clear the Spellmaking or Enchanting flags, Fire Damage will no longer be available at the respective crafter. Changes to the base cost take effect on any subsequent spell or magic item creation, but don't affect any spells or items already in the game.</p>"},{"location":"references/mwse-mwscript/magic/#xseteffectinfo","title":"<code>xSetEffectInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> type: The Object Type of the object to alter.</li> <li><code>string</code> id: The object ID of the object to alter.</li> <li><code>long</code> index: The index of the effect to alter.</li> <li><code>long</code> effectID: The Effect Type to change to.</li> <li><code>long</code> skillOrAttributeID: The Attribute or Skill ID to use, if the effectID uses one.</li> <li><code>long</code> rangeType: <code>0</code> = self, <code>1</code> = touch, <code>2</code> = target.</li> <li><code>long</code> area: Area of effect.</li> <li><code>long</code> duration: Effect duration (in seconds).</li> <li><code>long</code> minimumMagnitude: Minimum magnitude.</li> <li><code>long</code> maximumMagnitude: Maximum magnitude.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> on success, <code>0</code> on failure.</li> </ul> <p>Modifies an existing effect on the given spell or enchantment.</p>"},{"location":"references/mwse-mwscript/magic/#xsetenchantinfo","title":"<code>xSetEnchantInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> enchantID: Object ID of the enchantment to modify.</li> <li><code>long</code> type: <code>0</code> = cast once, <code>1</code> = cast when strikes, <code>2</code> = cast when used, <code>3</code> = constant.</li> <li><code>long</code> cost: New cost per use.</li> <li><code>long</code> charge: New maximum charge.</li> <li><code>long</code> autoCalc: <code>0</code> = off, <code>1</code> = on.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: <code>1</code> on success, <code>0</code> on failure.</li> </ul> <p>Sets the properties of the given enchantId.</p>"},{"location":"references/mwse-mwscript/magic/#xsetingredienteffect","title":"<code>xSetIngredientEffect</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> id: The id of the ingredient to fetch data for.</li> <li><code>long</code> effectIndex: A value between <code>1</code> and <code>4</code>, matching the effect index desired.</li> <li><code>long</code> effectType: The Effect Type that the ingredient has at the given effectIndex.</li> <li><code>long</code> skillAttributeType: The Attribute Type or Skill Type, if the effectType supports one.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> success: If the effect was set, this value is <code>1</code>. If it failed, the value is <code>0</code>.</li> </ul> <p>This function allows scripts to modify the effects of an ingredient programmatically.</p> <p>To instead retrieve these values, use  <code>xGetIngredientEffect</code>.</p> <p>??? example Set an ingredient's first effect.     <pre><code>begin WheatAllergy\n\nlong ingred\nlong index\nlong effect\nlong attrib\n\nsetx ingred to xStringBuild \"ingred_bread_01\"\nset index to 1 ; First Slot\nset effect to 22 ; Damage Attribute\nset attrib to 0 ; Strength\nxSetIngredientEffect ingred index effect attrib\n\n; in this case, we could've also used literals\nxSetIngredientEffect \"ingred_bread_01\" 1 22 0\n\n; needs to run only once per session\nStopScript WheatAllergy\n\nend\n</code></pre></p>"},{"location":"references/mwse-mwscript/magic/#xsetspellinfo","title":"<code>xSetSpellInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> spellID: The spell ID to modify.</li> <li><code>string</code> spellName: New display name. Names longer than 31 characters will be truncated.</li> <li><code>long</code> type: New spell type. (<code>0</code> = spell, <code>1</code> = ability, <code>2</code> = blight, <code>3</code> = disease, <code>4</code> = curse, <code>5</code> = power)</li> <li><code>long</code> cost: New magicka cost.</li> <li><code>long</code> flags: New flags. (<code>1</code> = autocalc, <code>2</code> = player start, <code>4</code> = always succeeds)</li> <li><code>long</code> origin: New origin. (<code>1</code> = module, not saved in .ess; <code>2</code> = spellmaker, saved in .ess; <code>0</code> to leave unmodified)</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if the function was successfull, other wise <code>0</code>.</li> </ul>"},{"location":"references/mwse-mwscript/math/","title":"Math Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/math/#xarccos","title":"<code>xArcCos</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the inverse trigonometric function arccosine on the given angle.</p>"},{"location":"references/mwse-mwscript/math/#xarcsin","title":"<code>xArcSin</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the inverse trigonometric function arcsine on the given angle.</p>"},{"location":"references/mwse-mwscript/math/#xarctan","title":"<code>xArcTan</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the inverse trigonometric function arctangent on the given angle.</p>"},{"location":"references/mwse-mwscript/math/#xarctan2","title":"<code>xArcTan2</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> x: The angle to take the trigonometric function of.</li> <li><code>float</code> y: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the inverse trigonometric function arctan2 on y/x.</p>"},{"location":"references/mwse-mwscript/math/#xbitand","title":"<code>xBitAnd</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the bitwise operation.</li> <li><code>long</code> rightValue: Second value for the bitwise operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the bitwise operation returns true.</li> </ul> <p>This function performs an AND bitwise operation, and returns its result.</p> A B <code>xBitAnd A B</code> 0000 0000 0000 0101 1010 0000 1100 1111 1100 1111 0000 0000"},{"location":"references/mwse-mwscript/math/#xbitnot","title":"<code>xBitNot</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: Value for the bitwise operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the bitwise operation returns true.</li> </ul> <p>This function performs a NOT bitwise operation, and returns its result.</p> A <code>xBitNot A</code> 0000 1111 0101 1010 1100 0011 1111 0000"},{"location":"references/mwse-mwscript/math/#xbitor","title":"<code>xBitOr</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the bitwise operation.</li> <li><code>long</code> rightValue: Second value for the bitwise operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the bitwise operation returns true.</li> </ul> <p>This function performs an OR bitwise operation, and returns its result.</p> A B <code>xBitOr A B</code> 0000 0000 0000 0101 1010 1111 1100 1111 1111 1111 0000 1111"},{"location":"references/mwse-mwscript/math/#xbitxor","title":"<code>xBitXor</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> leftValue: First value for the bitwise operation.</li> <li><code>long</code> rightValue: Second value for the bitwise operation.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the bitwise operation returns true.</li> </ul> <p>This function performs an XOR bitwise operation, and returns its result.</p> A B <code>xBitXor A B</code> 0000 0000 0000 0101 1010 1111 1100 1111 0011 1111 0000 1111"},{"location":"references/mwse-mwscript/math/#xcos","title":"<code>xCos</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the trigonometric function cosine on the given angle.</p>"},{"location":"references/mwse-mwscript/math/#xdegrad","title":"<code>xDegRad</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: An angle, in degrees.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: The value of angle in radians.</li> </ul> <p>This simple function converts from degrees to radians.</p>"},{"location":"references/mwse-mwscript/math/#xfloatstolong","title":"<code>xFloatsToLong</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> value1: First value. Order doesn't matter.</li> <li><code>float</code> value2: Second value. Order doesn't matter.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: Merged value from value1 and value2.</li> </ul> <p>This function retrieves a long value using a pair of floats. It is intended to work around the issue that all globals are really floats.</p> <p>This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter.</p> <p>Warning</p> <p>MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead.</p> Example <pre><code>long lVal1\nlong lVal2\nfloat fVal1\nfloat fVal2\n\nset lVal1 to 2147483647\nsetx fVal1 fVal2 to xLongToFloats lVal1\nsetx lVal2 to xFloatsToLong fVal1 fVal2\n\nif ( lVal1 == lVal2 )\n    MessageBox \"Success!\"\nelse\n    MessageBox \"Failure!\"\nendif\n</code></pre>"},{"location":"references/mwse-mwscript/math/#hypot","title":"<code>Hypot</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> x:</li> <li><code>float</code> y:</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> hypotenuse:</li> </ul> <p><code>xHypot</code> returns the hypotenuse for sides a and b, c = sqrt(aa + bb). Unlike <code>xSqrt</code> this is more efficient than calculating the formula inside the script.</p>"},{"location":"references/mwse-mwscript/math/#xlongtofloats","title":"<code>xLongToFloats</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> value: Value to split.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result1: First half of the split value.</li> <li><code>float</code> result2: Second half of the split value.</li> </ul> <p>This function stores a long value using a pair of floats. It is intended to work around the issue that all globals are really floats.</p> <p>This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter.</p> <p>Warning</p> <p>MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead.</p> Example <pre><code>long lVal1\nlong lVal2\nfloat fVal1\nfloat fVal2\n\nset lVal1 to 2147483647\nsetx fVal1 fVal2 to xLongToFloats lVal1\nsetx lVal2 to xFloatsToLong fVal1 fVal2\n\nif ( lVal1 == lVal2 )\n    MessageBox \"Success!\"\nelse\n    MessageBox \"Failure!\"\nendif\n</code></pre>"},{"location":"references/mwse-mwscript/math/#xpow","title":"<code>xPow</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> base: Base value.</li> <li><code>float</code> exponent: Exponent to calculate.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Calculates the value of base raised to exponent.</p>"},{"location":"references/mwse-mwscript/math/#xdegrad_1","title":"<code>xDegRad</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: An angle, in radians.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: The value of angle in degrees.</li> </ul> <p>This simple function converts from radians to degrees.</p>"},{"location":"references/mwse-mwscript/math/#xrandomfloat","title":"<code>xRandomFloat</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> minimum: Lowest value to return.</li> <li><code>float</code> maximum: Highest value to return.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: A random value between minimum and maximum.</li> </ul> <p>This function returns a random <code>float</code> value.</p>"},{"location":"references/mwse-mwscript/math/#xrandomlong","title":"<code>xRandomLong</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> minimum: Lowest value to return.</li> <li><code>long</code> maximum: Highest value to return.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: A random value between minimum and maximum.</li> </ul> <p>This function returns a random <code>long</code> value.</p>"},{"location":"references/mwse-mwscript/math/#xshift","title":"<code>xShift</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> value: The value to shift.</li> <li><code>long</code> magnitude: The number of bits to shift. If negative, the bits will be reverse-shifted.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: value, shifted magnitude bits.</li> </ul> <p>This function allows shifting a value by a number of bits equal to magnitude.</p>"},{"location":"references/mwse-mwscript/math/#xsin","title":"<code>xSin</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the trigonometric function sine on the given angle.</p>"},{"location":"references/mwse-mwscript/math/#xsqrt","title":"<code>xSqrt</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> value: Value to take the square root of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Calculates the square root of value.</p>"},{"location":"references/mwse-mwscript/math/#xtan","title":"<code>xTan</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> angle: The angle to take the trigonometric function of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> result: Result of the function.</li> </ul> <p>Provides the trigonometric function tangent on the given angle.</p>"},{"location":"references/mwse-mwscript/player/","title":"Player Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/player/#xgetpctarget","title":"<code>xGetPCTarget</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The target reference, or <code>0</code> if none was found.</li> </ul> <p>Returns a reference to the object in the player's crosshair, or <code>0</code> if the player is not looking at anything that can be manipulated.</p>"},{"location":"references/mwse-mwscript/player/#xgetprogresslevel","title":"<code>xGetProgressLevel</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> progress: The player's progress to next level.</li> </ul> <p>Returns the current progress to the next level.</p>"},{"location":"references/mwse-mwscript/player/#xgetprogressskill","title":"<code>xGetProgressSkill</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: The Skill ID to get the progress of.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> raw: Raw skill progress value.</li> <li><code>float</code> normalized: Normalized skill progress value.</li> </ul> <p>Returns the skill progress for the given skill ID. Returned values will be zero if skill ID is invalid.</p>"},{"location":"references/mwse-mwscript/player/#xsetskillinfo","title":"<code>xSetSkillInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: 1 if the effect was added, or <code>0</code> if it wasn't.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> skillID:  ID of the Skill to be modified.</li> <li><code>long</code> attributeID: ID of the new governing Attribute.</li> <li><code>long</code> specialization: The new Specialization Type.</li> <li><code>float</code> action1: Progress value for the 1st action.</li> <li><code>float</code> action2: Progress value for the 2nd action.</li> <li><code>float</code> action3: Progress value for the 3rd action.</li> <li><code>float</code> action4: Progress value for the 4th action.</li> </ul> <p>All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...)</p> <p>Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.</p> Example <pre><code>setx attribute specialization action1 action2 action3 action4 to xGetSkillInfo 9\n</code></pre>"},{"location":"references/mwse-mwscript/player/#xmodprogresslevel","title":"<code>xModProgressLevel</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> value: Value added toward the player's progress to next level.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if successful, otherwise <code>0</code>.</li> </ul> <p>Adds value to the progress to the next player level. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure.</p>"},{"location":"references/mwse-mwscript/player/#xmodprogressskill","title":"<code>xModProgressSkill</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: The Skill ID to modify.</li> <li><code>float</code> value: The value to modify the skill's progress by.</li> <li><code>long</code> normalized: flag indicating whether value is raw (<code>0</code>) or normalized (<code>1</code>)</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if successful, otherwise <code>0</code>.</li> </ul> <p>Modifies the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.</p>"},{"location":"references/mwse-mwscript/player/#xpccellid","title":"<code>xPCCellID</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> cellID: The player's current cell ID.</li> </ul> <p>Returns a string containing the name of the current cell.</p>"},{"location":"references/mwse-mwscript/player/#xplace","title":"<code>xPlace</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the item to add.</li> </ul> <p>Returned:</p> <ul> <li><code>reference</code> placedObject: The reference to the placed object.</li> </ul> <p>This is based on the vanilla PlaceAtPC function that can take variable objectID. Unlike the original function, xPlace does not allow specifying a count or location for the placed object.</p> <p><code>xPlace</code> returns a reference to the placedObject that can be used to take further actions or obtain further information.</p> <p>Note</p> <p>Unlike previous version of MWSE, the reference returned from <code>xPlace</code> is immediately available on the same frame it was created.</p>"},{"location":"references/mwse-mwscript/player/#xsetprogresslevel","title":"<code>xSetProgressLevel</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> progress: New value for the player's progress to next level.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if successful, otherwise <code>0</code>.</li> </ul> <p>Sets the progress to next level. There are some limits to what you can do with this, because of how the game handles this and other values.</p> <p>Progress is stored in memory as a signed long (32 bits, max value = <code>2147483647</code>). Progress is stored in the save file as an unsigned char (8 bits, max value = <code>255</code>). Progress is cast to a float before being displayed on the character screen. This appears to be true for <code>iLevelupTotal</code> as well.</p>"},{"location":"references/mwse-mwscript/player/#xsetprogressskill","title":"<code>xSetProgressSkill</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID: The Skill ID to modify.</li> <li><code>float</code> value: The value to set the skill's progress to.</li> <li><code>long</code> normalized: Flag indicating whether value is raw (<code>0</code>) or normalized (<code>1</code>)</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if successful, otherwise <code>0</code>.</li> </ul> <p>Sets the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.</p>"},{"location":"references/mwse-mwscript/player/#xsetskillinfo_1","title":"<code>xSetSkillInfo</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> skillID:  ID of the Skill to be modified.</li> <li><code>long</code> attributeID: ID of the new governing Attribute.</li> <li><code>long</code> specialization: The new Specialization Type.</li> <li><code>float</code> action1: Progress value for the 1st action.</li> <li><code>float</code> action2: Progress value for the 2nd action.</li> <li><code>float</code> action3: Progress value for the 3rd action.</li> <li><code>float</code> action4: Progress value for the 4th action.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> success: 1 if the effect was added, or 0 if it wasn't.</li> </ul> <p>All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...)</p> <p>Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.</p>"},{"location":"references/mwse-mwscript/reference/","title":"Reference Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/reference/#xadditem","title":"<code>xAddItem</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the item to add.</li> <li><code>long</code> count: The number of items to add.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla AddItem function that can take variable input.</p>"},{"location":"references/mwse-mwscript/reference/#xdistance","title":"<code>xDistance</code>","text":"<p>Parameters:</p> <ul> <li><code>reference</code> target: The reference of the target to get the distance from.</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> distance: The distance between the calling reference and the target reference.</li> </ul> <p>Calculates the distance between the calling reference and target.</p> <p>Note</p> <p>Unlike the vanilla <code>GetDistance</code> function, this function will work on non-actors.</p> Distance from PC Target <p>This example calculates the distance between the PC and what they are looking at.</p> <pre><code>begin DistanceToTarget\n\nlong pcRef\nlong targetRef\nfloat distance\n\nsetx pcRef to xGetRef \"player\"\nsetx targetRef to xGetPCTarget\n\nsetx distance to pcRef-&gt;xDistance targetRef\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xexplodespell","title":"<code>xExplodeSpell</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the spell to explode.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla ExplodeSpell function that can take variable input.</p>"},{"location":"references/mwse-mwscript/reference/#xgetbaseid","title":"<code>xGetBaseID</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> id: The reference's base object ID.</li> </ul> <p><code>xGetBaseID</code> returns reference's base object ID. In contrast to <code>xRefID</code>, this function will not include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where <code>xRefID</code> would return <code>\"Fargoth00000000\"</code>, <code>xGetBaseID</code> would instead return just <code>\"Fargoth\"</code>.</p>"},{"location":"references/mwse-mwscript/reference/#xgetcharge","title":"<code>xGetCharge</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> charge: The current charge on a item.</li> </ul> <p>Returns the current charge on a 'cast when used' or 'cast when strikes' enchanted item. Constant effect and non-enchanted items return <code>0</code>.</p>"},{"location":"references/mwse-mwscript/reference/#xgetcondition","title":"<code>xGetCondition</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> condition: The current condition on a item.</li> </ul> <p>Returns the current condition for armor and weapons and remaining uses for lockpicks, probes, and repair tools.</p>"},{"location":"references/mwse-mwscript/reference/#xgetenchant","title":"<code>xGetEnchant</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> enchantID: The Object ID of the enchantment.</li> <li><code>short</code> type: The type of the enchantment. <code>0</code> = Cast Once, <code>1</code> = Cast on Strike, <code>2</code> = Cast on Use, <code>3</code> = Constant</li> <li><code>short</code> cost: The cost of the enchantment.</li> <li><code>float</code> currentCharge: The current charge for the enchantment.</li> <li><code>long</code> maxCharge: The maximum charge for the enchantment.</li> <li><code>short</code> numEffect: The number of effects on the enchantment.</li> <li><code>long</code> autocalc: 1 if the enchantment is auto-calculated.</li> </ul> <p>Returns info about the enchantment on the target item, or 0 if no enchantment is present.</p>"},{"location":"references/mwse-mwscript/reference/#xgetencumb","title":"<code>xGetEncumb</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> weight: The weight, in pounds, of all the reference's inventory. This value is negative if leveled items are present.</li> </ul> <p>Calculates the total, unmodified encumbrance of the target reference's inventory. This function does not take into account any feather or burden spell effects.</p> <p>Note</p> <p>If the target has any leveled items in its inventory, the returned weight is negative.</p>"},{"location":"references/mwse-mwscript/reference/#xgetitemcount","title":"<code>xGetItemCount</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectId: The item's object ID to get the count of.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> itemCount: The number of items that the reference has.</li> </ul> <p>This is a wrapper function around <code>GetItemCount</code> that allows variable input.</p> Example <pre><code>begin Example_xGetItemCount\n\nlong ref\n\nlong id\nlong count\n\nsetx ref to xGetRef \"player\"\n\nsetx id to xStringBuild \"Gold_001\"\n\nsetx count to ref-&gt;xGetItemCount id\n\nMessageBox \"Total Gold: %g\" count\n\nStopScript Example_xGetItemCount\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xgetlocklevel","title":"<code>xGetLockLevel</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> lockLevel: The reference's lock level, or -1 if none was found.</li> </ul> <p>Returns the lock level of a door or container. This function returns -1 for doors/containers that have never been locked and for items that aren't doors or containers.</p> <p>This returns the lock level regardless of whether the item is locked or unlocked. Use GetLocked to determine the state of the lock.</p> <p>Lock level is stored as a signed short (16 bits, max value = 32,767). Values less than 0 do not survive saving, exiting, and reloading. They are converted to their absolute value and the door/container is flagged as unlocked.</p>"},{"location":"references/mwse-mwscript/reference/#xgetmaxcharge","title":"<code>xGetMaxCharge</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> maxCharge: The current charge on a item.</li> </ul> <p>Returns the maximum charge on an enchanted item.</p>"},{"location":"references/mwse-mwscript/reference/#xgetmaxcondition","title":"<code>xGetMaxCondition</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> maxCondition: The current maximum condition on a item.</li> </ul> <p>Returns the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.</p>"},{"location":"references/mwse-mwscript/reference/#xgetmodel","title":"<code>xGetModel</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectId: The object ID to get the model of. If 0, the reference will be used.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> modelPath: The path to the model.</li> </ul> <p>This function returns the model of an object. This can be done by passing a string for the object Id, or 0 can be passed to use the script's reference.</p> <p>Note</p> <p>The path returned does not include the Data Files\\models prefix.</p> Get Model by Object ID <pre><code>begin Example_xGetModelById\n\nlong model\n\nsetx model to xGetModel \"ingred_bonemeal_01\"\nif ( model == 0 )\n    return\nendif\n\nxMessageFix \"Model: %s\" model\nMessageBox \"Model: ________________________________\"\n\nend\n</code></pre> Get Model by Reference <pre><code>begin Example_xGetModelByRef\n\nlong ref\nlong model\n\nsetx ref to xGetPCTarget\nif ( ref == 0 )\n    return\nendif\n\nsetx model to ref-&gt;xGetModel 0\nif ( model == 0 )\n    return\nendif\n\nxMessageFix \"Model: %s\" model\nMessageBox \"Model: ________________________________\"\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xgetname","title":"<code>xGetName</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> name: The reference's name, or <code>0</code> if no name was found.</li> </ul> <p><code>xGetName</code> returns a string containing the name (suitable for display, not the objectid) for the object or 0 if the object doesn't have a name. The NPC who falls from the sky near Seyda Neen has an object id of \"agronian guy\" but his name is \"Tarhiel\" when you look at his corpse.</p>"},{"location":"references/mwse-mwscript/reference/#xgetownerinfo","title":"<code>xGetOwnerInfo</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> owner: The object ID of the NPC or faction owner of the object.</li> <li><code>long</code> or <code>string</code> condition: If owned by a faction, this is a <code>long</code> indicating the required rank. If this is an NPC this value is either 0, or a <code>string</code> for the global variable to check.</li> <li><code>long</code> type: The Object Type of owner, either NPC or Faction.</li> </ul> <p>Ownership of entities in the world in Morrowind is comprised of two parts: owner and condition (this can specify when the player being detected taking or using the entity is not considered a crime). These work in two modes:</p> <ol> <li>The first is where owner is an NPC ID, and condition is a global variable - while the global var is set to a non-zero value, activating the entity is never considered a crime.</li> <li>In the second mode, owner is a faction id, and condition is a rank within it. If the player has equal (or higher) rank in that faction, then he can be seen using or taking the entity without it being a crime. This is how supply chests and beds in guildhalls work (their rank requirement is the minimal rank).</li> </ol> <p>This function allows getting full ownership information of an entity: both parts, whatever they may be (as well as what mode is used for the ownership). It is more in-depth than the <code>xGetOwner</code> function, which does not fully handle faction ownership or ownership with a global var requirement.</p> <p>Tip</p> <p>If the returned condition is a global variable, it can be used with <code>xGetGlobal</code> and <code>xSetGlobal</code>.</p> Boobytrapped Mages Guild and Telvanni faction containers <pre><code>begin boobycontainers\n;if the player tries to open a container owned by either MG or GHT that he\n;doesn't have the required rank to legally take items from, then instead of\n;the container opening, the player will be zapped.\n\nshort framecount\nshort temp\nshort player_rank\nlong pctarget\nlong type\nlong own_id\nlong own_cond\n\nif ( MenuMode )\n    return\nendif\n\nset framecount to ( framecount + 1 )\nif ( framecount &lt; 30 )\n    return\nendif\nset framecount to 0\n\nsetx pctarget to xGetPCTarget\nifx ( pctarget )\n    setx type to pctarget-&gt;xRefType\n    if ( type != 1414418243 ) ;if it's not a container ref type\n        return\n    endif\n    setx type own_id own_cond to pctarget-&gt;xGetOwnerInfo\n    if ( type != 1413693766 ) ;if it's not a faction ownership type\n        return\n    endif\n\n    setx temp to xStringCompare own_id \"Mages Guild\" ;if the owner of the container is MG, temp will be 0\n    ifx ( temp ) ;not MG\n        setx temp to xStringCompare own_id \"Telvanni\"\n        ifx ( temp )\n            ;owner is not MG and not GHT, either\n            return\n        endif\n        ;owner is GHT\n        set player_rank to GetPCRank \"Telvanni\" ;doesn't hurt here, but remember 0 and -1 are both possible return values of this function\n    else\n        ;owner is MG\n        set player_rank to GetPCRank \"Mages Guild\"\n    endif\n\n    set temp to 0\n    if ( player_rank &gt;= own_cond ) ;player is of the right rank in whichever faction to be able to claim the container's contents\n        set temp to 1\n    endif\n    ifx ( temp )\n        ;originally, there was only a return here.\n        ;the following block is needed in case activation was already blocked by the OnActivate call (the 2nd instance of it, now) on a previous run, but the player since raised in rank enough; without this line, the player will no longer get the trap, but the container may not open (as it normally should), either\n        xSetRef pctarget\n        set temp to OnActivate\n        ifx ( temp )\n            pctarget-&gt;Activate\n        endif\n        return\n    endif\n\n    ;if reached here, player doesn't meet rank requirement\n    xSetRef pctarget\n    if ( OnActivate ) ;merely CALLING this function will block any further normal activation attempts. it makes the object's activation temporarily only possible through the Activate function\n        MessageBox \"A trap is sprung!\"\n        set temp to - ( player-&gt;GetFatigue + 1 )\n        player-&gt;ModCurrentFatigue temp ;makes player fall down (\"knocked out\") briefly - causes current fatigue to be -1\n        player-&gt;PlaySound \"destruction hit\"\n    endif\nendif\n\nend\n</code></pre> World entity destruction with ownership penalty <pre><code>begin entitydestruction\n\n;allows the player to destroy objects in the world by striking at them with\n;a weapon (or barehanded). but if the player wouldn't have been (legally) allowed to pick up that\n;object, he gets a bounty as if he stole it (with respect to the GMST that controls the bounty amount for theft).\n\n;the value of containers is assumed to be only the value of all the items within them.\n;the value of doors is assumed to be 100 septims, and of activators, 200 septims.\n\n;this script doesn't take into account whether player is detected (sneaking, invisible),\n;etc. well, he's doing a loud and incriminating action, anyway.\n;it doesn't do faction expulsion, either...\n\nshort framecount\nshort update_col\nlong temp\nlong pctarget\nlong type\nlong value\nlong nextref\nlong invvalue\nlong invcount\nlong ownerid\nlong condition\nfloat glob\n;note: in this script, existing vars are often reused, so that a bunch of\n;vars are also used for other purposes than their name suggests.\n\n;for example, because it is the only float and there's no problem with\n;overwriting it, 'glob' is used to (temporarily) hold both the result of\n;a reading of a global var, and also of reading a float GMST.\n\n\nif ( MenuMode )\n    return\nendif\n\nset framecount to ( framecount + 1 )\nif ( framecount &lt; timing1 )\n    return\nendif\nset framecount to 0\n\nif ( player-&gt;GetWeaponDrawn == 0 )\n    return\nendif\n\nif ( player-&gt;GetWeaponType == 0 )\n    return ;ignore lockpicks and probes; unfortuantely this also applies to Short Blades...\nendif\n\nsetx temp to xKeyPressed 1 ;left mouse button\nsetx pctarget to xGetPCTarget\n\nsetx temp to xAnd temp pctarget;if player looking at something AND pressing LMB, temp will be 1\n\nif ( temp == 0 )\n    return\nendif\n\n;you should also be able to just use 'if ( player-&gt;GetSoundPlaying \"weapon swish\" )' instead, to check\n;if the player is making a strike, at least on machines where GetSoundPlaying works fine.\n;you'd also be able to automatically support all swinging weapons, then.\n\nsetx type to pctarget-&gt;xRefType\nset value to 0\nset nextref to 0\nif ( type == 1598246990 ) ;NPC\n    return\nelseif ( type == 1095062083 ) ;creature\n    return\nelseif ( type == 1414418243 ) ;container\n    set nextref to 1 ;flag that we need to tally the container's total value\n    set update_col to 1\nelseif ( type == 1380929348 ) ;door      (this script allows player to destroy load doors too, careful)\n    set value to 100\n    set update_col to 1\nelseif ( type == 1230259009 ) ;activator\n    set value to 200\n    set update_col to 1\nendif\n\n\nset invvalue to 0\nset invcount to 0\nsetx type ownerid condition to pctarget-&gt;xGetOwnerInfo\nif ( type == 0 ) ;no owner\n    set value to 1 ;in case 'value' wasn't determined yet - there's no need to calculate it below\nelseif ( type == 1598246990 ) ;NPC owner\n    set invvalue to 1 ;(temp flag)\nelseif ( type == 1413693766 ) ;faction owner\n    set invcount to 1 ;(temp flag)\nelse\n    MessageBox \"ERROR?!\" ;this should never happen\n    return\nendif\n\nifx ( invvalue ) ;NPC owner\n    setx temp to xGetRef ownerid\n    ifx ( temp )\n        xSetRef temp\n        set temp to GetHealth\n    else\n        set temp to 0 ;if can't find the owner, assume he's dead\n    endif\n    if ( temp &lt;= 0 ) ;if he's dead, then it's all legal...\n        set type to 0 ;no ownership\n        set value to 1 ;no need to calculate 'value'\n    else\n        ifx ( condition )\n            setx temp glob to xGetGlobal condition\n            ifx ( temp ) ;got the global successfully\n                ifx ( glob ) ;if it had a true value\n                    ;then player is allowed to take/use the target\n                    set type to 0\n                    set value to 1\n                endif\n            else\n                MessageBox \"Got a problem...\"\n            endif\n        endif\n    endif\nendif\n\nifx ( invcount ) ;faction owner\n    ;setx temp to xGetPCRank ownerid ;(this function doesn't exist yet)\n    set temp to 0 ;temp filler since can't use above line. this makes the player count as of the lowest rank in the faction.\n\n    if ( temp &gt;= condition ) ;if player is of the required rank or above...\n        ;then it's legal\n        set type to 0\n        set value to 1\n    endif\nendif\n\n\nifx ( value )\nelse\n    ;if value is still 0, we're looking at an item (or a container)\n\n    ifx ( nextref ) ;container\n        set nextref to 0\n        setx temp invcount temp invvalue temp temp nextref to pctarget-&gt;xContentList nextref ;values we don't care about get stored in temp and overwritten\n        whilex ( invcount ) ;might take a short... while, if container has tons of stacks in it\n            set temp to ( invcount * invvalue )\n            set value to ( value + temp )\n            ifx ( nextref )\n                setx temp invcount temp invvalue temp temp nextref to pctarget-&gt;xContentList nextref\n            else\n                set invcount to 0 ;break the loop\n            endif\n        endwhile\n    else ;looking at an item\n        setx value to pctarget-&gt;xGetValue\n    endif\n\nendif\n\npctarget-&gt;Disable ;'destroy' the target\nplayer-&gt;PlaySound \"critical damage\"\nif ( type ) ;if it was determined to be illegal...\n    setx glob to xGetGS 1173 ;GMST fCrimeStealing (default: 1.0)\n    set value to ( value * glob )\n    ModPCCrimeLevel value\nendif\n\nif ( update_col )\n    set update_col to 0\n    ;in the event that that the player just disable'd a door or a large\n    ;container or activator, its collision will normally remain until the\n    ;cell is re-loaded, and the player won't be able to go through th\n    ;space it used to occupy.\n    ;this part of the script solves that issue, making use of the fact that\n    ;the FixMe function also reloads some stuff in the active cell, such as\n    ;object coliisions.\n\n    ;unfortunately, it also seems to always teleport the player, and,\n    ;ironically, sometimes cause him to get stuck. therefore, this line is commented out.\n\n    ;FixMe\nendif\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xgetquality","title":"<code>xGetQuality</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> quality: The quality of the reference's base object.</li> </ul> <p>Returns the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.</p>"},{"location":"references/mwse-mwscript/reference/#xgetref","title":"<code>xGetRef</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> objectID: An object ID to get a reference to, or <code>0</code> to get the script caller's reference.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The reference requested, or <code>0</code> if none were found.</li> </ul> <p>Returns a reference to one of the active objects that match the object ID. An active object is an object in one of the loaded cells, or a persistent object such as an NPC.</p>"},{"location":"references/mwse-mwscript/reference/#xgetstacksize","title":"<code>xGetStackSize</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> stackSize: The amount of items in the stack, or 0 if not called on a reference.</li> </ul> <p>This function returns the stack size of a given reference. For example if used on a reference to iron arrows, xGetStackSize will tell you how many arrows there are in that stack.</p> Get player target's stack size. <pre><code>begin Example_xGetStackSize\n\nlong ref\nlong size\n\nsetx ref to xGetPCTarget\nif ( ref == 0 )\n    return\nendif\n\nsetx size to ref-&gt;xGetStackSize\n\nif ( size &gt; 1 )\n    MessageBox \"Target stack size is %g.\" size\nelse\n    MessageBox \"Target is a single item.\"\nendif\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xgettrap","title":"<code>xGetTrap</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> spellID: The trap's spell ID.</li> <li><code>string</code> spellName: The trap's spell name.</li> <li><code>short</code> spellCost: The trap's spell cost.</li> </ul> <p>Returns info about the reference's trap spell. Only works on container and doors. All returns will be zero if no trap is present.</p>"},{"location":"references/mwse-mwscript/reference/#xgetvalue","title":"<code>xGetValue</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> Value: The total value or maximum capacity of the object.</li> </ul> <p><code>xGetValue</code> returns the Value of reference's base object.</p>"},{"location":"references/mwse-mwscript/reference/#xgetweight","title":"<code>xGetWeight</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>float</code> weight: The total weight or maximum capacity of the object.</li> </ul> <p><code>xGetWeight</code> returns the weight of reference's base object. If the reference is a stack of objects, return the total weight of the entire stack. If the reference is a container, return the maximum capacity.</p>"},{"location":"references/mwse-mwscript/reference/#xmycellid","title":"<code>xMyCellID</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> cellID: The reference's current cell ID.</li> </ul> <p>Returns a string containing the name of the cell the object (intended to be used with references to unique NPCs) inhabits. So fargoth_ref-&gt;xMyCellID would return \"Seyda Neen\" unless you've lured him into the wilderness for some reason. Useful for locating that missing companion. Can't locate items stored in containers or inventory.</p>"},{"location":"references/mwse-mwscript/reference/#xmyref","title":"<code>xMyRef</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> reference: The caller's reference.</li> </ul> <p>Returns a reference to the calling object.</p> Detect if target from local script. <pre><code>begin Example_xMyRef\n\nlong myRef\nlong targetRef\n\nsetx targetRef to xGetPCTarget\nif ( targetRef == 0 )\n    return\nendif\n\nsetx myRef to xMyRef\nif ( myRef == targetRef )\n    MessageBox \"I'm being targetted!\"\nendif\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/reference/#xposition","title":"<code>xPosition</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> x: The X location to reposition to.</li> <li><code>float</code> y: The Y location to reposition to.</li> <li><code>float</code> z: The Z location to reposition to.</li> <li><code>float</code> rotation: The rotation to take when positioned.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla Position function that can take variable input.</p>"},{"location":"references/mwse-mwscript/reference/#xpositioncell","title":"<code>xPositionCell</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> x: The X location to reposition to.</li> <li><code>float</code> y: The Y location to reposition to.</li> <li><code>float</code> z: The Z location to reposition to.</li> <li><code>float</code> rotation: The rotation to take when positioned.</li> <li><code>string</code> cellID: The name/ID of the cell to position to.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla PositionCell function that can take variable input.</p>"},{"location":"references/mwse-mwscript/reference/#xrefid","title":"<code>xRefID</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> id: The reference's ID.</li> </ul> <p><code>xRefID</code> returns the reference's ID. In contrast to <code>xGetBaseID</code>, this function will include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where <code>xRefID</code> would return <code>\"Fargoth00000000\"</code>, <code>xGetBaseID</code> would instead return just <code>\"Fargoth\"</code>.</p>"},{"location":"references/mwse-mwscript/reference/#xreftype","title":"<code>xRefType</code>","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> type: The Object Type of the reference.</li> </ul> <p>Returns the four byte object name of the calling reference.</p>"},{"location":"references/mwse-mwscript/reference/#xremoveitem","title":"<code>xRemoveItem</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> objectID: The object ID of the item to remove.</li> <li><code>long</code> count: The number of items to remove.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This is a wrapper for the vanilla RemoveItem function that can take variable input.</p>"},{"location":"references/mwse-mwscript/reference/#xsetcharge","title":"<code>xSetCharge</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> charge: New charge that will be set on the reference.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's was modified, otherwise 0.</li> </ul> <p>Sets the current charge on a 'cast when used' or 'cast when strikes' enchanted item. May not work if the item has never been used.</p>"},{"location":"references/mwse-mwscript/reference/#xsetcondition","title":"<code>xSetCondition</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> Condition: New condition that will be set on the reference.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's was modified, otherwise 0.</li> </ul> <p>Sets the current condition of armor and weapons. Armor must not be at 100% or this function will fail. It must have already sustained some damage.</p>"},{"location":"references/mwse-mwscript/reference/#xsetmaxcharge","title":"<code>xSetMaxCharge</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> maxCharge: New charge that will be set on the reference.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's was modified, otherwise 0.</li> </ul> <p>Sets the maximum charge on an enchanted item.</p>"},{"location":"references/mwse-mwscript/reference/#xsetmaxcondition","title":"<code>xSetMaxCondition</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> maxCondition: New maximum condition that will be set on the reference.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's was modified, otherwise 0.</li> </ul> <p>Sets the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.</p>"},{"location":"references/mwse-mwscript/reference/#xsetname","title":"<code>xSetName</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> name:  The new name to apply to the reference's base object. (Maximum 31 characters)</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p><code>xSetName</code> uses the value parameter to change the reference's name. The new name will not persist through restarts.</p>"},{"location":"references/mwse-mwscript/reference/#xsetquality","title":"<code>xSetQuality</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> quality: New quality that will be set on the reference's base object.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's base object was modified, otherwise 0.</li> </ul> <p><code>xSetQuality</code> modifies the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.</p>"},{"location":"references/mwse-mwscript/reference/#xsetref","title":"<code>xSetRef</code>","text":"<p>Parameters:</p> <ul> <li><code>reference</code> newReference: A reference to the use for future function calls.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p><code>xSetRef</code> provides a way of calling object functions where the syntax does not allow it, changing the reference used in future function calls.</p>"},{"location":"references/mwse-mwscript/reference/#xsettrap","title":"<code>xSetTrap</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> spellID : The spell ID to set as the trap, or <code>0</code> to unset a trap.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> result: <code>1</code> if the reference's trap was modified, otherwise <code>0</code>.</li> </ul> <p>Sets a trap. Only works on containers or doors. In order to have a trap, a reference must also have a lock. For references without locks, call <code>Lock 0</code> and <code>Unlock</code> prior to <code>xSetTrap</code>.</p> <p>Traps that are set this way do not persist through saving and loading. If a trap is removed its removal persists only if the object is activated or its lock is manipulated before saving.</p> <p>If you want to set a trap on a door/container, first check for an existing lock (<code>xGetLockLevel</code>). If no lock is already installed, use <code>Lock 0</code>, <code>Unlock</code> to create the lock/trap object. Set the trap. To make sure the trap is persistent, manipulate the lock, but then put it back to its original state. In other words, if the lock is currently unlocked, lock it (use <code>xGetLockLevel</code> to determine the correct lock level) then unlock it. Do the reverse if it's currently unlocked.</p>"},{"location":"references/mwse-mwscript/reference/#xsetvalue","title":"<code>xSetValue</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> value: New value that will be set on the reference's base object.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's base object was modified, otherwise 0.</li> </ul> <p><code>xSetValue</code> modifies the value of reference's base object.</p>"},{"location":"references/mwse-mwscript/reference/#xsetweight","title":"<code>xSetWeight</code>","text":"<p>Parameters:</p> <ul> <li><code>float</code> weight: New weight that will be set on the reference's base object.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> result: 1 if the reference's base object was modified, otherwise 0.</li> </ul> <p><code>xSetWeight</code> modifies the weight of the reference's base object.</p>"},{"location":"references/mwse-mwscript/string/","title":"String Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/string/#xstringbuild","title":"<code>xStringBuild</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> format: The format string to use, given the tokens below.</li> <li><code>varies</code> (many) input: The variables to use, matching the pattern of special tokens below.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> result: A string build from the combined input.</li> </ul> <p><code>xStringBuild</code> returns a new string that is constructed based on the format string and any other variable values as needed. The format string is similar to those for <code>MessageBox</code> with <code>%</code> indicating some special character or variable substitution.</p> <p>Some patterns can be used to place special characters into the string:</p> Token Meaning <code>%%</code> A single % sign is placed in the string. <code>%n</code> A new line marker (CR/LF) is placed in the string. <code>%q</code> A quotation mark (\") is placed in the string. <p>The rest are used to insert values from the remaining parameters into the output string.</p> Token Meaning <code>%d</code> A short or long value is inserted as a decimal integer. <code>%h</code> A short or long value is inserted as a hexadecimal integer. <code>%f</code> A float value is inserted as real decimal number. <code>%s</code> A string value is inserted. <code>%l</code> A long value is inserted as a four character string. <p>Note</p> <p>The uppercase forms <code>%N</code>, <code>%Q</code>, <code>%D</code>, <code>%H</code>, <code>%F</code>, <code>%S</code>, and <code>%L</code> also work.</p> <p>The float specifier takes a precision specifier just like the MessageBox command. The format <code>%.3f</code> will print a floating point value with three digits after the decimal point.</p> <p>The string specifier can take two numbers in its specifier:</p> Token Meaning <code>%2s</code> Skips the first two characters of the string, but inserts the rest. <code>%.3s</code> Inserts only three characters of the string. <code>%4.5s</code> Skips 4 characters, then inserts the next 5 characters of the string. <p>Note</p> <p>The compiler doesn't currently support more than 12 parameters at a time.</p> <p>Note</p> <p>The format string is limited to 64 characters.</p>"},{"location":"references/mwse-mwscript/string/#xstringcapture","title":"<code>xStringCapture</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> string: The string to search for pattern in.</li> <li><code>string</code> pattern: The regex pattern to use.</li> <li><code>long</code> desiredMatches: The number of results to return.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> (many) matches: Results of the pattern matching for pattern on string. The function always return desiredMatches results.</li> </ul> <p>This function performs much as <code>xStringMatch</code>, but returns the result groups of the regex match. The a number of results matching desiredMatches is always returned. The matches will be 0 if a match isn't made.</p>"},{"location":"references/mwse-mwscript/string/#xstringcompare","title":"<code>xStringCompare</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> leftString: The first string in the comparison.</li> <li><code>string</code> rightString: The second string in the comparison.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> result: 0 if the strings are equal, otherwise a signed number based on sorting.</li> </ul> <p>Compares the two strings based on alphabetical order and returns 0 if they are equal, a negative number if leftString would appear first, and a positive number if rightString would appear first.</p>"},{"location":"references/mwse-mwscript/string/#xstringlength","title":"<code>xStringLength</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> string: The string to take the length of.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> length: The length of string.</li> </ul> <p>Returns the number of characters in the input, string.</p>"},{"location":"references/mwse-mwscript/string/#xstringmatch","title":"<code>xStringMatch</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> string: The string to search for pattern in.</li> <li><code>string</code> pattern: The regex pattern to use.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> (many) matches: Results of the pattern matching for pattern on string. The function always return desiredMatches results.</li> </ul> <p>This function performs a regular expression check on string, allowing for very flexible and powerful pattern and string matching/identification. For example, you can check if a string contains certain words, or a certain set of characters, in it and in a specific position and order, if you want, and much more.</p> <p>Note</p> <p>To return the tokenized regex result, use <code>xStringCapture</code>.</p> <p>MWSE uses the Regex library from the Boost C++ library. The regular expression style is the Perl syntax; please see the Boost Regex documentation for full details. However, here is a partial quick summary:</p> Pattern Description . Matches any one character. ^ Matches the beginning of the string. $ Matches then end of the string. ( and ) Groups a sub-expression (see below). * Makes the preceeding item or group match zero or more times. ? Makes the preceeding item or group match zero or once. + Makes the preceeding item or group match one or more times. {integer} Makes the preceeding item or group match exactly integer times. {int1,int2} Makes the preceeding item or group match from int1 to int2 times. | Alternation; makes the pattern match either the item on the left of the [character set] Matches a single character from the set character set. The set can contain individual characters, or ranges of the form a-b, which matches all characters between a and b, including a and b. (For example, [A-Z] will match upper case letters.) If the character set begins with ^, then it will match any character except those in the character set. [[:name:]] Matches a single character from the pre-defined set name. \\character Matches the character; that is, removes the special meaning, if any, from character. (For example, \".\" matches any single character, but \".\" matches the period character.) \\d Match a digit (0-9). \\l Match a lower case letter (a-z). \\s Match whitespace (space, tab). \\u Match an upper case letter (A-Z). \\w Match a word (a string of letters, digits, and underscores) \\D Match anything but a digit. \\L Match anything but a lower case letter (a-z). \\S Match anything but whitespace (space, tab). \\U Match anything but an upper case letter (A-Z). \\W Match anything but a word. \\&lt; Match the start of a word. \\&gt; Match the end of a word. \\b Match the end or start of a word. \\B Match anything but the end or start of a word. (?i) Turns on the i modifier (case insensitive match) for the rest of the pattern or until an enclosing ). (?i:pattern) Turns on the i modifier for the enclosed pattern only."},{"location":"references/mwse-mwscript/string/#xstringparse","title":"<code>xStringParse</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> pattern: The pattern to parse.</li> <li><code>string</code> source: Indicates how much of the pattern matched successfully.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> matchCount: The number of matches returned.</li> <li><code>varies</code> (many) matches: The values parsed out of the string.</li> </ul> <p>This function identifies and extracts data from the source string based on the pattern string. The first return value matchCount is a long indicating how much of the pattern matched successfully. The matches by the pattern will then be returned in order.</p> <p>In the pattern string, all of the special features begin with a <code>%</code> symbol. Some, simply match special characters that can't otherwise be typed in the pattern string.</p> Token Description <code>%%</code> Matches a single % sign. <code>%n</code> Matches the new line marker, CR/LF. <code>%q</code> Matches the \" quotation mark. <p>The rest return the values matched so they can be stored in variables with <code>setx</code>.</p> Token Description <code>%d</code> Matches a decimal integer and the value is returned as type long. <code>%h</code> Matches a hexadecimal integer and the value is returned as type long. <code>%f</code> Matches a real number and the value is returned as type float. <code>%s</code> Matches the rest of the string and returns it as type string. <code>%l</code> Matches exactly four characters and returns them as type long. <p>Note</p> <p>The uppercase forms <code>%N</code>, <code>%Q</code>, <code>%D</code>, <code>%H</code>, <code>%F</code>, <code>%S</code>, and <code>%L</code> also work.</p>"},{"location":"references/mwse-mwscript/string/#mwse-version-checking","title":"MWSE Version Checking","text":"<p>A special use case of <code>xStringParse</code> is to check the version of MWSE. If a value of zero is returned, the version of MWSE is older than version 2.0.</p> <p>To do this, pattern must be <code>MWSE_VERSION</code>. source is instead a <code>long</code>, to compare to the return value. If the version returned is greater than or equal to source, the second return value is 1.</p> <pre><code>long version\nlong versionAbove2p0\n\nsetx version versionAbove2p0 to xStringParse \"MWSE_VERSION\" 2000000\n</code></pre> <p>The version returned is spaced. Version 2.0.0 is 2000000 while the hypothetical version 2.34.9 would be 2034009.</p>"},{"location":"references/mwse-mwscript/utility/","title":"Utility Functions","text":"<p>Warning</p> <p>The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.</p>"},{"location":"references/mwse-mwscript/utility/#xgetglobal","title":"<code>xGetGlobal</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> globalName: The name of the global.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> found: 1 if the global was found, otherwise 0.</li> <li><code>float</code> value: The value of the global.</li> </ul> <p>Returns the value of a global represented by globalName.</p>"},{"location":"references/mwse-mwscript/utility/#xgetgsstring","title":"<code>xGetGSString</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> index: ID of the GMST to look up.</li> </ul> <p>Returned:</p> <ul> <li><code>string</code> value: The GMST value at the given index.</li> </ul> <p>Fetches a GMST string by its given index and returns its value.</p>"},{"location":"references/mwse-mwscript/utility/#xgetkeybind","title":"<code>xGetKeyBind</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> controlType: The <code>Control Type</code>_ desired.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> scanCode: The <code>Key Scan Code</code>_ for the controlType.</li> <li><code>long</code> scanDevice: The device type used for the associated scan code. A value of 0 is keyboard, 1 is mouse, 2 is joystick.</li> <li><code>long</code> keyCode: The Virtual-Key Code for the controlType. If this value is 0, the scan code could not be converted to a key code.</li> </ul> <p>This function allows scripts to determine what keys are configured by the player. Typically the keyCode is passed to <code>xKeyPressed</code> to determine if it is pressed. Other functions that require a scan code would make use of scanCode.</p> Determine if the Activation Key is Pressed <pre><code>Begin IsActivating\n\nlong scanCode\nlong scanDevice\nlong keyCode\n\n; Get input information for the Activate key.\nsetx scanCode scanDevice keyCode to xGetKeyBind 5\n\nifx (keyCode)\n    ; Activation key was successfully obtained, get its state.\n    setx isPressed to xKeyPressed keyCode\n    if (isPressed)\n        MessageBox \"Activation key pressed!\"\n    endif\nendif\n\nStopScript \"IsActivating\"\n\nEnd\n</code></pre>"},{"location":"references/mwse-mwscript/utility/#xgetmcpfeaturestate","title":"<code>xGetMCPFeatureState</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> id: Identifier for the MCP feature.</li> </ul> <p>Returned:</p> <ul> <li><code>short</code> state: 1 if the feature is enabled, 0 if it is disabled, or -1 if MWSE couldn't determine the MCP installation state.</li> </ul> <p>This function can be used to attempt to ensure that the user has the correct Morrowind Code Patch features enabled.</p> <p>Note</p> <p>The id parameter comes from mcpatch\\describe.json. For example, 137 matches with the Slowfall Overhaul component.</p> <p>Warning</p> <p>This functions depends on the user not deleting their mcpatch\\installed file. If the user doesn't have this file (because they deleted it or don't have the MCP installed), this function returns a value of <code>-1</code>.</p> Example <pre><code>begin DetectPickPocketOverhaul\n\nshort state\n\nsetx state to xGetMCPFeatureState 77\n\nif (state) then\n    MessageBox \"Pickpocket overhaul is enabled in MCP.\"\nendif\n\nend\n</code></pre>"},{"location":"references/mwse-mwscript/utility/#xkeypressed","title":"<code>xKeyPressed</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> keyCode: The Virtual-Key Code to check for input.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> (many) keyStatus: The status of keyCode if the parameter is non-zero. Otherwise it returns multiple times, with every key code pressed.</li> </ul> <p>Monitors the status of the keyboard (and mouse buttons). This can be similar to GetPCSneaking, but actually detects whether a particular key is really being pressed. If input parameter code is a Virtual-Key Code (between 1 and 254) the return value will indicate the status of that key. A non-zero value means the key is being pressed. If the input code is 0, then on each call, the function will return the key code for the key (or one of the keys) currently being pressed.</p> <p>Warning</p> <p>Some of the codes match different keys on different keyboard layouts.</p> <p>Note</p> <p>The key VK code for a given input can be fetched using <code>xKeyPressed</code>, instead of having to rely on hardcoded values.</p>"},{"location":"references/mwse-mwscript/utility/#xlogmessage","title":"<code>xLogMessage</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> format: The formatting for the log message.</li> <li><code>varies</code> (many) input: Values to inject into the format.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>Writes out formatted strings to the log file (mwse.log). This works much like <code>MessageBox</code> but with the additional formatting options described for <code>xStringBuild</code>. A trailing <code>%</code> in the format string will suppress the printing of the new line sequence allowing a single line of text to be created with two or more xLogMessage calls. The number of parameters specified in the format MUST match those supplied or there will be trouble.</p> <p>Note</p> <p>Literal strings in MWEdit have a maximum length of 63 characters.</p>"},{"location":"references/mwse-mwscript/utility/#xmessagefix","title":"<code>xMessageFix</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> (many) newStrings: The strings used to overwrite the following MessageBox call.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function allows you to use strings from variables with the MessageBox function with a few restrictions.</p> <ol> <li>The MessageBox command must immediately follow this one.</li> <li>The number of strings for this function must match the number of strings for the MessageBox.</li> <li>The MessageBox can have buttons but it can't use variables.</li> <li>The values of the strings used on the MessageBox will be replaced with the values from xMessageFix, but the MessageBox strings set a maximum size for each of the xMessageFix strings (it's OK if the MessageBox strings are longer than the MessageFix ones).</li> </ol> <p>Using xMessageFix can take both the string variable and literal string types and each string acts as a format string as described for the xStringBuild function. If a string ends in a single % and the formatted string takes less space than the matching string from MessageBox, the remaining characters of the MessageBox string will be used.</p> <p>While it is possible to use formatted messages and buttons, it is best to format strings with <code>xStringBuild</code> if there are buttons involved because of the limit of 12 parameters per function.</p>"},{"location":"references/mwse-mwscript/utility/#xscriptrunning","title":"<code>xScriptRunning</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> scriptName: The name of the script to determine the status of.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> status: 1 if the script is running, or 0 if it is not (or does not exist).</li> </ul> <p>This function is a wrapper around <code>ScriptRunning</code> which allows a variable input.</p>"},{"location":"references/mwse-mwscript/utility/#xsetglobal","title":"<code>xSetGlobal</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> globalName: The name of the global.</li> <li><code>float</code> value: The value to set the global to.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> found: 1 if the global was set, otherwise 0.</li> </ul> <p>Set the global represented by globalName to value.</p>"},{"location":"references/mwse-mwscript/utility/#xsetgsstring","title":"<code>xSetGSString</code>","text":"<p>Parameters:</p> <ul> <li><code>long</code> index: ID of the GMST to look up.</li> <li><code>string</code> newValue: The value to set the GMST to.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> valueSet: 1 if the value was successfully set.</li> </ul> <p>Fetches a GMST string by its given index, and sets its value to newValue</p>"},{"location":"references/mwse-mwscript/utility/#xstartscript","title":"<code>xStartScript</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> scriptName: The name of the script to determine the status of.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function is a wrapper around <code>StartScript</code> which allows a variable input.</p>"},{"location":"references/mwse-mwscript/utility/#xstopscript","title":"<code>xStopScript</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> scriptName: The name of the script to determine the status of.</li> </ul> <p>Returned:</p> <ul> <li>None</li> </ul> <p>This function is a wrapper around <code>StartScript</code> which allows a variable input.</p>"},{"location":"references/mwse-mwscript/utility/#xtextinput","title":"<code>xTextInput</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> string: The string to modify with the user's input.</li> <li><code>long</code> endCode: The Virtual-Key Code used to stop reading input.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> length: The length of text.</li> <li><code>string</code> text: The text entered.</li> </ul> <p>This function allows you to directly read keyboard input from the user and the results will be returned as a string. Pass a string and a virtual key code to the function. The function will wait for a key to be pressed and then take one of three actions. If the key pressed matches the endCode parameter, the string and its length are returned. If the key pressed is a printable ASCII character, the character is added to the string and the string and the number 0 are returned. If the key is RETURN or BACKSPACE, a new line is started or one character is removed from the string, and the modifed string and a 0 are returned. The function returns after each key press so that the current value of the string can be shown with xMessageFix and MessageBox but the string should only be used normally after the length is returned. Player controls should be disabled while this function is used.</p> <p>Note</p> <p><code>xGetKeyBind</code> can be used to determine a specific key the user has configured.</p>"},{"location":"references/mwse-mwscript/utility/#xtextinputalt","title":"<code>xTextInputAlt</code>","text":"<p>Parameters:</p> <ul> <li><code>string</code> string: The string to modify with the user's input.</li> <li><code>long</code> endCode: The Virtual-Key Code used to stop reading input.</li> </ul> <p>Returned:</p> <ul> <li><code>long</code> length: The length of text.</li> <li><code>string</code> text: The text entered.</li> </ul> <p>This function is identical to <code>xTextInput</code> except that the function simply checks the status of keys and returns immediately rather than waiting for a key to be pressed.</p>"},{"location":"references/ni/animation-cycle-types/","title":"Animation Cycle Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.animCycleType</code> table. For example, <code>ni.animCycleType.reverse</code> has a value of <code>2</code>.</p> Index Value Description loop <code>0</code> At the end of the animation, it's looped again from the beginning. reverse <code>2</code> At the end of the animation, it's played in reverse achieving a ping-pong effect. clamp <code>4</code> Animation stops at the end."},{"location":"references/ni/animation-key-types/","title":"Animation Key Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.animationKeyType</code> table. For example, <code>ni.animationKeyType.tcb</code> has a value of <code>3</code>.</p> Index Value Description noInterp <code>0</code> Don't use interpolation. linear <code>1</code> Linear interpolation. bezier <code>2</code> Bezier (actually Hermite) interpolation. tcb <code>3</code> Tension-Continuity-Bias interpolation. TCB <code>3</code> euler <code>4</code> Euler interpolation \u2014 only applies to interpolation of rotation in <code>niEulerRotKey</code>s."},{"location":"references/ni/animation-types/","title":"Animation Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.animType</code> table. For example, <code>ni.animType.appTime</code> has a value of <code>0</code>.</p> Index Value Description appTime <code>0</code> The time controller will simply use the Update time (after applying the frequency and phase modifications) to directly interpolate the state of the animation. appInit <code>1</code> The time controller will use the modified Update time to determine how long it has been since the animation has started playing and then use that local time to interpolate the state of the animation."},{"location":"references/ni/billboard-modes/","title":"Billboard Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.billboardMode</code> table. For example, <code>ni.billboardMode.rotateAboutUp</code> has a value of <code>1</code>.</p> Index Value Description alwaysFaceCamera <code>0</code> Causes the model-space z-vector to be in line with the camera's view plane normal. In other words, any plane of constant z in model space will have its normal parallel to the camera's direction vector. Each frame, the rotation required to reestablish this orientation is minimized. As a result, this mode may differ from rigidFaceCamera. rotateAboutUp <code>1</code> Causes the model-space z-vector of the billboard to be as close as possible to the camera's direction vector while only allowing rotation about the billboard's model-space up-axis [0,1,0]. This mode is useful for simulating cylindrically symmetric objects, such as light posts and trees, using a single cross-sectional flat image. rigidFaceCamera <code>2</code> The billboard has a normal that is always parallel to the camera's direction vector and the billboard and camera coordinate frames change rigidly together."},{"location":"references/ni/camera-clear-flags/","title":"Camera clear flags","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.cameraClearFlags</code> table. For example, <code>ni.cameraClearFlags.backBuffer</code> has a value of <code>1</code>.</p> Index Value Description backBuffer <code>1</code> Clears the back buffer (color buffer). stencil <code>2</code> Clears the stencil buffer. zBuffer <code>4</code> Clears the Z buffer. all <code>7</code> Clears all buffers."},{"location":"references/ni/dynamic-effect-types/","title":"Dynamic Effect Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.dynamicEffectType</code> table. For example, <code>ni.dynamicEffectType.pointLight</code> has a value of <code>2</code>.</p> Index Value ambientLight <code>0</code> directionalLight <code>1</code> pointLight <code>2</code> spotLight <code>3</code> textureEffect <code>4</code>"},{"location":"references/ni/euler-rotation-key-orders/","title":"Euler Rotation Key Orders","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.eulerRotKeyOrder</code> table. For example, <code>ni.eulerRotKeyOrder.YZX</code> has a value of <code>2</code>.</p> Index Value XYZ <code>0</code> XZY <code>1</code> YZX <code>2</code> YXZ <code>3</code> ZXY <code>4</code> ZYX <code>5</code> XYX <code>6</code> YZY <code>7</code> ZXZ <code>8</code>"},{"location":"references/ni/gravity-force-types/","title":"Gravity Force Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.gravityForceType</code> table. For example, <code>ni.gravityForceType.spherical</code> has a value of <code>1</code>.</p> Index Value Description planar <code>0</code> Gravity of this type operates parallel to the <code>direction</code> vector of the niGravity. spherical <code>1</code> Gravity of this type operates spherically about the <code>position</code> point of the niGravity."},{"location":"references/ni/lighting-modes/","title":"Lighting Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.lightingMode</code> table. For example, <code>ni.lightingMode.emissive</code> has a value of <code>0</code>.</p> Index Value Description emissive <code>0</code> Only the emissive component of the lighting equation is used. No dynamic lights are considered in the lighting process. emiAmbDif <code>1</code> The emissive, ambient, and diffuse components of the lighting equation are all used."},{"location":"references/ni/look-at-controller-axes/","title":"Look at Controller Axes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.lookAtControllerAxis</code> table. For example, <code>ni.lookAtControllerAxis.Z</code> has a value of <code>2</code>.</p> Index Value X <code>0</code> Y <code>1</code> Z <code>2</code>"},{"location":"references/ni/particle-bomb-decay-types/","title":"Particle Bomb Decay Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.particleBombDecayType</code> table. For example, <code>ni.particleBombDecayType.none</code> has a value of <code>0</code>.</p> Index Value Description none <code>0</code> The bomb's force will not decay over distance. linear <code>1</code> The force will decay linearly with distance. exponential <code>2</code> The force will decay exponentially with distance."},{"location":"references/ni/particle-bomb-symmetry-types/","title":"Particle Bomb Symmetry Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.particleBombSymmetryType</code> table. For example, <code>ni.particleBombSymmetryType.cylindrical</code> has a value of <code>1</code>.</p> Index Value Description spherical <code>0</code> The bomb's force will operate spherically about the point specified by <code>position</code> vector. cylindrical <code>1</code> The bomb will apply force to particles perpendicular to the <code>direction</code> vector but centered about the <code>position</code> vector. planar <code>2</code> The bomb's force is applied parallel to the <code>direction</code> vector."},{"location":"references/ni/pick-coordinate-types/","title":"Pick Coordinate Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.pickCoordinateType</code> table. For example, <code>ni.pickCoordinateType.worldCoordinates</code> has a value of <code>1</code>.</p> Index Value Description modelCoordinates <code>0</code> The points returned by picking opertion will be in model coordinates. worldCoordinates <code>1</code> The points returned by picking opertion will be in world coordinates."},{"location":"references/ni/pick-intersection-types/","title":"Pick Intersection Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.pickIntersectType</code> table. For example, <code>ni.pickIntersectType.triangleIntersect</code> has a value of <code>1</code>.</p> Index Value Description boundIntersect <code>0</code> Intersection calculations are performed on the bounding spheres of objects. In this mode, intersections are either hit or miss, and calculations for the exact intersection point are not performed. Since exact intersection points are not calculated, the <code>sortType</code> is ignored. triangleIntersect <code>1</code> Intersection calculations are performed on the triangles that compose the objects. In this mode, intersections are exact. Calculations for the exact intersection point are performed and the intersection point, parametric distance from the ray origin, and index of the intersected triangle are stored in the niPickRecord. Once all intersections are calculated the array is sorted based on the <code>sortType</code>. Since only triangles are processed, niPickRecords are only added for the leaf nodes. Note that more than one pick record could be added per leaf node if more than one triangle intersection occurs."},{"location":"references/ni/pick-sort-types/","title":"Pick Sort Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.pickSortType</code> table. For example, <code>ni.pickSortType.sort</code> has a value of <code>0</code>.</p> Index Value Description sort <code>0</code> The points returned by picking opertion will be sorted along the distance from the ray origin. noSort <code>1</code> The points returned by picking opertion will not be sorted."},{"location":"references/ni/pick-types/","title":"Pick Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.pickType</code> table. For example, <code>ni.pickType.findAll</code> has a value of <code>0</code>.</p> Index Value Description findAll <code>0</code> The picking operation continues for the <code>maxDistance</code> units given to the <code>pickObjects</code> method. findFirst <code>1</code> The picking operation will end at first intersection."},{"location":"references/ni/property-types/","title":"Property Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.propertyType</code> table. For example, <code>ni.propertyType.texturing</code> has a value of <code>4</code>.</p> Index Value alpha <code>0</code> fog <code>1</code> material <code>2</code> stencil <code>3</code> texturing <code>4</code> vertexColor <code>5</code> wireframe <code>6</code> zBuffer <code>7</code> dither <code>8</code> specular <code>9</code> shade <code>10</code> rendererSpecific <code>11</code> firstPropertyType <code>0</code> lastPropertyType <code>11</code>"},{"location":"references/ni/source-vertex-modes/","title":"Source Vertex Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.sourceVertexMode</code> table. For example, <code>ni.sourceVertexMode.emissive</code> has a value of <code>1</code>.</p> Index Value Description ignore <code>0</code> Emissive, ambient, and diffuse colors are all specified by the niMaterialProperty. In other words, vertex colors aren't used. emissive <code>1</code> Emissive colors are specified by the source vertex colors. Ambient and Diffuse are specified by the niMaterialProperty. ambDiff <code>2</code> Ambient and Diffuse colors are specified by the source vertex colors. Emissive is specified by the niMaterialProperty (Default)."},{"location":"references/ni/stencil-draw-modes/","title":"Stencil Draw Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.stencilDrawMode</code> table. For example, <code>ni.stencilDrawMode.counterclockwise</code> has a value of <code>1</code>.</p> Index Value Description counterclockwiseOrBoth <code>0</code> The default mode, chooses between counterclockwise or both. counterclockwise <code>1</code> Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). clockwise <code>2</code> Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). both <code>3</code> Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided)."},{"location":"references/ni/stencil-test-actions/","title":"Stencil Test Actions","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.stencilTestAction</code> table. For example, <code>ni.stencilTestAction.increment</code> has a value of <code>3</code>.</p> Index Value Description keep <code>0</code> Keep the current value in the stencil buffer. zero <code>1</code> Write zero to the stencil buffer. replace <code>2</code> Write the value of <code>reference</code> property of niStencilProperty to the stencil buffer. increment <code>3</code> Increment the value in the stencil buffer. decrement <code>4</code> Decrement the value in the stencil buffer. invert <code>5</code> Bitwise invert the value in the stencil buffer."},{"location":"references/ni/stencil-test-functions/","title":"Stencil Test Functions","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.stencilTestFunction</code> table. For example, <code>ni.stencilTestFunction.equal</code> has a value of <code>2</code>.</p> Index Value Description never <code>0</code> Test will allways return false. Nothing is drawn at all. less <code>1</code> The test will only succeed if the pixel is nearer than the previous pixel. equal <code>2</code> Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previously drawn pixel. lessEqual <code>3</code> Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. greater <code>4</code> The test will only succeed if the pixel is farther than the previous pixel. notEqual <code>5</code> Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual <code>6</code> Test will succeed if the z value of the pixel to be drawn is bigger than or equal to the value in the Stencil Buffer. always <code>7</code> Test will allways succeed. The Stencil Buffer value is ignored."},{"location":"references/ni/texture-format-preference-alpha-formats/","title":"Texture Format Preference Alpha Formats","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.textureFormatPrefsAlphaFormat</code> table. For example, <code>ni.textureFormatPrefsAlphaFormat.smooth</code> has a value of <code>2</code>.</p> Index Value Description none <code>0</code> Texture doesn't use alpha. binary <code>1</code> Texture needs only 1-bit (on/off) alpha. smooth <code>2</code> Texture needs multi-level alpha (4 to 8 bits of alpha). default <code>3</code> Texture can use an alpha format that best fits the source data."},{"location":"references/ni/texture-format-preference-mip-flags/","title":"Texture Format Preference Mip Flags","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.textureFormatPrefsMipFlag</code> table. For example, <code>ni.textureFormatPrefsMipFlag.yes</code> has a value of <code>1</code>.</p> Index Value Description no <code>0</code> Texture prefers no mipmapping (\"flat\" image). yes <code>1</code> Texture prefers mipmapping. default <code>2</code> Texture can use the default setting from niTexture."},{"location":"references/ni/texture-format-preference-pixel-layouts/","title":"Texture Format Preference Pixel Layouts","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.textureFormatPrefsPixelLayout</code> table. For example, <code>ni.textureFormatPrefsPixelLayout.trueColor32</code> has a value of <code>2</code>.</p> Index Value Description palettized8 <code>0</code> Texture prefers an 8 bit palettized format (with or without alpha). highColor16 <code>1</code> Texture prefers a 16-bit per pixel RGB(A) format. trueColor32 <code>2</code> Texture prefers a 24/32-bit per pixel RGB(A) format. compressed <code>3</code> Texture prefers a compressed format. bumpMap <code>4</code> Texture prefers a Bump-map format. default <code>5</code> Texture can use whatever format best matches the source data."},{"location":"references/ni/texturing-property-apply-modes/","title":"Texturing Property Apply Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.texturingPropertyApplyMode</code> table. For example, <code>ni.texturingPropertyApplyMode.replace</code> has a value of <code>0</code>.</p> <p>In the table below, CR represents the resulting color, AR represents the final alpha. The same notation is used for texture color and alpha values but with index T. Vertex color values have index V.</p> Index Value Resulting Color Resulting Alpha Common Application replace <code>0</code> CR = CT AR = AT Basic texturing without any dynamic or static vertex-based lighting. decal <code>1</code> CR = CT x AT + CV x (1 - AT) AR = AV Decal or bullet-hole textures on a base untextured surface. modulate <code>2</code> CR = CT x CV AR = AT x AV Texture and final vertex colors and alpha values are multiplied component-by-component."},{"location":"references/ni/texturing-property-clamp-modes/","title":"Texturing Property Clamp Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.texturingPropertyClampMode</code> table. For example, <code>ni.texturingPropertyClampMode.wrapSwrapT</code> has a value of <code>3</code>.</p> Index Value Description clampSclampT <code>0</code> Both texture dimensions are wrapped infinitely. clampSwrapT <code>1</code> U dimension is wrapped, V dimension is clamped to be between 0 and 1. wrapSclampT <code>2</code> U dimension is clamped to be between 0 and 1, V dimension is wrapped. wrapSwrapT <code>3</code> Both dimensions are clamped to be between 0 and 1."},{"location":"references/ni/texturing-property-filter-modes/","title":"Texturing Property Filter Modes","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.texturingPropertyFilterMode</code> table. For example, <code>ni.texturingPropertyFilterMode.bilerpMipNearest</code> has a value of <code>5</code>.</p> Index Value Description nearest <code>0</code> Uses nearest neighbor, with no mipmapping. The most common reason to use nearest neighbor filtering is to achieve a \"blocky\" effect. bilerp <code>1</code> Uses bilinear interpolation with no mipmapping. It linearly interpolates between the four texels that enclose the texture coordinate. It causes the texture to look blurry. trilerp <code>2</code> Uses bilinear interpolation on each of the two nearest mipmap levels, then performs linear mipmap interpolation between the results. nearestMipNearest <code>3</code> Uses \"nearest level mipmapping\", then uses nearest neighbor on the result. nearestMipLerp <code>4</code> Uses nearest neighbor on each of the two nearest mipmap levels and then performs linear mipmap interpolation between the results. bilerpMipNearest <code>5</code> Uses \"nearest level mipmapping\", then uses \"bilinear interpolation\" on the result."},{"location":"references/ni/texturing-property-map-types/","title":"Texturing Property Map Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.texturingPropertyMapType</code> table. For example, <code>ni.texturingPropertyMapType.decalFirst</code> has a value of <code>7</code>.</p> Index Value Description base <code>1</code> Base dark <code>2</code> Dark detail <code>3</code> Detail gloss <code>4</code> Gloss glow <code>5</code> Glow bump <code>6</code> Bump decalFirst <code>7</code> First decal decal1 <code>7</code> Decal #1 decal2 <code>8</code> Decal #2 decal3 <code>9</code> Decal #3 decal4 <code>10</code> Decal #4 decal5 <code>11</code> Decal #5 decal6 <code>12</code> Decal #6 decal7 <code>13</code> Decal #7 decalLast <code>13</code> Last decal"},{"location":"references/ni/types/","title":"Types","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.type</code> table. For example, <code>ni.type.NiBltSource</code> has a value of <code>8249608</code>.</p> Index Value OffscreenSceneGraph_MasterPropertyAccumulator <code>8156216</code> BSMirroredNode <code>8162040</code> TES3ObjectExtraData <code>8184448</code> BrickNiExtraData <code>8199496</code> AvoidNode <code>8247188</code> RootCollisionNode <code>8247212</code> NiDX8Renderer <code>8247452</code> NiExtraData <code>8248936</code> NiSkinPartition <code>8248964</code> NiNode <code>8249016</code> NiScreenPolygon <code>8249056</code> NiCamera <code>8249080</code> NiClusterAccumulator <code>8249120</code> NiAlphaAccumulator <code>8249160</code> NiAlphaProperty <code>8249212</code> NiAmbientLight <code>8249228</code> NiSkinData <code>8249276</code> NiSkinInstance <code>8249296</code> NiParticlesData <code>8249324</code> NiParticles <code>8249348</code> NiAutoNormalParticlesData <code>8249412</code> NiAutoNormalParticles <code>8249444</code> NiBillboardNode <code>8249504</code> NiPalette <code>8249540</code> NiPixelData <code>8249580</code> NiBltSource <code>8249608</code> NiBSPNode <code>8249660</code> NiCollisionSwitch <code>8249680</code> NiDirectionalLight <code>8249708</code> NiDitherProperty <code>8249748</code> NiSwitchNode <code>8249772</code> NiFltAnimationNode <code>8249832</code> NiFogProperty <code>8249840</code> NiLinesData <code>8249868</code> NiLines <code>8249896</code> NiLODNode <code>8249968</code> NiMaterialProperty <code>8249992</code> NiPointLight <code>8250024</code> NiRenderedTexture <code>8250044</code> NiRendererSpecificProperty <code>8250096</code> NiRotatingParticlesData <code>8250120</code> NiRotatingParticles <code>8250148</code> NiShadeProperty <code>8250212</code> NiSortAdjustNode <code>8250248</code> NiSourceTexture <code>8250304</code> NiSpecularProperty <code>8250332</code> NiSpotLight <code>8250368</code> NiStencilProperty <code>8250392</code> NiStringExtraData <code>8250412</code> NiTexturingProperty <code>8250432</code> NiTextureEffect <code>8250500</code> NiTriShapeData <code>8250512</code> NiTriShape <code>8250704</code> NiTriShapeDynamicData <code>8250728</code> NiTriStripsData <code>8250760</code> NiTriStrips <code>8250792</code> NiVertexColorProperty <code>8250832</code> NiVertWeightsExtraData <code>8250856</code> NiWireframeProperty <code>8250884</code> NiZBufferProperty <code>8250928</code> NiProperty <code>8251168</code> NiObject <code>8251188</code> NiObjectNET <code>8251244</code> NiAVObject <code>8251340</code> NiTexture <code>8251360</code> NiBSAnimationManager <code>8251676</code> NiGeometryData <code>8251708</code> NiTriBasedGeom <code>8251724</code> NiBSAnimationNode <code>8251788</code> NiDynamicEffect <code>8251912</code> NiGeometry <code>8251948</code> NiRenderer <code>8252060</code> NiAccumulator <code>8252608</code> NiLight <code>8252664</code> NiBSParticleNode <code>8252732</code> NiTimeController <code>8252852</code> NiRenderedCubeMap <code>8252948</code> NiTriBasedGeomData <code>8253052</code> NiParticleSystemController <code>8253284</code> NiKeyframeData <code>8253384</code> NiKeyframeController <code>8253440</code> NiTextKeyExtraData <code>8253496</code> NiKeyframeManager <code>8253528</code> NiFloatData <code>8253572</code> NiAlphaController <code>8253600</code> NiColorData <code>8253696</code> NiFlipController <code>8253752</code> NiMorphData <code>8253768</code> NiGeomMorpherController <code>8253824</code> NiGravity <code>8253872</code> NiPosData <code>8253908</code> NiLightColorController <code>8253944</code> NiLookAtController <code>8254020</code> NiMaterialColorController <code>8254072</code> NiParticleBomb <code>8254124</code> NiParticleColorModifier <code>8254172</code> NiParticleGrowFade <code>8254212</code> NiParticleRotation <code>8254272</code> NiPathController <code>8254356</code> NiPlanarCollider <code>8254412</code> NiRollController <code>8254432</code> NiSequenceStreamHelper <code>8254456</code> NiSphericalCollider <code>8254496</code> NiUVData <code>8254588</code> NiUVController <code>8254628</code> NiVisData <code>8254656</code> NiVisController <code>8254680</code> NiBSPArrayController <code>8255864</code> NiFloatController <code>8255928</code> NiMorpherController <code>8256008</code> NiParticleModifier <code>8256088</code> NiParticleCollider <code>8256140</code>"},{"location":"references/ni/z-buffer-property-test-functions/","title":"Z-Buffer Property Test Functions","text":"<p>Tip</p> <p>These values are available in Lua by their index in the <code>ni.zBufferPropertyTestFunction</code> table. For example, <code>ni.zBufferPropertyTestFunction.less</code> has a value of <code>1</code>.</p> <p>Note</p> <p>Less than means closer to the camera and greater than means farther from the camera, regardless of the low-level hardware representation of Z values.</p> Index Value Description always <code>0</code> Test will allways succeed. The Z Buffer value is ignored. less <code>1</code> The test will only succeed if the pixel is nearer than the previous pixel. equal <code>2</code> Test will only succeed if the Z value of the pixel to be drawn is equal to the value of the previous drawn pixel. lessEqual <code>3</code> Test will succeed if the Z value of the pixel to be drawn is smaller than or equal to the value in the Z Buffer. greater <code>4</code> The test will only succeed if the pixel is farther than the previous pixel. notEqual <code>5</code> Test will succeed if the Z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual <code>6</code> Test will succeed if the Z value of the pixel to be drawn is bigger than or equal to the value in the Z Buffer. never <code>7</code> Test will allways return false. Nothing is drawn at all."},{"location":"references/other/books/","title":"Game Books","text":"<p>In Morrowind, books are written in simplified HTML. The subset of HTML used by Morrowind is discussed in the next paragraph.</p>"},{"location":"references/other/books/#tags","title":"Tags","text":"<p>Tags are the basic building block of HTML documents. Each tag is enclosed in angle brackets &lt;&gt;. In general, a tag affects a portion of the document inside the opening and closing tag. The closing tag has a slash (<code>/</code>) in front. For example, &lt;tag&gt; is an opening tag, while &lt;/tag&gt; is a closing tag.</p> <p>Some tags allow specifying additional formatting information inside the opening tag. The tags are case insensitive, and most of Morrowind's books have uppercase tags.</p> <p>The tags are space sensitive. <pre><code>&lt;font color=\"002200\"&gt; This works\n&lt;font color = \"002200\"&gt; This doesn't work\n</code></pre></p> <p>The available tags are: - &lt;div&gt; - text alignment - &lt;font&gt; - text style - &lt;br&gt; - a new line - &lt;img&gt; - inserts an image</p>"},{"location":"references/other/books/#div-alignoptions","title":"&lt;div align=\"options\"&gt;","text":"<p>The <code>div</code> tag is used for aligning text. The <code>\"options\"</code> available are <code>\"center\"</code>, <code>\"left\"</code>, and <code>\"right\"</code>, which align the text correspondingly. The <code>div</code> tag is an exception to the rule because it doesn't need to have a closing tag. Instead, this tag will affect the whole book's text after the tag or until another <code>div</code> tag occurs.</p>"},{"location":"references/other/books/#font-colortextcol-sizenum-facefontname","title":"&lt;font color=\"textCol\" size=\"num\" face=\"fontName\"&gt;","text":"<p>The <code>font</code> tag changes the appearance of the book's text. The first option available in this tag is <code>\"textCol\"</code>. The color is a string of six hexadecimal digits where two correspond to one color channel: \"RRGGBB\". The default font color is black (\"000000\"). The size option will change the text's size. The most common font size for Morrowind's books is \"3\". The size needs to be a natural number. The face option (from typographical typeface) will change the font used to render the book's text. The available <code>\"fontName\"</code>s are \"Magic Cards\", \"Century Gothic\", and \"Daedric\". The default font is \"Magic Cards\" and doesn't need to be specified. Not all the options need to be specified, but if more than one is specified, they need to be in the above order.</p>"},{"location":"references/other/books/#overriding-behavior","title":"Overriding Behavior","text":"<p>If a <code>font</code> tag is encountered while one <code>font</code> tag already affects the text, another <code>font</code> tag will override the settings from the previous tag. For text to render properly, the paragraphs with different font settings need to be set apart with &lt;br&gt; tags at the beginning and end. The results can be unexpected if this rule isn't followed. Here is an example of text with two different font styles:</p> <pre><code>&lt;font color=\"002200\" size=\"3\" face=\"Magic Cards\"&gt;\nThis text is rendered green in Magic Cards font.\n&lt;/font&gt;&lt;br&gt;\n&lt;font color=\"000022\" size=\"3\" face=\"Daedric\"&gt;\nThis text is rendered blue in Daedric font.\n&lt;/font&gt;&lt;br&gt;\n</code></pre>"},{"location":"references/other/books/#br","title":"&lt;br&gt;","text":"<p>The <code>br</code> tag inserts a newline character into the book's text. One <code>br</code> tag is needed at the end of the book's text to render properly. Otherwise, no content is rendered.</p>"},{"location":"references/other/books/#img-srcimagenameextension-widthpixels-heightpixels","title":"&lt;img src=\"imageName.extension\" width=\"pixels\" height=\"pixels\"&gt;","text":"<p>The <code>img</code> tag inserts an image in the book. For images to be inserted in the text properly, they need to be set apart from the surrounding text with <code>br</code> tags. The <code>src</code> specifies the name of the image to insert. The image needs to be in one of the texture formats supported by Morrowind. The location of the image needs to be the <code>Data Files\\BookArt</code> folder. The extension can be <code>.bmp</code>, <code>.tga</code> or <code>.dds</code>. It doesn't matter which one is it, but it needs to be one of the specified for the image to be rendered.</p> <p>The image dimensions are in pixels, and the image will be stretched if the aspect ratio isn't the same. The maximal height is 327 pixels for books. The width of the image isn't restricted by the engine. After a point part of the image doesn't fit the book. Scrolls don't have restrictions on the image's dimensions, but too big images just won't fit the scroll.</p>"},{"location":"references/other/books/#additional-notes","title":"Additional Notes","text":"<p>The book HTML is extended to allow runtime replacement of text defines. The text defines for books can start with <code>%</code> or <code>^</code> followed by the variable's name. The variables that can be replaced include all global variables, plus some additional ones listed on the linked page.</p>"},{"location":"references/other/books/#further-reading","title":"Further Reading","text":"<ul> <li>The Construction Set help</li> <li>An example file called \"Morrowind Books HTML.htm\" is found in the <code>Data Files\\BookArt\\</code> directory.</li> <li>Text of the existing books in the game can be seen in the Construction Set.</li> </ul>"},{"location":"references/other/csse/","title":"Construction Set Extender","text":"<p>The Construction Set Extender, also known as CSSE, is a project that aims to improve the functionality of the TES Construction Set. This page serves to document the project.</p> <p>To request a feature, visit the Construction Set Extender Development issue on GitHub. Support for the project can be found in the #mwse channel in the Morrowind Modding Community.</p> <p>For a list of recent changes, visit the CSSE project folder commit history.</p>"},{"location":"references/other/csse/#requirements","title":"Requirements","text":"<p>CSSE requires MGE XE v0.14.3 (released July 29, 2022) or later in order to be automatically loaded into the Construction Set.</p> <p>If using OpenMW, you will still need to install MGE XE into your Morrowind installation directory (the same directory that you launch the Construction Set).</p>"},{"location":"references/other/csse/#installation","title":"Installation","text":"<p>You can obtain the CSSE using one of the following methods:</p>"},{"location":"references/other/csse/#mwse-updater","title":"MWSE-Updater","text":"<p>MGE XE includes the MWSE-Update program. This program will download the latest CSSE file (as well as the latest MWSE) into your Morrowind installation directory.</p> <p>To get CSSE with this method, simply run the program and follow any prompts that may be displayed (such as closing the Construction Set). It may only open briefly, in which case you are likely already up-to-date. The updater won't download the file if you already have the latest version.</p>"},{"location":"references/other/csse/#manually","title":"Manually","text":"<p>The same download can be found on the Automated Build release on GitHub. You can download the mwse.zip file, which contains both MWSE and CSSE.</p> <p>Once you have the zip file downloaded, extract its contents to the Morrowind installation directory. Both CSSE.dll and TES Construction Set.exe must reside in the same directory.</p> <p>If you are strictly an OpenMW user but also a TES Construction Set user, you need only extract the CSSE.dll file into your Morrowind directory. However, for testing in the vanilla engine you should still have the Morrowind Code Patch and MWSE installed. MWSE offers various patches and other features to help make the original engine faster and more stable, in the same way that CSSE does for the Construction Set.</p>"},{"location":"references/other/csse/#compatibility","title":"Compatibility","text":"<p>If you are using Construction Set Better UI, CSSE will not automatically load. To get CSSE to work with Better UI, you will need to rename the Better UI executable to \"TES Construction Set\" and replace the existing vanilla CS file. Be sure to back the original up first!</p>"},{"location":"references/other/csse/#features","title":"Features","text":""},{"location":"references/other/csse/#general","title":"General","text":"<ul> <li>General optimizations to UI rendering. Status updates are throttled to only update once every 20ms, which drastically improves load times.</li> <li>The following warnings will no longer or only conditionally create popup windows, but will still be written to Warnings.txt:<ul> <li>\"Following string is different for topic\" and \"Previous string is different for topic\" are suppressed entirely.</li> <li>The \"1 duplicate references were removed\" from loading Tribunal and Bloodmoon will no longer make a popup. If this is not the vanilla duplicate reference, or if there is more than one duplicate reference, a popup will still be shown.</li> </ul> </li> <li>Fixed GMST pollution bug caused when not loading Tribunal and Bloodmoon.</li> <li>A QuickStart feature. In the render window, use the context menu (Q) to save the currently loaded plugins, the active plugin, current cell, camera position, camera orientation. Whenever the CS is loaded with no other plugin loading, it will automatically load all the saved plugins, and load the cell with the viewport saved. This can be cleared or disabled. This can be done with no active loaded cell if you do not want to automatically load a cell on startup.</li> <li>The CS will no longer adopt a working directory externally. This means that when opening esm/esp files from the Data Files folder from double clicking it, the Morrowind.ini file and all other configs/logs will correctly load from the root Morrowind folder.</li> <li>Loading an active file without manually loading its masters will no longer lead to a potential crash.</li> <li>Opening the Construction Set through Mod Organizer 2 is no longer slowed by the number of active MO2 mod folders.</li> <li>The NetImmerse NiLinesData structure loads correctly.</li> </ul>"},{"location":"references/other/csse/#object-window","title":"Object Window","text":"<ul> <li>Significantly improved UI responsiveness.</li> <li>Added a footer to the window, with a new filter input. This input can be focused by using CTRL+F while the Object Window is active. This can be used to filter objects by a matching id, name, icon, model, enchantment, script, or book text fragments.<ul> <li>Regex search options and case-sensitive search options can be enabled in the config file.</li> </ul> </li> <li>The footer also supports a toggle button to only show modified objects.</li> <li>The data rendering and behavior has been completely rewritten. Strings and alignment is more consistent. New columns can be added.<ul> <li>A new modified column is displayed, showing if the object is modified. This can be sorted on.</li> </ul> </li> <li>Fixed issue where box selection in the object window would cause the mouse to snap to the edge of the screen.</li> <li>Modified objects are highlighted with a light green background.</li> <li>Deleted objects are highlighted with a light red background.</li> </ul>"},{"location":"references/other/csse/#dialogue-window","title":"Dialogue Window","text":"<ul> <li>Optimized UI. Changing between INFOs should be nearly instantaneous. Initial dialogue load time reduced by 60%.</li> <li>Condition variable lists will now always be wide enough to fit the convents. Journals, locals, and items will no longer have their IDs cut off.</li> <li>Modified topics/INFOs are highlighted green. Deleted topics/INFOs are highlighted red.</li> <li>The window can be filtered to only show modified data.</li> <li>The window can now be resized and maximized.</li> <li>Layout changes:<ul> <li>The sex condition is now under the race condition, instead of above the function/variable list. It is not hidden (but is disabled) when viewing journal dialogues.</li> <li>The journal conditions (name/finished/restart) are shown but disabled for other dialogue types.</li> <li>The general UI has minor other position layout changes.</li> </ul> </li> <li>Select all control (Ctrl+A) now functions in the edit boxes.</li> </ul>"},{"location":"references/other/csse/#render-window","title":"Render Window","text":"<ul> <li>Clicking or otherwise interacting with skinned objects, such as NPCs, no longer consumes the mouse. It is now easier to click on objects near actors.</li> <li>Reference rotation is now performed on the world axis, rather than the local axis. To rotate on the local axis as it worked in vanilla, hold the alt key.</li> <li>Dropping a reference (using the F key) is more reliable and accurate. It works on skinned references as well.</li> <li>References can be group-scaled. By holding the alt key when scaling, all selected references will scale together and reposition accordingly.</li> <li>References can be moved onto surfaces. By holding the alt key when drag-moving a reference, it will rotate and snap onto the surface under the cursor. The context menu (Q) can be used to set the axis to snap to.</li> <li>Extended editor marker support. Toggling markers (M) will now also toggle markers supported by the game executable. This allows custom markers to be toggled by tagging them with a MRK string and adding a EditorMarker node, or by defining objects whose name begins with or matches \"Tri EditorMarker\".</li> <li>A new context menu is available, using the Q key. From it you can access some new features:<ul> <li>Set the snap axis when alt-drag-moving references.</li> <li>Toggle between world axis or local axis rotations by default.</li> <li>Hide selected references, culling them from the scene so you can work behind them.</li> <li>Restore hidden references, restoring to view any references hidden with the hide selection option.</li> <li>Set or clear the QuickStart data from the current render window perspective.</li> </ul> </li> <li>The field of view (FOV) and antialiasing (multisamples) can be overwritten in the config file.</li> <li>Fixed an issue with bound calculations. Any bound-related functions, such as focusing the camera (C or T keys) on a light will never send the camera into the stratosphere.</li> </ul> <p>The following changes to the rendering window apply when landscape editing:</p> <ul> <li>The terrain editing disc is no longer hidden when hiding objects (Shift+C).</li> <li>You can use control+right mouse button to sample the texture at the cursor's position. This will select the matching texture under the cursor automatically in the landscape editing menu.</li> </ul>"},{"location":"references/other/csse/#search-replace-window","title":"Search &amp; Replace Window","text":"<ul> <li>Optimized performance of initial display by 80% (e.g. 1.9 seconds instead of 9.7 seconds).</li> </ul>"},{"location":"references/other/csse/#text-search-window","title":"Text Search Window","text":"<ul> <li>Elements may now be double clicked to open the relevant edit window. The right context will be shown, if applicable. For example, a faction will be automatically selected, or a particular INFO record will be displayed.</li> </ul>"},{"location":"references/other/csse/#cell-view","title":"Cell View","text":"<ul> <li>Significantly improved UI responsiveness.</li> </ul>"},{"location":"references/other/game-units/","title":"Game Units","text":"<p>Each exterior cell is 8192 by 8192 game units or 385 by 385 feet (117 x 117m), according to the Construction Set help. Dividing the two we get 21.3 units per foot, or 70 units per meter. The various properties (e.g. <code>.position</code>), and functions in MWSE use these units.</p>"},{"location":"references/other/game-units/#cells-and-their-sizes","title":"Cells and Their Sizes","text":"<p>There are two types of cells: interior cells and exterior cells. The exterior cells form a grid, where each is 8192 x 8192 units. Each interior cell is a separate space without the defined dimensions.</p> <p>The water level in all the exterior cells is 0, while the interior cells have a custom water level, usually set in the Construction Set, or don't have water at all.</p> <p>The landscape consists of verticies that can only be moved on z axis (up and down). The verticies are 128 units apart, so a \"landscape tile\" is 128 x 128 units. Each landscape texture covers 512 x 512 units or 4 by 4 tiles.</p>"},{"location":"references/other/game-units/#actor-height","title":"Actor Height","text":"<p>Base height of an actor is 128 game units. It's further changed by racial height modifier.</p>"},{"location":"references/other/ni-class-hierarchy/","title":"The Hierarchy of NetImmerse Classes","text":"<p>This page puts into relation various classes that compromise Morrowind's scene graph. Some of these classes are abstract, meaning they aren't directly found in the scene graph but are used by other classes to inherit common variables and methods. The game's scene graph can be inspected by entering ssg (show scene graph) command in the console. Morrowind's engine is Gamebryo, which was before known as NetImmerse. That's why these classes have the prefix ni in their name. These classes in MWSE follow the naming as in the vanilla engine. But, some classes contain information about the scene graph in MWSE and have tes3 prefixes such as <code>tes3vector3</code>.</p> <p>The primary building blocks of the scene graph are called nodes. Each node has one parent and zero or more child nodes. For example, the base node of Morrowind's world scene graph, named <code>worldRoot</code>, and all the game world objects are represented by nodes that are children of the <code>worldRoot</code> node.</p> <p>Note that the relations described here don't reflect how these types are organized in the scene graph. For instance, the <code>worldRoot</code> node mentioned earlier is of type <code>niNode</code>, but is the root node of the world's scene graph, while the base class of most types described here is <code>niObject</code>.</p> <p>The types are arranged into functional groupings. Within each grouping, indentation implies inheritance from the class of the previous indentation level. The color of the text carries the following meanings:</p> <ul> <li>Turquoise - Classes read by MWSE but not yet exposed to Lua scripts</li> <li>Green - Classes present in Morrowind but not yet read by MWSE</li> <li>All the other classes in standard text color in this list are available in Lua scripts</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#nimain","title":"niMain","text":""},{"location":"references/other/ni-class-hierarchy/#basic-foundation-types","title":"Basic Foundation Types","text":"<ul> <li>niColor</li> <li>niColorA</li> <li>niPackedColor</li> <li>niRTTI</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#basic-math-and-geometry-classes","title":"Basic Math and Geometry Classes","text":"<ul> <li>niBound</li> <li>tes3boundingBox</li> <li>tes3matrix33</li> <li>tes3vector2</li> <li>tes3vector3</li> <li>niQuaternion</li> <li>tes3transform</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#templated-container-classes","title":"Templated Container Classes","text":"<ul> <li>niTArray - not exposed as a type but can be iterated as a standard Lua array.</li> <li>niLinkedList<ul> <li>niDynamicEffectLinkedList</li> <li>niNodeLinkedList</li> <li>niPropertyLinkedList</li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#animation-classes","title":"Animation Classes","text":"<ul> <li>niObject<ul> <li>niTimeController</li> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niNode<ul> <li>niBSAnimationManager</li> <li>niBSAnimationNode<ul> <li>niBSParticleNode</li> </ul> </li> </ul> </li> </ul> </li> <li>niSequenceStreamHelper</li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#texturing-classes","title":"Texturing Classes","text":"<ul> <li>niObject<ul> <li>niBltSource</li> <li>niObjectNET<ul> <li>niTexture<ul> <li>niRenderedTexture<ul> <li>niRenderedCubeMap</li> </ul> </li> <li>niSourceTexture</li> </ul> </li> </ul> </li> <li>niPalette</li> <li>niPixelData</li> </ul> </li> <li>niPixelFormat</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#object-depth-sorting-classes","title":"Object Depth Sorting Classes","text":"<ul> <li>niObject<ul> <li>niAccumulator<ul> <li>niClusterAccumulator<ul> <li>niAlphaAccumulator</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#geometry-data-classes","title":"Geometry Data Classes","text":"<ul> <li>niObject<ul> <li>niGeometryData<ul> <li>niLinesData</li> <li>niTriBasedGeomData<ul> <li>niParticlesData<ul> <li>niAutoNormalParticlesData</li> <li>niRotatingParticlesData</li> </ul> </li> <li>niTriShapeData<ul> <li>niTriShapeDynamicData</li> </ul> </li> <li>niTriStripsData</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#geometry-rendering-classes","title":"Geometry Rendering Classes","text":"<ul> <li>niObject<ul> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niGeometry<ul> <li>niLines</li> <li>niTriBasedGeometry<ul> <li>niTriShape</li> <li>niTriStrips</li> <li>niParticles<ul> <li>niAutoNormalParticles</li> <li>niRotatingParticles</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>niScreenPolygon</li> <li>niSkinData</li> <li>niSkinDataBoneData</li> <li>niSkinDataBoneDataVertexWeight</li> <li>niSkinInstance</li> <li>niSkinPartition</li> <li>niSkinPartitionPartition</li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#scene-graph-organization-classes","title":"Scene Graph Organization Classes","text":"<ul> <li>niObject<ul> <li>niExtraData<ul> <li>BrickNiExtraData</li> <li>niStringExtraData</li> <li>niTES3ExtraData</li> <li>niTextKeyExtraData</li> <li>niVertWeightsExtraData</li> </ul> </li> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niNode<ul> <li>AvoidNode</li> <li>niBillboardNode</li> <li>niBSPNode</li> <li>niSortAdjustNode</li> <li>niSwitchNode<ul> <li>niFltAnimationNode</li> <li>niLODNode</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#lightning-and-effects-classes","title":"Lightning and Effects Classes","text":"<ul> <li>niObject<ul> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niDynamicEffect<ul> <li>niLight<ul> <li>niAmbientLight</li> <li>niDirectionalLight</li> <li>niPointLight<ul> <li>niSpotLight</li> </ul> </li> </ul> </li> <li>niTextureEffect</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#rendering-and-property-classes","title":"Rendering and Property Classes","text":"<ul> <li>niObject<ul> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niCamera</li> </ul> </li> <li>niProperty<ul> <li>niAlphaProperty</li> <li>niDitherProperty</li> <li>niFogProperty</li> <li>niMaterialProperty</li> <li>niRendererSpecificProperty</li> <li>niShadeProperty</li> <li>niSpecularProperty</li> <li>niStencilProperty</li> <li>niTexturingProperty</li> <li>niVertexColorProperty</li> <li>niWireframeProperty</li> <li>niZBufferProperty</li> </ul> </li> </ul> </li> <li>niRenderer<ul> <li>niDX8Renderer</li> </ul> </li> </ul> </li> </ul>"},{"location":"references/other/ni-class-hierarchy/#niparticle","title":"niParticle","text":""},{"location":"references/other/ni-class-hierarchy/#particle-system-classes","title":"Particle System Classes","text":"<ul> <li>niObject<ul> <li>niEmitterModifier</li> <li>niParticleModifier<ul> <li>niGravity</li> <li>niParticleBomb</li> <li>niParticleCollider<ul> <li>niPlanarCollider</li> <li>niSphericalCollider</li> </ul> </li> <li>niParticleColorModifier</li> <li>niParticleGrowFade</li> <li>niParticleRotation</li> </ul> </li> <li>niTimeController - Not only related to particles<ul> <li>niParticleSystemController</li> </ul> </li> </ul> </li> <li>niPerParticleData</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#nicollision","title":"niCollision","text":""},{"location":"references/other/ni-class-hierarchy/#collision-classes","title":"Collision Classes","text":"<ul> <li>niCollisionGroup</li> <li>niCollisionGroupRecord</li> <li>niObject<ul> <li>niObjectNET<ul> <li>niAVObject<ul> <li>niNode<ul> <li>RootCollisionNode</li> <li>niCollisionSwitch</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>niPick</li> <li>niPickRecord</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#nianimation","title":"niAnimation","text":""},{"location":"references/other/ni-class-hierarchy/#animation-classes_1","title":"Animation Classes","text":"<ul> <li>niObject<ul> <li>niColorData</li> <li>niExtraData - this type is not related to animation by itself.<ul> <li>niTextKeyExtraData</li> </ul> </li> <li>niFloatData</li> <li>niKeyframeData</li> <li>niMorphData</li> <li>niPosData</li> <li>niSequence</li> <li>niTimeController<ul> <li>niFlipController</li> <li>niFloatController<ul> <li>niAlphaController</li> <li>niRollController</li> </ul> </li> <li>niKeyframeController</li> <li>niKeyframeManager</li> <li>niLightColorController</li> <li>niLookAtController</li> <li>niMaterialColorController</li> <li>niMorpherController<ul> <li>niGeomMorpherController</li> </ul> </li> <li>niParticleSystemController<ul> <li>niBSPArrayController</li> </ul> </li> <li>niPathController</li> <li>niUVController</li> <li>niVisController</li> </ul> </li> <li>niUVData</li> <li>niVisData</li> </ul> </li> <li>niAnimationKey<ul> <li>niColorKey</li> <li>niFloatKey<ul> <li>niBezFloatKey</li> <li>niTCBFloatKey</li> </ul> </li> <li>niPosKey<ul> <li>niBezPosKey</li> <li>niTCBPosKey</li> </ul> </li> <li>niRotKey<ul> <li>niBezRotKey</li> <li>niTCBRotKey</li> <li>niEulerRotKey</li> </ul> </li> </ul> </li> <li>niTextKey</li> </ul>"},{"location":"references/other/ni-class-hierarchy/#diagrammatic-representation","title":"Diagrammatic representation","text":"%%{     init: {         'er': {             'diagramPadding': 5,             'entityPadding': 5         },         'flowchart': {             'diagramPadding': 2,             'curve': 'monotoneX'         }     } }%% graph LR     A(niObject) --&gt; B(niAccumulator);         B --&gt; BA(niClusterAccumulator);             BA --&gt; BAA(niAlphaAccumulator);      A --&gt; C(niExtraData);         C --&gt; CA(BrickNiExtraData);         C --&gt; CB(TES3ObjectExtraData);         C --&gt; CC(niStringExtraData);         C --&gt; CD(niTextKeyExtraData);         C --&gt; CE(niVertWeightsExtraData);      A --&gt; D(niGeometryData);         D --&gt; DA(niLinesData);         D --&gt; DB(niParticlesData);             DB --&gt; DBA(niAutoNormalParticlesData);             DB --&gt; DBB(niRotatingParticlesData);         D --&gt; DC(niTriBasedGeomData);             DC --&gt; DCA(niTriShapeData);                 DCA --&gt; DCAA(niTriShapeDynamicData);             DC --&gt; DCB(niTriStripsData);      A --&gt; E(niObjectNET);      subgraph Scroll down for more info         E --&gt; EA(niAVObject);     end          E --&gt; EB(niProperty);             EB --&gt; EBA(niAlphaProperty);             EB --&gt; EBB(niDitherProperty);             EB --&gt; EBC(niFogProperty);             EB --&gt; EBD(niMaterialProperty);             EB --&gt; EBE(niRendererSpecificProperty);             EB --&gt; EBF(niShadeProperty);             EB --&gt; EBG(niSpecularProperty);             EB --&gt; EBH(niStencilProperty);             EB --&gt; EBI(niTexturingProperty);             EB --&gt; EBJ(niVertexColorProperty);             EB --&gt; EBK(niWireframeProperty);             EB --&gt; EBL(niZBufferProperty);          E --&gt; EC(niSequenceStreamHelper);          E --&gt; ED(niTexture);             ED --&gt; EDA(niRenderedTexture);                 EDA --&gt; EDAA(niRenderedCubeMap);             ED --&gt; EDB(niSourceTexture);      A --&gt; F(niParticleModifier);         F --&gt; FA(niGravity);         F --&gt; FB(niParticleBomb);         F --&gt; FC(niParticleCollider);             FC --&gt; FCA(niPlanarCollider);             FC --&gt; FCB(niSphericalCollider);         F --&gt; FD(niParticleColorModifier);         F --&gt; FE(niParticleGrowFade);         F --&gt; FF(niParticleRotation);      A --&gt; G(niRenderer);         G --&gt; GA(niDX8Renderer);      A --&gt; H(niTimeController);         H --&gt; HA(niFlipController);         H --&gt; HB(niFloatController);             HB --&gt; HBA(niAlphaController);             HB --&gt; HBB(niRollController);         H --&gt; HC(niKeyframeController);         H --&gt; HD(niKeyframeManager);         H --&gt; HE(niLightColorController);         H --&gt; HF(niLookAtController);         H --&gt; HG(niMaterialColorController);         H --&gt; HH(niMorpherController);             HH --&gt; HHA(niGeomMorpherController);         H --&gt; HI(niParticleSystemController);             HI --&gt; HIA(niBSPArrayController);         H --&gt; HJ(niPathController);         H --&gt; HK(niUVController);         H --&gt; HL(niVisController);      A --&gt; I(niBltSource);     A --&gt; J(niColorData);     A --&gt; K(niEmitterModifier);     A --&gt; L(niFloatData);     A --&gt; M(niKeyframeData);     A --&gt; N(niMorphData);     A --&gt; O(niPalette);     A --&gt; P(niPixelData);     A --&gt; Q(niPosData);     A --&gt; R(niScreenPolygon);     A --&gt; S(niSequence);     A --&gt; T(niSkinData);     A --&gt; U(niSkinInstance);     A --&gt; V(niSkinPartition);     A --&gt; W(niUVData);     A --&gt; X(niVisData);      %% Default style     classDef default color: #fafafa, fill:#434659, stroke:#e6e6e6, stroke-width:2px;      %% Turquoise     classDef notExposed color:#000, fill: #40E0D0, stroke: #333, stroke-width: 2px;     class DA,EDA,G,HA,HD,HK,Q,R,W notExposed;      %% YellowGreen     classDef notResearched color:#000, fill: #ADFF2F, stroke: #333, stroke-width: 2px;     class B,BA,BAA,CA,CE,DBA,DCAA,DCB,EBB,EBE,EBF,EBG,EBK,EC,EDAA,GA,HB,HBA,HBB,HE,HG,HH,HHA,HIA,HJ,HL,I,K,L,N,O,X notResearched;  %%{     init: {         'er': {             'diagramPadding': 5,             'entityPadding': 5         },         'flowchart': {             'diagramPadding': 2,             'curve': 'monotoneX'         }     } }%% graph LR     EA(niAVObject);     EA --&gt; EAA(niCamera);      EA --&gt; EAB(niDynamicEffect);         EAB --&gt; EABA(niTextureEffect);         EAB --&gt; EABB(niLight);             EABB --&gt; EABBA(niAmbientLight);             EABB --&gt; EABBB(niDirectionalLight);             EABB --&gt; EABBC(niPointLight);                 EABBC --&gt; EABBCA(niSpotLight);      EA --&gt; EAC(niGeometry);         EAC --&gt; EACA(niLines);         EAC --&gt; EACB(niParticles);             EACB --&gt; EACBA(niAutoNormalParticles);             EACB --&gt; EACBB(niRotatingParticles);         EAC --&gt; EACC(niTriBasedGeometry);             EACC --&gt; EACCA(niTriShape);             EACC --&gt; EACCB(niTriStrips);      EA --&gt; EAD(niNode);         EAD --&gt; EADA(AvoidNode);         EAD --&gt; EADB(RootCollisionNode);         EAD --&gt; EADC(niBillboardNode);         EAD --&gt; EADD(niBSAnimationManager);         EAD --&gt; EADE(niBSPNode);         EAD --&gt; EADF(niCollisionSwitch);         EAD --&gt; EADG(niSortAdjustNode);         EAD --&gt; EADH(niBSAnimationNode);             EADH --&gt; EADHA(niBSParticleNode);         EAD --&gt; EADI(niSwitchNode);             EADI --&gt; EADIA(niFltAnimationNode);             EADI --&gt; EADIB(niLODNode);      %% Default style     classDef default color: #fafafa, fill:#434659, stroke:#e6e6e6, stroke-width:2px;      %% Turquoise     classDef notExposed color:#000, fill: #40E0D0, stroke: #333, stroke-width: 2px;     class EAC,EACA,EACC notExposed;      %% YellowGreen     classDef notResearched color:#000, fill: #ADFF2F, stroke: #333, stroke-width: 2px;     class EACCB,EADA,EADB,EADD,EADE,EADG,EADH,EADHA,EADIA,EADIB notResearched;"},{"location":"references/other/patches/","title":"Patches","text":"<p>The following patches are included by MWSE.</p>"},{"location":"references/other/patches/#features","title":"Features","text":"<ul> <li>Allows custom classes to have custom images on the class selection menu. The texture used is a bmp file found in the textures\\levelup directory, whose name is the id of the class.</li> <li>Allows Morrowind to run when not in focus.</li> <li>Allows movies to be played with letterboxing.</li> <li>Allows NiFlipController to specify its affected map correctly.</li> <li>Allows NiLinesData to be loaded from meshes.</li> <li>Allows NiUVController to specify its texture correctly.</li> <li>Creates crash dump files and logging information to help diagnose mod issues.</li> <li><code>Disable</code> mwscript function updates collision information so the player won't collide with invisible references.</li> <li>Improves load times when using Mod Organizer 2.</li> <li>Optimizes access to global variables.</li> <li>Optimizes access to player kill count, via <code>GetDeadCount</code> or dialogue filtering.</li> <li>Optimizes disposition calculation when dialogue filtering.</li> <li>Optimizes <code>DontThreadLoad</code> ini file access to not always fetch from the file system.</li> <li>Optimizes journal updating.</li> <li>Optimizes <code>ShowMap</code> and <code>FillMap</code> to not be absurdly slow.</li> <li>Raises mod limit from 256 to 1024.</li> </ul>"},{"location":"references/other/patches/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Allows the game to correctly close when quit with a messagebox popup, preventing rogue Morrowind.exe processes from hanging in the background.</li> <li>Athletics and sneak skill progress code made consistent with other skill advancements. Useful to modders.</li> <li>Correctly initialize MobileProjectile tag/objectType. Useful to modders.</li> <li><code>Enable</code> and <code>Disable</code> mwscript functions no longer can cause crashes with script variables unset.</li> <li>Fixes book and weapon enchantment copying. Useful to modders.</li> <li>Fixes crash when releasing a clone of a light with no reference.</li> <li>Fixes crash when saving active VFXs when none are serializable.</li> <li>Fixes crash when saving menu position if the derived key name is too long.</li> <li>Fixes crash when updating cell markers at the border of the drawable map area.</li> <li>Fixes crash where NPC flee logic tries to select a random node from pathgrids with 0 nodes.</li> <li>Fixes crash with paper doll equipping/unequipping.</li> <li>Fixes crash with uncloned actors removing items.</li> <li>Fixes time being nudged forward by small extra increments when resting.</li> <li>Fixes time being truncated when advancing time past midnight.</li> <li>Fixes transparency effects from invisibility/chameleon from being desynced when changing equipment.</li> <li>Prevents empty menu positions from saving to the ini file.</li> <li>Updates animations for third person and first person player reference when idle mode is flagged.</li> </ul>"},{"location":"types/ioFile/","title":"ioFile","text":""},{"location":"types/ioFile/#iofile","title":"ioFile","text":"<p>An object that represents an open file.</p>"},{"location":"types/lfsLock/","title":"lfsLock","text":""},{"location":"types/lfsLock/#lfslock","title":"lfsLock","text":"<p>An object that represents a file lock.</p>"},{"location":"types/lfsLock/#methods","title":"Methods","text":""},{"location":"types/lfsLock/#free","title":"<code>free</code>","text":"<p>Frees the lock, so that another lock can be made. Deletes the associated lock file.</p> <pre><code>myObject:free()\n</code></pre>"},{"location":"types/mgeCameraConfig/","title":"mgeCameraConfig","text":""},{"location":"types/mgeCameraConfig/#mgecameraconfig","title":"mgeCameraConfig","text":"<p>Allows control of MGE camera features.</p>"},{"location":"types/mgeCameraConfig/#properties","title":"Properties","text":""},{"location":"types/mgeCameraConfig/#fov","title":"<code>fov</code>","text":"<p>Horizontal FOV, in degrees.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeCameraConfig/#shakeacceleration","title":"<code>shakeAcceleration</code>","text":"<p>Camera shake acceleration. Camera shake must be enabled to see an effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeCameraConfig/#shakeenable","title":"<code>shakeEnable</code>","text":"<p>Set if camera shake is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeCameraConfig/#shakemagnitude","title":"<code>shakeMagnitude</code>","text":"<p>Camera shake magnitude. Camera shake must be enabled to see an effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeCameraConfig/#thirdpersonoffset","title":"<code>thirdPersonOffset</code>","text":"<p>The position offset (from the character) of the third person camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/mgeCameraConfig/#zoom","title":"<code>zoom</code>","text":"<p>Camera zoom multiplier. Default is 1.0. Camera zoom must be enabled to see an effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeCameraConfig/#zoomenable","title":"<code>zoomEnable</code>","text":"<p>Set if camera zoom is enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeCameraConfig/#functions","title":"Functions","text":""},{"location":"types/mgeCameraConfig/#stopzoom","title":"<code>stopZoom</code>","text":"<p>Stops any continuous camera zoom.</p> <pre><code>mgeCameraConfig.stopZoom()\n</code></pre>"},{"location":"types/mgeCameraConfig/#zoomcontinuous","title":"<code>zoomContinuous</code>","text":"<p>Sets up continuous camera zoom. The zoom speed starts at <code>rate</code>. The speed will approach <code>targetRate</code> over time, if provided.</p> <pre><code>mgeCameraConfig.zoomContinuous({ rate = ..., targetRate = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>rate</code> (number): Optional.</li> <li><code>targetRate</code> (number): Optional.</li> </ul> </li> </ul>"},{"location":"types/mgeCameraConfig/#zoomin","title":"<code>zoomIn</code>","text":"<p>Zooms in by the specified amount, or by a small amount if no amount is provided.</p> <pre><code>mgeCameraConfig.zoomIn({ amount = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>amount</code> (number): Default: <code>0.0625</code>.</li> </ul> </li> </ul>"},{"location":"types/mgeCameraConfig/#zoomout","title":"<code>zoomOut</code>","text":"<p>Zooms out by the specified amount, or by a small amount if no amount is provided.</p> <pre><code>mgeCameraConfig.zoomOut({ amount = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>amount</code> (number)</li> </ul> </li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/","title":"mgeDistantLandRenderConfig","text":""},{"location":"types/mgeDistantLandRenderConfig/#mgedistantlandrenderconfig","title":"mgeDistantLandRenderConfig","text":"<p>Allows control of MGE distant land features.</p>"},{"location":"types/mgeDistantLandRenderConfig/#properties","title":"Properties","text":""},{"location":"types/mgeDistantLandRenderConfig/#abovewaterfogend","title":"<code>aboveWaterFogEnd</code>","text":"<p>The above water fog end distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#abovewaterfogstart","title":"<code>aboveWaterFogStart</code>","text":"<p>The above water fog start distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#belowwaterfogend","title":"<code>belowWaterFogEnd</code>","text":"<p>The below water fog end distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#belowwaterfogstart","title":"<code>belowWaterFogStart</code>","text":"<p>The below water fog start distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#drawdistance","title":"<code>drawDistance</code>","text":"<p>The draw distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#farstaticend","title":"<code>farStaticEnd</code>","text":"<p>The maximum distance that 'far' statics will be visible, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#farstaticminsize","title":"<code>farStaticMinSize</code>","text":"<p>Distant objects which are at least this size (and are smaller than veryFarStaticMinSize) are classified as 'far' statics. Smaller objects are classified as 'near' statics. This cannot be updated during gameplay. The game must be restarted to see changes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#fogdistance","title":"<code>fogDistance</code>","text":"<p>An array containing the fog distance multiplier for each weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#fogoffsetpercent","title":"<code>fogOffsetPercent</code>","text":"<p>An array containing the fog offset % for each weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#interiorfogend","title":"<code>interiorFogEnd</code>","text":"<p>The interior fog end distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#interiorfogstart","title":"<code>interiorFogStart</code>","text":"<p>The interior fog start distance, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#nearstaticend","title":"<code>nearStaticEnd</code>","text":"<p>The maximum distance that 'near' statics will be visible, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#veryfarstaticend","title":"<code>veryFarStaticEnd</code>","text":"<p>The maximum distance that 'very far' statics will be visible, in cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#veryfarstaticminsize","title":"<code>veryFarStaticMinSize</code>","text":"<p>Distant objects which are at least this size are classified as 'very far' statics. This cannot be updated during gameplay. The game must be restarted to see changes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#watercaustics","title":"<code>waterCaustics</code>","text":"<p>The % brightness of water caustics.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#waterwaveheight","title":"<code>waterWaveHeight</code>","text":"<p>The maximum height of dynamic waves.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeDistantLandRenderConfig/#wind","title":"<code>wind</code>","text":"<p>An array containing the wind speed multiplier for each weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/mgeRenderFeatures/","title":"mgeRenderFeatures","text":""},{"location":"types/mgeRenderFeatures/#mgerenderfeatures","title":"mgeRenderFeatures","text":"<p>Allows control of MGE render features.</p>"},{"location":"types/mgeRenderFeatures/#properties","title":"Properties","text":""},{"location":"types/mgeRenderFeatures/#atmosphericscattering","title":"<code>atmosphericScattering</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#blurreflections","title":"<code>blurReflections</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#crosshairautohide","title":"<code>crosshairAutoHide</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#displaymessages","title":"<code>displayMessages</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#distantland","title":"<code>distantLand</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#distantstatics","title":"<code>distantStatics</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#distantwater","title":"<code>distantWater</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#dynamicripples","title":"<code>dynamicRipples</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#exponentialfog","title":"<code>exponentialFog</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#fpscounter","title":"<code>fpsCounter</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#grass","title":"<code>grass</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#nomwmgeblending","title":"<code>noMWMGEBlending</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#nomwsunglare","title":"<code>noMWSunglare</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#pauserenderinginmenus","title":"<code>pauseRenderingInMenus</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#reflectinterior","title":"<code>reflectInterior</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#reflectivewater","title":"<code>reflectiveWater</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#reflectnearstatics","title":"<code>reflectNearStatics</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#reflectsky","title":"<code>reflectSky</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#shaders","title":"<code>shaders</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#shadows","title":"<code>shadows</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#transparencyaa","title":"<code>transparencyAA</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeRenderFeatures/#updatehdr","title":"<code>updateHDR</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeShaderHandle/","title":"mgeShaderHandle","text":""},{"location":"types/mgeShaderHandle/#mgeshaderhandle","title":"mgeShaderHandle","text":"<p>A loaded MGE shader.</p>"},{"location":"types/mgeShaderHandle/#properties","title":"Properties","text":""},{"location":"types/mgeShaderHandle/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of the shader.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeShaderHandle/#name","title":"<code>name</code>","text":"<p>The shader name.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/mgeShaderHandle/#orderpriority","title":"<code>orderPriority</code>","text":"<p>The calculated ordering priority value of the shader, that allows auto-sorting of shaders. Changing this value will re-sort the shader list.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeShaderHandle/#variables","title":"<code>variables</code>","text":"<p>Lists the shader's editable variables. The result table has the variable names as keys, and the variable types as values. To get and set the actual variable, use the expression <code>shaderHandle.&lt;variableName&gt;</code>.</p> <pre><code>Variable types are:\n'b' boolean\n'i' integer\n'f' float\n's' string\n'a' float array\n'2' vec2\n'3' vec3\n'4' vec4\n'm' matrix\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;string, string&gt;)</li> </ul>"},{"location":"types/mgeShaderHandle/#methods","title":"Methods","text":""},{"location":"types/mgeShaderHandle/#reload","title":"<code>reload</code>","text":"<p>Reloads and recompiles the shader. Returns if the reload was successful.</p> <pre><code>local result = myObject:reload()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mgeShadersConfig/","title":"mgeShadersConfig","text":""},{"location":"types/mgeShadersConfig/#mgeshadersconfig","title":"mgeShadersConfig","text":"<p>Allows control of MGE shader features.</p>"},{"location":"types/mgeShadersConfig/#properties","title":"Properties","text":""},{"location":"types/mgeShadersConfig/#debug","title":"<code>debug</code>","text":"<p>Read-only. Gathers a string listing all shaders.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/mgeShadersConfig/#hdrreactionspeed","title":"<code>hdrReactionSpeed</code>","text":"<p>The HDR exposure reaction speed, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mgeShadersConfig/#list","title":"<code>list</code>","text":"<p>Read-only. Loads a list of all shaders. This is not a constant-held collection, and each shader handle is initialized anew each time this function is called. Cache this value when you are sure that shaders are not added or removed.</p> <p>Returns:</p> <ul> <li><code>result</code> (mgeShaderHandle[])</li> </ul>"},{"location":"types/mgeShadersConfig/#functions","title":"Functions","text":""},{"location":"types/mgeShadersConfig/#find","title":"<code>find</code>","text":"<p>Finds a loaded shader and returns a handle to it.</p> <pre><code>local shader = mgeShadersConfig.find({ name = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>name</code> (string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>shader</code> (mgeShaderHandle, nil)</li> </ul>"},{"location":"types/mgeShadersConfig/#load","title":"<code>load</code>","text":"<p>Loads a shader by name, from the <code>Data Files/shaders/XEshaders</code> directory. Adds the shader to the existing shader list, or returns the existing shader if it is already loaded.</p> <p>If the shader has a category annotation, it is inserted into a position that preserves the category ordering. Shaders without a category will be added to the end of the list.</p> <p>Summary of category sort order: * scene: Additional objects rendered into the scene. * atmosphere: Atmosphere effects that render over all objects, such as mist. * lens: Lens effects such as depth of field. * sensor: Sensor effects such as bloom. * tone: Tone mapping and color grading. * final: Any effects that need to run last.</p> <pre><code>local shader = mgeShadersConfig.load({ name = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>name</code> (string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>shader</code> (mgeShaderHandle, nil)</li> </ul>"},{"location":"types/mgeWeatherConfig/","title":"mgeWeatherConfig","text":""},{"location":"types/mgeWeatherConfig/#mgeweatherconfig","title":"mgeWeatherConfig","text":"<p>Allows control of MGE weather features.</p>"},{"location":"types/mgeWeatherConfig/#functions","title":"Functions","text":""},{"location":"types/mgeWeatherConfig/#getdistantfog","title":"<code>getDistantFog</code>","text":"<p>No description yet available.</p> <pre><code>mgeWeatherConfig.getDistantFog(weather)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weather</code> (number)</li> </ul>"},{"location":"types/mgeWeatherConfig/#getperpixellighting","title":"<code>getPerPixelLighting</code>","text":"<p>Gets the PPL data for a weather from MGE. These are returned in a table with the <code>sun</code> and <code>ambient</code> keys, as well as the <code>weather</code> redefined. The result table can be modified, then sent back to <code>setPerPixelLighting</code>.</p> <pre><code>local result = mgeWeatherConfig.getPerPixelLighting(weather)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weather</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;string, number&gt;)</li> </ul>"},{"location":"types/mgeWeatherConfig/#getscattering","title":"<code>getScattering</code>","text":"<p>Gets the in- and out-scatter values from MGE. These are returned in a table with the <code>inscatter</code> and <code>outscatter</code> keys. The result table can be modified, then sent back to <code>setScattering</code>.</p> <pre><code>local scatters = mgeWeatherConfig.getScattering()\n</code></pre> <p>Returns:</p> <ul> <li><code>scatters</code> (table&lt;string, tes3vector3&gt;)</li> </ul>"},{"location":"types/mgeWeatherConfig/#getskylightscattering","title":"<code>getSkylightScattering</code>","text":"<p>Gets the skylight scatter values from MGE. These are returned in a table with the <code>skylight</code> and <code>mix</code> keys. The result table can be modified, then sent back to <code>setSkylightScattering</code>.</p> <pre><code>local scatters = mgeWeatherConfig.getSkylightScattering()\n</code></pre> <p>Returns:</p> <ul> <li><code>scatters</code> (table&lt;string, number[]|number&gt;)</li> </ul>"},{"location":"types/mgeWeatherConfig/#getwind","title":"<code>getWind</code>","text":"<p>Gets the wind speed for a weather from MGE. This is returned in a table with the <code>speed</code> key, as well as the <code>weather</code> redefined. The result table can be modified, then sent back to <code>setWind</code>.</p> <pre><code>local result = mgeWeatherConfig.getWind(weather)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weather</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;string, number&gt;): A package containing the speed property.</li> </ul>"},{"location":"types/mgeWeatherConfig/#setdistantfog","title":"<code>setDistantFog</code>","text":"<p>No description yet available.</p> <pre><code>mgeWeatherConfig.setDistantFog({ weather = ..., distance = ..., offset = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>weather</code> (number)</li> <li><code>distance</code> (number)</li> <li><code>offset</code> (number)</li> </ul> </li> </ul>"},{"location":"types/mgeWeatherConfig/#setperpixellighting","title":"<code>setPerPixelLighting</code>","text":"<p>Sets the PPL values for a weather in MGE. The result table of <code>getPerPixelLighting</code> can be modified then passed to this function.</p> <pre><code>mgeWeatherConfig.setPerPixelLighting({ weather = ..., sun = ..., ambient = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>weather</code> (number)</li> <li><code>sun</code> (number)</li> <li><code>ambient</code> (number)</li> </ul> </li> </ul>"},{"location":"types/mgeWeatherConfig/#setscattering","title":"<code>setScattering</code>","text":"<p>Sets the in- and out-scatter values for MGE. The result table of <code>getScattering</code> can be modified then passed to this function.</p> <pre><code>mgeWeatherConfig.setScattering({ inscatter = ..., outscatter = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>inscatter</code> (tes3vector3, table)</li> <li><code>outscatter</code> (tes3vector3, table)</li> </ul> </li> </ul>"},{"location":"types/mgeWeatherConfig/#setskylightscattering","title":"<code>setSkylightScattering</code>","text":"<p>Sets the sky scatter values for MGE. The result table of <code>getSkylightScattering</code> can be modified then passed to this function.</p> <pre><code>mgeWeatherConfig.setSkylightScattering({ skylight = ..., mix = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>skylight</code> (tes3vector3, table)</li> <li><code>mix</code> (number): Default: <code>0.44</code>.</li> </ul> </li> </ul>"},{"location":"types/mgeWeatherConfig/#setwind","title":"<code>setWind</code>","text":"<p>Sets the wind speed for a weather in MGE. The result table of <code>getWind</code> can be modified then passed to this function.</p> <pre><code>mgeWeatherConfig.setWind({ weather = ..., speed = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>weather</code> (number)</li> <li><code>speed</code> (number)</li> </ul> </li> </ul>"},{"location":"types/mwseLogger/","title":"mwseLogger","text":""},{"location":"types/mwseLogger/#mwselogger","title":"mwseLogger","text":"<p>A logging class. Needs to be required before use. See this guide.</p>"},{"location":"types/mwseLogger/#properties","title":"Properties","text":""},{"location":"types/mwseLogger/#logtoconsole","title":"<code>logToConsole</code>","text":"<p>If <code>true</code>, all the logged messages will also be logged to console.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mwseLogger/#name","title":"<code>name</code>","text":"<p>Name of the mod, also counts as unique id of the logger.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/mwseLogger/#methods","title":"Methods","text":""},{"location":"types/mwseLogger/#assert","title":"<code>assert</code>","text":"<p>Assert a condition and log an error if it fails.</p> <pre><code>myObject:assert(condition, message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>condition</code> (boolean)</li> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLogger/#debug","title":"<code>debug</code>","text":"<p>Log debug message.</p> <pre><code>myObject:debug(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLogger/#dolog","title":"<code>doLog</code>","text":"<p>Returns true if the messages of the given log level will be logged.</p> <pre><code>local doLog = myObject:doLog(logLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>logLevel</code> (mwseLoggerLogLevel): Options are: \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" and \"NONE\".</li> </ul> <p>Returns:</p> <ul> <li><code>doLog</code> (boolean)</li> </ul>"},{"location":"types/mwseLogger/#error","title":"<code>error</code>","text":"<p>Log error message.</p> <pre><code>myObject:error(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLogger/#info","title":"<code>info</code>","text":"<p>Log info message.</p> <pre><code>myObject:info(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLogger/#setloglevel","title":"<code>setLogLevel</code>","text":"<p>Set the log level. Options are: \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" and \"NONE\".</p> <pre><code>myObject:setLogLevel(newLogLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>newLogLevel</code> (mwseLoggerLogLevel)</li> </ul>"},{"location":"types/mwseLogger/#setoutputfile","title":"<code>setOutputFile</code>","text":"<p>Set the output file. If set, logs will be sent to a file of this name.</p> <pre><code>myObject:setOutputFile(outputFile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>outputFile</code> (string)</li> </ul>"},{"location":"types/mwseLogger/#trace","title":"<code>trace</code>","text":"<p>Log trace message.</p> <pre><code>myObject:trace(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLogger/#warn","title":"<code>warn</code>","text":"<p>Log warn message.</p> <pre><code>myObject:warn(message, formatValues)\n</code></pre> <p>Parameters:</p> <ul> <li><code>message</code> (string)</li> <li><code>formatValues</code> (variadic): Optional. Formatting and additional parameters matching string.format's usage.</li> </ul>"},{"location":"types/mwseLuaExecutor/","title":"mwseLuaExecutor","text":""},{"location":"types/mwseLuaExecutor/#mwseluaexecutor","title":"mwseLuaExecutor","text":"<p>A handle to a command excuted using <code>os.execute</code> configured to run asynchronously.</p>"},{"location":"types/mwseLuaExecutor/#properties","title":"Properties","text":""},{"location":"types/mwseLuaExecutor/#command","title":"<code>command</code>","text":"<p>The command originally passed to <code>os.execute</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/mwseLuaExecutor/#errorcode","title":"<code>errorCode</code>","text":"<p>The error code of the program, or 0 if there was no error.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mwseLuaExecutor/#exitcode","title":"<code>exitCode</code>","text":"<p>The exit code of the program, or nil if the program has not yet finished.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/mwseLuaExecutor/#ready","title":"<code>ready</code>","text":"<p>If true, the program is no longer running and output can be read.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/mwseLuaExecutor/#methods","title":"Methods","text":""},{"location":"types/mwseLuaExecutor/#getoutput","title":"<code>getOutput</code>","text":"<p>Reads the current output of the program, and clears the output buffer.</p> <pre><code>local output = myObject:getOutput()\n</code></pre> <p>Returns:</p> <ul> <li><code>output</code> (string): The output written to stdout by the program.</li> </ul>"},{"location":"types/mwseLuaExecutor/#wait","title":"<code>wait</code>","text":"<p>Pauses the main thread, locking up the program until the program has finished.</p> <pre><code>myObject:wait()\n</code></pre>"},{"location":"types/mwseSafeObjectHandle/","title":"mwseSafeObjectHandle","text":""},{"location":"types/mwseSafeObjectHandle/#mwsesafeobjecthandle","title":"mwseSafeObjectHandle","text":"<p>A handle to safely operate on (tes3object).</p>"},{"location":"types/mwseSafeObjectHandle/#methods","title":"Methods","text":""},{"location":"types/mwseSafeObjectHandle/#getobject","title":"<code>getObject</code>","text":"<p>Returns the object of this handle.</p> <pre><code>local result = myObject:getObject()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/mwseSafeObjectHandle/#valid","title":"<code>valid</code>","text":"<p>Returns true if the object of this handle is still valid. Objects that are invalid do no longer exist and cannot be used.</p> <pre><code>myObject:valid()\n</code></pre> Example: An example of usage <pre><code>local result = tes3.rayTest{ -- the result can get invalidated\n    position = tes3.getPlayerEyePosition(),\n    direction = tes3.getPlayerEyeVector(),\n    ignore = { tes3.player }\n}\n\nlocal refHandle\n\nif result then\n    refHandle = tes3.makeSafeObjectHandle(result.reference)\nend\n\nlocal function myFunction()\n    -- Before using the reference, we need to check that it's still valid.\n    -- References get unloaded on cell changes etc.\n    if refHandle and refHandle:valid() then\n        -- Now we can safely do something with our stored reference.\n        local reference = refHandle:getObject()\n\n    end\nend\n</code></pre>"},{"location":"types/mwseTimer/","title":"mwseTimer","text":""},{"location":"types/mwseTimer/#mwsetimer","title":"mwseTimer","text":"<p>A Timer is a class used to keep track of callback that should be invoked at a later time.</p>"},{"location":"types/mwseTimer/#properties","title":"Properties","text":""},{"location":"types/mwseTimer/#callback","title":"<code>callback</code>","text":"<p>Read-only. The callback that will be invoked at the end of each iteration.</p> <p>Returns:</p> <ul> <li><code>result</code> (function, string)</li> </ul>"},{"location":"types/mwseTimer/#data","title":"<code>data</code>","text":"<p>Arbitrary json-serializable data stored in the timer. This defaults to <code>nil</code>, but can be set at the time of timer creation, or changed later.</p> <p>Returns:</p> <ul> <li><code>result</code> (table, nil)</li> </ul>"},{"location":"types/mwseTimer/#duration","title":"<code>duration</code>","text":"<p>Read-only. The duration of single iteration of the timer in seconds for timers of <code>timer.real</code> and <code>timer.simulate</code> types. It's in hours for <code>timer.game</code> timers.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mwseTimer/#iterations","title":"<code>iterations</code>","text":"<p>Read-only. The amount of iterations left for the timer.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/mwseTimer/#state","title":"<code>state</code>","text":"<p>Read-only. The state of the timer, matching <code>timer.active</code>, <code>timer.paused</code>, or <code>timer.expired</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/mwseTimer/#timeleft","title":"<code>timeLeft</code>","text":"<p>Read-only. The amount of time left before the current iteration of the timer will complete. Reset to <code>duration</code> value at the end of each iteration.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mwseTimer/#timing","title":"<code>timing</code>","text":"<p>Read-only. This is the time in the owning <code>mwseTimerController</code>'s clock when the current iteration of the timer ends. It's updated for each iteration. For paused timers its equal to the number of seconds/hours left for the current iteration.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mwseTimer/#methods","title":"Methods","text":""},{"location":"types/mwseTimer/#cancel","title":"<code>cancel</code>","text":"<p>Cancels the timer.</p> <pre><code>local canceled = myObject:cancel()\n</code></pre> <p>Returns:</p> <ul> <li><code>canceled</code> (boolean)</li> </ul>"},{"location":"types/mwseTimer/#pause","title":"<code>pause</code>","text":"<p>Pauses the timer.</p> <pre><code>local paused = myObject:pause()\n</code></pre> <p>Returns:</p> <ul> <li><code>paused</code> (boolean)</li> </ul>"},{"location":"types/mwseTimer/#reset","title":"<code>reset</code>","text":"<p>Resets the timer completion time and iterations count.</p> <pre><code>myObject:reset()\n</code></pre>"},{"location":"types/mwseTimer/#resume","title":"<code>resume</code>","text":"<p>Resumes a paused timer.</p> <pre><code>local resumed = myObject:resume()\n</code></pre> <p>Returns:</p> <ul> <li><code>resumed</code> (boolean)</li> </ul>"},{"location":"types/mwseTimerController/","title":"mwseTimerController","text":""},{"location":"types/mwseTimerController/#mwsetimercontroller","title":"mwseTimerController","text":"<p>A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic. By default there are three Timer Controllers for each type of timers: <code>timer.simulate</code>, <code>timer.game</code> or <code>timer.real</code>.</p>"},{"location":"types/mwseTimerController/#properties","title":"Properties","text":""},{"location":"types/mwseTimerController/#clock","title":"<code>clock</code>","text":"<p>The current clock time for this timer controller. Timer Controller, responsible for <code>timer.game</code> type of timers, has clock equal to the game's simuation timestamp. Timer Controllers, responsible for <code>timer.real</code>, and <code>timer.simulate</code>, types of timers have their initial clock set to <code>0</code> on a new game, and their clock's progressions is equal to <code>deltaTime</code>. Timer Controller's, responsible for <code>timer.simulate</code> timers, clock only advances when the menu mode is off.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/mwseTimerController/#methods","title":"Methods","text":""},{"location":"types/mwseTimerController/#create","title":"<code>create</code>","text":"<p>Creates a timer for the given Timer Controller.</p> <pre><code>local timer = myObject:create({ duration = ..., callback = ..., iterations = ..., persists = ..., data = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>duration</code> (number)</li> <li><code>callback</code> (function, string)</li> <li><code>iterations</code> (integer): Default: <code>1</code>.</li> <li><code>persists</code> (boolean): Default: <code>true</code>.</li> <li><code>data</code> (table, nil): Default: <code>nil</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>timer</code> (mwseTimer)</li> </ul>"},{"location":"types/mwseTimerController/#functions","title":"Functions","text":""},{"location":"types/mwseTimerController/#new","title":"<code>new</code>","text":"<p>Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided.</p> <pre><code>local result = mwseTimerController.new(startTime)\n</code></pre> <p>Parameters:</p> <ul> <li><code>startTime</code> (number): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (mwseTimerController)</li> </ul>"},{"location":"types/niAVObject/","title":"niAVObject","text":""},{"location":"types/niAVObject/#niavobject","title":"niAVObject","text":"<p>The typical base type for most NetImmerse scene graph objects.</p> <p>This type inherits the following: niObjectNET, niObject</p>"},{"location":"types/niAVObject/#properties","title":"Properties","text":""},{"location":"types/niAVObject/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niAVObject/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niAVObject/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAVObject/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niAVObject/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niAVObject/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niAVObject/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAVObject/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niAVObject/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAVObject/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAVObject/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAVObject/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAVObject/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAVObject/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAVObject/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAVObject/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niAVObject/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niAVObject/#methods","title":"Methods","text":""},{"location":"types/niAVObject/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAVObject/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niAVObject/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niAVObject/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niAVObject/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niAVObject/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niAVObject/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niAVObject/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niAVObject/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niAVObject/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niAVObject/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAVObject/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAVObject/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAVObject/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAVObject/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niAVObject/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niAVObject/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niAVObject/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAVObject/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAVObject/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niAVObject/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niAVObject/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niAVObject/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niAVObject/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niAlphaProperty/","title":"niAlphaProperty","text":""},{"location":"types/niAlphaProperty/#nialphaproperty","title":"niAlphaProperty","text":"<p>A rendering property that manages alpha blending, enabling and disabling it, and setting blending functions. The property also affects alpha testing, which can provide a performance boost.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niAlphaProperty/#properties","title":"Properties","text":""},{"location":"types/niAlphaProperty/#alphatestref","title":"<code>alphaTestRef</code>","text":"<p>The reference value used for alpha testing. In range [0, 255].</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niAlphaProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niAlphaProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niAlphaProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niAlphaProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niAlphaProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAlphaProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAlphaProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAlphaProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niAlphaProperty/#methods","title":"Methods","text":""},{"location":"types/niAlphaProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAlphaProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niAlphaProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niAlphaProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAlphaProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAlphaProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAlphaProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAlphaProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAlphaProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAlphaProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAlphaProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niAlphaProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niAlphaProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAlphaProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAlphaProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niAlphaProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niAlphaProperty/#functions","title":"Functions","text":""},{"location":"types/niAlphaProperty/#new","title":"<code>new</code>","text":"<p>Creates a new, niAlphaProperty, with the <code>alphaTestRef</code> set to 0.</p> <pre><code>local property = niAlphaProperty.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>property</code> (niAlphaProperty)</li> </ul>"},{"location":"types/niAmbientLight/","title":"niAmbientLight","text":""},{"location":"types/niAmbientLight/#niambientlight","title":"niAmbientLight","text":"<p>An object that represents an ambient light. This object is fairly simple, and has no location, direction, or attenuation.</p> <p>This type inherits the following: niLight, niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niAmbientLight/#properties","title":"Properties","text":""},{"location":"types/niAmbientLight/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niAmbientLight/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#ambient","title":"<code>ambient</code>","text":"<p>The ambient light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niAmbientLight/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niAmbientLight/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niAmbientLight/#dimmer","title":"<code>dimmer</code>","text":"<p>This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niAmbientLight/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niAmbientLight/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niAmbientLight/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niAmbientLight/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niAmbientLight/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAmbientLight/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niAmbientLight/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#specular","title":"<code>specular</code>","text":"<p>This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius.</p> <p>In practice, this radius represents the light's influence radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niAmbientLight/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAmbientLight/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niAmbientLight/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAmbientLight/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niAmbientLight/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niAmbientLight/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niAmbientLight/#methods","title":"Methods","text":""},{"location":"types/niAmbientLight/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAmbientLight/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niAmbientLight/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niAmbientLight/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niAmbientLight/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niAmbientLight/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niAmbientLight/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niAmbientLight/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niAmbientLight/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niAmbientLight/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niAmbientLight/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niAmbientLight/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niAmbientLight/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAmbientLight/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niAmbientLight/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niAmbientLight/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAmbientLight/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niAmbientLight/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niAmbientLight/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niAmbientLight/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niAmbientLight/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niAmbientLight/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niAmbientLight/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niAmbientLight/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niAmbientLight/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niAmbientLight/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niAnimationKey/","title":"niAnimationKey","text":""},{"location":"types/niAnimationKey/#nianimationkey","title":"niAnimationKey","text":"<p>The base-most class from which all other animation keys are derived. Simply holds timing information.</p>"},{"location":"types/niAnimationKey/#properties","title":"Properties","text":""},{"location":"types/niAnimationKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezFloatKey/","title":"niBezFloatKey","text":""},{"location":"types/niBezFloatKey/#nibezfloatkey","title":"niBezFloatKey","text":"<p>An animation key for bezier curved values.</p> <p>This type inherits the following: niFloatKey, niAnimationKey</p>"},{"location":"types/niBezFloatKey/#properties","title":"Properties","text":""},{"location":"types/niBezFloatKey/#intangent","title":"<code>inTangent</code>","text":"<p>The inbound tangent for the bezier curve.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezFloatKey/#outtangent","title":"<code>outTangent</code>","text":"<p>The outbound tangent for the bezier curve.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezFloatKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezFloatKey/#value","title":"<code>value</code>","text":"<p>The arbitrary value of the NiFloatKey.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezPosKey/","title":"niBezPosKey","text":""},{"location":"types/niBezPosKey/#nibezposkey","title":"niBezPosKey","text":"<p>An animation key for bezier curved position.</p> <p>This type inherits the following: niPosKey, niAnimationKey</p>"},{"location":"types/niBezPosKey/#properties","title":"Properties","text":""},{"location":"types/niBezPosKey/#intangent","title":"<code>inTangent</code>","text":"<p>The inbound tangent for the bezier curve.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBezPosKey/#outtangent","title":"<code>outTangent</code>","text":"<p>The outbound tangent for the bezier curve.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBezPosKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezPosKey/#value","title":"<code>value</code>","text":"<p>The position value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBezRotKey/","title":"niBezRotKey","text":""},{"location":"types/niBezRotKey/#nibezrotkey","title":"niBezRotKey","text":"<p>An animation key for bezier curved rotation.</p> <p>This type inherits the following: niRotKey, niAnimationKey</p>"},{"location":"types/niBezRotKey/#properties","title":"Properties","text":""},{"location":"types/niBezRotKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBezRotKey/#value","title":"<code>value</code>","text":"<p>The rotation value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niBillboardNode/","title":"niBillboardNode","text":""},{"location":"types/niBillboardNode/#nibillboardnode","title":"niBillboardNode","text":"<p>This node adjusts its render-time orientation so that the local z axis will face the camera. It supports multiple modes: camera parallel, or rotation around the local Y axis.</p> <p>This type inherits the following: niNode, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niBillboardNode/#properties","title":"Properties","text":""},{"location":"types/niBillboardNode/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#children","title":"<code>children</code>","text":"<p>Read-only. The children of the node. Can have <code>nil</code> entries.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject[])</li> </ul>"},{"location":"types/niBillboardNode/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niBillboardNode/#effectlist","title":"<code>effectList</code>","text":"<p>Read-only. The effect list of the node. Attached effects affect the node and all of its child subtree geometry.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffectLinkedList)</li> </ul>"},{"location":"types/niBillboardNode/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niBillboardNode/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBillboardNode/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#mode","title":"<code>mode</code>","text":"<p>The orientation mode. Maps to values in <code>ni.billboardMode</code> table. <code>0</code> Always face camera. Local z-axis becomes parallel to the camera. Minimizes rotation difference from the previous frame for smoother motion. <code>1</code> Rotate about up vector. The object is rotated around its local y-axis so that its z-axis is pointing towards the camera. <code>2</code> Rigid face camera. Local z-axis becomes parallel to the camera. Does not depend on previous frame.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niBillboardNode/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niBillboardNode/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niBillboardNode/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niBillboardNode/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBillboardNode/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niBillboardNode/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niBillboardNode/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niBillboardNode/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBillboardNode/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBillboardNode/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBillboardNode/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niBillboardNode/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niBillboardNode/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niBillboardNode/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niBillboardNode/#methods","title":"Methods","text":""},{"location":"types/niBillboardNode/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niBillboardNode/#attachchild","title":"<code>attachChild</code>","text":"<p>Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list.</p> <pre><code>myObject:attachChild(child, useFirstAvailable)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> <li><code>useFirstAvailable</code> (boolean): Default: <code>false</code>. Use the first available space in the list. If <code>false</code> appends the child at the end of the list.</li> </ul>"},{"location":"types/niBillboardNode/#attacheffect","title":"<code>attachEffect</code>","text":"<p>Attaches a dynamic effect to the node. It will not attach the same effect twice.</p> <pre><code>myObject:attachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niBillboardNode/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niBillboardNode/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niBillboardNode/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niBillboardNode/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niBillboardNode/#createboundingbox","title":"<code>createBoundingBox</code>","text":"<p>Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated.</p> <pre><code>local boundingBox = myObject:createBoundingBox()\n</code></pre> <p>Returns:</p> <ul> <li><code>boundingBox</code> (tes3boundingBox): The newly created bounding box.</li> </ul>"},{"location":"types/niBillboardNode/#detachallchildren","title":"<code>detachAllChildren</code>","text":"<p>Detaches all children from the children list of the node.</p> <pre><code>myObject:detachAllChildren()\n</code></pre>"},{"location":"types/niBillboardNode/#detachalleffects","title":"<code>detachAllEffects</code>","text":"<p>Detaches all dynamic effect from the effect list of the node.</p> <pre><code>myObject:detachAllEffects()\n</code></pre>"},{"location":"types/niBillboardNode/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niBillboardNode/#detachchild","title":"<code>detachChild</code>","text":"<p>Detaches the child from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChild(child)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niBillboardNode/#detachchildat","title":"<code>detachChildAt</code>","text":"<p>Detaches the child at the specified index from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChildAt(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (integer)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niBillboardNode/#detacheffect","title":"<code>detachEffect</code>","text":"<p>Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node.</p> <pre><code>myObject:detachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niBillboardNode/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niBillboardNode/#geteffect","title":"<code>getEffect</code>","text":"<p>Gets the effect of the given type.</p> <pre><code>local effect = myObject:getEffect(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): Use the values from <code>ni.dynamicEffectType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (niDynamicEffect, nil)</li> </ul>"},{"location":"types/niBillboardNode/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niBillboardNode/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niBillboardNode/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niBillboardNode/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niBillboardNode/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niBillboardNode/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niBillboardNode/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niBillboardNode/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niBillboardNode/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niBillboardNode/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niBillboardNode/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niBillboardNode/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niBillboardNode/#rotatetocamera","title":"<code>rotateToCamera</code>","text":"<p>Updates the world transform to point at a camera. Used automatically during rendering. This method is only needed when you need to get the world transform without rendering.</p> <pre><code>myObject:rotateToCamera(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul>"},{"location":"types/niBillboardNode/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niBillboardNode/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niBillboardNode/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niBillboardNode/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niBillboardNode/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niBillboardNode/#functions","title":"Functions","text":""},{"location":"types/niBillboardNode/#new","title":"<code>new</code>","text":"<p>Creates a new, empty niBillboardNode, with the mode set to rotate about the model-space up vector.</p> <pre><code>local node = niBillboardNode.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>node</code> (niBillboardNode)</li> </ul>"},{"location":"types/niCamera/","title":"niCamera","text":""},{"location":"types/niCamera/#nicamera","title":"niCamera","text":"<p>Object that represent a camera. Position and orientation is determined by parent properties. This enables the cameras to be attached to scene graph objects and follow them automatically, as they move.</p> <p>This type inherits the following: niAVObject, niObjectNET, niObject</p>"},{"location":"types/niCamera/#properties","title":"Properties","text":""},{"location":"types/niCamera/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niCamera/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niCamera/#cullingplanes","title":"<code>cullingPlanes</code>","text":"<p>The culling planes of the camera: near, far, left, right, top, and bottom.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4[])</li> </ul>"},{"location":"types/niCamera/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niCamera/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niCamera/#lodadjust","title":"<code>lodAdjust</code>","text":"<p>The level-of-detail adjustment value for the camera. This value is used by NiLODNode objects to multiply the distance between the object whose LOD is being computed and the camera. A higher value will lower the LOD of the objects drawn by the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niCamera/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niCamera/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niCamera/#port","title":"<code>port</code>","text":"<p>The port on the backbuffer of the camera. Represents the rectangular portion of the rendering backbuffer to which the camera's view rectangle is drawn (purely 2D mapping). These values are called port settings. The ordering: X - left, Y - right, Z - top and W - bottom. All port settings must be in the unit interval [0, 1]. The left edge of the backbuffer is 0.0, the right edge is 1.0. The top edge of the backbuffer is 1.0, the bottom edge is 0.0.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/niCamera/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niCamera/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#renderer","title":"<code>renderer</code>","text":"<p>Read-only. The renderer of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRenderer)</li> </ul>"},{"location":"types/niCamera/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niCamera/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niCamera/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niCamera/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#scene","title":"<code>scene</code>","text":"<p>Read-only. The scene of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niCamera/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niCamera/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niCamera/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niCamera/#viewdistance","title":"<code>viewDistance</code>","text":"<p>The view distance of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCamera/#worlddirection","title":"<code>worldDirection</code>","text":"<p>Defines the X-axis of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#worldright","title":"<code>worldRight</code>","text":"<p>Defines the Z-axis of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#worldtocamera","title":"<code>worldToCamera</code>","text":"<p>The world-to-camera transform matrix in row-major order.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix44)</li> </ul>"},{"location":"types/niCamera/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niCamera/#worldup","title":"<code>worldUp</code>","text":"<p>Defines the Y-axis of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCamera/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niCamera/#methods","title":"Methods","text":""},{"location":"types/niCamera/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niCamera/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niCamera/#clear","title":"<code>clear</code>","text":"<p>This method clears the current render target of the camera's renderer. Uses flag values from <code>ni.cameraClearFlags</code>.</p> <pre><code>myObject:clear(flags)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flags</code> (number): Default: <code>ni.cameraClearFlags.all</code>.</li> </ul>"},{"location":"types/niCamera/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niCamera/#click","title":"<code>click</code>","text":"<p>This method renders the currently-attached scene graph to the active renderer.</p> <pre><code>myObject:click(something)\n</code></pre> <p>Parameters:</p> <ul> <li><code>something</code> (boolean): Default: <code>false</code>.</li> </ul>"},{"location":"types/niCamera/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niCamera/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niCamera/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niCamera/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niCamera/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niCamera/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niCamera/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niCamera/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niCamera/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niCamera/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCamera/#lookatworldpoint","title":"<code>lookAtWorldPoint</code>","text":"<p>Update the camera's local rotation so that it is looking at the given point, with an up vector as close as possible to the given up vector. Both parameters are assumed to be in world space.</p> <pre><code>local success = myObject:lookAtWorldPoint(point, up)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3)</li> <li><code>up</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): It's false when the provided location is equal to the location of the camera. It's true on success.</li> </ul>"},{"location":"types/niCamera/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niCamera/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niCamera/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niCamera/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niCamera/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niCamera/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niCamera/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niCamera/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niCamera/#swapbuffers","title":"<code>swapBuffers</code>","text":"<p>Causes the current backbuffer of the attached display to be drawn to the frontbuffer, by swapping the two.</p> <pre><code>myObject:swapBuffers()\n</code></pre>"},{"location":"types/niCamera/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niCamera/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niCamera/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niCamera/#windowpointtoray","title":"<code>windowPointToRay</code>","text":"<p>Given a screen space position, calculates the world position and outlook direction. This can be useful when trying to find a reference under a UI element, such as the cusor.</p> <pre><code>local origin, direction = myObject:windowPointToRay(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector2): The screen position to calculate a world ray for. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.</li> </ul> <p>Returns:</p> <ul> <li><code>origin</code> (tes3vector3): The world point that the given screen position looks out from.</li> <li><code>direction</code> (tes3vector3): The look direction of the camera from the given origin point.</li> </ul>"},{"location":"types/niCamera/#worldpointtoscreenpoint","title":"<code>worldPointToScreenPoint</code>","text":"<p>Given a world coordinate position, calculates where that point relates to the screen space.</p> <pre><code>local screenPosition = myObject:worldPointToScreenPoint(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3): The world position to calculate screen position for.</li> </ul> <p>Returns:</p> <ul> <li><code>screenPosition</code> (tes3vector2): The screen space position. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.</li> </ul>"},{"location":"types/niCollisionGroup/","title":"niCollisionGroup","text":""},{"location":"types/niCollisionGroup/#nicollisiongroup","title":"niCollisionGroup","text":"<p>Warning</p> <p>This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs.</p>"},{"location":"types/niCollisionGroup/#collision-basics","title":"Collision Basics:","text":"<p>Collidion detection means the detecting of the intersection of two objects. The collision detection is split in narrow and broad phase. The during narrow phase the actuall collision intersection test are done. The broad phase it is determined if two object should be tested for a potential collision. For example, there is no need to check for collision between two static, non-movable objects.</p> <p>The <code>niCollisionGroup</code> class is used to group the object into two main groups, based on whether the objects move or not:</p> <ul> <li>colliders - The objects that are expected to move. Each time the collision system starts finding collisions, it checks for collisions between each of the colliders. It tests every collider against every collidee as well.</li> <li>collidees - The objects that don't move. These objects are never tested for collision agains other collidees, making them less computationally expensive.</li> </ul>"},{"location":"types/niCollisionGroup/#properties","title":"Properties","text":""},{"location":"types/niCollisionGroup/#collidees","title":"<code>collidees</code>","text":"<p>Read-only. The array of collidee objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (niCollisionGroupRecord[])</li> </ul>"},{"location":"types/niCollisionGroup/#colliders","title":"<code>colliders</code>","text":"<p>Read-only. The array of collider objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (niCollisionGroupRecord[])</li> </ul>"},{"location":"types/niCollisionGroupRecord/","title":"niCollisionGroupRecord","text":""},{"location":"types/niCollisionGroupRecord/#nicollisiongrouprecord","title":"niCollisionGroupRecord","text":"<p>Warning</p> <p>This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs.</p> <p>This class is used to store the <code>niAVObject</code> derived object for collision detection in the parent <code>niCollisionGroup</code> collider and collidee arrays.</p>"},{"location":"types/niCollisionGroupRecord/#properties","title":"Properties","text":""},{"location":"types/niCollisionGroupRecord/#collisionroot","title":"<code>collisionRoot</code>","text":"<p>Read-only. This is the ancestor root node added to the parent niCollisionGroup, whose child is the related <code>.object</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niCollisionGroupRecord/#object","title":"<code>object</code>","text":"<p>Read-only. Access to the actual scene graph object this <code>niCollisionGroupRecord</code> represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niCollisionSwitch/","title":"niCollisionSwitch","text":""},{"location":"types/niCollisionSwitch/#nicollisionswitch","title":"niCollisionSwitch","text":"<p>An object that specifies if the collision system is enabled.</p> <p>This type inherits the following: niNode, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niCollisionSwitch/#properties","title":"Properties","text":""},{"location":"types/niCollisionSwitch/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#children","title":"<code>children</code>","text":"<p>Read-only. The children of the node. Can have <code>nil</code> entries.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject[])</li> </ul>"},{"location":"types/niCollisionSwitch/#collisionactive","title":"<code>collisionActive</code>","text":"<p>The enabled state of collision on the collision switch.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niCollisionSwitch/#effectlist","title":"<code>effectList</code>","text":"<p>Read-only. The effect list of the node. Attached effects affect the node and all of its child subtree geometry.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffectLinkedList)</li> </ul>"},{"location":"types/niCollisionSwitch/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niCollisionSwitch/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCollisionSwitch/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niCollisionSwitch/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niCollisionSwitch/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niCollisionSwitch/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCollisionSwitch/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niCollisionSwitch/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niCollisionSwitch/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niCollisionSwitch/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCollisionSwitch/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCollisionSwitch/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCollisionSwitch/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niCollisionSwitch/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niCollisionSwitch/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niCollisionSwitch/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#methods","title":"Methods","text":""},{"location":"types/niCollisionSwitch/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niCollisionSwitch/#attachchild","title":"<code>attachChild</code>","text":"<p>Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list.</p> <pre><code>myObject:attachChild(child, useFirstAvailable)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> <li><code>useFirstAvailable</code> (boolean): Default: <code>false</code>. Use the first available space in the list. If <code>false</code> appends the child at the end of the list.</li> </ul>"},{"location":"types/niCollisionSwitch/#attacheffect","title":"<code>attachEffect</code>","text":"<p>Attaches a dynamic effect to the node. It will not attach the same effect twice.</p> <pre><code>myObject:attachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niCollisionSwitch/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niCollisionSwitch/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niCollisionSwitch/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niCollisionSwitch/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niCollisionSwitch/#createboundingbox","title":"<code>createBoundingBox</code>","text":"<p>Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated.</p> <pre><code>local boundingBox = myObject:createBoundingBox()\n</code></pre> <p>Returns:</p> <ul> <li><code>boundingBox</code> (tes3boundingBox): The newly created bounding box.</li> </ul>"},{"location":"types/niCollisionSwitch/#detachallchildren","title":"<code>detachAllChildren</code>","text":"<p>Detaches all children from the children list of the node.</p> <pre><code>myObject:detachAllChildren()\n</code></pre>"},{"location":"types/niCollisionSwitch/#detachalleffects","title":"<code>detachAllEffects</code>","text":"<p>Detaches all dynamic effect from the effect list of the node.</p> <pre><code>myObject:detachAllEffects()\n</code></pre>"},{"location":"types/niCollisionSwitch/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niCollisionSwitch/#detachchild","title":"<code>detachChild</code>","text":"<p>Detaches the child from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChild(child)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niCollisionSwitch/#detachchildat","title":"<code>detachChildAt</code>","text":"<p>Detaches the child at the specified index from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChildAt(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (integer)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niCollisionSwitch/#detacheffect","title":"<code>detachEffect</code>","text":"<p>Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node.</p> <pre><code>myObject:detachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niCollisionSwitch/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niCollisionSwitch/#geteffect","title":"<code>getEffect</code>","text":"<p>Gets the effect of the given type.</p> <pre><code>local effect = myObject:getEffect(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): Use the values from <code>ni.dynamicEffectType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (niDynamicEffect, nil)</li> </ul>"},{"location":"types/niCollisionSwitch/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niCollisionSwitch/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niCollisionSwitch/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niCollisionSwitch/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niCollisionSwitch/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niCollisionSwitch/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niCollisionSwitch/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niCollisionSwitch/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niCollisionSwitch/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niCollisionSwitch/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niCollisionSwitch/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niCollisionSwitch/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niCollisionSwitch/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niCollisionSwitch/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niCollisionSwitch/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niCollisionSwitch/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niCollisionSwitch/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niCollisionSwitch/#functions","title":"Functions","text":""},{"location":"types/niCollisionSwitch/#new","title":"<code>new</code>","text":"<p>Creates a new niCollisionSwitch.</p> <pre><code>local new = niCollisionSwitch.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>new</code> (niCollisionSwitch)</li> </ul>"},{"location":"types/niColor/","title":"niColor","text":""},{"location":"types/niColor/#nicolor","title":"niColor","text":"<p>An object that represents a RGB color. The values are in [0.0, 1.0] range.</p>"},{"location":"types/niColor/#properties","title":"Properties","text":""},{"location":"types/niColor/#b","title":"<code>b</code>","text":"<p>The blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#blue","title":"<code>blue</code>","text":"<p>Alias for the blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#g","title":"<code>g</code>","text":"<p>The green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#green","title":"<code>green</code>","text":"<p>Alias for the green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#r","title":"<code>r</code>","text":"<p>The red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#red","title":"<code>red</code>","text":"<p>Alias for the red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColor/#methods","title":"Methods","text":""},{"location":"types/niColor/#clamp","title":"<code>clamp</code>","text":"<p>Clamps the color object to [0.0, 1.0] range.</p> <pre><code>myObject:clamp()\n</code></pre>"},{"location":"types/niColor/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the color object.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niColor/#lerp","title":"<code>lerp</code>","text":"<p>Calculates the interpolated color between this color and another, given a transition.</p> <pre><code>local lerpedcolor = myObject:lerp(tocolor, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>tocolor</code> (niColor): The color to interpolate towards.</li> <li><code>transition</code> (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color).</li> </ul> <p>Returns:</p> <ul> <li><code>lerpedcolor</code> (niColor): The calculated value.</li> </ul>"},{"location":"types/niColor/#tovector3","title":"<code>toVector3</code>","text":"<p>Creates a vector3 of the color object.</p> <pre><code>local result = myObject:toVector3()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niColor/#functions","title":"Functions","text":""},{"location":"types/niColor/#new","title":"<code>new</code>","text":"<p>Creates a new niColor.</p> <pre><code>local color = niColor.new(r, g, b)\n</code></pre> <p>Parameters:</p> <ul> <li><code>r</code> (number): Default: <code>0</code>. The red value for the color.</li> <li><code>g</code> (number): Default: <code>0</code>. The green value for the color.</li> <li><code>b</code> (number): Default: <code>0</code>. The blue value for the color.</li> </ul> <p>Returns:</p> <ul> <li><code>color</code> (niColor)</li> </ul>"},{"location":"types/niColor/#math-operations","title":"Math Operations","text":""},{"location":"types/niColor/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description niColor niColor niColor Adds the color channel values of two <code>niColor</code> objects."},{"location":"types/niColor/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description niColor niColor niColor Multiplies color channel values. niColor number niColor Multiplies each color value with a scalar."},{"location":"types/niColor/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description niColor niColor niColor Subtracts the color channel values."},{"location":"types/niColorA/","title":"niColorA","text":""},{"location":"types/niColorA/#nicolora","title":"niColorA","text":"<p>An object that represents a RGB color with alpha channel support. The values are in [0.0, 1.0] range.</p>"},{"location":"types/niColorA/#properties","title":"Properties","text":""},{"location":"types/niColorA/#a","title":"<code>a</code>","text":"<p>The alpha value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#alpha","title":"<code>alpha</code>","text":"<p>The alpha value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#b","title":"<code>b</code>","text":"<p>The blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#blue","title":"<code>blue</code>","text":"<p>Alias for the blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#g","title":"<code>g</code>","text":"<p>The green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#green","title":"<code>green</code>","text":"<p>Alias for the green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#r","title":"<code>r</code>","text":"<p>The red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#red","title":"<code>red</code>","text":"<p>Alias for the red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorA/#methods","title":"Methods","text":""},{"location":"types/niColorA/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the color object.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niColorA)</li> </ul>"},{"location":"types/niColorA/#lerp","title":"<code>lerp</code>","text":"<p>Calculates the interpolated color between this color and another, given a transition.</p> <pre><code>local lerpedcolor = myObject:lerp(tocolor, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>tocolor</code> (niColorA): The color to interpolate towards.</li> <li><code>transition</code> (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color).</li> </ul> <p>Returns:</p> <ul> <li><code>lerpedcolor</code> (niColorA): The calculated value.</li> </ul>"},{"location":"types/niColorA/#functions","title":"Functions","text":""},{"location":"types/niColorA/#new","title":"<code>new</code>","text":"<p>Creates a new niColorA.</p> <pre><code>local color = niColorA.new(r, g, b, a)\n</code></pre> <p>Parameters:</p> <ul> <li><code>r</code> (number): Default: <code>0</code>. The red value for the color.</li> <li><code>g</code> (number): Default: <code>0</code>. The green value for the color.</li> <li><code>b</code> (number): Default: <code>0</code>. The blue value for the color.</li> <li><code>a</code> (number): Default: <code>0</code>. The alpha value for the color.</li> </ul> <p>Returns:</p> <ul> <li><code>color</code> (niColorA)</li> </ul>"},{"location":"types/niColorData/","title":"niColorData","text":""},{"location":"types/niColorData/#nicolordata","title":"niColorData","text":"<p>The NiColorData class provides a shareable wrapper for color animation data. Usually found in niParticleColorModifiers.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niColorData/#properties","title":"Properties","text":""},{"location":"types/niColorData/#keycount","title":"<code>keyCount</code>","text":"<p>The number of keys in this niColorData.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niColorData/#keys","title":"<code>keys</code>","text":"<p>Read-only. The keyframe data that this object currently stores.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColorKey[])</li> </ul>"},{"location":"types/niColorData/#keytype","title":"<code>keyType</code>","text":"<p>The type of the keys. Maps to values in <code>ni.animationKeyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niColorData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niColorData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niColorData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niColorData/#methods","title":"Methods","text":""},{"location":"types/niColorData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niColorData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niColorData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niColorData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niColorKey/","title":"niColorKey","text":""},{"location":"types/niColorKey/#nicolorkey","title":"niColorKey","text":"<p>A key with timing, and color in niColorData, which are found in niParticleColorModifiers.</p> <p>This type inherits the following: niAnimationKey</p>"},{"location":"types/niColorKey/#properties","title":"Properties","text":""},{"location":"types/niColorKey/#color","title":"<code>color</code>","text":"<p>The color for this key.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/niColorKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/","title":"niDirectionalLight","text":""},{"location":"types/niDirectionalLight/#nidirectionallight","title":"niDirectionalLight","text":"<p>An object that represents a light source located at infinity with parallel light rays traveling in a given direction. The light will project illumination in its model-space positive X axis. The light may be pointed in any direction by rotating the light.</p> <p>This type inherits the following: niLight, niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niDirectionalLight/#properties","title":"Properties","text":""},{"location":"types/niDirectionalLight/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niDirectionalLight/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#ambient","title":"<code>ambient</code>","text":"<p>The ambient light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niDirectionalLight/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niDirectionalLight/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niDirectionalLight/#dimmer","title":"<code>dimmer</code>","text":"<p>This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#direction","title":"<code>direction</code>","text":"<p>The direction of the directional light.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDirectionalLight/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niDirectionalLight/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niDirectionalLight/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niDirectionalLight/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niDirectionalLight/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niDirectionalLight/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niDirectionalLight/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niDirectionalLight/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#specular","title":"<code>specular</code>","text":"<p>This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius.</p> <p>In practice, this radius represents the light's influence radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niDirectionalLight/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDirectionalLight/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niDirectionalLight/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDirectionalLight/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDirectionalLight/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niDirectionalLight/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niDirectionalLight/#methods","title":"Methods","text":""},{"location":"types/niDirectionalLight/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niDirectionalLight/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niDirectionalLight/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niDirectionalLight/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niDirectionalLight/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niDirectionalLight/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niDirectionalLight/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niDirectionalLight/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niDirectionalLight/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niDirectionalLight/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niDirectionalLight/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niDirectionalLight/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niDirectionalLight/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niDirectionalLight/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niDirectionalLight/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDirectionalLight/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niDirectionalLight/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niDirectionalLight/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niDirectionalLight/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niDirectionalLight/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niDirectionalLight/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niDirectionalLight/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niDirectionalLight/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niDirectionalLight/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niDirectionalLight/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niDirectionalLight/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niDynamicEffect/","title":"niDynamicEffect","text":""},{"location":"types/niDynamicEffect/#nidynamiceffect","title":"niDynamicEffect","text":"<p>Base class for dynamic effects such as NiLights or projected textures effects.</p> <p>This type inherits the following: niAVObject, niObjectNET, niObject</p>"},{"location":"types/niDynamicEffect/#properties","title":"Properties","text":""},{"location":"types/niDynamicEffect/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niDynamicEffect/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niDynamicEffect/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niDynamicEffect/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDynamicEffect/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niDynamicEffect/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niDynamicEffect/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niDynamicEffect/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDynamicEffect/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niDynamicEffect/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niDynamicEffect/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niDynamicEffect/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDynamicEffect/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDynamicEffect/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niDynamicEffect/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDynamicEffect/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niDynamicEffect/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niDynamicEffect/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niDynamicEffect/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niDynamicEffect/#methods","title":"Methods","text":""},{"location":"types/niDynamicEffect/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niDynamicEffect/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niDynamicEffect/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niDynamicEffect/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niDynamicEffect/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niDynamicEffect/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niDynamicEffect/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niDynamicEffect/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niDynamicEffect/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niDynamicEffect/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niDynamicEffect/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niDynamicEffect/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niDynamicEffect/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niDynamicEffect/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niDynamicEffect/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niDynamicEffect/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niDynamicEffect/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niDynamicEffect/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niDynamicEffect/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niDynamicEffect/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niDynamicEffect/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niDynamicEffect/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niDynamicEffect/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niDynamicEffect/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niDynamicEffect/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niDynamicEffect/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niDynamicEffectLinkedList/","title":"niDynamicEffectLinkedList","text":""},{"location":"types/niDynamicEffectLinkedList/#nidynamiceffectlinkedlist","title":"niDynamicEffectLinkedList","text":"<p>A linked list of dynamic effects.</p>"},{"location":"types/niDynamicEffectLinkedList/#properties","title":"Properties","text":""},{"location":"types/niDynamicEffectLinkedList/#data","title":"<code>data</code>","text":"<p>Read-only. The current dynamic effect in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niDynamicEffectLinkedList/#next","title":"<code>next</code>","text":"<p>Read-only. The next dynamic effect in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffectLinkedList)</li> </ul>"},{"location":"types/niEulerRotKey/","title":"niEulerRotKey","text":""},{"location":"types/niEulerRotKey/#nieulerrotkey","title":"niEulerRotKey","text":"<p>An animation key for euler rotations.</p> <p>This type inherits the following: niRotKey, niAnimationKey</p>"},{"location":"types/niEulerRotKey/#properties","title":"Properties","text":""},{"location":"types/niEulerRotKey/#keyorder","title":"<code>keyOrder</code>","text":"<p>Read-only. An array of 3 values that define the ordering used for the contained keys. Maps to values in <code>ni.eulerRotKeyOrder</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niEulerRotKey/#keys","title":"<code>keys</code>","text":"<p>Read-only. A table of x/y/z rotation keys. Each value in the table is an array of animation keys, with a length matching <code>numKeys</code>. Because an axis key can be <code>nil</code>, use <code>pairs</code> instead of <code>ipairs</code> to iterate over this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;number, niFloatKey[]&gt;)</li> </ul>"},{"location":"types/niEulerRotKey/#keytypes","title":"<code>keyTypes</code>","text":"<p>Read-only. An array of 3 values that define the types used for the contained keys. The types map to values in <code>ni.animationKeyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niEulerRotKey/#lastindices","title":"<code>lastIndices</code>","text":"<p>Read-only. An array of 3 values that define the last indices used for each key.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niEulerRotKey/#numkeys","title":"<code>numKeys</code>","text":"<p>Read-only. An array of 3 values that define the number of keys in each xRotations/yRotations/zRotations.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niEulerRotKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niEulerRotKey/#value","title":"<code>value</code>","text":"<p>The rotation value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niExtraData/","title":"niExtraData","text":""},{"location":"types/niExtraData/#niextradata","title":"niExtraData","text":"<p>An attachment to NiObjectNETs that allows the storing of arbitrary data onto the given object.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niExtraData/#properties","title":"Properties","text":""},{"location":"types/niExtraData/#genericdata","title":"<code>genericData</code>","text":"<p>Read-only. Generic data held in the extra data. This is not used if a subtype of extra data is used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niExtraData/#next","title":"<code>next</code>","text":"<p>The next extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niExtraData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niExtraData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niExtraData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niExtraData/#methods","title":"Methods","text":""},{"location":"types/niExtraData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niExtraData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niExtraData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niExtraData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niFloatKey/","title":"niFloatKey","text":""},{"location":"types/niFloatKey/#nifloatkey","title":"niFloatKey","text":"<p>A simple animation key, that holds an arbitrary floating point value.</p> <p>This type inherits the following: niAnimationKey</p>"},{"location":"types/niFloatKey/#properties","title":"Properties","text":""},{"location":"types/niFloatKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niFloatKey/#value","title":"<code>value</code>","text":"<p>The arbitrary value of the NiFloatKey.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niFogProperty/","title":"niFogProperty","text":""},{"location":"types/niFogProperty/#nifogproperty","title":"niFogProperty","text":"<p>A rendering property that controls the appearance of fogging, also known as haze.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niFogProperty/#properties","title":"Properties","text":""},{"location":"types/niFogProperty/#color","title":"<code>color</code>","text":"<p>Read-only. The RGBA fog color value in range [0, 255].</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niFogProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niFogProperty/#density","title":"<code>density</code>","text":"<p>The fog density in normalized units [0.0, 1.0]. If set to 1.0, then the fogging begins at the near plane. If set to a value of 0.5, then fogging begins halfway between the near and far planes in world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niFogProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niFogProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niFogProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niFogProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niFogProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niFogProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niFogProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niFogProperty/#methods","title":"Methods","text":""},{"location":"types/niFogProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niFogProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niFogProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niFogProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niFogProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niFogProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niFogProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niFogProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niFogProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niFogProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niFogProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niFogProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niFogProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niFogProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niFogProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niFogProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niFormatPrefs/","title":"niFormatPrefs","text":""},{"location":"types/niFormatPrefs/#niformatprefs","title":"niFormatPrefs","text":"<p>A class that represents a set of preferences for texture formats. These preferences dictate levels of pixel accuracy.</p>"},{"location":"types/niFormatPrefs/#properties","title":"Properties","text":""},{"location":"types/niFormatPrefs/#alphalayout","title":"<code>alphaLayout</code>","text":"<p>The Alpha format. Maps to values in <code>ni.textureFormatPrefsAlphaFormat</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niFormatPrefs/#miplayout","title":"<code>mipLayout</code>","text":"<p>The MIP format. Maps to values in <code>ni.textureFormatPrefsMipFlag</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niFormatPrefs/#pixellayout","title":"<code>pixelLayout</code>","text":"<p>The pixel layout. Maps to values in <code>ni.textureFormatPrefsPixelLayout</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niGeometry/","title":"niGeometry","text":""},{"location":"types/niGeometry/#nigeometry","title":"niGeometry","text":"<p>Base class for most geometric objects. Includes basic vertex and normal management.</p> <p>This type inherits the following: niAVObject, niObjectNET, niObject</p>"},{"location":"types/niGeometry/#properties","title":"Properties","text":""},{"location":"types/niGeometry/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niGeometry/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niGeometry/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometry/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niGeometry/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niGeometry/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niGeometry/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometry/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niGeometry/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGeometry/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGeometry/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometry/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niGeometry/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niGeometry/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niGeometry/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometry/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niGeometry/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niGeometry/#methods","title":"Methods","text":""},{"location":"types/niGeometry/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niGeometry/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niGeometry/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niGeometry/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niGeometry/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niGeometry/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niGeometry/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niGeometry/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niGeometry/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niGeometry/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niGeometry/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niGeometry/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niGeometry/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometry/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niGeometry/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niGeometry/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niGeometry/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niGeometry/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niGeometry/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niGeometry/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niGeometry/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niGeometry/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niGeometry/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niGeometry/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niGeometryData/","title":"niGeometryData","text":""},{"location":"types/niGeometryData/#nigeometrydata","title":"niGeometryData","text":"<p>niGeometryData objects contain the geometry data necessary to render a niGeometry object. When a niGeometry-based object is created, the actual geometry data is stored in an attached niGeometryData object.</p> <p>The distinction between niGeometry and niGeometryData (and other pairs of NetImmerse classes with similarly distinguished names, such as niTriShape and niTriShapeData) is that niGeometry stores data that cannot be shared when an object is instanced, and niGeometryData stores data that can be shared when an object is instanced. So, for example, when a scene graph is cloned, duplicate copies of the niGeometry objects in the original scene graph are created for the new scene graph, but new niGeometryData objects are not created. Instead, the newly-created niGeometry objects refer to the same niGeometryData objects referred to by the original scene graph.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niGeometryData/#properties","title":"Properties","text":""},{"location":"types/niGeometryData/#bounds","title":"<code>bounds</code>","text":"<p>The model-space bounding sphere of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niGeometryData/#colors","title":"<code>colors</code>","text":"<p>Read-only. The vertex colors for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor[])</li> </ul>"},{"location":"types/niGeometryData/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niGeometryData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometryData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGeometryData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGeometryData/#texcoords","title":"<code>texCoords</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niGeometryData/#textures","title":"<code>textures</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niGeometryData/#texturesets","title":"<code>textureSets</code>","text":"<p>The number of texture coordinate sets in the data.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometryData/#uniqueid","title":"<code>uniqueID</code>","text":"<p>Read-only. A unique ID for this model, assigned at model creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometryData/#vertexcount","title":"<code>vertexCount</code>","text":"<p>Read-only. The vertex count for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGeometryData/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niGeometryData/#methods","title":"Methods","text":""},{"location":"types/niGeometryData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niGeometryData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometryData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGeometryData/#markaschanged","title":"<code>markAsChanged</code>","text":"<p>Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data.</p> <p>If you have altered vertex positions, you may need to also call <code>updateModelBound</code>_. You should call it if vertices have been moved outside the bounds of the original model.</p> <pre><code>myObject:markAsChanged()\n</code></pre>"},{"location":"types/niGeometryData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niGeometryData/#updatemodelbound","title":"<code>updateModelBound</code>","text":"<p>Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. </p> <p>If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function.</p> <pre><code>myObject:updateModelBound()\n</code></pre>"},{"location":"types/niGravity/","title":"niGravity","text":""},{"location":"types/niGravity/#nigravity","title":"niGravity","text":"<p>This modifer applies force, constant over time, to particles in the parent niParticleSystemController.</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niGravity/#properties","title":"Properties","text":""},{"location":"types/niGravity/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niGravity/#decay","title":"<code>decay</code>","text":"<p>This value impacts how fast gravitational force attenuates with the distance from the source. A value of <code>0</code> causes no decay.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGravity/#direction","title":"<code>direction</code>","text":"<p>The direction of action for planar gravity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niGravity/#force","title":"<code>force</code>","text":"<p>The magnitude of the gravitational force in units/second.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGravity/#forcetype","title":"<code>forceType</code>","text":"<p>The type of the modifier. Planar force will attract the particles parallel to the <code>.direction</code> vector. Spherical force will act so that the point defined by <code>.position</code> property is the source of the spherical gravitational force.</p> <p>Maps to values in <code>ni.gravityForceType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niGravity/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niGravity/#position","title":"<code>position</code>","text":"<p>The position of the center used when applying spherical gravity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niGravity/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niGravity/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGravity/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niGravity/#methods","title":"Methods","text":""},{"location":"types/niGravity/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niGravity/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGravity/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niGravity/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niKeyframeController/","title":"niKeyframeController","text":""},{"location":"types/niKeyframeController/#nikeyframecontroller","title":"niKeyframeController","text":"<p>The controller responsible for animating transforms, using position, rotation, and scale keys.</p> <p>This type inherits the following: niTimeController, niObject</p>"},{"location":"types/niKeyframeController/#properties","title":"Properties","text":""},{"location":"types/niKeyframeController/#active","title":"<code>active</code>","text":"<p>If the controller is active. When inactive, the target does not get updated and animation timing does not advance.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niKeyframeController/#animtimingtype","title":"<code>animTimingType</code>","text":"<p>How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation.</p> <p>Maps to values in <code>ni.animType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niKeyframeController/#cycletype","title":"<code>cycleType</code>","text":"<p>The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped.</p> <p>Maps to values in <code>ni.animCycleType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niKeyframeController/#data","title":"<code>data</code>","text":"<p>Read-only. The keyframe data used by the controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (niKeyframeData)</li> </ul>"},{"location":"types/niKeyframeController/#frequency","title":"<code>frequency</code>","text":"<p>The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#highkeyframe","title":"<code>highKeyFrame</code>","text":"<p>This is the end animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lastscaledtime","title":"<code>lastScaledTime</code>","text":"<p>This function returns the last scaled time computed by this controller. The scaled time takes the <code>frequency</code> and <code>phase</code> into account, along with the <code>cycleType</code> and <code>animTimingType</code>. This is the last value used to interpolate animation keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lasttime","title":"<code>lastTime</code>","text":"<p>No description.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lastusedpositionindex","title":"<code>lastUsedPositionIndex</code>","text":"<p>The last position index that the game engine used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lastusedrotationindex","title":"<code>lastUsedRotationIndex</code>","text":"<p>The last rotation index that the game engine used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lastusedscaleindex","title":"<code>lastUsedScaleIndex</code>","text":"<p>The last scale index that the game engine used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#lowkeyframe","title":"<code>lowKeyFrame</code>","text":"<p>This is the beginning animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#nextcontroller","title":"<code>nextController</code>","text":"<p>The next animation controller in the list of controllers containing the calling controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niKeyframeController/#phase","title":"<code>phase</code>","text":"<p>The phase value. It is an offset applied to the animation's update time, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niKeyframeController/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niKeyframeController/#starttime","title":"<code>startTime</code>","text":"<p>The time at which the animation controller starts playing its animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#target","title":"<code>target</code>","text":"<p>Read-only. The scene graph object that this animation controller is to animate.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObjectNET)</li> </ul>"},{"location":"types/niKeyframeController/#methods","title":"Methods","text":""},{"location":"types/niKeyframeController/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niKeyframeController/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niKeyframeController/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niKeyframeController/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niKeyframeController/#settarget","title":"<code>setTarget</code>","text":"<p>This method assigns a new target to the animation controller.</p> <pre><code>myObject:setTarget(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niObjectNET): The new target to assign.</li> </ul>"},{"location":"types/niKeyframeController/#start","title":"<code>start</code>","text":"<p>Starts the controller at the specified time. Intended for controllers with <code>animTimingType</code> of 1.</p> <pre><code>myObject:start(time)\n</code></pre> <p>Parameters:</p> <ul> <li><code>time</code> (number)</li> </ul>"},{"location":"types/niKeyframeController/#stop","title":"<code>stop</code>","text":"<p>Stops the controller. If you only want to pause the controller, use the <code>update</code> property.</p> <pre><code>myObject:stop()\n</code></pre>"},{"location":"types/niKeyframeData/","title":"niKeyframeData","text":""},{"location":"types/niKeyframeData/#nikeyframedata","title":"niKeyframeData","text":"<p>A collection of position, rotation, and scale keys used on NiKeyframeControllers.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niKeyframeData/#properties","title":"Properties","text":""},{"location":"types/niKeyframeData/#positionkeycount","title":"<code>positionKeyCount</code>","text":"<p>Read-only. The number of position keys available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeData/#positionkeys","title":"<code>positionKeys</code>","text":"<p>Read-only. The available position keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPosKey[])</li> </ul>"},{"location":"types/niKeyframeData/#positiontype","title":"<code>positionType</code>","text":"<p>Read-only. The type of animation key used for position keys. Maps to values in <code>ni.animationKeyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niKeyframeData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeData/#rotationkeycount","title":"<code>rotationKeyCount</code>","text":"<p>Read-only. The number of rotation keys available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeData/#rotationkeys","title":"<code>rotationKeys</code>","text":"<p>Read-only. The available rotation keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRotKey[])</li> </ul>"},{"location":"types/niKeyframeData/#rotationtype","title":"<code>rotationType</code>","text":"<p>Read-only. The type of animation key used for rotation keys. Maps to values in <code>ni.animationKeyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niKeyframeData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niKeyframeData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niKeyframeData/#scalekeycount","title":"<code>scaleKeyCount</code>","text":"<p>Read-only. The number of scale keys available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niKeyframeData/#scalekeys","title":"<code>scaleKeys</code>","text":"<p>Read-only. The available scale keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFloatKey[])</li> </ul>"},{"location":"types/niKeyframeData/#scaletype","title":"<code>scaleType</code>","text":"<p>Read-only. The type of animation key used for scale keys. Maps to values in <code>ni.animationKeyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niKeyframeData/#methods","title":"Methods","text":""},{"location":"types/niKeyframeData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niKeyframeData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niKeyframeData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niKeyframeData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niLight/","title":"niLight","text":""},{"location":"types/niLight/#nilight","title":"niLight","text":"<p>Base class that represents light sources in a scene graph. This includes the ambient, diffuse, and specular colors of a light, as well as its intensity.</p> <p>This type inherits the following: niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niLight/#properties","title":"Properties","text":""},{"location":"types/niLight/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niLight/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niLight/#ambient","title":"<code>ambient</code>","text":"<p>The ambient light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niLight/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niLight/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niLight/#dimmer","title":"<code>dimmer</code>","text":"<p>This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLight/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niLight/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLight/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niLight/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niLight/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niLight/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niLight/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niLight/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLight/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niLight/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niLight/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niLight/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLight/#specular","title":"<code>specular</code>","text":"<p>This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius.</p> <p>In practice, this radius represents the light's influence radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niLight/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niLight/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niLight/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niLight/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niLight/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niLight/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niLight/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niLight/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLight/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niLight/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niLight/#methods","title":"Methods","text":""},{"location":"types/niLight/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niLight/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niLight/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niLight/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niLight/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niLight/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niLight/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niLight/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niLight/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niLight/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niLight/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niLight/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niLight/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niLight/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niLight/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLight/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niLight/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niLight/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niLight/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niLight/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niLight/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niLight/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niLight/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niLight/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niLight/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niLight/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niLookAtController/","title":"niLookAtController","text":""},{"location":"types/niLookAtController/#nilookatcontroller","title":"niLookAtController","text":"<p>Orients an axis of the controlled object towards a lookAt target. The axis is selectable.</p> <p>Warning: The lookAt property is not reference counted, so this controller must be removed, or lookAt set to nil before the lookAt object is deleted.</p> <p>This type inherits the following: niTimeController, niObject</p>"},{"location":"types/niLookAtController/#properties","title":"Properties","text":""},{"location":"types/niLookAtController/#active","title":"<code>active</code>","text":"<p>If the controller is active. When inactive, the target does not get updated and animation timing does not advance.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLookAtController/#animtimingtype","title":"<code>animTimingType</code>","text":"<p>How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation.</p> <p>Maps to values in <code>ni.animType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niLookAtController/#axis","title":"<code>axis</code>","text":"<p>A number representing the axis that points at the lookAt object. <code>flip</code> determines which end of this axis points at the target. <code>0</code> X axis <code>1</code> Y axis <code>2</code> Z axis</p> <p>Maps to values in <code>ni.lookAtControllerAxis</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niLookAtController/#cycletype","title":"<code>cycleType</code>","text":"<p>The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped.</p> <p>Maps to values in <code>ni.animCycleType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niLookAtController/#flip","title":"<code>flip</code>","text":"<p>Determines which end of the chosen axis points towards the lookAt target.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLookAtController/#frequency","title":"<code>frequency</code>","text":"<p>The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#highkeyframe","title":"<code>highKeyFrame</code>","text":"<p>This is the end animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#lastscaledtime","title":"<code>lastScaledTime</code>","text":"<p>This function returns the last scaled time computed by this controller. The scaled time takes the <code>frequency</code> and <code>phase</code> into account, along with the <code>cycleType</code> and <code>animTimingType</code>. This is the last value used to interpolate animation keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#lasttime","title":"<code>lastTime</code>","text":"<p>No description.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#lookat","title":"<code>lookAt</code>","text":"<p>The object that this controller will point towards. This is not a reference counted pointer, so this controller must be removed or lookAt set to nil before the lookAt object is deleted. This was probably designed to avoid reference cycles where controllers keep an ancestor node alive.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niLookAtController/#lowkeyframe","title":"<code>lowKeyFrame</code>","text":"<p>This is the beginning animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#nextcontroller","title":"<code>nextController</code>","text":"<p>The next animation controller in the list of controllers containing the calling controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niLookAtController/#phase","title":"<code>phase</code>","text":"<p>The phase value. It is an offset applied to the animation's update time, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niLookAtController/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niLookAtController/#starttime","title":"<code>startTime</code>","text":"<p>The time at which the animation controller starts playing its animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#target","title":"<code>target</code>","text":"<p>Read-only. The scene graph object that this animation controller is to animate.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObjectNET)</li> </ul>"},{"location":"types/niLookAtController/#methods","title":"Methods","text":""},{"location":"types/niLookAtController/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niLookAtController/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLookAtController/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niLookAtController/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niLookAtController/#settarget","title":"<code>setTarget</code>","text":"<p>This method assigns a new target to the animation controller.</p> <pre><code>myObject:setTarget(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niObjectNET): The new target to assign.</li> </ul>"},{"location":"types/niLookAtController/#start","title":"<code>start</code>","text":"<p>Starts the controller at the specified time. Intended for controllers with <code>animTimingType</code> of 1.</p> <pre><code>myObject:start(time)\n</code></pre> <p>Parameters:</p> <ul> <li><code>time</code> (number)</li> </ul>"},{"location":"types/niLookAtController/#stop","title":"<code>stop</code>","text":"<p>Stops the controller. If you only want to pause the controller, use the <code>update</code> property.</p> <pre><code>myObject:stop()\n</code></pre>"},{"location":"types/niMaterialProperty/","title":"niMaterialProperty","text":""},{"location":"types/niMaterialProperty/#nimaterialproperty","title":"niMaterialProperty","text":"<p>A rendering property that controls the surface properties of objects affected by the property. These surface properties include translucency, ambient reflective color, diffuse reflective color, emissive color intensity, and specular color.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niMaterialProperty/#properties","title":"Properties","text":""},{"location":"types/niMaterialProperty/#alpha","title":"<code>alpha</code>","text":"<p>The alpha value of the material. Value should be in [0.0, 1.0] range. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niMaterialProperty/#ambient","title":"<code>ambient</code>","text":"<p>The ambient material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niMaterialProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niMaterialProperty/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niMaterialProperty/#emissive","title":"<code>emissive</code>","text":"<p>The emissive material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niMaterialProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niMaterialProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niMaterialProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niMaterialProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niMaterialProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niMaterialProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niMaterialProperty/#shininess","title":"<code>shininess</code>","text":"<p>The shine of the material. Value should be &gt;= 0. Higher values tend to make the material appear to have a more mirror-like finish. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niMaterialProperty/#specular","title":"<code>specular</code>","text":"<p>The specular material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niMaterialProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niMaterialProperty/#methods","title":"Methods","text":""},{"location":"types/niMaterialProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niMaterialProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niMaterialProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niMaterialProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niMaterialProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niMaterialProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niMaterialProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niMaterialProperty/#incrementrevisionid","title":"<code>incrementRevisionId</code>","text":"<p>This marks the material as changed, so that the renderer knows that it needs to update the copies of the material settings.</p> <pre><code>myObject:incrementRevisionId()\n</code></pre>"},{"location":"types/niMaterialProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niMaterialProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niMaterialProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niMaterialProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niMaterialProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niMaterialProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niMaterialProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niMaterialProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niMaterialProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niNode/","title":"niNode","text":""},{"location":"types/niNode/#ninode","title":"niNode","text":"<p>Base class that represents the nodes of a scene graph. A node can have any number of child nodes.</p> <p>This type inherits the following: niAVObject, niObjectNET, niObject</p>"},{"location":"types/niNode/#properties","title":"Properties","text":""},{"location":"types/niNode/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niNode/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#children","title":"<code>children</code>","text":"<p>Read-only. The children of the node. Can have <code>nil</code> entries.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject[])</li> </ul>"},{"location":"types/niNode/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niNode/#effectlist","title":"<code>effectList</code>","text":"<p>Read-only. The effect list of the node. Attached effects affect the node and all of its child subtree geometry.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffectLinkedList)</li> </ul>"},{"location":"types/niNode/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niNode/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niNode/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niNode/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niNode/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niNode/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niNode/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niNode/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niNode/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niNode/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niNode/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niNode/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niNode/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niNode/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niNode/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niNode/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niNode/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niNode/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niNode/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niNode/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niNode/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niNode/#methods","title":"Methods","text":""},{"location":"types/niNode/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niNode/#attachchild","title":"<code>attachChild</code>","text":"<p>Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list.</p> <pre><code>myObject:attachChild(child, useFirstAvailable)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> <li><code>useFirstAvailable</code> (boolean): Default: <code>false</code>. Use the first available space in the list. If <code>false</code> appends the child at the end of the list.</li> </ul>"},{"location":"types/niNode/#attacheffect","title":"<code>attachEffect</code>","text":"<p>Attaches a dynamic effect to the node. It will not attach the same effect twice.</p> <pre><code>myObject:attachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niNode/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niNode/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niNode/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niNode/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niNode/#createboundingbox","title":"<code>createBoundingBox</code>","text":"<p>Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated.</p> <pre><code>local boundingBox = myObject:createBoundingBox()\n</code></pre> <p>Returns:</p> <ul> <li><code>boundingBox</code> (tes3boundingBox): The newly created bounding box.</li> </ul>"},{"location":"types/niNode/#detachallchildren","title":"<code>detachAllChildren</code>","text":"<p>Detaches all children from the children list of the node.</p> <pre><code>myObject:detachAllChildren()\n</code></pre>"},{"location":"types/niNode/#detachalleffects","title":"<code>detachAllEffects</code>","text":"<p>Detaches all dynamic effect from the effect list of the node.</p> <pre><code>myObject:detachAllEffects()\n</code></pre>"},{"location":"types/niNode/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niNode/#detachchild","title":"<code>detachChild</code>","text":"<p>Detaches the child from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChild(child)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niNode/#detachchildat","title":"<code>detachChildAt</code>","text":"<p>Detaches the child at the specified index from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChildAt(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (integer)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niNode/#detacheffect","title":"<code>detachEffect</code>","text":"<p>Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node.</p> <pre><code>myObject:detachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niNode/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niNode/#geteffect","title":"<code>getEffect</code>","text":"<p>Gets the effect of the given type.</p> <pre><code>local effect = myObject:getEffect(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): Use the values from <code>ni.dynamicEffectType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (niDynamicEffect, nil)</li> </ul>"},{"location":"types/niNode/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niNode/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niNode/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niNode/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niNode/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niNode/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niNode/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niNode/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niNode/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niNode/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niNode/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niNode/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niNode/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niNode/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niNode/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niNode/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niNode/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niNode/#functions","title":"Functions","text":""},{"location":"types/niNode/#new","title":"<code>new</code>","text":"<p>Creates a new, empty NiNode.</p> <pre><code>local node = niNode.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>node</code> (niNode)</li> </ul>"},{"location":"types/niNodeLinkedList/","title":"niNodeLinkedList","text":""},{"location":"types/niNodeLinkedList/#ninodelinkedlist","title":"niNodeLinkedList","text":"<p>A linked list of scene graph nodes.</p>"},{"location":"types/niNodeLinkedList/#properties","title":"Properties","text":""},{"location":"types/niNodeLinkedList/#data","title":"<code>data</code>","text":"<p>Read-only. The current scene graph node in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niNodeLinkedList/#next","title":"<code>next</code>","text":"<p>Read-only. The next scene graph node in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niObject/","title":"niObject","text":""},{"location":"types/niObject/#niobject","title":"niObject","text":"<p>The base-most object from which almost all NetImmerse structures are derived from.</p>"},{"location":"types/niObject/#properties","title":"Properties","text":""},{"location":"types/niObject/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niObject/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niObject/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niObject/#methods","title":"Methods","text":""},{"location":"types/niObject/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niObject/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObject/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObject/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niObjectNET/","title":"niObjectNET","text":""},{"location":"types/niObjectNET/#niobjectnet","title":"niObjectNET","text":"<p>An object that has a name, extra data, and controllers.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niObjectNET/#properties","title":"Properties","text":""},{"location":"types/niObjectNET/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niObjectNET/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niObjectNET/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niObjectNET/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niObjectNET/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niObjectNET/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niObjectNET/#methods","title":"Methods","text":""},{"location":"types/niObjectNET/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niObjectNET/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niObjectNET/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niObjectNET/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niObjectNET/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niObjectNET/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObjectNET/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObjectNET/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObjectNET/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niObjectNET/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niObjectNET/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niObjectNET/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niObjectNET/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niObjectNET/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niObjectNET/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niObjectNET/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niPackedColor/","title":"niPackedColor","text":""},{"location":"types/niPackedColor/#nipackedcolor","title":"niPackedColor","text":"<p>An object that represents a RGB color with alpha channel support. Unlike other color values, this is compressed into 4 bytes. Values are not from 0 to 1, but from 0 to 255.</p>"},{"location":"types/niPackedColor/#properties","title":"Properties","text":""},{"location":"types/niPackedColor/#a","title":"<code>a</code>","text":"<p>The alpha value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#alpha","title":"<code>alpha</code>","text":"<p>The alpha value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#b","title":"<code>b</code>","text":"<p>The blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#blue","title":"<code>blue</code>","text":"<p>Alias for the blue value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#g","title":"<code>g</code>","text":"<p>The green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#green","title":"<code>green</code>","text":"<p>Alias for the green value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#r","title":"<code>r</code>","text":"<p>The red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#red","title":"<code>red</code>","text":"<p>Alias for the red value of the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPackedColor/#functions","title":"Functions","text":""},{"location":"types/niPackedColor/#new","title":"<code>new</code>","text":"<p>Creates a new niPackedColor object.</p> <pre><code>local color = niPackedColor.new(r, g, b, a)\n</code></pre> <p>Parameters:</p> <ul> <li><code>r</code> (integer): Default: <code>0</code>. The red value for the color.</li> <li><code>g</code> (integer): Default: <code>0</code>. The green value for the color.</li> <li><code>b</code> (integer): Default: <code>0</code>. The blue value for the color.</li> <li><code>a</code> (integer): Default: <code>0</code>. The alpha value for the color.</li> </ul> <p>Returns:</p> <ul> <li><code>color</code> (niPackedColor)</li> </ul>"},{"location":"types/niParticleBomb/","title":"niParticleBomb","text":""},{"location":"types/niParticleBomb/#niparticlebomb","title":"niParticleBomb","text":"<p>This modifer applies acceleration to particles in the parent niParticleSystemController.</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niParticleBomb/#properties","title":"Properties","text":""},{"location":"types/niParticleBomb/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleBomb/#decay","title":"<code>decay</code>","text":"<p>The niParticleBomb modifers with <code>decayType</code> linear and exponential have their strength attenuated with distance. No attenuation occurs within the <code>.decay</code> distance of the niParticelBomb's position.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleBomb/#decaytype","title":"<code>decayType</code>","text":"<p>Controls how the force applied attenuates with distance. Maps to values in <code>ni.particleBombDecayType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleBomb/#deltav","title":"<code>deltaV</code>","text":"<p>The acceleration applied to the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleBomb/#direction","title":"<code>direction</code>","text":"<p>The direction of applied acceleration used for cylindrical and planar particle bombs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticleBomb/#duration","title":"<code>duration</code>","text":"<p>Controls how long this modifer affects the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleBomb/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleBomb/#position","title":"<code>position</code>","text":"<p>This is the center of force that spherical and cylindrical particle bombs apply to the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticleBomb/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleBomb/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleBomb/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleBomb/#start","title":"<code>start</code>","text":"<p>The time at which this modifier start affecting the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleBomb/#symmetrytype","title":"<code>symmetryType</code>","text":"<p>Controls how this modifer affects the particles. Spherical modifer operates around the point defined by <code>.position</code> property. Cylindrical modifer applied the force parallel to the <code>.direction</code> vector, centered at <code>position</code> property. Planar modifers operate perpendicular to the <code>.direction</code> vector.</p> <p>Maps to values in <code>ni.particleBombSymmetryType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleBomb/#methods","title":"Methods","text":""},{"location":"types/niParticleBomb/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleBomb/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleBomb/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleBomb/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleCollider/","title":"niParticleCollider","text":""},{"location":"types/niParticleCollider/#niparticlecollider","title":"niParticleCollider","text":"<p>This modifier provides framework for collision testing. The classes derived from this one: niSphericalCollider, and niPlanarCollider, test for collisions. Each frame a niParticleSystemController traverses its list of niParticlesColliders to determine if any collisions happened.</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niParticleCollider/#properties","title":"Properties","text":""},{"location":"types/niParticleCollider/#collisionpoint","title":"<code>collisionPoint</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticleCollider/#collisiontime","title":"<code>collisionTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleCollider/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleCollider/#dieoncollide","title":"<code>dieOnCollide</code>","text":"<p>If this flag is true a particle that collides with something will be destroyed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleCollider/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleCollider/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleCollider/#restitution","title":"<code>restitution</code>","text":"<p>The fraction of the original amount of energy the particle retains after a collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleCollider/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleCollider/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleCollider/#spawnoncollide","title":"<code>spawnOnCollide</code>","text":"<p>This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleCollider/#methods","title":"Methods","text":""},{"location":"types/niParticleCollider/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleCollider/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleCollider/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleCollider/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleColorModifier/","title":"niParticleColorModifier","text":""},{"location":"types/niParticleColorModifier/#niparticlecolormodifier","title":"niParticleColorModifier","text":"<p>This modifer alters the color of each particle as it ages.</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niParticleColorModifier/#properties","title":"Properties","text":""},{"location":"types/niParticleColorModifier/#colordata","title":"<code>colorData</code>","text":"<p>The parameters for this modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColorData)</li> </ul>"},{"location":"types/niParticleColorModifier/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleColorModifier/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleColorModifier/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleColorModifier/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleColorModifier/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleColorModifier/#methods","title":"Methods","text":""},{"location":"types/niParticleColorModifier/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleColorModifier/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleColorModifier/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleColorModifier/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleGrowFade/","title":"niParticleGrowFade","text":""},{"location":"types/niParticleGrowFade/#niparticlegrowfade","title":"niParticleGrowFade","text":"<p>This modifer alters the size and fading of the particles. The growing starts once a particle is first created, so that when a particle appears it will grow from nothing to its full size. Particles fade out of existance when they die, changing their size from full to nothing. If the two effects overlap, the particle will be smaller (to extinguish dying particles).</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niParticleGrowFade/#properties","title":"Properties","text":""},{"location":"types/niParticleGrowFade/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleGrowFade/#fade","title":"<code>fade</code>","text":"<p>The time over which the particles grow smaller, and at the end completely disappear.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleGrowFade/#grow","title":"<code>grow</code>","text":"<p>The time over which the particles grow larger.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleGrowFade/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleGrowFade/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleGrowFade/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleGrowFade/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleGrowFade/#methods","title":"Methods","text":""},{"location":"types/niParticleGrowFade/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleGrowFade/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleGrowFade/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleGrowFade/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleModifier/","title":"niParticleModifier","text":""},{"location":"types/niParticleModifier/#niparticlemodifier","title":"niParticleModifier","text":"<p>Abstract base class for particle system modifiers. It affects every particle in a particle system.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niParticleModifier/#properties","title":"Properties","text":""},{"location":"types/niParticleModifier/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleModifier/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleModifier/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleModifier/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleModifier/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleModifier/#methods","title":"Methods","text":""},{"location":"types/niParticleModifier/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleModifier/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleModifier/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleModifier/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleRotation/","title":"niParticleRotation","text":""},{"location":"types/niParticleRotation/#niparticlerotation","title":"niParticleRotation","text":"<p>This modifier rotates particles a constant rate.</p> <p>This type inherits the following: niParticleModifier, niObject</p>"},{"location":"types/niParticleRotation/#properties","title":"Properties","text":""},{"location":"types/niParticleRotation/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niParticleRotation/#initialaxis","title":"<code>initialAxis</code>","text":"<p>The axis of rotation for the particles. If <code>.randomInitialAxis</code> is set to true then this won't be used.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticleRotation/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niParticleRotation/#randominitialaxis","title":"<code>randomInitialAxis</code>","text":"<p>If set to true, random axis of rotation will be used to rotate each particle.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleRotation/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleRotation/#rotationspeed","title":"<code>rotationSpeed</code>","text":"<p>The speed at which each particle rotates.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleRotation/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleRotation/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleRotation/#methods","title":"Methods","text":""},{"location":"types/niParticleRotation/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleRotation/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleRotation/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleRotation/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleSystemController/","title":"niParticleSystemController","text":""},{"location":"types/niParticleSystemController/#niparticlesystemcontroller","title":"niParticleSystemController","text":"<p>The niParticleSystemController animates an niParticles-based object. The controller handles birth and death, spawning and motion.</p> <p>A particle spawn can be set to occur when the particle undergoes a specific condition, such as colliding with an object or dying. When such an event happens, naw particles are generated at the position of the old particle with the same attributes as the original particle. This behaviour will continue until the number of spawn generations equals the number of generations allowed. The number of new particles, precentage of particles that undergo spawning, speed and directional chaos values can be specified.</p> <p>This type inherits the following: niTimeController, niObject</p>"},{"location":"types/niParticleSystemController/#properties","title":"Properties","text":""},{"location":"types/niParticleSystemController/#active","title":"<code>active</code>","text":"<p>If the controller is active. When inactive, the target does not get updated and animation timing does not advance.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#activeparticlecount","title":"<code>activeParticleCount</code>","text":"<p>Read-only. The number of active particles in the initial particles array.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#animtimingtype","title":"<code>animTimingType</code>","text":"<p>How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation.</p> <p>Maps to values in <code>ni.animType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#birthrate","title":"<code>birthRate</code>","text":"<p>The rate at which new particles are generated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#currentparticleindex","title":"<code>currentParticleIndex</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#cycletype","title":"<code>cycleType</code>","text":"<p>The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped.</p> <p>Maps to values in <code>ni.animCycleType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#declinationangle","title":"<code>declinationAngle</code>","text":"<p>The declination angle of the velocity vector of newly spawned particles from the positive Z axis in radians. The range is [0, PI], where declination angle of <code>0</code> will set the initial velocity vector to [0, 0, 1]. Declination angle of PI will set the initial velocity vector to [0, 0, -1].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#declinationanglevariation","title":"<code>declinationAngleVariation</code>","text":"<p>The variation of the initial declination angle. The initial velocity declination will be evenly distributed over the [<code>.declinationAngle - .declinationAngleVariation / 2</code>, <code>.declinationAngle + .declinationAngleVariation / 2</code>] range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#emitstarttime","title":"<code>emitStartTime</code>","text":"<p>The time value at which the niParticleSystemController will start emitting particles. If this value is less than the <code>.startTime</code> variable (inherited from niTimeController), the controller will perform a run-up for the amount of time indicated by the difference.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#emitstoptime","title":"<code>emitStopTime</code>","text":"<p>The time value at which the controller stops emitting the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#emitter","title":"<code>emitter</code>","text":"<p>The object that emits the particles. The emitter volume is transformed into the world coordinates of the emitter before new particles are generated. This allows the transforms of the emitter to change without affecting the transforms of all the particles in the system.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleSystemController/#emitterdepth","title":"<code>emitterDepth</code>","text":"<p>Determines the dimensions of the volume from which new particles are generated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#emitterheight","title":"<code>emitterHeight</code>","text":"<p>Determines the dimensions of the volume from which new particles are generated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#emittermodifiers","title":"<code>emitterModifiers</code>","text":"<p>Modifiers that will influence the particle system by modifying the emmiting object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObject[])</li> </ul>"},{"location":"types/niParticleSystemController/#emitterwidth","title":"<code>emitterWidth</code>","text":"<p>Determines the dimensions of the volume from which new particles are generated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#firsttime","title":"<code>firstTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#frequency","title":"<code>frequency</code>","text":"<p>The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#highkeyframe","title":"<code>highKeyFrame</code>","text":"<p>This is the end animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#initialcolor","title":"<code>initialColor</code>","text":"<p>The initial color given to the newly created particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/niParticleSystemController/#initialnormal","title":"<code>initialNormal</code>","text":"<p>Default: <code>{1.0, 0.0, 0.0}</code>. The normal vector given to the newly created particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticleSystemController/#initialsize","title":"<code>initialSize</code>","text":"<p>The initial size of the new particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lastemit","title":"<code>lastEmit</code>","text":"<p>The timestamp at which the last emitted particles were created.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lastscaledtime","title":"<code>lastScaledTime</code>","text":"<p>This function returns the last scaled time computed by this controller. The scaled time takes the <code>frequency</code> and <code>phase</code> into account, along with the <code>cycleType</code> and <code>animTimingType</code>. This is the last value used to interpolate animation keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lasttime","title":"<code>lastTime</code>","text":"<p>No description.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lifespan","title":"<code>lifespan</code>","text":"<p>The life spane for each particle.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lifespanvariance","title":"<code>lifespanVariance</code>","text":"<p>The variation of the particle life span. It will be evenly distributed over the [<code>.lifespan - .lifespanVariance / 2</code>, <code>.lifespan + .lifespanVariance / 2</code>] range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#lowkeyframe","title":"<code>lowKeyFrame</code>","text":"<p>This is the beginning animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#nextcontroller","title":"<code>nextController</code>","text":"<p>The next animation controller in the list of controllers containing the calling controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niParticleSystemController/#particlecolliders","title":"<code>particleColliders</code>","text":"<p>Collider modifiers that will influence the individual particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleCollider[])</li> </ul>"},{"location":"types/niParticleSystemController/#particledatacount","title":"<code>particleDataCount</code>","text":"<p>Read-only. The number of initial particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#particlemodifiers","title":"<code>particleModifiers</code>","text":"<p>Modifiers that will influence the individual particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier[])</li> </ul>"},{"location":"types/niParticleSystemController/#phase","title":"<code>phase</code>","text":"<p>The phase value. It is an offset applied to the animation's update time, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#planarangle","title":"<code>planarAngle</code>","text":"<p>The planar angle (around the Z axis from the positive X axis) that will serve as the plane in which the declination will occur. The expected range of the planar angle is [0, 2PI).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#planaranglevariation","title":"<code>planarAngleVariation</code>","text":"<p>The variation of the initial planar angle. The planar angle will be evenly distributed over the [<code>.planarAngle - .planarAngleVariation / 2</code>, <code>.planarAngle + .planarAngleVariation / 2</code>] range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#resetparticlesystem","title":"<code>resetParticleSystem</code>","text":"<p>Controls whether the system will be reset when the niParticleSystemController loops. If this flag is set to <code>true</code>, existing particles will be eliminated when the controller loops, and any run-up indicated by <code>.emitStartTime</code> variable will occur. Otherwise, the controller will simply continue running from the beginning of the loop, and the existing particles will continue to run until they die out naturally.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleSystemController/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticleSystemController/#scaledlasttime","title":"<code>scaledLastTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#spawndirectionchaos","title":"<code>spawnDirectionChaos</code>","text":"<p>Controls the change in direction that new particles generated by a spawn event will have. A value of <code>0.0</code> indicates no change in direction, and a value of <code>1.0</code> indicates a 0 % to 100 % change in direction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#spawngenerationscount","title":"<code>spawnGenerationsCount</code>","text":"<p>The number of spawn generations a particle can go through.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#spawnmultiplier","title":"<code>spawnMultiplier</code>","text":"<p>The number of new particles generated on a spawn event.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niParticleSystemController/#spawnondeath","title":"<code>spawnOnDeath</code>","text":"<p>This flag indicates whether a particle spawn event will occur upon particle death.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#spawnpercentage","title":"<code>spawnPercentage</code>","text":"<p>The percentage of the particles that will actually spawn when a spawn event occurs Expected values are in range [0.0, 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#spawnspeedchaos","title":"<code>spawnSpeedChaos</code>","text":"<p>Controls the change in speed that new particles generated by a spawn event will have. A value of <code>0.0</code> indicates no change in speed, a value of <code>1.0</code> indicates a 0 % to 100 % increase in speed, and a value of <code>-1.0</code> indicates 0 % to 100 % decrease in speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#speed","title":"<code>speed</code>","text":"<p>This is the initial speed of the newly spawned particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#speedvariation","title":"<code>speedVariation</code>","text":"<p>The variation of the initial velocity. The initial velocity will be evenly distributed over the [<code>.speed - .speedVariation / 2</code>, <code>.speed + .speedVariation / 2</code>] range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#starttime","title":"<code>startTime</code>","text":"<p>The time at which the animation controller starts playing its animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#staticbounds","title":"<code>staticBounds</code>","text":"<p>This flag controls whether or not the controller uses precomputed static bounding volumes for each frame of the animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#target","title":"<code>target</code>","text":"<p>Read-only. The scene graph object that this animation controller is to animate.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObjectNET)</li> </ul>"},{"location":"types/niParticleSystemController/#usebirthrate","title":"<code>useBirthRate</code>","text":"<p>If this flag is set to <code>false</code>, the maximal sustainable birth rate based on the life span of the particles will be used. Otherwise, the value of <code>.birthRate</code> property will be used.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#methods","title":"Methods","text":""},{"location":"types/niParticleSystemController/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticleSystemController/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticleSystemController/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticleSystemController/#settarget","title":"<code>setTarget</code>","text":"<p>This method assigns a new target to the animation controller.</p> <pre><code>myObject:setTarget(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niObjectNET): The new target to assign.</li> </ul>"},{"location":"types/niParticleSystemController/#start","title":"<code>start</code>","text":"<p>Starts the controller at the specified time. Intended for controllers with <code>animTimingType</code> of 1.</p> <pre><code>myObject:start(time)\n</code></pre> <p>Parameters:</p> <ul> <li><code>time</code> (number)</li> </ul>"},{"location":"types/niParticleSystemController/#stop","title":"<code>stop</code>","text":"<p>Stops the controller. If you only want to pause the controller, use the <code>update</code> property.</p> <pre><code>myObject:stop()\n</code></pre>"},{"location":"types/niParticles/","title":"niParticles","text":""},{"location":"types/niParticles/#niparticles","title":"niParticles","text":"<p>An object that represent collections of large numbers of small point-like objects, designed for dynamic effects like fountains, waterfalls, snow, explosions, etc.</p> <p>This type inherits the following: niTriBasedGeometry, niGeometry, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niParticles/#properties","title":"Properties","text":""},{"location":"types/niParticles/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niParticles/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niParticles/#data","title":"<code>data</code>","text":"<p>The niParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticlesData)</li> </ul>"},{"location":"types/niParticles/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niParticles/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticles/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niParticles/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niParticles/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niParticles/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niParticles/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niParticles/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticles/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niParticles/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticles/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticles/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticles/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niParticles/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niParticles/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticles/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticles/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niParticles/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niParticles/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticles/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niParticles/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niParticles/#methods","title":"Methods","text":""},{"location":"types/niParticles/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niParticles/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niParticles/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niParticles/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticles/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niParticles/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niParticles/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niParticles/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niParticles/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niParticles/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niParticles/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niParticles/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niParticles/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticles/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niParticles/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niParticles/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niParticles/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niParticles/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niParticles/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niParticles/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticles/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niParticles/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niParticles/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niParticles/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niParticlesData/","title":"niParticlesData","text":""},{"location":"types/niParticlesData/#niparticlesdata","title":"niParticlesData","text":"<p>niParticlesData objects contain the geometry data necessary to render a niParticles object. When a niParticles-based object is created, the actual geometry data is stored in an attached niParticlesData object.</p> <p>There are two ways to adjust particle size within an niParticles object. The <code>radius</code> affects all the particles in this niParticlesData object. There is also a <code>size</code> for each particle (available as <code>sizes</code> array), which is a ratio between 0.0 and 1.0 that is multiplied by the radius to obtain the final rendered size of the particle.</p> <p>This type inherits the following: niTriBasedGeometryData, niGeometryData, niObject</p>"},{"location":"types/niParticlesData/#properties","title":"Properties","text":""},{"location":"types/niParticlesData/#activecount","title":"<code>activeCount</code>","text":"<p>Read-only. The number of active particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#activetrianglecount","title":"<code>activeTriangleCount</code>","text":"<p>The active triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#bounds","title":"<code>bounds</code>","text":"<p>The model-space bounding sphere of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niParticlesData/#colors","title":"<code>colors</code>","text":"<p>Read-only. The vertex colors for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor[])</li> </ul>"},{"location":"types/niParticlesData/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niParticlesData/#radius","title":"<code>radius</code>","text":"<p>Read-only. The radius of the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticlesData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niParticlesData/#sizes","title":"<code>sizes</code>","text":"<p>Read-only. The particle sizes. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niParticlesData/#texcoords","title":"<code>texCoords</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niParticlesData/#textures","title":"<code>textures</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niParticlesData/#texturesets","title":"<code>textureSets</code>","text":"<p>The number of texture coordinate sets in the data.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#trianglecount","title":"<code>triangleCount</code>","text":"<p>Read-only. The triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#uniqueid","title":"<code>uniqueID</code>","text":"<p>Read-only. A unique ID for this model, assigned at model creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#vertexcount","title":"<code>vertexCount</code>","text":"<p>Read-only. The vertex count for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niParticlesData/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niParticlesData/#methods","title":"Methods","text":""},{"location":"types/niParticlesData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niParticlesData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticlesData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niParticlesData/#markaschanged","title":"<code>markAsChanged</code>","text":"<p>Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data.</p> <p>If you have altered vertex positions, you may need to also call <code>updateModelBound</code>_. You should call it if vertices have been moved outside the bounds of the original model.</p> <pre><code>myObject:markAsChanged()\n</code></pre>"},{"location":"types/niParticlesData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niParticlesData/#updatemodelbound","title":"<code>updateModelBound</code>","text":"<p>Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. </p> <p>If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function.</p> <pre><code>myObject:updateModelBound()\n</code></pre>"},{"location":"types/niPick/","title":"niPick","text":""},{"location":"types/niPick/#nipick","title":"niPick","text":"<p>Class used in the picking intersection system within the game engine. Using a ray, the engine performs picking operations on a scene graph or any subtree. Given a ray and a subtree, the subtree is traversed and matching nodes are added to an array.</p>"},{"location":"types/niPick/#properties","title":"Properties","text":""},{"location":"types/niPick/#coordinatetype","title":"<code>coordinateType</code>","text":"<p>The coordinate type for the object. Maps to values in <code>ni.pickCoordinateType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPick/#frontonly","title":"<code>frontOnly</code>","text":"<p>If true, back face triangles (those with clockwise winding order) are culled prior to intersection calculations. If false, intersections of ray with triangles are computed regardless of triangle orientation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#intersecttype","title":"<code>intersectType</code>","text":"<p>The intersect type for the object. Maps to values in <code>ni.pickIntersectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPick/#lastaddedrecord","title":"<code>lastAddedRecord</code>","text":"<p>The pick record that was last added to the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPickRecord)</li> </ul>"},{"location":"types/niPick/#observeappcullflag","title":"<code>observeAppCullFlag</code>","text":"<p>If true, the pick stops if it encounters an object with the 'app culled' flag set.  If false, the pick will continue over 'app culled' objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#picktype","title":"<code>pickType</code>","text":"<p>The pick type for the object. Maps to values in <code>ni.pickType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPick/#results","title":"<code>results</code>","text":"<p>Read-only. The array of pick records obtained by the last call to <code>pickObjects</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPickRecord[])</li> </ul>"},{"location":"types/niPick/#returncolor","title":"<code>returnColor</code>","text":"<p>If true, a vertex color value is returned for the point of intersection of triangles during picking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#returnnormal","title":"<code>returnNormal</code>","text":"<p>If true, a unit-length normal is returned for the point of intersection of triangles intersected during the picking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#returnsmoothnormal","title":"<code>returnSmoothNormal</code>","text":"<p>If true and if vertex normals exist, then a unit-length normal vector is interpolated from the vertex normals and returned during the picking operation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#returntexture","title":"<code>returnTexture</code>","text":"<p>If true, texture coordinates are returned for the point of intersection of triangles during the picking operation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPick/#root","title":"<code>root</code>","text":"<p>The root pick type for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPickType)</li> </ul>"},{"location":"types/niPick/#sorttype","title":"<code>sortType</code>","text":"<p>The sort type for the object. Maps to values in <code>ni.pickSortType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPick/#methods","title":"Methods","text":""},{"location":"types/niPick/#clearresults","title":"<code>clearResults</code>","text":"<p>Clears the results of any previous picking operation.</p> <pre><code>myObject:clearResults()\n</code></pre>"},{"location":"types/niPick/#pickobjects","title":"<code>pickObjects</code>","text":"<p>Performs the picking operation by casting a ray.</p> <pre><code>myObject:pickObjects(origin, direction, append, maxDistance)\n</code></pre> <p>Parameters:</p> <ul> <li><code>origin</code> (tes3vector3): The origin of the ray in world coordinates.</li> <li><code>direction</code> (tes3vector3)</li> <li><code>append</code> (boolean): Default: <code>false</code>. This parameter indicates whether the new results are appended to the results array, or if a new array is formed clearing the results array.</li> <li><code>maxDistance</code> (number): Optional. Default value: 0.0F</li> </ul>"},{"location":"types/niPickRecord/","title":"niPickRecord","text":""},{"location":"types/niPickRecord/#nipickrecord","title":"niPickRecord","text":"<p>A nested class of NiPick that stores the results of previous picking operations for use by the game engine.</p>"},{"location":"types/niPickRecord/#properties","title":"Properties","text":""},{"location":"types/niPickRecord/#color","title":"<code>color</code>","text":"<p>The vertex color at the point of intersection. The color is valid only when <code>returnColor = true</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/niPickRecord/#distance","title":"<code>distance</code>","text":"<p>The distance of the triangle intersection from the ray origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPickRecord/#intersection","title":"<code>intersection</code>","text":"<p>The intersection point on the triangle. It's valid only if the <code>intersectType</code> was <code>ni.pickIntersectType.triangleIntersect</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPickRecord/#normal","title":"<code>normal</code>","text":"<p>The normal vector at the point of intersection. The normal is valid only when <code>returnNormal = true</code> in the parent niPick object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPickRecord/#object","title":"<code>object</code>","text":"<p>Read-only. The object of the record.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niPickRecord/#parent","title":"<code>parent</code>","text":"<p>Read-only. The parent of the record.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niPickRecord/#reference","title":"<code>reference</code>","text":"<p>Read-only. Quick access to the associated object's reference.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/niPickRecord/#texture","title":"<code>texture</code>","text":"<p>The texture coordinates at the point of intersection. The coordinates are valid only when <code>returnTexture = true</code> in the parent niPick object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/niPickRecord/#triangleindex","title":"<code>triangleIndex</code>","text":"<p>The index of the intersected triangle.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPickRecord/#vertexindex","title":"<code>vertexIndex</code>","text":"<p>An array containing the 3 indices of the vertices that form the triangle at the intersection point. It's valid only if the <code>intersectType</code> was <code>ni.pickIntersectType.triangleIntersect</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niPixelData/","title":"niPixelData","text":""},{"location":"types/niPixelData/#nipixeldata","title":"niPixelData","text":"<p>Represents 2D arrays of pixel values, as well as pyramids of multiple mipmap levels, each of 2D arrays of pixel values. Also contains information representing the format of the pixels and dimensions of the arrays.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niPixelData/#properties","title":"Properties","text":""},{"location":"types/niPixelData/#bytesperpixel","title":"<code>bytesPerPixel</code>","text":"<p>Read-only. The number of bytes per pixel.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPixelData/#mipmaplevels","title":"<code>mipMapLevels</code>","text":"<p>Read-only. The number of MipMap levels.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPixelData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPixelData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPixelData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPixelData/#methods","title":"Methods","text":""},{"location":"types/niPixelData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niPixelData/#createsourcetexture","title":"<code>createSourceTexture</code>","text":"<p>Creates a source texture from the current NiPixelData object.</p> <pre><code>local result = myObject:createSourceTexture()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture)</li> </ul>"},{"location":"types/niPixelData/#fill","title":"<code>fill</code>","text":"<p>Fills this pixel data with the provided color.</p> <pre><code>myObject:fill(data, mipMapLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>data</code> (number[]): The color data to be set (1-indexed). The values should be in range [0.0, 1.0]. The first three values are RGB color channels, while the last one is alpha channel. The array length must be equal to the <code>bytesPerPixel</code> property of this niPixelData object, because alpha can be assigned only to the niPixelData object that has an alpha channel.</li> <li><code>mipMapLevel</code> (number): Default: <code>0</code>. The mipmap level to fill with the provided color. The finest (largest) mipmap level is level 0.</li> </ul>"},{"location":"types/niPixelData/#getheight","title":"<code>getHeight</code>","text":"<p>Returns the height of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level <code>mipMapLevels - 1</code> is the coarsest (smallest) mipmap level.</p> <pre><code>local result = myObject:getHeight(mipMapLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mipMapLevel</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPixelData/#getwidth","title":"<code>getWidth</code>","text":"<p>Returns the width of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level <code>mipMapLevels - 1</code> is the coarsest (smallest) mipmap level.</p> <pre><code>local result = myObject:getWidth(mipMapLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mipMapLevel</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPixelData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPixelData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPixelData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niPixelData/#setpixelsbyte","title":"<code>setPixelsByte</code>","text":"<p>Sets the pixel data from byte data.</p> <pre><code>myObject:setPixelsByte(data, mipMapLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>data</code> (number[]): The byte data to be set to (1-indexed).</li> <li><code>mipMapLevel</code> (number): Default: <code>0</code>. The mipmap level whose data to modify. The finest (largest) mipmap level is level 0.</li> </ul>"},{"location":"types/niPixelData/#setpixelsfloat","title":"<code>setPixelsFloat</code>","text":"<p>Sets the pixel data from float data.</p> <pre><code>myObject:setPixelsFloat(data, mipMapLevel)\n</code></pre> <p>Parameters:</p> <ul> <li><code>data</code> (number[]): The float data to be set to (1-indexed). The values should be in range [0.0, 1.0].</li> <li><code>mipMapLevel</code> (number): Default: <code>0</code>. The mipmap level whose data to modify. The finest (largest) mipmap level is level 0.</li> </ul>"},{"location":"types/niPixelData/#functions","title":"Functions","text":""},{"location":"types/niPixelData/#new","title":"<code>new</code>","text":"<p>Creates a new NiPixelData object.</p> <pre><code>local pixelData = niPixelData.new(width, height, mipMapLevels)\n</code></pre> <p>Parameters:</p> <ul> <li><code>width</code> (number)</li> <li><code>height</code> (number)</li> <li><code>mipMapLevels</code> (number): Default: <code>1</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>pixelData</code> (niPixelData)</li> </ul>"},{"location":"types/niPlanarCollider/","title":"niPlanarCollider","text":""},{"location":"types/niPlanarCollider/#niplanarcollider","title":"niPlanarCollider","text":"<p>This modifier makes particles bounce off of a rectangle.</p> <p>This type inherits the following: niParticleCollider, niParticleModifier, niObject</p>"},{"location":"types/niPlanarCollider/#properties","title":"Properties","text":""},{"location":"types/niPlanarCollider/#collisionpoint","title":"<code>collisionPoint</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPlanarCollider/#collisiontime","title":"<code>collisionTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPlanarCollider/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niPlanarCollider/#dieoncollide","title":"<code>dieOnCollide</code>","text":"<p>If this flag is true a particle that collides with something will be destroyed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPlanarCollider/#height","title":"<code>height</code>","text":"<p>The plane size along the y axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPlanarCollider/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niPlanarCollider/#planeequation","title":"<code>planeEquation</code>","text":"<p>The coefficients in the point-normal form equation of the plane.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/niPlanarCollider/#position","title":"<code>position</code>","text":"<p>The center point of the collider.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPlanarCollider/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPlanarCollider/#restitution","title":"<code>restitution</code>","text":"<p>The fraction of the original amount of energy the particle retains after a collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPlanarCollider/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPlanarCollider/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPlanarCollider/#spawnoncollide","title":"<code>spawnOnCollide</code>","text":"<p>This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPlanarCollider/#width","title":"<code>width</code>","text":"<p>The plane size along the x axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPlanarCollider/#xaxis","title":"<code>xAxis</code>","text":"<p>The x axis, lying in the plane of the collider.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPlanarCollider/#yaxis","title":"<code>yAxis</code>","text":"<p>The y axis, lying in the plane of the collider.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPlanarCollider/#methods","title":"Methods","text":""},{"location":"types/niPlanarCollider/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niPlanarCollider/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPlanarCollider/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPlanarCollider/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niPointLight/","title":"niPointLight","text":""},{"location":"types/niPointLight/#nipointlight","title":"niPointLight","text":"<p>Represents a point light source in a scene. Point lights have a specific location in space and a distance attenuation function. Point lights project light in all directions from their position. They can be moved by changing the translation of the light.</p> <p>This type inherits the following: niLight, niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niPointLight/#properties","title":"Properties","text":""},{"location":"types/niPointLight/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niPointLight/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#ambient","title":"<code>ambient</code>","text":"<p>The ambient light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niPointLight/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#constantattenuation","title":"<code>constantAttenuation</code>","text":"<p>The constant attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niPointLight/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niPointLight/#dimmer","title":"<code>dimmer</code>","text":"<p>This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niPointLight/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#linearattenuation","title":"<code>linearAttenuation</code>","text":"<p>The linear attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niPointLight/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niPointLight/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niPointLight/#quadraticattenuation","title":"<code>quadraticAttenuation</code>","text":"<p>The quadratic attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niPointLight/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPointLight/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niPointLight/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#specular","title":"<code>specular</code>","text":"<p>This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius.</p> <p>In practice, this radius represents the light's influence radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niPointLight/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPointLight/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niPointLight/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPointLight/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niPointLight/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPointLight/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niPointLight/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niPointLight/#methods","title":"Methods","text":""},{"location":"types/niPointLight/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niPointLight/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niPointLight/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niPointLight/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niPointLight/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niPointLight/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niPointLight/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niPointLight/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niPointLight/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niPointLight/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niPointLight/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niPointLight/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niPointLight/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niPointLight/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niPointLight/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niPointLight/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niPointLight/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niPointLight/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niPointLight/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niPointLight/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niPointLight/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niPointLight/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niPointLight/#setattenuationforradius","title":"<code>setAttenuationForRadius</code>","text":"<p>Sets the light attenuation values for the given radius. Respects the values in the <code>Morrowind.ini</code> file.</p> <pre><code>myObject:setAttenuationForRadius(radius)\n</code></pre> <p>Parameters:</p> <ul> <li><code>radius</code> (integer)</li> </ul>"},{"location":"types/niPointLight/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niPointLight/#setradius","title":"<code>setRadius</code>","text":"<p>Sets both the light's influence radius, and its lighting attenuation to match the radius.</p> <pre><code>myObject:setRadius(radius)\n</code></pre> <p>Parameters:</p> <ul> <li><code>radius</code> (integer)</li> </ul>"},{"location":"types/niPointLight/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niPointLight/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niPointLight/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niPointLight/#functions","title":"Functions","text":""},{"location":"types/niPointLight/#new","title":"<code>new</code>","text":"<p>Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0.</p> <pre><code>local light = niPointLight.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>light</code> (niPointLight)</li> </ul>"},{"location":"types/niPosKey/","title":"niPosKey","text":""},{"location":"types/niPosKey/#niposkey","title":"niPosKey","text":"<p>An animation key that holds a position value.</p> <p>This type inherits the following: niAnimationKey</p>"},{"location":"types/niPosKey/#properties","title":"Properties","text":""},{"location":"types/niPosKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niPosKey/#value","title":"<code>value</code>","text":"<p>The position value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niProperty/","title":"niProperty","text":""},{"location":"types/niProperty/#niproperty","title":"niProperty","text":"<p>A base class representing all rendering properties.</p> <p>This type inherits the following: niObjectNET, niObject</p>"},{"location":"types/niProperty/#properties","title":"Properties","text":""},{"location":"types/niProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niProperty/#methods","title":"Methods","text":""},{"location":"types/niProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niPropertyLinkedList/","title":"niPropertyLinkedList","text":""},{"location":"types/niPropertyLinkedList/#nipropertylinkedlist","title":"niPropertyLinkedList","text":"<p>A linked list of properties.</p>"},{"location":"types/niPropertyLinkedList/#properties","title":"Properties","text":""},{"location":"types/niPropertyLinkedList/#data","title":"<code>data</code>","text":"<p>Read-only. The current property in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niPropertyLinkedList/#next","title":"<code>next</code>","text":"<p>Read-only. The next property in the linked list.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niQuaternion/","title":"niQuaternion","text":""},{"location":"types/niQuaternion/#niquaternion","title":"niQuaternion","text":"<p>A rotation in quaternion representation.</p>"},{"location":"types/niQuaternion/#properties","title":"Properties","text":""},{"location":"types/niQuaternion/#w","title":"<code>w</code>","text":"<p>The W component of the quaternion.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niQuaternion/#x","title":"<code>x</code>","text":"<p>The X component of the quaternion.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niQuaternion/#y","title":"<code>y</code>","text":"<p>The Y component of the quaternion.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niQuaternion/#z","title":"<code>z</code>","text":"<p>The Z component of the quaternion.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niQuaternion/#methods","title":"Methods","text":""},{"location":"types/niQuaternion/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the quaternion.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niQuaternion/#dot","title":"<code>dot</code>","text":"<p>Calculates the dot product between this quaternion and another.</p> <pre><code>local result = myObject:dot(other)\n</code></pre> <p>Parameters:</p> <ul> <li><code>other</code> (niQuaternion): The other quaternion.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number): The dot product result.</li> </ul>"},{"location":"types/niQuaternion/#exp","title":"<code>exp</code>","text":"<p>Calculates the exponential e^q.</p> <pre><code>local result = myObject:exp()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number): The result.</li> </ul>"},{"location":"types/niQuaternion/#fromangleaxis","title":"<code>fromAngleAxis</code>","text":"<p>Fill the quaternion by converting an angle-axis rotation. The angle must be within the interval [0, PI] and the axis must be unit length.</p> <pre><code>myObject:fromAngleAxis(angle, axis)\n</code></pre> <p>Parameters:</p> <ul> <li><code>angle</code> (number)</li> <li><code>axis</code> (tes3vector3)</li> </ul>"},{"location":"types/niQuaternion/#fromrotation","title":"<code>fromRotation</code>","text":"<p>Fill the quaternion by converting a rotation matrix.</p> <pre><code>myObject:fromRotation(matrix)\n</code></pre> <p>Parameters:</p> <ul> <li><code>matrix</code> (tes3matrix33)</li> </ul>"},{"location":"types/niQuaternion/#invert","title":"<code>invert</code>","text":"<p>Inverting or conjugating a rotation quaternion has the effect of reversing the axis of rotation, which modifies it to rotate in the opposite direction from the original. That is, if an object is rotated to a new position using a quaternion, then rotating it again by quaternion's inverse will return it to its original location.</p> <pre><code>local result = myObject:invert()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niQuaternion/#log","title":"<code>log</code>","text":"<p>Calculates the logarithm log(q).</p> <pre><code>local result = myObject:log()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number): The result.</li> </ul>"},{"location":"types/niQuaternion/#normalize","title":"<code>normalize</code>","text":"<p>Normalizes the quaternion to unit length in-place. Returns true if result is unit length, false if the quaternion magnitude is very near to zero and cannot be normalized.</p> <pre><code>local isNormalized = myObject:normalize()\n</code></pre> <p>Returns:</p> <ul> <li><code>isNormalized</code> (boolean): If the quaternion was successfully normalized.</li> </ul>"},{"location":"types/niQuaternion/#normalized","title":"<code>normalized</code>","text":"<p>Returns a normalized copy of this quaternion. The quaternion will be all zero if the quaternion magnitude is very near to zero and cannot be normalized.</p> <pre><code>local result = myObject:normalized()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion): The normalized quaternion.</li> </ul>"},{"location":"types/niQuaternion/#rotatetowards","title":"<code>rotateTowards</code>","text":"<p>Calculates a spherical linear interpolation between this quaternion and another, limited to a maximum rotation angle. Chooses the shortest path of interpolation between quaternions, which means it minimizes spin but the interpolation arc is limited to pi radians or 180 degrees of interpolation.</p> <pre><code>local result = myObject:rotateTowards(target, rotationLimit)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niQuaternion): The quaternion to interpolate towards.</li> <li><code>rotationLimit</code> (number): The interpolation result will be limited to this maximum angle from the initial quaternion. Angle in radians.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion): The calculated result.</li> </ul>"},{"location":"types/niQuaternion/#slerp","title":"<code>slerp</code>","text":"<p>Calculates a spherical linear interpolation between this quaternion and another. Chooses the shortest path of interpolation between quaternions, which means it minimizes spin but the interpolation arc is limited to pi radians or 180 degrees of interpolation.</p> <pre><code>local result = myObject:slerp(target, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niQuaternion): The quaternion to interpolate towards.</li> <li><code>transition</code> (number): The interpolation parameter. Must be between <code>0.0</code> (closer to this quaternion) and <code>1.0</code> (closer to the other quaternion).</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion): The calculated result.</li> </ul>"},{"location":"types/niQuaternion/#slerpkeyframe","title":"<code>slerpKeyframe</code>","text":"<p>Calculates a spherical linear interpolation between this quaternion and another. Does not choose a direction of interpolation. This means the interpolation arc can be up to 2pi radians or 360 degrees, depending on the signs of the quaternions.</p> <pre><code>local result = myObject:slerpKeyframe(target, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niQuaternion): The quaternion to interpolate towards.</li> <li><code>transition</code> (number): The interpolation parameter. Must be between <code>0.0</code> (closer to this quaternion) and <code>1.0</code> (closer to the other quaternion).</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion): The calculated result.</li> </ul>"},{"location":"types/niQuaternion/#toangleaxis","title":"<code>toAngleAxis</code>","text":"<p>Convert this quaternion into an angle-axis rotation.</p> <pre><code>local angle, axis = myObject:toAngleAxis()\n</code></pre> <p>Returns:</p> <ul> <li><code>angle</code> (number)</li> <li><code>axis</code> (tes3vector3)</li> </ul>"},{"location":"types/niQuaternion/#torotation","title":"<code>toRotation</code>","text":"<p>Convert this quaternion into a rotation matrix.</p> <pre><code>local result = myObject:toRotation()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niQuaternion/#functions","title":"Functions","text":""},{"location":"types/niQuaternion/#new","title":"<code>new</code>","text":"<p>Creates a new niQuaternion object.</p> <pre><code>local quaternion = niQuaternion.new(w, x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>w</code> (number): Default: <code>0</code>.</li> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> <li><code>z</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>quaternion</code> (niQuaternion)</li> </ul>"},{"location":"types/niQuaternion/#math-operations","title":"Math Operations","text":""},{"location":"types/niQuaternion/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description niQuaternion niQuaternion niQuaternion Multiplies two quaternions. The end effect is that the resulting rotation quaternion is equal to the rotation of both quaternions."},{"location":"types/niQuaternion/#unary-minus-","title":"Unary minus (<code>-</code>)","text":"Result type Description niQuaternion Unary negation."},{"location":"types/niRTTI/","title":"niRTTI","text":""},{"location":"types/niRTTI/#nirtti","title":"niRTTI","text":"<p>Runtime type information for NetImmerse structures.</p>"},{"location":"types/niRTTI/#properties","title":"Properties","text":""},{"location":"types/niRTTI/#name","title":"<code>name</code>","text":"<p>The human readable name for the type.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niRTTI/#parent","title":"<code>parent</code>","text":"<p>The runtime type information that this type derives from.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRenderedTexture/","title":"niRenderedTexture","text":""},{"location":"types/niRenderedTexture/#nirenderedtexture","title":"niRenderedTexture","text":"<p>A texture that is also a render target. This object can be used with niRenderer:setRenderTarget and rendered into. It can be directly used in a texturing property, or read back into system memory (at a performance cost). After using it as a render target, make sure you reset the renderer with niRenderer:setRenderTarget(nil) so that it's not bound as a source texture and a target at the same time.</p> <p>This type inherits the following: niTexture, niObjectNET, niObject</p>"},{"location":"types/niRenderedTexture/#properties","title":"Properties","text":""},{"location":"types/niRenderedTexture/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niRenderedTexture/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niRenderedTexture/#formatprefs","title":"<code>formatPrefs</code>","text":"<p>The <code>NiFormatPrefs</code> of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFormatPrefs)</li> </ul>"},{"location":"types/niRenderedTexture/#height","title":"<code>height</code>","text":"<p>Read-only. The height of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRenderedTexture/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niRenderedTexture/#readback","title":"<code>readback</code>","text":"<p>Reads the contents of the rendered texture into a system memory niPixelData. This requires that the rendered texture is not the current render target -- make sure niRenderer:setRenderTarget(nil) is called before using this function. The texture dimensions of the niRenderedTexture and niPixelData must be the same. It returns true if the readback succeeded, false otherwise.</p> <p>This function requires the GPU to finish rendering and send data to the CPU. This can impact framerates significantly, so measure and consider performance carefully when using this.</p> <p>Parameters:</p> <ul> <li><code>pixelData</code> (niPixelData): The pixel data to copy the texture into.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderedTexture/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRenderedTexture/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRenderedTexture/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRenderedTexture/#width","title":"<code>width</code>","text":"<p>Read-only. The width of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRenderedTexture/#methods","title":"Methods","text":""},{"location":"types/niRenderedTexture/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niRenderedTexture/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niRenderedTexture/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niRenderedTexture/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niRenderedTexture/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niRenderedTexture/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderedTexture/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderedTexture/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderedTexture/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderedTexture/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niRenderedTexture/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niRenderedTexture/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niRenderedTexture/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niRenderedTexture/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niRenderedTexture/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niRenderedTexture/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niRenderedTexture/#functions","title":"Functions","text":""},{"location":"types/niRenderedTexture/#create","title":"<code>create</code>","text":"<p>Creates an niRenderedTexture.</p> <pre><code>local texture = niRenderedTexture.create(width, height)\n</code></pre> <p>Parameters:</p> <ul> <li><code>width</code> (number): The width of the rendered texture. Should be a power of 2.</li> <li><code>height</code> (number): The height of the rendered texture. Should be a power of 2.</li> </ul> <p>Returns:</p> <ul> <li><code>texture</code> (niRenderedTexture)</li> </ul>"},{"location":"types/niRenderer/","title":"niRenderer","text":""},{"location":"types/niRenderer/#nirenderer","title":"niRenderer","text":"<p>The Morrowind's renderer class.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niRenderer/#properties","title":"Properties","text":""},{"location":"types/niRenderer/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRenderer/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRenderer/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRenderer/#methods","title":"Methods","text":""},{"location":"types/niRenderer/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niRenderer/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderer/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderer/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niRenderer/#setrendertarget","title":"<code>setRenderTarget</code>","text":"<p>This method changes the active rendering target to the provided texture.</p> <pre><code>local result = myObject:setRenderTarget(texture)\n</code></pre> <p>Parameters:</p> <ul> <li><code>texture</code> (niRenderedTexture): Default: <code>nil</code>. Set to <code>nil</code> to reset to the default rendering target.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRenderer/#takescreenshot","title":"<code>takeScreenshot</code>","text":"<p>This method returns the last rendered frame in the form of niPixelData.</p> <pre><code>local screenshot = myObject:takeScreenshot(bounds)\n</code></pre> <p>Parameters:</p> <ul> <li><code>bounds</code> (integer[]): These four values are used to take only a specific sub region (in pixels) from the framebuffer. If non provided, the taken screenshot will include the whole screen.</li> </ul> <p>Returns:</p> <ul> <li><code>screenshot</code> (niPixelData)</li> </ul>"},{"location":"types/niRotKey/","title":"niRotKey","text":""},{"location":"types/niRotKey/#nirotkey","title":"niRotKey","text":"<p>An animation key that holds a rotation value.</p> <p>This type inherits the following: niAnimationKey</p>"},{"location":"types/niRotKey/#properties","title":"Properties","text":""},{"location":"types/niRotKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotKey/#value","title":"<code>value</code>","text":"<p>The rotation value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niRotatingParticles/","title":"niRotatingParticles","text":""},{"location":"types/niRotatingParticles/#nirotatingparticles","title":"niRotatingParticles","text":"<p>An object that represent collections of large numbers of small point-like objects. Each object in the collection can be separately rotated.</p> <p>This type inherits the following: niParticles, niTriBasedGeometry, niGeometry, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niRotatingParticles/#properties","title":"Properties","text":""},{"location":"types/niRotatingParticles/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niRotatingParticles/#data","title":"<code>data</code>","text":"<p>The niRotatingParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRotatingParticlesData)</li> </ul>"},{"location":"types/niRotatingParticles/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niRotatingParticles/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticles/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niRotatingParticles/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niRotatingParticles/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niRotatingParticles/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticles/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niRotatingParticles/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRotatingParticles/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRotatingParticles/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticles/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niRotatingParticles/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niRotatingParticles/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niRotatingParticles/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticles/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niRotatingParticles/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niRotatingParticles/#methods","title":"Methods","text":""},{"location":"types/niRotatingParticles/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niRotatingParticles/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niRotatingParticles/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niRotatingParticles/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niRotatingParticles/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niRotatingParticles/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niRotatingParticles/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niRotatingParticles/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niRotatingParticles/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niRotatingParticles/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niRotatingParticles/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niRotatingParticles/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niRotatingParticles/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticles/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niRotatingParticles/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niRotatingParticles/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niRotatingParticles/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niRotatingParticles/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niRotatingParticles/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niRotatingParticles/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niRotatingParticles/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niRotatingParticles/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niRotatingParticles/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niRotatingParticles/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niRotatingParticlesData/","title":"niRotatingParticlesData","text":""},{"location":"types/niRotatingParticlesData/#nirotatingparticlesdata","title":"niRotatingParticlesData","text":"<p>niRotatingParticlesData objects contain the geometry data necessary to render a niRotatingParticles object. When a niRotatingParticles-based object is created, the actual geometry data is stored in an attached niRotatingParticlesData object.</p> <p>This type inherits the following: niParticlesData, niTriBasedGeometryData, niGeometryData, niObject</p>"},{"location":"types/niRotatingParticlesData/#properties","title":"Properties","text":""},{"location":"types/niRotatingParticlesData/#activecount","title":"<code>activeCount</code>","text":"<p>Read-only. The number of active particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#activetrianglecount","title":"<code>activeTriangleCount</code>","text":"<p>The active triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#bounds","title":"<code>bounds</code>","text":"<p>The model-space bounding sphere of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niRotatingParticlesData/#colors","title":"<code>colors</code>","text":"<p>Read-only. The vertex colors for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#radius","title":"<code>radius</code>","text":"<p>Read-only. The radius of the particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#rotations","title":"<code>rotations</code>","text":"<p>Read-only. The particle rotations. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRotatingParticlesData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niRotatingParticlesData/#sizes","title":"<code>sizes</code>","text":"<p>Read-only. The particle sizes. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#texcoords","title":"<code>texCoords</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#textures","title":"<code>textures</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#texturesets","title":"<code>textureSets</code>","text":"<p>The number of texture coordinate sets in the data.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#trianglecount","title":"<code>triangleCount</code>","text":"<p>Read-only. The triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#uniqueid","title":"<code>uniqueID</code>","text":"<p>Read-only. A unique ID for this model, assigned at model creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#vertexcount","title":"<code>vertexCount</code>","text":"<p>Read-only. The vertex count for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niRotatingParticlesData/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niRotatingParticlesData/#methods","title":"Methods","text":""},{"location":"types/niRotatingParticlesData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niRotatingParticlesData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticlesData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niRotatingParticlesData/#markaschanged","title":"<code>markAsChanged</code>","text":"<p>Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data.</p> <p>If you have altered vertex positions, you may need to also call <code>updateModelBound</code>_. You should call it if vertices have been moved outside the bounds of the original model.</p> <pre><code>myObject:markAsChanged()\n</code></pre>"},{"location":"types/niRotatingParticlesData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niRotatingParticlesData/#updatemodelbound","title":"<code>updateModelBound</code>","text":"<p>Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. </p> <p>If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function.</p> <pre><code>myObject:updateModelBound()\n</code></pre>"},{"location":"types/niSkinData/","title":"niSkinData","text":""},{"location":"types/niSkinData/#niskindata","title":"niSkinData","text":"<p>Contains skinning data that may be shared by multiple <code>NiSkinInstance</code> objects.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niSkinData/#properties","title":"Properties","text":""},{"location":"types/niSkinData/#bonedata","title":"<code>boneData</code>","text":"<p>Read-only. An array of objects containing one entry for each bone that influences vertices in the skinned mesh. The order of the entries in the <code>boneData</code> array corresponds to the order of the bones in the bone array in the <code>niSkinInstance</code> objects that point to this <code>niSkinData</code>. Each object in this array contains all the data needed to deform vertices by a single bone.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinDataBoneData[])</li> </ul>"},{"location":"types/niSkinData/#partition","title":"<code>partition</code>","text":"<p>Access to the container with the skinning data optimized for hardware skinning. If the <code>niSkinData</code> object has not been partitioned, this property is <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinPartition, nil)</li> </ul>"},{"location":"types/niSkinData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinData/#rotation","title":"<code>rotation</code>","text":"<p>Defines the rotation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niSkinData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinData/#scale","title":"<code>scale</code>","text":"<p>Defines the scale of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinData/#translation","title":"<code>translation</code>","text":"<p>Defines the translation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSkinData/#methods","title":"Methods","text":""},{"location":"types/niSkinData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSkinData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSkinDataBoneData/","title":"niSkinDataBoneData","text":""},{"location":"types/niSkinDataBoneData/#niskindatabonedata","title":"niSkinDataBoneData","text":"<p>This class contains all the information needed to deform vertices by a single bone.</p>"},{"location":"types/niSkinDataBoneData/#properties","title":"Properties","text":""},{"location":"types/niSkinDataBoneData/#bounds","title":"<code>bounds</code>","text":"<p>This bounding volume is used internally by the skinning system to calculate bounding volumes for skinned objects without actually having to calculate the positions of the vertices in the skinned object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niSkinDataBoneData/#rotation","title":"<code>rotation</code>","text":"<p>Defines the rotation of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niSkinDataBoneData/#scale","title":"<code>scale</code>","text":"<p>Defines the scale of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinDataBoneData/#translation","title":"<code>translation</code>","text":"<p>Defines the translation of the bone in bind pose from the skinned object's coordinate system to the bone's coordinate system.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSkinDataBoneData/#weights","title":"<code>weights</code>","text":"<p>Read-only. Contains all the per-vertex weight coefficients used when deforming the verticies influenced by this bone.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinDataBoneDataVertexWeight[])</li> </ul>"},{"location":"types/niSkinDataBoneDataVertexWeight/","title":"niSkinDataBoneDataVertexWeight","text":""},{"location":"types/niSkinDataBoneDataVertexWeight/#niskindatabonedatavertexweight","title":"niSkinDataBoneDataVertexWeight","text":"<p>An instance of <code>niSkinDataBoneDataVertexWeight</code> exists for every vertex that is influenced by a particular bone. This container stores the weight coefficients used for each vertex when deforming skinned objects with this bone.</p>"},{"location":"types/niSkinDataBoneDataVertexWeight/#properties","title":"Properties","text":""},{"location":"types/niSkinDataBoneDataVertexWeight/#index","title":"<code>index</code>","text":"<p>The index of the vertex in the skinned object's array of vertices.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niSkinDataBoneDataVertexWeight/#weight","title":"<code>weight</code>","text":"<p>The weight of the bone's influence on the vertex. The sum of the weights for all the bones that influence a particular vertex must be 1.0.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinInstance/","title":"niSkinInstance","text":""},{"location":"types/niSkinInstance/#niskininstance","title":"niSkinInstance","text":"<p>Contains instance-dependent skinning data for a <code>NiTriShape</code> object.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niSkinInstance/#properties","title":"Properties","text":""},{"location":"types/niSkinInstance/#bones","title":"<code>bones</code>","text":"<p>Read-only. The bone influences for this skin instance.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject[])</li> </ul>"},{"location":"types/niSkinInstance/#data","title":"<code>data</code>","text":"<p>The skinning data. May be shared by multiple skin instances.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinData)</li> </ul>"},{"location":"types/niSkinInstance/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinInstance/#root","title":"<code>root</code>","text":"<p>The skeleton root (parent of the root bone).</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niSkinInstance/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinInstance/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinInstance/#methods","title":"Methods","text":""},{"location":"types/niSkinInstance/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSkinInstance/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinInstance/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinInstance/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSkinPartition/","title":"niSkinPartition","text":""},{"location":"types/niSkinPartition/#niskinpartition","title":"niSkinPartition","text":"<p>A container for skinning data, optimized for hardware skinning. The mesh is partitioned in submeshes such that each vertex of a submesh is influenced only by a limited and fixed number of bones (in Morrowind up to 4 bones can deform a single vertex).</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niSkinPartition/#properties","title":"Properties","text":""},{"location":"types/niSkinPartition/#partitions","title":"<code>partitions</code>","text":"<p>Read-only. Access to the array of actual skin partitions.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinPartitionPartition[], nil)</li> </ul>"},{"location":"types/niSkinPartition/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSkinPartition/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinPartition/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSkinPartition/#methods","title":"Methods","text":""},{"location":"types/niSkinPartition/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSkinPartition/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinPartition/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSkinPartition/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSkinPartitionPartition/","title":"niSkinPartitionPartition","text":""},{"location":"types/niSkinPartitionPartition/#niskinpartitionpartition","title":"niSkinPartitionPartition","text":"<p>Skinning data for a submesh, optimized for hardware skinning.</p>"},{"location":"types/niSkinPartitionPartition/#properties","title":"Properties","text":""},{"location":"types/niSkinPartitionPartition/#bones","title":"<code>bones</code>","text":"<p>Read-only. The list of bone indices (that influence this partition) from the bones array in the parent <code>niSkinInstance</code> node.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niSkinPartitionPartition/#bonespervertex","title":"<code>bonesPerVertex</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niSkinPartitionPartition/#striplengths","title":"<code>stripLengths</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niSkinPartitionPartition/#triangles","title":"<code>triangles</code>","text":"<p>Read-only. The triangles that form this submesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTriangle[])</li> </ul>"},{"location":"types/niSkinPartitionPartition/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. Maps the weight/influence list in this submesh to the vertices in the shape being skinned.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer[])</li> </ul>"},{"location":"types/niSourceTexture/","title":"niSourceTexture","text":""},{"location":"types/niSourceTexture/#nisourcetexture","title":"niSourceTexture","text":"<p>A texture that represent both static and dynamic content, as NiSourceTexture data objects can have their pixel data modified on the fly to implement dynamic texture behavior.</p> <p>This type inherits the following: niTexture, niObjectNET, niObject</p>"},{"location":"types/niSourceTexture/#properties","title":"Properties","text":""},{"location":"types/niSourceTexture/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niSourceTexture/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niSourceTexture/#filename","title":"<code>fileName</code>","text":"<p>Read-only. The platform-independent version of the filename from which the image was created, or nil if the image was created from pixel data.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niSourceTexture/#formatprefs","title":"<code>formatPrefs</code>","text":"<p>The <code>NiFormatPrefs</code> of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFormatPrefs)</li> </ul>"},{"location":"types/niSourceTexture/#height","title":"<code>height</code>","text":"<p>Read-only. The height of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSourceTexture/#isstatic","title":"<code>isStatic</code>","text":"<p>The static flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSourceTexture/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niSourceTexture/#pixeldata","title":"<code>pixelData</code>","text":"<p>The app-level pixel data.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPixelData)</li> </ul>"},{"location":"types/niSourceTexture/#platformfilename","title":"<code>platformFilename</code>","text":"<p>Read-only. The platform-specific version of the filename.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niSourceTexture/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSourceTexture/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSourceTexture/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSourceTexture/#width","title":"<code>width</code>","text":"<p>Read-only. The width of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSourceTexture/#methods","title":"Methods","text":""},{"location":"types/niSourceTexture/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSourceTexture/#clearpixeldata","title":"<code>clearPixelData</code>","text":"<p>Detaches any pixel data associated with this texture. Any render-specific data will be maintained, and remain in the GPU's memory.</p> <pre><code>myObject:clearPixelData()\n</code></pre>"},{"location":"types/niSourceTexture/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSourceTexture/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niSourceTexture/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSourceTexture/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSourceTexture/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSourceTexture/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSourceTexture/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSourceTexture/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSourceTexture/#loadpixeldatafromfile","title":"<code>loadPixelDataFromFile</code>","text":"<p>Loads the file associated with the texture into memory, and makes it accessible from the pixelData property.</p> <pre><code>myObject:loadPixelDataFromFile()\n</code></pre>"},{"location":"types/niSourceTexture/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSourceTexture/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niSourceTexture/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niSourceTexture/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSourceTexture/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSourceTexture/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSourceTexture/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niSourceTexture/#functions","title":"Functions","text":""},{"location":"types/niSourceTexture/#createfrompath","title":"<code>createFromPath</code>","text":"<p>Creates an niSourceTexture from the given filepath.</p> <pre><code>local texture = niSourceTexture.createFromPath(path, useCached)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The filepath of the texture to load.</li> <li><code>useCached</code> (boolean): Default: <code>true</code>. If true, the texture will be stored in the normal texture source cache, so that multiple calls to the same path will return the same object. This behavior can be disabled if necessary.</li> </ul> <p>Returns:</p> <ul> <li><code>texture</code> (niSourceTexture)</li> </ul>"},{"location":"types/niSphericalCollider/","title":"niSphericalCollider","text":""},{"location":"types/niSphericalCollider/#nisphericalcollider","title":"niSphericalCollider","text":"<p>This modifier makes particles bounce off of a sphere.</p> <p>This type inherits the following: niParticleCollider, niParticleModifier, niObject</p>"},{"location":"types/niSphericalCollider/#properties","title":"Properties","text":""},{"location":"types/niSphericalCollider/#collisionpoint","title":"<code>collisionPoint</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSphericalCollider/#collisiontime","title":"<code>collisionTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSphericalCollider/#controller","title":"<code>controller</code>","text":"<p>Access to the generic time controller for particle systems.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleSystemController)</li> </ul>"},{"location":"types/niSphericalCollider/#dieoncollide","title":"<code>dieOnCollide</code>","text":"<p>If this flag is true a particle that collides with something will be destroyed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSphericalCollider/#next","title":"<code>next</code>","text":"<p>Access to the next attached modifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (niParticleModifier)</li> </ul>"},{"location":"types/niSphericalCollider/#position","title":"<code>position</code>","text":"<p>The center of the deflecting sphere.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSphericalCollider/#radius","title":"<code>radius</code>","text":"<p>The radius of the used spherical deflector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSphericalCollider/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSphericalCollider/#restitution","title":"<code>restitution</code>","text":"<p>The fraction of the original amount of energy the particle retains after a collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSphericalCollider/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSphericalCollider/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSphericalCollider/#spawnoncollide","title":"<code>spawnOnCollide</code>","text":"<p>This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSphericalCollider/#methods","title":"Methods","text":""},{"location":"types/niSphericalCollider/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSphericalCollider/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSphericalCollider/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSphericalCollider/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSpotLight/","title":"niSpotLight","text":""},{"location":"types/niSpotLight/#nispotlight","title":"niSpotLight","text":"<p>Represents a spotlight in a scene. The street lights, emmithing the illumination in the cone shape can be represented by this class. Spotlights have a specific location and direction, as well as a distance attenuation and angle attenuation functions. The light direction is handled in the same way as in <code>niDirectionalLight</code> - it shines down the model-space positive X axis of the light.</p> <p>This type inherits the following: niPointLight, niLight, niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niSpotLight/#properties","title":"Properties","text":""},{"location":"types/niSpotLight/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niSpotLight/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#ambient","title":"<code>ambient</code>","text":"<p>The ambient light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niSpotLight/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#constantattenuation","title":"<code>constantAttenuation</code>","text":"<p>The constant attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niSpotLight/#diffuse","title":"<code>diffuse</code>","text":"<p>The diffuse light color.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niSpotLight/#dimmer","title":"<code>dimmer</code>","text":"<p>This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#direction","title":"<code>direction</code>","text":"<p>The direction of the axis of the spotlight cone from the light location in world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSpotLight/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niSpotLight/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#linearattenuation","title":"<code>linearAttenuation</code>","text":"<p>The linear attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niSpotLight/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niSpotLight/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niSpotLight/#quadraticattenuation","title":"<code>quadraticAttenuation</code>","text":"<p>The quadratic attenuation factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niSpotLight/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSpotLight/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSpotLight/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#specular","title":"<code>specular</code>","text":"<p>This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius.</p> <p>In practice, this radius represents the light's influence radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/niSpotLight/#spotangle","title":"<code>spotAngle</code>","text":"<p>The spotlight angle, in degrees. Controls the size of the light's cone.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#spotexponent","title":"<code>spotExponent</code>","text":"<p>The spotlight angular attenuation exponent. This value may be ignored.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSpotLight/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niSpotLight/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSpotLight/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSpotLight/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niSpotLight/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niSpotLight/#methods","title":"Methods","text":""},{"location":"types/niSpotLight/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSpotLight/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niSpotLight/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niSpotLight/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niSpotLight/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSpotLight/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niSpotLight/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niSpotLight/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niSpotLight/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niSpotLight/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niSpotLight/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niSpotLight/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niSpotLight/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSpotLight/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSpotLight/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSpotLight/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSpotLight/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niSpotLight/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niSpotLight/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niSpotLight/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSpotLight/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSpotLight/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSpotLight/#setattenuationforradius","title":"<code>setAttenuationForRadius</code>","text":"<p>Sets the light attenuation values for the given radius. Respects the values in the <code>Morrowind.ini</code> file.</p> <pre><code>myObject:setAttenuationForRadius(radius)\n</code></pre> <p>Parameters:</p> <ul> <li><code>radius</code> (integer)</li> </ul>"},{"location":"types/niSpotLight/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niSpotLight/#setradius","title":"<code>setRadius</code>","text":"<p>Sets both the light's influence radius, and its lighting attenuation to match the radius.</p> <pre><code>myObject:setRadius(radius)\n</code></pre> <p>Parameters:</p> <ul> <li><code>radius</code> (integer)</li> </ul>"},{"location":"types/niSpotLight/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niSpotLight/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niSpotLight/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niSpotLight/#functions","title":"Functions","text":""},{"location":"types/niSpotLight/#new","title":"<code>new</code>","text":"<p>Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0.</p> <pre><code>local light = niPointLight.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>light</code> (niPointLight)</li> </ul>"},{"location":"types/niStencilProperty/","title":"niStencilProperty","text":""},{"location":"types/niStencilProperty/#nistencilproperty","title":"niStencilProperty","text":"<p>A rendering property that controls the use of a stencil buffer when rendering. Stencil buffering allows effects such as cutouts in a screen, decal polygons without Z-buffer \"aliasing\", and advanced effects such as volumetric shadows. It also includes a draw-mode setting to allow the game engine to control the culling mode of a set of geometry.</p> <p>This table describes the actions that can be set to occur as a result of tests for niStencilProperty:</p> Value Mode Description 0 ACTION_KEEP Keep the current value in the stencil buffer. 1 ACTION_ZERO Write zero to the stencil buffer. 2 ACTION_REPLACE Write the reference value to the stencil buffer. 3 ACTION_INCREMENT Increment the value in the stencil buffer. 4 ACTION_DECREMENT Decrement the value in the stencil buffer. 5 ACTION_INVERT Bitwise invert the value in the stencil buffer. <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niStencilProperty/#properties","title":"Properties","text":""},{"location":"types/niStencilProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niStencilProperty/#drawmode","title":"<code>drawMode</code>","text":"<p>The face drawing (culling) mode used to draw the object.</p> Value Mode Behavior 0 DRAW_CCW_OR_BOTH The default mode, chooses between DRAW_CCW or DRAW_BOTH. 1 DRAW_CCW Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). 2 DRAW_CW Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). 3 DRAW_BOTH Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided). <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#enabled","title":"<code>enabled</code>","text":"<p>The value of the stencil buffer enable flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStencilProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niStencilProperty/#failaction","title":"<code>failAction</code>","text":"<p>The action that is taken in the stencil buffer when the stencil test fails. See the table at the top for available actions.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#mask","title":"<code>mask</code>","text":"<p>The mask value of the stencil buffer. This value is AND-ed with the <code>reference</code> and the buffer value prior to comparing and writing the buffer. The default is <code>0xffffffff</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niStencilProperty/#passaction","title":"<code>passAction</code>","text":"<p>The action that is taken in the stencil buffer when the stencil test passes and the pixel passes the Z-buffer test. See the table at the top for available actions.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niStencilProperty/#reference","title":"<code>reference</code>","text":"<p>The stencil reference value. It's compared against the stencil value at an individual pixel to determine the success of the stencil test.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niStencilProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niStencilProperty/#testfunc","title":"<code>testFunc</code>","text":"<p>The stencil buffer test function used to test the reference value against the buffer value.</p> Value Mode Description 0 TEST_NEVER Test will allways return false. Nothing is drawn at all. 1 TEST_LESS The test will only succeed if the pixel is nearer than the previous pixel. 2 TEST_EQUAL Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previous drawn pixel. 3 TEST_LESS_EQUAL Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. 4 TEST_GREATER Opposite of TEST_LESS 5 TEST_NOT_EQUAL Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. 6 TEST_GREATER_EQUAL Opposite of TEST_LESS_EQUAL. 7 TEST_ALWAYS Test will allways succeed. The Stencil Buffer value is ignored. <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#zfailaction","title":"<code>zFailAction</code>","text":"<p>The action that is taken in the stencil buffer when the stencil test passes but the pixel fails the Z-buffer test. See the table at the top for available actions.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niStencilProperty/#methods","title":"Methods","text":""},{"location":"types/niStencilProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niStencilProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niStencilProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niStencilProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niStencilProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niStencilProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStencilProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStencilProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStencilProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStencilProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niStencilProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niStencilProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niStencilProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niStencilProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niStencilProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niStencilProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niStencilProperty/#functions","title":"Functions","text":""},{"location":"types/niStencilProperty/#new","title":"<code>new</code>","text":"<p>Creates a new, niStencilProperty. By default it will use a GREATER test function, KEEP on fail, INCREMENT on pass, and use the CCW_OR_BOTH draw mode.</p> <pre><code>local property = niStencilProperty.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>property</code> (niStencilProperty)</li> </ul>"},{"location":"types/niStringExtraData/","title":"niStringExtraData","text":""},{"location":"types/niStringExtraData/#nistringextradata","title":"niStringExtraData","text":"<p>A simple extra data that contains a string.</p> <p>This type inherits the following: niExtraData, niObject</p>"},{"location":"types/niStringExtraData/#properties","title":"Properties","text":""},{"location":"types/niStringExtraData/#genericdata","title":"<code>genericData</code>","text":"<p>Read-only. Generic data held in the extra data. This is not used if a subtype of extra data is used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niStringExtraData/#next","title":"<code>next</code>","text":"<p>The next extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niStringExtraData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niStringExtraData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niStringExtraData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niStringExtraData/#string","title":"<code>string</code>","text":"<p>The string kept on the niStringExtraData.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niStringExtraData/#methods","title":"Methods","text":""},{"location":"types/niStringExtraData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niStringExtraData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStringExtraData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niStringExtraData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niStringExtraData/#functions","title":"Functions","text":""},{"location":"types/niStringExtraData/#new","title":"<code>new</code>","text":"<p>Creates an niStringExtraData.</p> <pre><code>local extraData = niStringExtraData.new(string)\n</code></pre> <p>Parameters:</p> <ul> <li><code>string</code> (string): The initial value for the extra data to store.</li> </ul> <p>Returns:</p> <ul> <li><code>extraData</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSwitchNode/","title":"niSwitchNode","text":""},{"location":"types/niSwitchNode/#niswitchnode","title":"niSwitchNode","text":"<p>Represents groups of multiple scene graph subtrees, only one of which is visible at any given time. They are useful for showing different states of a model depending on engine / lua logic. If you detach the active subtree, the switch node will set the active subtree to none, or to an index of -1.</p> <p>This type inherits the following: niNode, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niSwitchNode/#properties","title":"Properties","text":""},{"location":"types/niSwitchNode/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#children","title":"<code>children</code>","text":"<p>Read-only. The children of the node. Can have <code>nil</code> entries.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject[])</li> </ul>"},{"location":"types/niSwitchNode/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niSwitchNode/#effectlist","title":"<code>effectList</code>","text":"<p>Read-only. The effect list of the node. Attached effects affect the node and all of its child subtree geometry.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDynamicEffectLinkedList)</li> </ul>"},{"location":"types/niSwitchNode/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niSwitchNode/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSwitchNode/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niSwitchNode/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niSwitchNode/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niSwitchNode/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSwitchNode/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niSwitchNode/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSwitchNode/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niSwitchNode/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSwitchNode/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#switchindex","title":"<code>switchIndex</code>","text":"<p>The value of the active child index. This index represents the index of the active child in the <code>children</code> array of the niSwitchNode. If this index is -1, then no child is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niSwitchNode/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSwitchNode/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSwitchNode/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niSwitchNode/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niSwitchNode/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niSwitchNode/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niSwitchNode/#methods","title":"Methods","text":""},{"location":"types/niSwitchNode/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSwitchNode/#attachchild","title":"<code>attachChild</code>","text":"<p>Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list.</p> <pre><code>myObject:attachChild(child, useFirstAvailable)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> <li><code>useFirstAvailable</code> (boolean): Default: <code>false</code>. Use the first available space in the list. If <code>false</code> appends the child at the end of the list.</li> </ul>"},{"location":"types/niSwitchNode/#attacheffect","title":"<code>attachEffect</code>","text":"<p>Attaches a dynamic effect to the node. It will not attach the same effect twice.</p> <pre><code>myObject:attachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niSwitchNode/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niSwitchNode/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niSwitchNode/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niSwitchNode/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niSwitchNode/#createboundingbox","title":"<code>createBoundingBox</code>","text":"<p>Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated.</p> <pre><code>local boundingBox = myObject:createBoundingBox()\n</code></pre> <p>Returns:</p> <ul> <li><code>boundingBox</code> (tes3boundingBox): The newly created bounding box.</li> </ul>"},{"location":"types/niSwitchNode/#detachallchildren","title":"<code>detachAllChildren</code>","text":"<p>Detaches all children from the children list of the node.</p> <pre><code>myObject:detachAllChildren()\n</code></pre>"},{"location":"types/niSwitchNode/#detachalleffects","title":"<code>detachAllEffects</code>","text":"<p>Detaches all dynamic effect from the effect list of the node.</p> <pre><code>myObject:detachAllEffects()\n</code></pre>"},{"location":"types/niSwitchNode/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niSwitchNode/#detachchild","title":"<code>detachChild</code>","text":"<p>Detaches the child from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChild(child)\n</code></pre> <p>Parameters:</p> <ul> <li><code>child</code> (niAVObject)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niSwitchNode/#detachchildat","title":"<code>detachChildAt</code>","text":"<p>Detaches the child at the specified index from the children list of the node. Returns the detached child.</p> <pre><code>local detachedChild = myObject:detachChildAt(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (integer)</li> </ul> <p>Returns:</p> <ul> <li><code>detachedChild</code> (niAVObject)</li> </ul>"},{"location":"types/niSwitchNode/#detacheffect","title":"<code>detachEffect</code>","text":"<p>Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node.</p> <pre><code>myObject:detachEffect(effect)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effect</code> (niDynamicEffect)</li> </ul>"},{"location":"types/niSwitchNode/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niSwitchNode/#getactivechild","title":"<code>getActiveChild</code>","text":"<p>Gets the active child node, or returns nil if the switch index is -1.</p> <pre><code>local result = myObject:getActiveChild()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niSwitchNode/#geteffect","title":"<code>getEffect</code>","text":"<p>Gets the effect of the given type.</p> <pre><code>local effect = myObject:getEffect(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): Use the values from <code>ni.dynamicEffectType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (niDynamicEffect, nil)</li> </ul>"},{"location":"types/niSwitchNode/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niSwitchNode/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niSwitchNode/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niSwitchNode/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSwitchNode/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niSwitchNode/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niSwitchNode/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSwitchNode/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niSwitchNode/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niSwitchNode/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niSwitchNode/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niSwitchNode/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niSwitchNode/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niSwitchNode/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niSwitchNode/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niSwitchNode/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niSwitchNode/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niSwitchNode/#functions","title":"Functions","text":""},{"location":"types/niSwitchNode/#new","title":"<code>new</code>","text":"<p>Creates a new, empty NiNode.</p> <pre><code>local node = niNode.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>node</code> (niNode)</li> </ul>"},{"location":"types/niTCBFloatKey/","title":"niTCBFloatKey","text":""},{"location":"types/niTCBFloatKey/#nitcbfloatkey","title":"niTCBFloatKey","text":"<p>An animation key for tension-, continuity-, and bias-derived values.</p> <p>This type inherits the following: niFloatKey, niAnimationKey</p>"},{"location":"types/niTCBFloatKey/#properties","title":"Properties","text":""},{"location":"types/niTCBFloatKey/#bias","title":"<code>bias</code>","text":"<p>The bias value for the TCB scale animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBFloatKey/#continuity","title":"<code>continuity</code>","text":"<p>The continuity value for the TCB scale animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBFloatKey/#tension","title":"<code>tension</code>","text":"<p>The tension value for the TCB scale animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBFloatKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBFloatKey/#value","title":"<code>value</code>","text":"<p>The arbitrary value of the NiFloatKey.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBPosKey/","title":"niTCBPosKey","text":""},{"location":"types/niTCBPosKey/#nitcbposkey","title":"niTCBPosKey","text":"<p>An animation key for tension-, continuity-, and bias-derived positioning.</p> <p>This type inherits the following: niPosKey, niAnimationKey</p>"},{"location":"types/niTCBPosKey/#properties","title":"Properties","text":""},{"location":"types/niTCBPosKey/#bias","title":"<code>bias</code>","text":"<p>The bias value for the TCB position animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBPosKey/#continuity","title":"<code>continuity</code>","text":"<p>The continuity value for the TCB position animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBPosKey/#tension","title":"<code>tension</code>","text":"<p>The tension value for the TCB position animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBPosKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBPosKey/#value","title":"<code>value</code>","text":"<p>The position value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTCBRotKey/","title":"niTCBRotKey","text":""},{"location":"types/niTCBRotKey/#nitcbrotkey","title":"niTCBRotKey","text":"<p>An animation key for tension-, continuity-, and bias-derived rotating.</p> <p>This type inherits the following: niRotKey, niAnimationKey</p>"},{"location":"types/niTCBRotKey/#properties","title":"Properties","text":""},{"location":"types/niTCBRotKey/#bias","title":"<code>bias</code>","text":"<p>The bias value for the TCB rotation animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBRotKey/#continuity","title":"<code>continuity</code>","text":"<p>The continuity value for the TCB rotation animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBRotKey/#tension","title":"<code>tension</code>","text":"<p>The tension value for the TCB rotation animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBRotKey/#timing","title":"<code>timing</code>","text":"<p>The timing of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTCBRotKey/#value","title":"<code>value</code>","text":"<p>The rotation value of the animation key.</p> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/niTES3ExtraData/","title":"niTES3ExtraData","text":""},{"location":"types/niTES3ExtraData/#nites3extradata","title":"niTES3ExtraData","text":"<p>A simple extra data that stores a <code>tes3reference</code> object.</p> <p>This type inherits the following: niExtraData, niObject</p>"},{"location":"types/niTES3ExtraData/#properties","title":"Properties","text":""},{"location":"types/niTES3ExtraData/#genericdata","title":"<code>genericData</code>","text":"<p>Read-only. Generic data held in the extra data. This is not used if a subtype of extra data is used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niTES3ExtraData/#next","title":"<code>next</code>","text":"<p>The next extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTES3ExtraData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTES3ExtraData/#reference","title":"<code>reference</code>","text":"<p>The reference stored on this extra data.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/niTES3ExtraData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTES3ExtraData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTES3ExtraData/#methods","title":"Methods","text":""},{"location":"types/niTES3ExtraData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTES3ExtraData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTES3ExtraData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTES3ExtraData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTextKey/","title":"niTextKey","text":""},{"location":"types/niTextKey/#nitextkey","title":"niTextKey","text":"<p>A class used to represent text notes that have an associated time value. They are used for designating the start and stop of animations and the triggering of sounds.</p>"},{"location":"types/niTextKey/#properties","title":"Properties","text":""},{"location":"types/niTextKey/#text","title":"<code>text</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTextKey/#time","title":"<code>time</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextKeyExtraData/","title":"niTextKeyExtraData","text":""},{"location":"types/niTextKeyExtraData/#nitextkeyextradata","title":"niTextKeyExtraData","text":"<p>A class used to store an array of niTextKey objects. These objects are a list of textual notes and at which time they take effect. These keys are used for designating the start and stop of animations and the triggering of sounds.</p> <p>This type inherits the following: niExtraData, niObject</p>"},{"location":"types/niTextKeyExtraData/#properties","title":"Properties","text":""},{"location":"types/niTextKeyExtraData/#genericdata","title":"<code>genericData</code>","text":"<p>Read-only. Generic data held in the extra data. This is not used if a subtype of extra data is used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niTextKeyExtraData/#keys","title":"<code>keys</code>","text":"<p>Read-only. The access to the text key objects stored on this niTextKeyExtraData.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTextKey[])</li> </ul>"},{"location":"types/niTextKeyExtraData/#next","title":"<code>next</code>","text":"<p>The next extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTextKeyExtraData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextKeyExtraData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTextKeyExtraData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTextKeyExtraData/#methods","title":"Methods","text":""},{"location":"types/niTextKeyExtraData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTextKeyExtraData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextKeyExtraData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextKeyExtraData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTexture/","title":"niTexture","text":""},{"location":"types/niTexture/#nitexture","title":"niTexture","text":"<p>Represents all texture objects that are created from a file or a block of in-memory pixel data.</p> <p>This type inherits the following: niObjectNET, niObject</p>"},{"location":"types/niTexture/#properties","title":"Properties","text":""},{"location":"types/niTexture/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTexture/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTexture/#formatprefs","title":"<code>formatPrefs</code>","text":"<p>The <code>NiFormatPrefs</code> of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFormatPrefs)</li> </ul>"},{"location":"types/niTexture/#height","title":"<code>height</code>","text":"<p>Read-only. The height of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTexture/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTexture/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTexture/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTexture/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTexture/#width","title":"<code>width</code>","text":"<p>Read-only. The width of the texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTexture/#methods","title":"Methods","text":""},{"location":"types/niTexture/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTexture/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTexture/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niTexture/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTexture/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTexture/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexture/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexture/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexture/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexture/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTexture/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niTexture/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niTexture/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTexture/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTexture/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTexture/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/","title":"niTextureEffect","text":""},{"location":"types/niTextureEffect/#nitextureeffect","title":"niTextureEffect","text":"<p>Represents an effect that uses projected textures such as projected lights (gobos) and shadows, environment maps, and fog maps. Should be in both the children list and effects list of the niTriShape object.</p> <p>For Morrowind: the bump map can be used to bump the environment map (note that the bump map is ignored if no niTextureEffect object is present).</p> <p>This type inherits the following: niDynamicEffect, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niTextureEffect/#properties","title":"Properties","text":""},{"location":"types/niTextureEffect/#affectednodes","title":"<code>affectedNodes</code>","text":"<p>The list of nodes that a given dynamic effect will affect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNodeLinkedList)</li> </ul>"},{"location":"types/niTextureEffect/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTextureEffect/#enabled","title":"<code>enabled</code>","text":"<p>The enabled state of a given dynamic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTextureEffect/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTextureEffect/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niTextureEffect/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niTextureEffect/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niTextureEffect/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTextureEffect/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTextureEffect/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/#sourcetexture","title":"<code>sourceTexture</code>","text":"<p>The texture used for the texture effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture)</li> </ul>"},{"location":"types/niTextureEffect/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTextureEffect/#type","title":"<code>type</code>","text":"<p>Read-only. The enumerated type of a given dynamic effect. Maps to values in <code>ni.dynamicEffectType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTextureEffect/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTextureEffect/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTextureEffect/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niTextureEffect/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niTextureEffect/#methods","title":"Methods","text":""},{"location":"types/niTextureEffect/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTextureEffect/#attachaffectednode","title":"<code>attachAffectedNode</code>","text":"<p>Adds a node to the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:attachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to add to the affected nodes list.</li> </ul>"},{"location":"types/niTextureEffect/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niTextureEffect/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niTextureEffect/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTextureEffect/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niTextureEffect/#detachaffectednode","title":"<code>detachAffectedNode</code>","text":"<p>Removes a node from the dynamic effect's affected nodes list. The node's <code>:updateEffects()</code> function should be called afterwards to recognize the change.</p> <pre><code>myObject:detachAffectedNode(node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): The node to remove from the affected nodes list.</li> </ul>"},{"location":"types/niTextureEffect/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niTextureEffect/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTextureEffect/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niTextureEffect/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niTextureEffect/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTextureEffect/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTextureEffect/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTextureEffect/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTextureEffect/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTextureEffect/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTextureEffect/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niTextureEffect/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niTextureEffect/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTextureEffect/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTextureEffect/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTextureEffect/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niTextureEffect/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTextureEffect/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niTextureEffect/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niTextureEffect/#functions","title":"Functions","text":""},{"location":"types/niTextureEffect/#new","title":"<code>new</code>","text":"<p>Creates a new texture effect object.</p> <pre><code>local effect = niTextureEffect.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>effect</code> (niTextureEffect)</li> </ul>"},{"location":"types/niTexturingProperty/","title":"niTexturingProperty","text":""},{"location":"types/niTexturingProperty/#nitexturingproperty","title":"niTexturingProperty","text":"<p>A rendering property that controls the methods used to filter texture pixels, and blend texture colors and vertex colors.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niTexturingProperty/#properties","title":"Properties","text":""},{"location":"types/niTexturingProperty/#applymode","title":"<code>applyMode</code>","text":"<p>The texture apply mode. The texture apply mode controls how the vertex colors are blended with the texture color. Maps to values in <code>ni.texturingPropertyApplyMode</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingProperty/#basemap","title":"<code>baseMap</code>","text":"<p>Gets or set the base map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#bumpmap","title":"<code>bumpMap</code>","text":"<p>Gets or set the bump map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#canadddecal","title":"<code>canAddDecal</code>","text":"<p>Read-only. If true, the texturing property supports additional decal maps.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexturingProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTexturingProperty/#darkmap","title":"<code>darkMap</code>","text":"<p>Gets or set the dark map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#decalcount","title":"<code>decalCount</code>","text":"<p>Read-only. The number of decals currently on the texturing property.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingProperty/#detailmap","title":"<code>detailMap</code>","text":"<p>Gets or set the detail map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTexturingProperty/#glossmap","title":"<code>glossMap</code>","text":"<p>Gets or set the gloss map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#glowmap","title":"<code>glowMap</code>","text":"<p>Gets or set the glow map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap, nil)</li> </ul>"},{"location":"types/niTexturingProperty/#maps","title":"<code>maps</code>","text":"<p>Read-only. The maps of texture property. Accessible as an array.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingPropertyMap[])</li> </ul>"},{"location":"types/niTexturingProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTexturingProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTexturingProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTexturingProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTexturingProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingProperty/#methods","title":"Methods","text":""},{"location":"types/niTexturingProperty/#adddecalmap","title":"<code>addDecalMap</code>","text":"<p>Attempts to create a new decal map. If successful, it returns both the new map and the index it was created in.</p> <pre><code>local map, index = myObject:addDecalMap(texture)\n</code></pre> <p>Parameters:</p> <ul> <li><code>texture</code> (niTexture): Optional. The texture to assign to the new decal.</li> </ul> <p>Returns:</p> <ul> <li><code>map</code> (niTexturingPropertyMap, nil): A newly created decal map.</li> <li><code>index</code> (integer, nil): The index of the newly added decal map.</li> </ul>"},{"location":"types/niTexturingProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTexturingProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTexturingProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niTexturingProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTexturingProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTexturingProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexturingProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexturingProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexturingProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTexturingProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTexturingProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niTexturingProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niTexturingProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTexturingProperty/#removedecalmap","title":"<code>removeDecalMap</code>","text":"<p>Attempts to remove a decal at a given index.</p> <pre><code>local removed = myObject:removeDecalMap(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (integer): The index of the decal to remove. The available indices are between <code>ni.texturingPropertyMapType.decalFirst</code> and <code>ni.texturingPropertyMapType.decalLast</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>removed</code> (boolean): True if the decal was removed.</li> </ul>"},{"location":"types/niTexturingProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTexturingProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTexturingProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niTexturingPropertyMap/","title":"niTexturingPropertyMap","text":""},{"location":"types/niTexturingPropertyMap/#nitexturingpropertymap","title":"niTexturingPropertyMap","text":"<p>A combination of a texture, a filter mode, a clamping mode, and an index to a set of texture coordinates.</p>"},{"location":"types/niTexturingPropertyMap/#properties","title":"Properties","text":""},{"location":"types/niTexturingPropertyMap/#clampmode","title":"<code>clampMode</code>","text":"<p>The clamp mode for the Map. Maps to values in <code>ni.texturingPropertyClampMode</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingPropertyMap/#filtermode","title":"<code>filterMode</code>","text":"<p>The filter mode for the Map. Maps to values in <code>ni.texturingPropertyFilterMode</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingPropertyMap/#texcoordset","title":"<code>texCoordSet</code>","text":"<p>The texture coordinate set for the Map.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTexturingPropertyMap/#texture","title":"<code>texture</code>","text":"<p>The texture for the Map.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexture)</li> </ul>"},{"location":"types/niTexturingPropertyMap/#functions","title":"Functions","text":""},{"location":"types/niTexturingPropertyMap/#new","title":"<code>new</code>","text":"<p>Creates a new basic or bump map.</p> <pre><code>local map = niTexturingPropertyMap.new({ texture = ..., clampMode = ..., filterMode = ..., textCoords = ..., isBumpMap = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>texture</code> (niTexture): Optional. If provided, sets the map texture to the given value.</li> <li><code>clampMode</code> (integer): Default: <code>ni.texturingPropertyClampMode.wrapSwrapT</code>. The clamp mode to set the map to use.</li> <li><code>filterMode</code> (integer): Default: <code>ni.texturingPropertyFilterMode.trilerp</code>. The filter mode to set the map to use.</li> <li><code>textCoords</code> (integer): Default: <code>0</code>. The texture coordinates to set the map to use.</li> <li><code>isBumpMap</code> (boolean): Default: <code>false</code>. If true, a bump map will be created instead.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>map</code> (niTexturingPropertyMap): The created basic or bump map.</li> </ul>"},{"location":"types/niTimeController/","title":"niTimeController","text":""},{"location":"types/niTimeController/#nitimecontroller","title":"niTimeController","text":"<p>An abstract base class from which all the animation controllers inherit. It has all the functionality needed to control the timing and update animations.</p> <p>This type inherits the following: niObject</p>"},{"location":"types/niTimeController/#properties","title":"Properties","text":""},{"location":"types/niTimeController/#active","title":"<code>active</code>","text":"<p>If the controller is active. When inactive, the target does not get updated and animation timing does not advance.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTimeController/#animtimingtype","title":"<code>animTimingType</code>","text":"<p>How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation.</p> <p>Maps to values in <code>ni.animType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTimeController/#cycletype","title":"<code>cycleType</code>","text":"<p>The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped.</p> <p>Maps to values in <code>ni.animCycleType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niTimeController/#frequency","title":"<code>frequency</code>","text":"<p>The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#highkeyframe","title":"<code>highKeyFrame</code>","text":"<p>This is the end animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#lastscaledtime","title":"<code>lastScaledTime</code>","text":"<p>This function returns the last scaled time computed by this controller. The scaled time takes the <code>frequency</code> and <code>phase</code> into account, along with the <code>cycleType</code> and <code>animTimingType</code>. This is the last value used to interpolate animation keys.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#lasttime","title":"<code>lastTime</code>","text":"<p>No description.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#lowkeyframe","title":"<code>lowKeyFrame</code>","text":"<p>This is the beginning animation key time of the animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#nextcontroller","title":"<code>nextController</code>","text":"<p>The next animation controller in the list of controllers containing the calling controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTimeController/#phase","title":"<code>phase</code>","text":"<p>The phase value. It is an offset applied to the animation's update time, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTimeController/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTimeController/#starttime","title":"<code>startTime</code>","text":"<p>The time at which the animation controller starts playing its animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTimeController/#target","title":"<code>target</code>","text":"<p>Read-only. The scene graph object that this animation controller is to animate.</p> <p>Returns:</p> <ul> <li><code>result</code> (niObjectNET)</li> </ul>"},{"location":"types/niTimeController/#methods","title":"Methods","text":""},{"location":"types/niTimeController/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTimeController/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTimeController/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTimeController/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTimeController/#settarget","title":"<code>setTarget</code>","text":"<p>This method assigns a new target to the animation controller.</p> <pre><code>myObject:setTarget(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (niObjectNET): The new target to assign.</li> </ul>"},{"location":"types/niTimeController/#start","title":"<code>start</code>","text":"<p>Starts the controller at the specified time. Intended for controllers with <code>animTimingType</code> of 1.</p> <pre><code>myObject:start(time)\n</code></pre> <p>Parameters:</p> <ul> <li><code>time</code> (number)</li> </ul>"},{"location":"types/niTimeController/#stop","title":"<code>stop</code>","text":"<p>Stops the controller. If you only want to pause the controller, use the <code>update</code> property.</p> <pre><code>myObject:stop()\n</code></pre>"},{"location":"types/niTriBasedGeometry/","title":"niTriBasedGeometry","text":""},{"location":"types/niTriBasedGeometry/#nitribasedgeometry","title":"niTriBasedGeometry","text":"<p>Base class for all geometry that uses triangles.</p> <p>This type inherits the following: niGeometry, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niTriBasedGeometry/#properties","title":"Properties","text":""},{"location":"types/niTriBasedGeometry/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTriBasedGeometry/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTriBasedGeometry/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometry/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTriBasedGeometry/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niTriBasedGeometry/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niTriBasedGeometry/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometry/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niTriBasedGeometry/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriBasedGeometry/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriBasedGeometry/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometry/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriBasedGeometry/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriBasedGeometry/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriBasedGeometry/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometry/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niTriBasedGeometry/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niTriBasedGeometry/#methods","title":"Methods","text":""},{"location":"types/niTriBasedGeometry/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTriBasedGeometry/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niTriBasedGeometry/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niTriBasedGeometry/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTriBasedGeometry/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niTriBasedGeometry/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niTriBasedGeometry/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTriBasedGeometry/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niTriBasedGeometry/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niTriBasedGeometry/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTriBasedGeometry/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTriBasedGeometry/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTriBasedGeometry/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometry/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTriBasedGeometry/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTriBasedGeometry/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niTriBasedGeometry/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niTriBasedGeometry/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTriBasedGeometry/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTriBasedGeometry/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTriBasedGeometry/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometry/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTriBasedGeometry/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niTriBasedGeometry/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niTriBasedGeometryData/","title":"niTriBasedGeometryData","text":""},{"location":"types/niTriBasedGeometryData/#nitribasedgeometrydata","title":"niTriBasedGeometryData","text":"<p>Contains the actual geometry data for a <code>NiTriBasedGeometry</code> object.</p> <p>This type inherits the following: niGeometryData, niObject</p>"},{"location":"types/niTriBasedGeometryData/#properties","title":"Properties","text":""},{"location":"types/niTriBasedGeometryData/#activetrianglecount","title":"<code>activeTriangleCount</code>","text":"<p>The active triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#bounds","title":"<code>bounds</code>","text":"<p>The model-space bounding sphere of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#colors","title":"<code>colors</code>","text":"<p>Read-only. The vertex colors for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor[])</li> </ul>"},{"location":"types/niTriBasedGeometryData/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriBasedGeometryData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#texcoords","title":"<code>texCoords</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niTriBasedGeometryData/#textures","title":"<code>textures</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niTriBasedGeometryData/#texturesets","title":"<code>textureSets</code>","text":"<p>The number of texture coordinate sets in the data.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#trianglecount","title":"<code>triangleCount</code>","text":"<p>Read-only. The triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#uniqueid","title":"<code>uniqueID</code>","text":"<p>Read-only. A unique ID for this model, assigned at model creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#vertexcount","title":"<code>vertexCount</code>","text":"<p>Read-only. The vertex count for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriBasedGeometryData/#methods","title":"Methods","text":""},{"location":"types/niTriBasedGeometryData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriBasedGeometryData/#markaschanged","title":"<code>markAsChanged</code>","text":"<p>Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data.</p> <p>If you have altered vertex positions, you may need to also call <code>updateModelBound</code>_. You should call it if vertices have been moved outside the bounds of the original model.</p> <pre><code>myObject:markAsChanged()\n</code></pre>"},{"location":"types/niTriBasedGeometryData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTriBasedGeometryData/#updatemodelbound","title":"<code>updateModelBound</code>","text":"<p>Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. </p> <p>If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function.</p> <pre><code>myObject:updateModelBound()\n</code></pre>"},{"location":"types/niTriShape/","title":"niTriShape","text":""},{"location":"types/niTriShape/#nitrishape","title":"niTriShape","text":"<p>An object that allows the sharing of vertices between triangles to create shapes.</p> <p>This type inherits the following: niTriBasedGeometry, niGeometry, niAVObject, niObjectNET, niObject</p>"},{"location":"types/niTriShape/#properties","title":"Properties","text":""},{"location":"types/niTriShape/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#appculled","title":"<code>appCulled</code>","text":"<p>A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niTriShape/#data","title":"<code>data</code>","text":"<p>The NiTriShapeData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTriShapeData)</li> </ul>"},{"location":"types/niTriShape/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niTriShape/#flags","title":"<code>flags</code>","text":"<p>Flags, dependent on the specific object type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShape/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#materialproperty","title":"<code>materialProperty</code>","text":"<p>Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niTriShape/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to the vertex count.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriShape/#parent","title":"<code>parent</code>","text":"<p>Read-only. The object's parent. It may not have one if it is not attached to the scene.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/niTriShape/#properties_1","title":"<code>properties</code>","text":"<p>Read-only. The list of properties attached to this <code>niAVObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPropertyLinkedList)</li> </ul>"},{"location":"types/niTriShape/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShape/#rotation","title":"<code>rotation</code>","text":"<p>The object's local rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/niTriShape/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriShape/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriShape/#scale","title":"<code>scale</code>","text":"<p>The object's local uniform scaling factor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShape/#skininstance","title":"<code>skinInstance</code>","text":"<p>The skinInstance of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSkinInstance)</li> </ul>"},{"location":"types/niTriShape/#stencilproperty","title":"<code>stencilProperty</code>","text":"<p>Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niStencilProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#texturingproperty","title":"<code>texturingProperty</code>","text":"<p>Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#translation","title":"<code>translation</code>","text":"<p>The object's local translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriShape/#velocity","title":"<code>velocity</code>","text":"<p>The object's local velocity.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriShape/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to vertex count.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriShape/#worldboundorigin","title":"<code>worldBoundOrigin</code>","text":"<p>The world coordinates of the object's bounds origin.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/niTriShape/#worldboundradius","title":"<code>worldBoundRadius</code>","text":"<p>The radius of the object's bounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShape/#worldtransform","title":"<code>worldTransform</code>","text":"<p>The object's transformations in the world space.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/niTriShape/#zbufferproperty","title":"<code>zBufferProperty</code>","text":"<p>Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it.</p> <p>Returns:</p> <ul> <li><code>result</code> (niZBufferProperty, nil)</li> </ul>"},{"location":"types/niTriShape/#methods","title":"Methods","text":""},{"location":"types/niTriShape/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTriShape/#attachproperty","title":"<code>attachProperty</code>","text":"<p>Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result.</p> <pre><code>myObject:attachProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (niProperty)</li> </ul>"},{"location":"types/niTriShape/#cleartransforms","title":"<code>clearTransforms</code>","text":"<p>Resets the object's local transform.</p> <pre><code>myObject:clearTransforms()\n</code></pre>"},{"location":"types/niTriShape/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTriShape/#copytransforms","title":"<code>copyTransforms</code>","text":"<p>Update object's local transform by copying from another source.</p> <pre><code>myObject:copyTransforms(source)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (niAVObject, tes3transform)</li> </ul>"},{"location":"types/niTriShape/#createboundingbox","title":"<code>createBoundingBox</code>","text":"<p>Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated.</p> <pre><code>local boundingBox = myObject:createBoundingBox()\n</code></pre> <p>Returns:</p> <ul> <li><code>boundingBox</code> (tes3boundingBox): The newly created bounding box.</li> </ul>"},{"location":"types/niTriShape/#detachallproperties","title":"<code>detachAllProperties</code>","text":"<p>Detaches all the properties on the object and returns them in the table.</p> <pre><code>local result = myObject:detachAllProperties()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niProperty[])</li> </ul>"},{"location":"types/niTriShape/#detachproperty","title":"<code>detachProperty</code>","text":"<p>Detaches and returns a property from the object which matches the given property type.</p> <pre><code>local result = myObject:detachProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTriShape/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niTriShape/#getobjectbyname","title":"<code>getObjectByName</code>","text":"<p>Searches this node and all child nodes recursively for a node with a name that matches the argument.</p> <pre><code>local result = myObject:getObjectByName(name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>name</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/niTriShape/#getproperty","title":"<code>getProperty</code>","text":"<p>Gets an attached property by property type.</p> <pre><code>local result = myObject:getProperty(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (integer): The types are available in <code>ni.propertyType</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/niTriShape/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTriShape/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niTriShape/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#isappculled","title":"<code>isAppCulled</code>","text":"<p>Recursively checks if either the object or any of its parents are appCulled.</p> <pre><code>local result = myObject:isAppCulled()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#isfrustumculled","title":"<code>isFrustumCulled</code>","text":"<p>Checks if the object is frustum culled for the given camera.</p> <pre><code>local result = myObject:isFrustumCulled(camera)\n</code></pre> <p>Parameters:</p> <ul> <li><code>camera</code> (niCamera)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShape/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTriShape/#propagatepositionchange","title":"<code>propagatePositionChange</code>","text":"<p>Alias for <code>update()</code> method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Tip</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:propagatePositionChange({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTriShape/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niTriShape/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niTriShape/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niTriShape/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niTriShape/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTriShape/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niTriShape/#update","title":"<code>update</code>","text":"<p>Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes.</p> <p>Update Efficiency</p> <p>It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph.</p> <pre><code>myObject:update({ time = ..., controllers = ..., bounds = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>args</code> (table): Optional.<ul> <li><code>time</code> (number): Default: <code>0</code>. This parameter is the time-slice for transformation and bounds updates</li> <li><code>controllers</code> (boolean): Default: <code>false</code>. Update object's controllers?</li> <li><code>bounds</code> (boolean): Default: <code>true</code>. Update object's bounds?</li> </ul> </li> </ul>"},{"location":"types/niTriShape/#updateeffects","title":"<code>updateEffects</code>","text":"<p>Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it</p> <pre><code>myObject:updateEffects()\n</code></pre>"},{"location":"types/niTriShape/#updateproperties","title":"<code>updateProperties</code>","text":"<p>Update all attached properties.</p> <pre><code>myObject:updateProperties()\n</code></pre>"},{"location":"types/niTriShapeData/","title":"niTriShapeData","text":""},{"location":"types/niTriShapeData/#nitrishapedata","title":"niTriShapeData","text":"<p>Contains the geometry data for an <code>NiTriShape</code> object.</p> <p>This type inherits the following: niTriBasedGeometryData, niGeometryData, niObject</p>"},{"location":"types/niTriShapeData/#properties","title":"Properties","text":""},{"location":"types/niTriShapeData/#activetrianglecount","title":"<code>activeTriangleCount</code>","text":"<p>The active triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#bounds","title":"<code>bounds</code>","text":"<p>The model-space bounding sphere of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niBound)</li> </ul>"},{"location":"types/niTriShapeData/#colors","title":"<code>colors</code>","text":"<p>Read-only. The vertex colors for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor[])</li> </ul>"},{"location":"types/niTriShapeData/#normals","title":"<code>normals</code>","text":"<p>Read-only. The list of unitized, model-space vertex normals for the object. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriShapeData/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriShapeData/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niTriShapeData/#texcoords","title":"<code>texCoords</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niTriShapeData/#textures","title":"<code>textures</code>","text":"<p>Read-only. The array of texture coordinates. The length of the array is equal to <code>vertexCount</code> times <code>textureSets</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2[])</li> </ul>"},{"location":"types/niTriShapeData/#texturesets","title":"<code>textureSets</code>","text":"<p>The number of texture coordinate sets in the data.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#trianglecount","title":"<code>triangleCount</code>","text":"<p>Read-only. The triangle count of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#triangles","title":"<code>triangles</code>","text":"<p>The access to the triangles of the object. The length of the array is equal to the number of active triangles.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTriangle[])</li> </ul>"},{"location":"types/niTriShapeData/#uniqueid","title":"<code>uniqueID</code>","text":"<p>Read-only. A unique ID for this model, assigned at model creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#vertexcount","title":"<code>vertexCount</code>","text":"<p>Read-only. The vertex count for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niTriShapeData/#vertices","title":"<code>vertices</code>","text":"<p>Read-only. The array of vertex position data. The length of the array is equal to <code>vertexCount</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/niTriShapeData/#methods","title":"Methods","text":""},{"location":"types/niTriShapeData/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niTriShapeData/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the data. An optional table of filters can be passed to remove information from the copy.</p> <pre><code>local copiedData = myObject:copy({ normals = ..., colors = ..., texCoords = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>filters</code> (table): Optional.<ul> <li><code>normals</code> (boolean): Default: <code>true</code>. If false, the geometry data's normals will be absent from the copy.</li> <li><code>colors</code> (boolean): Default: <code>true</code>. If false, the geometry data's colors will be absent from the copy.</li> <li><code>texCoords</code> (boolean): Default: <code>true</code>. If false, the geometry data's texture coordinates will be absent from the copy.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>copiedData</code> (niTriShapeData): The duplicated data.</li> </ul>"},{"location":"types/niTriShapeData/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShapeData/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niTriShapeData/#markaschanged","title":"<code>markAsChanged</code>","text":"<p>Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data.</p> <p>If you have altered vertex positions, you may need to also call <code>updateModelBound</code>_. You should call it if vertices have been moved outside the bounds of the original model.</p> <pre><code>myObject:markAsChanged()\n</code></pre>"},{"location":"types/niTriShapeData/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niTriShapeData/#updatemodelbound","title":"<code>updateModelBound</code>","text":"<p>Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. </p> <p>If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function.</p> <pre><code>myObject:updateModelBound()\n</code></pre>"},{"location":"types/niTriangle/","title":"niTriangle","text":""},{"location":"types/niTriangle/#nitriangle","title":"niTriangle","text":"<p>Contains the geometry data for an <code>NiTriShape</code> object.</p>"},{"location":"types/niTriangle/#properties","title":"Properties","text":""},{"location":"types/niTriangle/#verticies","title":"<code>verticies</code>","text":"<p>The access to the three indices of the verticies that make up this triangle (0-indexed).</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/niVertexColorProperty/","title":"niVertexColorProperty","text":""},{"location":"types/niVertexColorProperty/#nivertexcolorproperty","title":"niVertexColorProperty","text":"<p>A rendering property that allows the application to control the method used to compute colors for each vertex in a geometry object. This class enables effects such as static pre-lighting, dynamic lighting, etc.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niVertexColorProperty/#properties","title":"Properties","text":""},{"location":"types/niVertexColorProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niVertexColorProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niVertexColorProperty/#lighting","title":"<code>lighting</code>","text":"<p>Describes how vertex colors influence lighting. Maps to values in <code>ni.lightingMode</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niVertexColorProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niVertexColorProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niVertexColorProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niVertexColorProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niVertexColorProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niVertexColorProperty/#source","title":"<code>source</code>","text":"<p>Determines how vertex and material colors are mixed on subclasses of niAVObject. Maps to values in <code>ni.sourceVertexModes</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niVertexColorProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niVertexColorProperty/#methods","title":"Methods","text":""},{"location":"types/niVertexColorProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niVertexColorProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niVertexColorProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niVertexColorProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niVertexColorProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niVertexColorProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niVertexColorProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niVertexColorProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niVertexColorProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niVertexColorProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niVertexColorProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niVertexColorProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niVertexColorProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niVertexColorProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niVertexColorProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niVertexColorProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niVertexColorProperty/#functions","title":"Functions","text":""},{"location":"types/niVertexColorProperty/#new","title":"<code>new</code>","text":"<p>Creates a new niVertexColorProperty with <code>lighting</code> set to <code>ni.lightingMode.emiAmbDif</code> and <code>source</code> set to <code>ni.sourceVertexMode.ignore</code>.</p> <pre><code>local property = niVertexColorProperty.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>property</code> (niVertexColorProperty)</li> </ul>"},{"location":"types/niZBufferProperty/","title":"niZBufferProperty","text":""},{"location":"types/niZBufferProperty/#nizbufferproperty","title":"niZBufferProperty","text":"<p>A rendering property that allows the application to set the test and write modes of the renderer's Z-buffer and to set the comparison function used for the Z-buffer test.</p> <p>This type inherits the following: niProperty, niObjectNET, niObject</p>"},{"location":"types/niZBufferProperty/#properties","title":"Properties","text":""},{"location":"types/niZBufferProperty/#controller","title":"<code>controller</code>","text":"<p>Read-only. The first controller available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTimeController)</li> </ul>"},{"location":"types/niZBufferProperty/#extradata","title":"<code>extraData</code>","text":"<p>Read-only. The first extra data available on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niExtraData)</li> </ul>"},{"location":"types/niZBufferProperty/#name","title":"<code>name</code>","text":"<p>The human-facing name of the given object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/niZBufferProperty/#propertyflags","title":"<code>propertyFlags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niZBufferProperty/#refcount","title":"<code>refCount</code>","text":"<p>Read-only. The number of references that exist for this object. When this value reaches zero, the object will be deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/niZBufferProperty/#rtti","title":"<code>RTTI</code>","text":"<p>Read-only. The runtime type information for this object. This is an alias for the <code>.runTimeTypeInformation</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niZBufferProperty/#runtimetypeinformation","title":"<code>runTimeTypeInformation</code>","text":"<p>Read-only. The runtime type information for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRTTI)</li> </ul>"},{"location":"types/niZBufferProperty/#testfunction","title":"<code>testFunction</code>","text":"<p>The Z-buffer test function used. Maps to values in <code>ni.zBufferPropertyTestFunction</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niZBufferProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The unique class identifier number of the given rendering property. The types are available in <code>ni.propertyType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/niZBufferProperty/#methods","title":"Methods","text":""},{"location":"types/niZBufferProperty/#addextradata","title":"<code>addExtraData</code>","text":"<p>Appends an extra data to the object.</p> <pre><code>myObject:addExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niZBufferProperty/#clone","title":"<code>clone</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niObject)</li> </ul>"},{"location":"types/niZBufferProperty/#getgamereference","title":"<code>getGameReference</code>","text":"<p>Searches for an niExtraData on this object to see if it has one that holds a related reference.</p> <pre><code>local reference = myObject:getGameReference(searchParents)\n</code></pre> <p>Parameters:</p> <ul> <li><code>searchParents</code> (boolean): Default: <code>false</code>. If true, all parent objects (if applicable) are also searched.</li> </ul> <p>Returns:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/niZBufferProperty/#getstringdatastartingwith","title":"<code>getStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument.</p> <pre><code>local extra = myObject:getStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData starting with this value will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niZBufferProperty/#getstringdatawith","title":"<code>getStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided <code>value</code> argument in its string field.</p> <pre><code>local extra = myObject:getStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The first niStringExtraData with this word will be returned.</li> </ul> <p>Returns:</p> <ul> <li><code>extra</code> (niStringExtraData)</li> </ul>"},{"location":"types/niZBufferProperty/#hasstringdatastartingwith","title":"<code>hasStringDataStartingWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided <code>value</code> argument. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataStartingWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niZBufferProperty/#hasstringdatawith","title":"<code>hasStringDataWith</code>","text":"<p>Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided <code>value</code> argument in its string field. Returns true if the value was found.</p> <pre><code>local result = myObject:hasStringDataWith(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (string): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niZBufferProperty/#isinstanceoftype","title":"<code>isInstanceOfType</code>","text":"<p>Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isInstanceOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niZBufferProperty/#isoftype","title":"<code>isOfType</code>","text":"<p>Determines if the object is of a given type. Types can be found in the <code>ni.type</code> table.</p> <pre><code>local result = myObject:isOfType(type)\n</code></pre> <p>Parameters:</p> <ul> <li><code>type</code> (number): Use values in the <code>ni.type</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/niZBufferProperty/#prependcontroller","title":"<code>prependController</code>","text":"<p>Add a controller to the object as the first controller.</p> <pre><code>myObject:prependController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niZBufferProperty/#removeallcontrollers","title":"<code>removeAllControllers</code>","text":"<p>Removes all controllers.</p> <pre><code>myObject:removeAllControllers()\n</code></pre>"},{"location":"types/niZBufferProperty/#removeallextradata","title":"<code>removeAllExtraData</code>","text":"<p>Removes all extra data.</p> <pre><code>myObject:removeAllExtraData()\n</code></pre>"},{"location":"types/niZBufferProperty/#removecontroller","title":"<code>removeController</code>","text":"<p>Removes a controller from the object.</p> <pre><code>myObject:removeController(controller)\n</code></pre> <p>Parameters:</p> <ul> <li><code>controller</code> (niTimeController)</li> </ul>"},{"location":"types/niZBufferProperty/#removeextradata","title":"<code>removeExtraData</code>","text":"<p>Removes a specific extra data from the object.</p> <pre><code>myObject:removeExtraData(extraData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>extraData</code> (niExtraData)</li> </ul>"},{"location":"types/niZBufferProperty/#savebinary","title":"<code>saveBinary</code>","text":"<p>Serializes the object, and writes it to the given file.</p> <pre><code>local success = myObject:saveBinary(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to write the file at, relative to the Morrowind installation folder.</li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If true the object was successfully serialized.</li> </ul>"},{"location":"types/niZBufferProperty/#setflag","title":"<code>setFlag</code>","text":"<p>Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type.</p> <pre><code>myObject:setFlag(state, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>state</code> (boolean)</li> <li><code>index</code> (number)</li> </ul>"},{"location":"types/niZBufferProperty/#functions","title":"Functions","text":""},{"location":"types/niZBufferProperty/#new","title":"<code>new</code>","text":"<p>Creates a new niZBufferProperty with <code>testFunction</code> set to <code>ni.zBufferPropertyTestFunction.lessEqual</code>.</p> <pre><code>local property = niZBufferProperty.new()\n</code></pre> <p>Returns:</p> <ul> <li><code>property</code> (niZBufferProperty)</li> </ul>"},{"location":"types/pattern/","title":"Pattern","text":""},{"location":"types/pattern/#pattern","title":"pattern","text":"<p>This represents a Lpeg pattern.</p>"},{"location":"types/tes3actionData/","title":"tes3actionData","text":""},{"location":"types/tes3actionData/#tes3actiondata","title":"tes3actionData","text":"<p>A substructure of mobile actors that provides information about the current or previous action.</p>"},{"location":"types/tes3actionData/#properties","title":"Properties","text":""},{"location":"types/tes3actionData/#aibehaviorstate","title":"<code>aiBehaviorState</code>","text":"<p>The behavior state of the tes3actionData. This maps to values in <code>tes3.aiBehaviorState</code> namespace.</p> Value Behavior -1 Undecided 0 Hello 2 Idle 3 Attack 4 Avoid 6 Flee 8 Walk 12 Greet <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#animationattackstate","title":"<code>animationAttackState</code>","text":"<p>The actor's animation state. Maps to values in <code>tes3.animationState</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#attackswing","title":"<code>attackSwing</code>","text":"<p>When attacking, this value represents how much the weapon has been pulled back. The value ranges from [0.0 - 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#currentanimationgroup","title":"<code>currentAnimationGroup</code>","text":"<p>Actor's current animation group. Maps to values in <code>tes3.animationGroup</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#hittarget","title":"<code>hitTarget</code>","text":"<p>The actor's attack target. The target will be saved in <code>hitTarget</code> field until a new attack is made. Missing an attack will clear <code>hitTarget</code> field.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor, nil)</li> </ul>"},{"location":"types/tes3actionData/#lastbarterhourspassed","title":"<code>lastBarterHoursPassed</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#nockedprojectile","title":"<code>nockedProjectile</code>","text":"<p>The currently nocked projectile the associated actor is using. It is available while charging a projectile attack, before releasing the projectile. This can be modified, but can only be set to nil, which will remove the projectile without consuming ammo.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileProjectile)</li> </ul>"},{"location":"types/tes3actionData/#physicalattacktype","title":"<code>physicalAttackType</code>","text":"<p>A number from the <code>tes3.physicalAttackType</code> enumeration identifying the physical attack type. Can be <code>tes3.physicalAttackType.slash</code>, <code>.chop</code>, <code>.thrust</code>, <code>.projectile</code>, <code>.creature1</code>, <code>.creature2</code>, or <code>.creature3.</code></p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#physicaldamage","title":"<code>physicalDamage</code>","text":"<p>When attacking, this is the value of the weapon damage that was rolled. This value takes into account the actor's strength, attack swing and weapon condition, but it doesn't include difficulty nor target's armor. This value is updated on an attack. After the attack this value will still contain the damage rolled. It will be refreshed on a new attack.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actionData/#stolenfrom","title":"<code>stolenFrom</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3actionData/#target","title":"<code>target</code>","text":"<p>The actor's attack target, stored until the actor attacks successfully again. In contrast to <code>hitTarget</code>, <code>target</code> property isn't cleared on missed attack.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor, nil)</li> </ul>"},{"location":"types/tes3actionData/#walkdestination","title":"<code>walkDestination</code>","text":"<p>If moving to a location, this is the position to be walked to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3activator/","title":"Tes3activator","text":""},{"location":"types/tes3activator/#tes3activator","title":"tes3activator","text":"<p>An activator game object.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3activator/#properties","title":"Properties","text":""},{"location":"types/tes3activator/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3activator/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3activator/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3activator/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3activator/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3activator/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3activator/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3activator/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3activator/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3activator/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3activator/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3activator/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3activator/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3activator/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3activator/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3activator/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activator/#methods","title":"Methods","text":""},{"location":"types/tes3activator/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3activator/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3activator)</li> </ul>"},{"location":"types/tes3activeMagicEffect/","title":"tes3activeMagicEffect","text":""},{"location":"types/tes3activeMagicEffect/#tes3activemagiceffect","title":"tes3activeMagicEffect","text":"<p>An active magic effect.</p>"},{"location":"types/tes3activeMagicEffect/#properties","title":"Properties","text":""},{"location":"types/tes3activeMagicEffect/#attributeid","title":"<code>attributeId</code>","text":"<p>Read-only. The attribute ID (note that this may be the skill ID if the effect affects skills, since <code>attributeId</code> and <code>skillId</code> properties are set to the same value by the engine). Maps to values from <code>tes3.attribute</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#duration","title":"<code>duration</code>","text":"<p>Read-only. The total duration of this specific effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#effectid","title":"<code>effectId</code>","text":"<p>Read-only. The magic effect ID. Maps to values from <code>tes3.effect</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#effectindex","title":"<code>effectIndex</code>","text":"<p>Read-only. The index of the effect inside the magic source instance.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#effectinstance","title":"<code>effectInstance</code>","text":"<p>Read-only. The magic effect instance for this effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicEffectInstance)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#harmful","title":"<code>harmful</code>","text":"<p>Read-only. This flag that determines if this effect is counted as a hostile action.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#instance","title":"<code>instance</code>","text":"<p>Read-only. The magic source instance for this effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#isbounditem","title":"<code>isBoundItem</code>","text":"<p>Read-only. If this effect has summoned a bound item.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#isillegalsummon","title":"<code>isIllegalSummon</code>","text":"<p>Read-only. If this effect has summoned a creature that has been declared illegal to summon. This is an otherwise unused flag in the game that is set for daedra and undead summon magic effects, but not for any other summon creature magic effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#issummon","title":"<code>isSummon</code>","text":"<p>Read-only. If this effect has summoned a creature.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#magnitude","title":"<code>magnitude</code>","text":"<p>Read-only. The unresisted magnitude of the magic effect, that is the magnitude before resistance attributes are applied. To find the actual effective magnitude after resistances are applied, you must check the magic effect instance.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#magnitudemin","title":"<code>magnitudeMin</code>","text":"<p>Read-only. Deprecated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. The mobile affected by the magic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileCreature, tes3mobileNPC, tes3mobilePlayer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#next","title":"<code>next</code>","text":"<p>Read-only. Deprecated.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#previous","title":"<code>previous</code>","text":"<p>Read-only. Deprecated.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#serial","title":"<code>serial</code>","text":"<p>Read-only. The magic source instance serial number. See the <code>instance</code> and <code>effectInstance</code> properties to easily access the magic and effect instances.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3activeMagicEffect/#skillid","title":"<code>skillId</code>","text":"<p>Read-only. The skill ID (note that this may be the attribute ID if the effect affects attributes, since <code>attributeId</code> and <code>skillId</code> properties are set to the same value by the engine). Maps to values in <code>tes3.skill</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actor/","title":"Tes3actor","text":""},{"location":"types/tes3actor/#tes3actor","title":"tes3actor","text":"<p>An Actor (not to be confused with a Mobile Actor) is an object that can be cloned and that has an inventory. Creatures, NPCs, and containers are all considered actors.</p> <p>It is standard for creatures and NPCs to be composed of an actor and a mobile actor, linked together with a reference.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3actor/#properties","title":"Properties","text":""},{"location":"types/tes3actor/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actor/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3actor/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3actor/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3actor/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3actor/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3actor/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3actor/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3actor/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actor/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3actor/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3actor/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3actor/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3actor/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#methods","title":"Methods","text":""},{"location":"types/tes3actor/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3actor/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actor/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3actor/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3actorAnimationController/","title":"tes3actorAnimationController","text":""},{"location":"types/tes3actorAnimationController/#tes3actoranimationcontroller","title":"tes3actorAnimationController","text":"<p>Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated.</p>"},{"location":"types/tes3actorAnimationController/#properties","title":"Properties","text":""},{"location":"types/tes3actorAnimationController/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>The alpha property applied to the actor. Controls the opacity/opaqueness of the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty)</li> </ul>"},{"location":"types/tes3actorAnimationController/#animationdata","title":"<code>animationData</code>","text":"<p>Access to the actor's animation data.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3animationData)</li> </ul>"},{"location":"types/tes3actorAnimationController/#animgroupidle","title":"<code>animGroupIdle</code>","text":"<p>The actor's idle animation. Maps to values in <code>tes3.animationGroup</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actorAnimationController/#animgroupidle2","title":"<code>animGroupIdle2</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actorAnimationController/#animgroupmovement","title":"<code>animGroupMovement</code>","text":"<p>The actor's movement animations group. Maps to values in <code>tes3.animationGroup</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actorAnimationController/#attachtiming","title":"<code>attachTiming</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#attackfollowtiming","title":"<code>attackFollowTiming</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#groundplanerotation","title":"<code>groundPlaneRotation</code>","text":"<p>The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3actorAnimationController/#hittiming","title":"<code>hitTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code>, played during the hit phase for fully charged attack. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#materialproperty","title":"<code>materialProperty</code>","text":"<p>The material property applied to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty)</li> </ul>"},{"location":"types/tes3actorAnimationController/#maxattacktiming","title":"<code>maxAttackTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code> file, when the attack animation is fully charged. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#minattacktiming","title":"<code>minAttackTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code> file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#minhittiming","title":"<code>minHitTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code>, played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. The mobile actor that this controller is responsible for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3actorAnimationController/#patchedoverridestate","title":"<code>patchedOverrideState</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actorAnimationController/#remainingblocktime","title":"<code>remainingBlockTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#shouldjump","title":"<code>shouldJump</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3actorAnimationController/#speedmultiplier","title":"<code>speedMultiplier</code>","text":"<p>This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#starttime","title":"<code>startTime</code>","text":"<p>This it the starting time of the actor's attack animation in their <code>.kf</code> file. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#strikewhenattackswingreaches","title":"<code>strikeWhenAttackSwingReaches</code>","text":"<p>For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>The vertex color property applied to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty)</li> </ul>"},{"location":"types/tes3actorAnimationController/#verticalrotation","title":"<code>verticalRotation</code>","text":"<p>Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3actorAnimationController/#weaponspeed","title":"<code>weaponSpeed</code>","text":"<p>The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed.</p> <p>Use by getting the animation controller from the mobile. e.g. <code>mobile.animationController.weaponSpeed = 0.5</code></p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3actorAnimationController/#methods","title":"Methods","text":""},{"location":"types/tes3actorAnimationController/#calculateattackswing","title":"<code>calculateAttackSwing</code>","text":"<p>Calculates how much an attack is currently being charged. Returns a value ranging from <code>0.0</code> to <code>1.0</code>. A value of <code>1.0</code> indicates that the attack is fully charged. Will always return <code>0.0</code> when not currently charging an attack.</p> <pre><code>local result = myObject:calculateAttackSwing()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/","title":"tes3aiConfig","text":""},{"location":"types/tes3aiConfig/#tes3aiconfig","title":"tes3aiConfig","text":"<p>A game object which contains AI configuration information for an actor. This includes: alarm, fight, flee, hello values, which services the actor provides, goods types the actor trades in, and possible destinations this actor can take the player to.</p>"},{"location":"types/tes3aiConfig/#properties","title":"Properties","text":""},{"location":"types/tes3aiConfig/#alarm","title":"<code>alarm</code>","text":"<p>Friendly access to actor's alarm value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersalchemy","title":"<code>bartersAlchemy</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in potions.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersapparatus","title":"<code>bartersApparatus</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in alchemical apparati.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersarmor","title":"<code>bartersArmor</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in armor.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersbooks","title":"<code>bartersBooks</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in books.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersclothing","title":"<code>bartersClothing</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in clothing.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersenchanteditems","title":"<code>bartersEnchantedItems</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in enchanted items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersingredients","title":"<code>bartersIngredients</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in alchemical ingredients.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#barterslights","title":"<code>bartersLights</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in lights.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#barterslockpicks","title":"<code>bartersLockpicks</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in lockpicks.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersmiscitems","title":"<code>bartersMiscItems</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in miscellaneous items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersprobes","title":"<code>bartersProbes</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in probes.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersrepairtools","title":"<code>bartersRepairTools</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in repair hammers and prongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#bartersweapons","title":"<code>bartersWeapons</code>","text":"<p>Friendly access to a flag that controls whether the actor barters in weapons.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#fight","title":"<code>fight</code>","text":"<p>Friendly access to actor's fight value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/#flee","title":"<code>flee</code>","text":"<p>Friendly access to actor's flee value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/#hello","title":"<code>hello</code>","text":"<p>Friendly access to actor's hello value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/#merchantflags","title":"<code>merchantFlags</code>","text":"<p>Numeric access to all merchant flags. Shouldn't be used directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiConfig/#offersenchanting","title":"<code>offersEnchanting</code>","text":"<p>Friendly access to a flag that controls whether the actor offers enchanting services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#offersrepairs","title":"<code>offersRepairs</code>","text":"<p>Friendly access to a flag that controls whether the actor offers item repairs service.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#offersspellmaking","title":"<code>offersSpellmaking</code>","text":"<p>Friendly access to a flag that controls whether the actor offers spellmaking service.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#offersspells","title":"<code>offersSpells</code>","text":"<p>Friendly access to a flag that controls whether the actor sells spells.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#offerstraining","title":"<code>offersTraining</code>","text":"<p>Friendly access to a flag that controls whether the actor offers training services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiConfig/#traveldestinations","title":"<code>travelDestinations</code>","text":"<p>A table access to all <code>tes3travelDestinationNode</code> objects this actor can take the player to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3travelDestinationNode[])</li> </ul>"},{"location":"types/tes3aiPackage/","title":"tes3aiPackage","text":""},{"location":"types/tes3aiPackage/#tes3aipackage","title":"tes3aiPackage","text":"<p>An AI package game object.</p>"},{"location":"types/tes3aiPackage/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackage/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackage/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackage/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackage/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackage/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackage/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackage/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackage/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackage/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackage/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackage/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackage/#targetactor","title":"<code>targetActor</code>","text":"<p>The target actor for activate, follow and escort AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackage/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackage/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageActivate/","title":"tes3aiPackageActivate","text":""},{"location":"types/tes3aiPackageActivate/#tes3aipackageactivate","title":"tes3aiPackageActivate","text":"<p>An AI Activate package game object. Sets an actor to activate a reference.</p> <p>This type inherits the following: tes3aiPackage</p>"},{"location":"types/tes3aiPackageActivate/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageActivate/#activatetarget","title":"<code>activateTarget</code>","text":"<p>The reference this actor with this activate AI package is set to activate.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#targetactor","title":"<code>targetActor</code>","text":"<p>The target actor for activate, follow and escort AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageActivate/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageEscort/","title":"tes3aiPackageEscort","text":""},{"location":"types/tes3aiPackageEscort/#tes3aipackageescort","title":"tes3aiPackageEscort","text":"<p>An AI Escort package game object. The actor with this package will escort the target actor to a certain destination.</p> <p>This type inherits the following: tes3aiPackage</p>"},{"location":"types/tes3aiPackageEscort/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageEscort/#destination","title":"<code>destination</code>","text":"<p>The destination coordinates of this escort AI package.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#targetactor","title":"<code>targetActor</code>","text":"<p>The actor to be escorted to the destination.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageEscort/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/","title":"tes3aiPackageFollow","text":""},{"location":"types/tes3aiPackageFollow/#tes3aipackagefollow","title":"tes3aiPackageFollow","text":"<p>An AI Follow package game object. Sets an actor to follow another actor at a certain distance.</p> <p>This type inherits the following: tes3aiPackage</p>"},{"location":"types/tes3aiPackageFollow/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageFollow/#destination","title":"<code>destination</code>","text":"<p>This is the position at which the following actor will stop following their target.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#followdistance","title":"<code>followDistance</code>","text":"<p>The distance between the follower and their target in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#targetactor","title":"<code>targetActor</code>","text":"<p>The actor this follow AI package is set to follow.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageFollow/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageTravel/","title":"tes3aiPackageTravel","text":""},{"location":"types/tes3aiPackageTravel/#tes3aipackagetravel","title":"tes3aiPackageTravel","text":"<p>An AI Travel package game object. Sets an actor to travel to a certain destination.</p> <p>This type inherits the following: tes3aiPackage</p>"},{"location":"types/tes3aiPackageTravel/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageTravel/#destination","title":"<code>destination</code>","text":"<p>The destination coordinates of this travel AI package.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#targetactor","title":"<code>targetActor</code>","text":"<p>The target actor for activate, follow and escort AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageTravel/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWander/","title":"tes3aiPackageWander","text":""},{"location":"types/tes3aiPackageWander/#tes3aipackagewander","title":"tes3aiPackageWander","text":"<p>Wander AI package causing an actor to move around at random. Actors will choose points to walk to based on the path grid of the cell they are in.</p> <pre><code>Idle nodes represent the percentage chance the actor will stand still and perform the particular idle animation. Each idle is checked, and the one that passes with the highest roll is played. If no Idle passes the random roll, the actor will move (walk)\n</code></pre> <p>This type inherits the following: tes3aiPackage</p>"},{"location":"types/tes3aiPackageWander/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageWander/#activationtarget","title":"<code>activationTarget</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3aiPackageWander/#destinationcell","title":"<code>destinationCell</code>","text":"<p>The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3aiPackageWander/#distance","title":"<code>distance</code>","text":"<p>Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWander/#duration","title":"<code>duration</code>","text":"<p>This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWander/#hourofday","title":"<code>hourOfDay</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWander/#idles","title":"<code>idles</code>","text":"<p>Read-only. This is a table with chances that the actor will play corresponding idle animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPackageWanderIdleNode[])</li> </ul>"},{"location":"types/tes3aiPackageWander/#isdone","title":"<code>isDone</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageWander/#isfinalized","title":"<code>isFinalized</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageWander/#ismoving","title":"<code>isMoving</code>","text":"<p>This property is <code>true</code> if the parent actor is moving.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageWander/#isreset","title":"<code>isReset</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageWander/#isstarted","title":"<code>isStarted</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3aiPackageWander/#mobile","title":"<code>mobile</code>","text":"<p>Access to the actor to whom this AI package belongs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageWander/#startgamehour","title":"<code>startGameHour</code>","text":"<p>The in-game hour at which this AI package started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWander/#targetactor","title":"<code>targetActor</code>","text":"<p>The target actor for activate, follow and escort AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPackageWander/#targetposition","title":"<code>targetPosition</code>","text":"<p>The final position to be reached by the escort, follow, and travel AI packages.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3aiPackageWander/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to values in <code>tes3.aiPackage</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWanderIdleNode/","title":"tes3aiPackageWanderIdleNode","text":""},{"location":"types/tes3aiPackageWanderIdleNode/#tes3aipackagewanderidlenode","title":"tes3aiPackageWanderIdleNode","text":"<p>An AI Wander package idle node game object. Contains information on the chance that the actor will wander at that idle node.</p>"},{"location":"types/tes3aiPackageWanderIdleNode/#properties","title":"Properties","text":""},{"location":"types/tes3aiPackageWanderIdleNode/#chance","title":"<code>chance</code>","text":"<p>A chance that the actor will play corresponding idle animation while standing when parent tes3aiPackageWander is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPackageWanderIdleNode/#index","title":"<code>index</code>","text":"<p>The index of this idle node. Determines the chance that certain idle animation will be played.</p> Index Animation description 1 Looking around 2 Looking behind 3 Scratching head and then shaking it 4 Shifting clothing or armor on shoulder 5 Yawn, strech, look around 6 Looks at fingers and then looks around furitevely 7 Puts right fist above heart and bows head 8 Reaches for the weapon <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPlanner/","title":"tes3aiPlanner","text":""},{"location":"types/tes3aiPlanner/#tes3aiplanner","title":"tes3aiPlanner","text":"<p>A game object which contains information on actor's current and assigned AI packages.</p>"},{"location":"types/tes3aiPlanner/#properties","title":"Properties","text":""},{"location":"types/tes3aiPlanner/#currentpackageindex","title":"<code>currentPackageIndex</code>","text":"<p>Read-only. Access to index of currently active AI package in packages table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPlanner/#mobile","title":"<code>mobile</code>","text":"<p>The access to mobile actor this <code>tes3aiPlanner</code> object works on.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3aiPlanner/#nextopenpackageindex","title":"<code>nextOpenPackageIndex</code>","text":"<p>Read-only. This is the index in <code>.packages</code> table that represents the currently active AI package.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3aiPlanner/#packages","title":"<code>packages</code>","text":"<p>Read-only. The table with <code>tes3aiPackage</code> objects assigned to this mobile actor. These packages are executed as instruction in the order they are defined. When the last one is executed, the cycle is repeated from the start. Has 32 entries, where any can be nil.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPackage[])</li> </ul>"},{"location":"types/tes3aiPlanner/#methods","title":"Methods","text":""},{"location":"types/tes3aiPlanner/#getactivepackage","title":"<code>getActivePackage</code>","text":"<p>Fetches currently active AI package.</p> <pre><code>local result = myObject:getActivePackage()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPackageActivate, tes3aiPackageEscort, tes3aiPackageFollow, tes3aiPackageTravel, tes3aiPackageWander)</li> </ul>"},{"location":"types/tes3alchemy/","title":"Tes3alchemy","text":""},{"location":"types/tes3alchemy/#tes3alchemy","title":"tes3alchemy","text":"<p>An alchemy game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3alchemy/#properties","title":"Properties","text":""},{"location":"types/tes3alchemy/#autocalc","title":"<code>autoCalc</code>","text":"<p>If set, the value of the object is automatically calculated.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3alchemy/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#effects","title":"<code>effects</code>","text":"<p>Read-only. An array-style table of the <code>tes3effect</code> data on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3effect[])</li> </ul> Example: Determining if a potion is hostile <p>The following function returns <code>true</code> if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense.</p> <pre><code>--- @param magicSource tes3spell|tes3enchantment|tes3alchemy\nlocal function isSpellHostile(magicSource)\n    for _, effect in ipairs(magicSource.effects) do\n        if (effect.object.isHarmful) then\n            -- If one of the spell's effects is harmful, then\n            -- `true` is returned and function ends here.\n            return true\n        end\n    end\n    -- If no harmful effect was found then return `false`.\n    return false\nend\n</code></pre>"},{"location":"types/tes3alchemy/#flags","title":"<code>flags</code>","text":"<p>The alchemy item's flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3alchemy/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3alchemy/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3alchemy/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3alchemy/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3alchemy/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3alchemy/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3alchemy/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3alchemy/#value","title":"<code>value</code>","text":"<p>The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3alchemy/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#methods","title":"Methods","text":""},{"location":"types/tes3alchemy/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3alchemy/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3alchemy)</li> </ul>"},{"location":"types/tes3alchemy/#getactiveeffectcount","title":"<code>getActiveEffectCount</code>","text":"<p>Returns the amount of effects the tes3alchemy object has.</p> <pre><code>local count = myObject:getActiveEffectCount()\n</code></pre> <p>Returns:</p> <ul> <li><code>count</code> (number)</li> </ul>"},{"location":"types/tes3alchemy/#getfirstindexofeffect","title":"<code>getFirstIndexOfEffect</code>","text":"<p>Returns the index of a first effect of a given effectId in the parent tes3alchemy object.</p> <pre><code>local index = myObject:getFirstIndexOfEffect(effectId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effectId</code> (number): The effectId to perform a check for. Maps to <code>tes3.effect</code> constants.</li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number)</li> </ul>"},{"location":"types/tes3animationData/","title":"tes3animationData","text":""},{"location":"types/tes3animationData/#tes3animationdata","title":"tes3animationData","text":"<p>A game object which contains information on actor's animations.</p> <p>Animations are divided into three layers. The layer 0 is the base layer containing all the base animations for every humanoid in the game, including the player (when in third person). These animations come from <code>base_anim.nif</code>. Layer 1 is for female animations. Any animations present in <code>base_anim_female.nif</code> override their male counterparts for humanoid races. For beast races, layer 1 animations come from <code>base_anim_kna.nif</code>. Layer 2 are the custom animations assigned to the actor.</p>"},{"location":"types/tes3animationData/#properties","title":"Properties","text":""},{"location":"types/tes3animationData/#actornode","title":"<code>actorNode</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3animationData/#animationgroups","title":"<code>animationGroups</code>","text":"<p>Read-only. The animation groups, indexed by the <code>tes3.animationGroup</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3animationGroup[])</li> </ul>"},{"location":"types/tes3animationData/#animationgroupsoundgencounts","title":"<code>animationGroupSoundgenCounts</code>","text":"<p>Read-only. The number of sound generators for each of the animation groups, indexed by the <code>tes3.animationGroup</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#animgrouplayerindicies","title":"<code>animGroupLayerIndicies</code>","text":"<p>Read-only. The layer from which each of the actor's animation groups come, indexed by the <code>tes3.animationGroup</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#approxroottravelspeeds","title":"<code>approxRootTravelSpeeds</code>","text":"<p>Read-only. The approximate root node travel speed for each of the animation groups, indexed by the <code>tes3.animationGroup</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#currentanimgrouplayers","title":"<code>currentAnimGroupLayers</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#currentanimgroups","title":"<code>currentAnimGroups</code>","text":"<p>Read-only. The currently playing animation group, on each of the body sections.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#currentnodeindices","title":"<code>currentNodeIndices</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#currentsoundgenindices","title":"<code>currentSoundgenIndices</code>","text":"<p>Read-only. The index of the currently used sound generator for each of the body sections.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#deltatime","title":"<code>deltaTime</code>","text":"<p>The time in seconds since the last update.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#flags","title":"<code>flags</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#hasoverrideanimations","title":"<code>hasOverrideAnimations</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3animationData/#headgeometry","title":"<code>headGeometry</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niGeometry)</li> </ul>"},{"location":"types/tes3animationData/#headnode","title":"<code>headNode</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3animationData/#keyframelayers","title":"<code>keyframeLayers</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (tes3animationDataSequenceGroup[])</li> </ul>"},{"location":"types/tes3animationData/#lipsynclevel","title":"<code>lipsyncLevel</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#loopcounts","title":"<code>loopCounts</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#manager","title":"<code>manager</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niKeyframeManager)</li> </ul>"},{"location":"types/tes3animationData/#modelrootnode","title":"<code>modelRootNode</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3animationData/#movementspeed","title":"<code>movementSpeed</code>","text":"<p>Read-only. The animation speed multiplier of movement animations. This includes walking, running, crouching, swimming, turning, jumping and other movement related animations.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#nextloopcounts","title":"<code>nextLoopCounts</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#positiondeltamodelroot","title":"<code>positionDeltaModelRoot</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3animationData/#spine1node","title":"<code>spine1Node</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3animationData/#spine2node","title":"<code>spine2Node</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3animationData/#spineangle","title":"<code>spineAngle</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#timings","title":"<code>timings</code>","text":"<p>The time in seconds indicating the current position within the animation for each individual body section, indexed by values in the <code>tes3.animationBodySection</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3animationData/#weaponspeed","title":"<code>weaponSpeed</code>","text":"<p>The animation speed multiplier of weapon animations. This includes all weapon related idle, attack, and ready/unready animations.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationData/#methods","title":"Methods","text":""},{"location":"types/tes3animationData/#getreference","title":"<code>getReference</code>","text":"<p>This method fetches the reference of the actor to whom this animation data belongs.</p> <pre><code>local result = myObject:getReference()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3animationData/#playanimationgroup","title":"<code>playAnimationGroup</code>","text":"<p>This method plays an animation group on the related actor, invoking <code>playGroup</code> event.</p> <pre><code>myObject:playAnimationGroup(animationGroup, startFlag, loopCount)\n</code></pre> <p>Parameters:</p> <ul> <li><code>animationGroup</code> (number): The animation group to play. A value from <code>tes3.animationGroup</code> namespace.</li> <li><code>startFlag</code> (number): A flag for starting the group with, using <code>tes3.animationStartFlag</code> constants.</li> <li><code>loopCount</code> (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping.</li> </ul>"},{"location":"types/tes3animationData/#playanimationgroupforindex","title":"<code>playAnimationGroupForIndex</code>","text":"<p>This method plays an animation group on the provided body section of related actor, invoking <code>playGroup</code> event.</p> <pre><code>myObject:playAnimationGroupForIndex(animationGroup, triIndex, startFlag, loopCount)\n</code></pre> <p>Parameters:</p> <ul> <li><code>animationGroup</code> (number): The animation group to play. A value from <code>tes3.animationGroup</code> namespace.</li> <li><code>triIndex</code> (number): The body section on which to play the animation. A value from <code>tes3.animationBodySection</code> namespace.</li> <li><code>startFlag</code> (number): A flag for starting the group with, using <code>tes3.animationStartFlag</code> constants.</li> <li><code>loopCount</code> (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping.</li> </ul>"},{"location":"types/tes3animationData/#setheadnode","title":"<code>setHeadNode</code>","text":"<pre><code>myObject:setHeadNode(head)\n</code></pre> <p>Parameters:</p> <ul> <li><code>head</code> (niNode): </li> </ul>"},{"location":"types/tes3animationData/#setoverridelayerkeyframes","title":"<code>setOverrideLayerKeyframes</code>","text":"<pre><code>local success = myObject:setOverrideLayerKeyframes(kfData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>kfData</code> (tes3keyframeDefinition): </li> </ul> <p>Returns:</p> <ul> <li><code>success</code> (boolean)</li> </ul>"},{"location":"types/tes3animationDataSequenceGroup/","title":"tes3animationDataSequenceGroup","text":""},{"location":"types/tes3animationDataSequenceGroup/#tes3animationdatasequencegroup","title":"tes3animationDataSequenceGroup","text":"<p>A game object which contains niSequence objects for each animation body section.</p>"},{"location":"types/tes3animationDataSequenceGroup/#properties","title":"Properties","text":""},{"location":"types/tes3animationDataSequenceGroup/#leftarm","title":"<code>leftArm</code>","text":"<p>The niSequence object for the actor's left arm.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSequence)</li> </ul>"},{"location":"types/tes3animationDataSequenceGroup/#lower","title":"<code>lower</code>","text":"<p>The niSequence object for the actor's legs.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSequence)</li> </ul>"},{"location":"types/tes3animationDataSequenceGroup/#upper","title":"<code>upper</code>","text":"<p>The niSequence object for the actor's upper body.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSequence)</li> </ul>"},{"location":"types/tes3animationDataSoundGenKey/","title":"tes3animationDataSoundGenKey","text":""},{"location":"types/tes3animationDataSoundGenKey/#tes3animationdatasoundgenkey","title":"tes3animationDataSoundGenKey","text":"<p>A game object which contains information that map actor sounds to animations.</p>"},{"location":"types/tes3animationDataSoundGenKey/#properties","title":"Properties","text":""},{"location":"types/tes3animationDataSoundGenKey/#pitch","title":"<code>pitch</code>","text":"<p>The pitch of the sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationDataSoundGenKey/#sound","title":"<code>sound</code>","text":"<p>The sound played at this sound generator key.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3animationDataSoundGenKey/#startframe","title":"<code>startFrame</code>","text":"<p>The starting frame of animation at which the sound plays.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationDataSoundGenKey/#starttime","title":"<code>startTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3animationDataSoundGenKey/#volume","title":"<code>volume</code>","text":"<p>The sound's volume.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/","title":"Tes3apparatus","text":""},{"location":"types/tes3apparatus/#tes3apparatus","title":"tes3apparatus","text":"<p>An apparatus game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3apparatus/#properties","title":"Properties","text":""},{"location":"types/tes3apparatus/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3apparatus/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3apparatus/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3apparatus/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3apparatus/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3apparatus/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3apparatus/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3apparatus/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3apparatus/#quality","title":"<code>quality</code>","text":"<p>The quality of the apparatus.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3apparatus/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3apparatus/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3apparatus/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3apparatus/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3apparatus/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3apparatus/#type","title":"<code>type</code>","text":"<p>The type of the apparatus. Maps to values in <code>tes3.apparatusType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3apparatus/#methods","title":"Methods","text":""},{"location":"types/tes3apparatus/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3archive/","title":"Tes3archive","text":""},{"location":"types/tes3archive/#tes3archive","title":"tes3archive","text":"<p>Loaded data from a BSA file.</p>"},{"location":"types/tes3archive/#properties","title":"Properties","text":""},{"location":"types/tes3archive/#filecount","title":"<code>fileCount</code>","text":"<p>Read-only. The number of file entries in the BSA.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3archive/#nextarchive","title":"<code>nextArchive</code>","text":"<p>Read-only. The next archive to access after this one.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3archive)</li> </ul>"},{"location":"types/tes3archive/#offsettofilenamehashes","title":"<code>offsetToFileNameHashes</code>","text":"<p>Read-only. The offset in the BSA file where file name hashes can be found.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3archive/#path","title":"<code>path</code>","text":"<p>Read-only. The full path to the BSA, relative to the Morrowind installation directory.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3archive/#sizesandoffsets","title":"<code>sizesAndOffsets</code>","text":"<p>Read-only. An array of sizes and offsets for entries in the archive.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3archiveOffsetSizeData[])</li> </ul>"},{"location":"types/tes3archive/#methods","title":"Methods","text":""},{"location":"types/tes3archive/#findfileindex","title":"<code>findFileIndex</code>","text":"<p>Searches for a file in the archive, and returns the index that it can be found in.</p> <pre><code>local index = myObject:findFileIndex(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to the file held in the archive.</li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number, nil): The index in the archive that the path was found at, or <code>nil</code> if no result was found.</li> </ul>"},{"location":"types/tes3archiveOffsetSizeData/","title":"tes3archiveOffsetSizeData","text":""},{"location":"types/tes3archiveOffsetSizeData/#tes3archiveoffsetsizedata","title":"tes3archiveOffsetSizeData","text":"<p>A pair of size and offset data for an entry stored in a BSA file.</p>"},{"location":"types/tes3archiveOffsetSizeData/#properties","title":"Properties","text":""},{"location":"types/tes3archiveOffsetSizeData/#offset","title":"<code>offset</code>","text":"<p>Read-only. The offset from the start of the BSA file that this file can be found at.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3archiveOffsetSizeData/#size","title":"<code>size</code>","text":"<p>Read-only. The size of the file stored in the BSA.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/","title":"Tes3armor","text":""},{"location":"types/tes3armor/#tes3armor","title":"tes3armor","text":"<p>An armor game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3armor/#properties","title":"Properties","text":""},{"location":"types/tes3armor/#armorrating","title":"<code>armorRating</code>","text":"<p>The armor's defensive rating.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#armorscalar","title":"<code>armorScalar</code>","text":"<p>Read-only. This is the maximal contribution to actor's total Armor Rating for this piece of armor. For vanilla armors, this is slot based. Cuirasses have <code>armorScalar = 0.3</code>, helmets, pauldrons, greaves, boots and shields have <code>0.1</code>, while gauntlets and bracers have <code>armorScalar = 0.05</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3armor/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#enchantcapacity","title":"<code>enchantCapacity</code>","text":"<p>The object's enchantment capacity.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#enchantment","title":"<code>enchantment</code>","text":"<p>The enchantment used by the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3armor/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#isleftpart","title":"<code>isLeftPart</code>","text":"<p>Determines if the armor is the left part of a pair.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#maxcondition","title":"<code>maxCondition</code>","text":"<p>The object's maximum condition.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3armor/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3armor/#parts","title":"<code>parts</code>","text":"<p>Read-only. An array-style table of the <code>tes3wearablePart</code> data on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3wearablePart[])</li> </ul>"},{"location":"types/tes3armor/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3armor/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3armor/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3armor/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3armor/#slot","title":"<code>slot</code>","text":"<p>The slot used by the armor. Maps to <code>tes3.armorSlot</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#slotname","title":"<code>slotName</code>","text":"<p>Read-only. The name of the slot used by the armor.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3armor/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3armor/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3armor/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#weightclass","title":"<code>weightClass</code>","text":"<p>Read-only. The weight class of the armor. This value maps to <code>tes3.armorWeightClass</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3armor/#methods","title":"Methods","text":""},{"location":"types/tes3armor/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3armor/#calculatearmorrating","title":"<code>calculateArmorRating</code>","text":"<p>Calculates what armor rating is provided for a given mobile actor.</p> <pre><code>myObject:calculateArmorRating(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3armor/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3armor)</li> </ul>"},{"location":"types/tes3audioController/","title":"tes3audioController","text":""},{"location":"types/tes3audioController/#tes3audiocontroller","title":"tes3audioController","text":"<p>A controller for audio. It holds data on the status of the current and next music tracks, volume settings and other related facilities. All the volumes are expressed in range [0, 1].</p>"},{"location":"types/tes3audioController/#properties","title":"Properties","text":""},{"location":"types/tes3audioController/#currentmusicfilepath","title":"<code>currentMusicFilePath</code>","text":"<p>File path of the currently playing music track. The path can not be longer than 260 characters.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3audioController/#disableaudio","title":"<code>disableAudio</code>","text":"<p>A flag which controls whether the audio is disabled or not.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3audioController/#listenerposition","title":"<code>listenerPosition</code>","text":"<p>The sound listener position.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3audioController/#musicduration","title":"<code>musicDuration</code>","text":"<p>Read-only. The duration of the currently playing music track.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#musicfadebegintimestamp","title":"<code>musicFadeBeginTimestamp</code>","text":"<p>The timestamp at which currently playing music track started fading in. So, it's a timestamp at which currently playing music track started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#musicnexttrackstarttimestamp","title":"<code>musicNextTrackStartTimestamp</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#musicnexttrackvolume","title":"<code>musicNextTrackVolume</code>","text":"<p>The volume of the next track.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#musicposition","title":"<code>musicPosition</code>","text":"<p>Current play time for currently playing music track.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#nextmusicfilepath","title":"<code>nextMusicFilePath</code>","text":"<p>File path of the music track which is to be played next. The path can not be longer than 260 characters.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3audioController/#pitchaxis","title":"<code>pitchAxis</code>","text":"<p>Approximated pitch axis in radians.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#volumeeffects","title":"<code>volumeEffects</code>","text":"<p>Volume of the effects. Corresponds to the effects volume slider in Audio settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#volumefootsteps","title":"<code>volumeFootsteps</code>","text":"<p>Volume of the footsteps. Corresponds to the footsteps volume slider in Audio settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#volumemaster","title":"<code>volumeMaster</code>","text":"<p>Master volume. Corresponds to the master volume slider in Audio settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#volumemusic","title":"<code>volumeMusic</code>","text":"<p>Volume of the music. Corresponds to the music volume slider in Audio settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#volumevoice","title":"<code>volumeVoice</code>","text":"<p>Volume of the voices. Corresponds to the voice volume slider in Audio settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#yawaxis","title":"<code>yawAxis</code>","text":"<p>Approximated yaw axis in radians.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3audioController/#methods","title":"Methods","text":""},{"location":"types/tes3audioController/#changemusictrack","title":"<code>changeMusicTrack</code>","text":"<p>Changes currently playing music track according to provided parameters.</p> <pre><code>myObject:changeMusicTrack({ filename = ..., crossfade = ..., volume = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>filename</code> (string): File name of the new music track.</li> <li><code>crossfade</code> (number): Default: <code>1000</code>. Duration of the crossfading between music tracks. Measured in miliseconds.</li> <li><code>volume</code> (number): Default: <code>1</code>. Allows changing the volume of the music track.</li> </ul> </li> </ul>"},{"location":"types/tes3audioController/#getmixvolume","title":"<code>getMixVolume</code>","text":"<p>Final volume of a provided type of audio, after master volume and its own volume adjustments. Music volume is an exception since it isn't affected by master volume.</p> <pre><code>local volume = myObject:getMixVolume(mix)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mix</code> (number): The type of sound mix to perform a check for. Accepts values from <code>tes3.soundMix</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>volume</code> (number)</li> </ul>"},{"location":"types/tes3baseObject/","title":"tes3baseObject","text":""},{"location":"types/tes3baseObject/#tes3baseobject","title":"tes3baseObject","text":"<p>Almost anything that can be represented in the Construction Set is based on this structure.</p>"},{"location":"types/tes3baseObject/#properties","title":"Properties","text":""},{"location":"types/tes3baseObject/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3baseObject/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3baseObject/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3baseObject/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3baseObject/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3baseObject/#methods","title":"Methods","text":""},{"location":"types/tes3baseObject/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/","title":"Tes3birthsign","text":""},{"location":"types/tes3birthsign/#tes3birthsign","title":"tes3birthsign","text":"<p>An object representing a birthsign.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3birthsign/#properties","title":"Properties","text":""},{"location":"types/tes3birthsign/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#description","title":"<code>description</code>","text":"<p>Read-only. Loads from disk and returns the description of the birthsign.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3birthsign/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3birthsign/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/#spells","title":"<code>spells</code>","text":"<p>Read-only. A list of spells granted by the birthsign.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3birthsign/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3birthsign/#texturepath","title":"<code>texturePath</code>","text":"<p>Path to the related image representing the birthsign.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3birthsign/#methods","title":"Methods","text":""},{"location":"types/tes3birthsign/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3bodyPart/","title":"tes3bodyPart","text":""},{"location":"types/tes3bodyPart/#tes3bodypart","title":"tes3bodyPart","text":"<p>A body part game object.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3bodyPart/#properties","title":"Properties","text":""},{"location":"types/tes3bodyPart/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3bodyPart/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#female","title":"<code>female</code>","text":"<p>A flag that marks this body part as used for female actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3bodyPart/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3bodyPart/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3bodyPart/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPart/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPart/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3bodyPart/#part","title":"<code>part</code>","text":"<p>The part of the body occupied. Maps to values in <code>tes3.partIndex</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPart/#parttype","title":"<code>partType</code>","text":"<p>The layer the body part occupies. Maps to values in <code>tes3.activeBodyPartLayer</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPart/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#playable","title":"<code>playable</code>","text":"<p>A flag that marks this body part as selectable during character generation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3bodyPart/#racename","title":"<code>raceName</code>","text":"<p>Read-only. The name of the race associated with this body part.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3bodyPart/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPart/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3bodyPart/#scenenode","title":"<code>sceneNode</code>","text":"<p>The NiNode-derived object for the object's loaded mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3bodyPart/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3bodyPart/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3bodyPart/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#vampiric","title":"<code>vampiric</code>","text":"<p>A flag that marks this body part as used for vampires.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3bodyPart/#methods","title":"Methods","text":""},{"location":"types/tes3bodyPart/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3bodyPartManager/","title":"tes3bodyPartManager","text":""},{"location":"types/tes3bodyPartManager/#tes3bodypartmanager","title":"tes3bodyPartManager","text":"<p>A game object which holds information about body parts.</p>"},{"location":"types/tes3bodyPartManager/#properties","title":"Properties","text":""},{"location":"types/tes3bodyPartManager/#activebodyparts","title":"<code>activeBodyParts</code>","text":"<p>Read-only. The access to the reference's <code>tes3bodyPartManagerActiveBodyPart</code> objects. It's a 2-dimensional table, with first dimension index values from <code>tes3.activeBodyPartLayer</code> namespace, while its second dimension indexes are values from <code>tes3.activeBodyPart</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;integer, table&lt;integer, tes3bodyPartManagerActiveBodyPart&gt;&gt;)</li> </ul>"},{"location":"types/tes3bodyPartManager/#animationphase","title":"<code>animationPhase</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPartManager/#attachnodes","title":"<code>attachNodes</code>","text":"<p>Read-only. The access to the reference's <code>tes3bodyPartManagerAttachNode</code> objects. Indexes of that table are values from <code>tes3.bodyPartAttachment</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPartManagerAttachNode[])</li> </ul>"},{"location":"types/tes3bodyPartManager/#reference","title":"<code>reference</code>","text":"<p>Read-only. The access to the reference this body part manager operates for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3bodyPartManager/#methods","title":"Methods","text":""},{"location":"types/tes3bodyPartManager/#getactivebodypart","title":"<code>getActiveBodyPart</code>","text":"<p>The method fetches active body part of a actor at a given layer and position.</p> <pre><code>local result = myObject:getActiveBodyPart(layer, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>layer</code> (number): A value from <code>tes3.activeBodyPartLayer</code> namespace.</li> <li><code>index</code> (number): A value from <code>tes3.activeBodyPart</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPartManagerActiveBodyPart)</li> </ul>"},{"location":"types/tes3bodyPartManager/#getactivebodypartforitem","title":"<code>getActiveBodyPartForItem</code>","text":"<p>The method fetches active body part of a actor for the given item.</p> <pre><code>local result = myObject:getActiveBodyPartForItem(item)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item): The item to fetch the active body part for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPartManagerActiveBodyPart)</li> </ul>"},{"location":"types/tes3bodyPartManager/#getactivebodypartnode","title":"<code>getActiveBodyPartNode</code>","text":"<p>The method fetches the NiNode-derived object for the loaded mesh of an active body part at a given layer and position.</p> <pre><code>local result = myObject:getActiveBodyPartNode(layer, index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>layer</code> (number): A value from <code>tes3.activeBodyPartLayer</code> namespace.</li> <li><code>index</code> (number): A value from <code>tes3.activeBodyPart</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3bodyPartManager/#removeequippedlayers","title":"<code>removeEquippedLayers</code>","text":"<p>The method removes all currently equipped layers from the actor.</p> <pre><code>myObject:removeEquippedLayers()\n</code></pre>"},{"location":"types/tes3bodyPartManager/#setactivepartdata","title":"<code>setActivePartData</code>","text":"<p>The method sets a niNode derived object as active body part at a given layer and position.</p> <pre><code>myObject:setActivePartData(layer, index, overwriteData, node)\n</code></pre> <p>Parameters:</p> <ul> <li><code>layer</code> (number): A value from <code>tes3.activeBodyPartLayer</code> namespace.</li> <li><code>index</code> (number): A value from <code>tes3.activeBodyPart</code> namespace.</li> <li><code>overwriteData</code> (boolean): Default: <code>true</code>. A flag which controls whether the current data should be overwritten.</li> <li><code>node</code> (niNode): Default: <code>nil</code>. </li> </ul>"},{"location":"types/tes3bodyPartManager/#setbodypartbyidforobject","title":"<code>setBodyPartByIdForObject</code>","text":"<p>The method sets a new body part for a given object.</p> <pre><code>myObject:setBodyPartByIdForObject(object, index, bodyPartId, isFirstPerson)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3physicalObject): An object whose body part to set.</li> <li><code>index</code> (number): A value from <code>tes3.activeBodyPart</code> namespace.</li> <li><code>bodyPartId</code> (string): The unique ID of the <code>tes3bodyPart</code> object to set as a new body part for given object.</li> <li><code>isFirstPerson</code> (boolean): Default: <code>false</code>. A flag which controls whether the body part is used in first person.</li> </ul>"},{"location":"types/tes3bodyPartManager/#setbodypartforobject","title":"<code>setBodyPartForObject</code>","text":"<p>The method sets a new body part for a given object. Triggers <code>bodyPart</code> event.</p> <pre><code>myObject:setBodyPartForObject(object, index, bodyPart, isFirstPerson)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3physicalObject): An object whose body part to set.</li> <li><code>index</code> (number): A value from <code>tes3.activeBodyPart</code> namespace.</li> <li><code>bodyPart</code> (tes3bodyPart): The <code>tes3bodyPart</code> object to set as a new body part for given object.</li> <li><code>isFirstPerson</code> (boolean): Default: <code>false</code>. A flag which controls whether the body part is used in first person.</li> </ul>"},{"location":"types/tes3bodyPartManager/#updateforreference","title":"<code>updateForReference</code>","text":"<p>The method updates all body parts for a given reference.</p> <pre><code>myObject:updateForReference(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference): The reference whose body parts to update.</li> </ul>"},{"location":"types/tes3bodyPartManagerActiveBodyPart/","title":"tes3bodyPartManagerActiveBodyPart","text":""},{"location":"types/tes3bodyPartManagerActiveBodyPart/#tes3bodypartmanageractivebodypart","title":"tes3bodyPartManagerActiveBodyPart","text":"<p>A game object which holds information about an active body part, it's associated item and scene node.</p>"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#properties","title":"Properties","text":""},{"location":"types/tes3bodyPartManagerActiveBodyPart/#bodypart","title":"<code>bodyPart</code>","text":"<p>Access to the body part object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#flags","title":"<code>flags</code>","text":"<p>The raw flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#item","title":"<code>item</code>","text":"<p>The raw item object this active body part pertains to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#node","title":"<code>node</code>","text":"<p>The NiNode-derived object for the object's loaded mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3bodyPartManagerAttachNode/","title":"tes3bodyPartManagerAttachNode","text":""},{"location":"types/tes3bodyPartManagerAttachNode/#tes3bodypartmanagerattachnode","title":"tes3bodyPartManagerAttachNode","text":"<p>A game object which holds information about equipment attachments to the actor's skeleton.</p>"},{"location":"types/tes3bodyPartManagerAttachNode/#properties","title":"Properties","text":""},{"location":"types/tes3bodyPartManagerAttachNode/#flags","title":"<code>flags</code>","text":"<p>The raw flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3bodyPartManagerAttachNode/#node","title":"<code>node</code>","text":"<p>The NiNode-derived object for the object's loaded mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3bodyPartManagerAttachNode/#rotation","title":"<code>rotation</code>","text":"<p>The rotation for this Attachment node.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3bodyPartManagerAttachNode/#translation","title":"<code>translation</code>","text":"<p>The translation for this Attachment node.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3book/","title":"Tes3book","text":""},{"location":"types/tes3book/#tes3book","title":"tes3book","text":"<p>A book game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3book/#properties","title":"Properties","text":""},{"location":"types/tes3book/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3book/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#enchantcapacity","title":"<code>enchantCapacity</code>","text":"<p>The object's enchantment capacity.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#enchantment","title":"<code>enchantment</code>","text":"<p>The enchantment used by the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3book/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3book/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3book/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3book/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3book/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3book/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3book/#skill","title":"<code>skill</code>","text":"<p>The skill learned from the book (from <code>tes3.skill</code> table), or <code>-1</code> if the book doesn't have one, or has already been read.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3book/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3book/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3book/#text","title":"<code>text</code>","text":"<p>Read-only. Loads and displays the text of the book.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3book/#type","title":"<code>type</code>","text":"<p>The book type. Maps to values in <code>tes3.bookType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3book/#methods","title":"Methods","text":""},{"location":"types/tes3book/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3boundingBox/","title":"tes3boundingBox","text":""},{"location":"types/tes3boundingBox/#tes3boundingbox","title":"tes3boundingBox","text":"<p>A pair of vectors marking a bounding box.</p>"},{"location":"types/tes3boundingBox/#properties","title":"Properties","text":""},{"location":"types/tes3boundingBox/#max","title":"<code>max</code>","text":"<p>The maximum bound of the box.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3boundingBox/#min","title":"<code>min</code>","text":"<p>The minimum bound of the box.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3boundingBox/#methods","title":"Methods","text":""},{"location":"types/tes3boundingBox/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the bounding box.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3boundingBox/#vertices","title":"<code>vertices</code>","text":"<p>Returns a table containing the 8 vertices comprising this bounding box.</p> <pre><code>local result = myObject:vertices()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3[])</li> </ul>"},{"location":"types/tes3bsaLoader/","title":"tes3bsaLoader","text":""},{"location":"types/tes3bsaLoader/#tes3bsaloader","title":"tes3bsaLoader","text":"<p>A class responsible for handling the loading of BSA files.</p>"},{"location":"types/tes3bsaLoader/#properties","title":"Properties","text":""},{"location":"types/tes3bsaLoader/#archives","title":"<code>archives</code>","text":"<p>Read-only. An array-style table of archive files.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3archive[])</li> </ul>"},{"location":"types/tes3bsaLoader/#firstarchive","title":"<code>firstArchive</code>","text":"<p>Read-only. The start of the list of loaded archives. This is the last loaded archive, meaning first in priority.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3archive)</li> </ul>"},{"location":"types/tes3bsaLoader/#methods","title":"Methods","text":""},{"location":"types/tes3bsaLoader/#findfile","title":"<code>findFile</code>","text":"<p>Searches for a file in the archive list, and returns the archive and index that it can be found in.</p> <pre><code>local archive, index = myObject:findFile(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): The path to the file held in the archive.</li> </ul> <p>Returns:</p> <ul> <li><code>archive</code> (tes3archive, nil): The found archive, or <code>nil</code> if no result was found.</li> <li><code>index</code> (number, nil): The index in the archive that the path was found at, or <code>nil</code> if no result was found.</li> </ul>"},{"location":"types/tes3cell/","title":"Tes3cell","text":""},{"location":"types/tes3cell/#tes3cell","title":"tes3cell","text":"<p>An exterior or interior game area.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3cell/#properties","title":"Properties","text":""},{"location":"types/tes3cell/#activators","title":"<code>activators</code>","text":"<p>Read-only. One of the three reference collections for a cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3cell/#actors","title":"<code>actors</code>","text":"<p>Read-only. One of the three reference collections for a cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul> Example: Converting reference list to array style table <p>An example is given of a general function that can be used to convert a tes3referenceList to simple array which can be looped over with standard ipairs().</p> <pre><code>-- This function loops over the references inside the\n-- tes3referenceList and adds them to an array-style table\n---@param list tes3referenceList\n---@return tes3reference[]\nlocal function referenceListToTable(list)\n    local result = {}\n    local i = 1\n    if list.size == 0 then\n        return {}\n    end\n    local ref = list.head\n\n    while ref.nextNode do\n        result[i] = ref\n        i = i + 1\n        ref = ref.nextNode\n    end\n\n    -- Add the last reference\n    result[i] = ref\n\n    return result\nend\n\n-- Usage:\nlocal list = tes3.player.cell.actors\n\n-- The references is now a simple array style table\n-- that can be looped over with regular ipairs()\nlocal references = referenceListToTable(list)\n\nfor i, ref in ipairs(references) do\n    -- Do something with the reference\n    tes3ui.log(ref.id)\nend\n</code></pre> Example: Generic iterator function <p>In this more involved example, we used the corouting API from the Lua standard library to construct a generic iterator function. The iterReferenceList() function can then be used directly inside a for loop.</p> <pre><code>--- This is a generic iterator function used\n--- to loop over a tes3referenceList\n---@param list tes3referenceList\n---@return fun(): tes3reference\nlocal function iterReferenceList(list)\n    local function iterator()\n        local ref = list.head\n\n        if list.size ~= 0 then\n            coroutine.yield(ref)\n        end\n\n        while ref.nextNode do\n            ref = ref.nextNode\n            coroutine.yield(ref)\n        end\n    end\n    return coroutine.wrap(iterator)\nend\n\n-- Usage:\nlocal list = tes3.player.cell.actors\nfor ref in iterReferenceList(list) do\n    -- Do something with the reference\n    tes3ui.log(ref.id)\nend\n</code></pre>"},{"location":"types/tes3cell/#ambientcolor","title":"<code>ambientColor</code>","text":"<p>The cell's ambient color. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/tes3cell/#behavesasexterior","title":"<code>behavesAsExterior</code>","text":"<p>If true, the cell behaves as an exterior instead of an interior for certain properties. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#cellflags","title":"<code>cellFlags</code>","text":"<p>A numeric representation of the packed bit flags for the cell, typically accessed from other properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#displayname","title":"<code>displayName</code>","text":"<p>The name of the cell as displayed on the in-game UI. For exterior cells without an assigned name, this is the region name.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3cell/#editorname","title":"<code>editorName</code>","text":"<p>The name of the cell as displayed in the Construction Set. For exterior cells, this includes the cell coordinates.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3cell/#fogcolor","title":"<code>fogColor</code>","text":"<p>The cell's fog color. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/tes3cell/#fogdensity","title":"<code>fogDensity</code>","text":"<p>The cell's fog density. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#gridx","title":"<code>gridX</code>","text":"<p>The cell's X grid coordinate. Only available on exterior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#gridy","title":"<code>gridY</code>","text":"<p>The cell's Y grid coordinate. Only available on exterior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#hasmapmarker","title":"<code>hasMapMarker</code>","text":"<p>Read-only. If true, the cell will be marked on the player's map. This does not take into account if the player has been to that cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#haswater","title":"<code>hasWater</code>","text":"<p>If true, the cell has water. Only applies to interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3cell/#isinterior","title":"<code>isInterior</code>","text":"<p>If true, the cell is an interior.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#isorbehavesasexterior","title":"<code>isOrBehavesAsExterior</code>","text":"<p>Read-only. <code>true</code> if the cell is not an interior or if it behaves as an exterior.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#name","title":"<code>name</code>","text":"<p>The name and id of the cell. See also <code>displayName</code> and <code>editorName</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3cell/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#pickobjectsroot","title":"<code>pickObjectsRoot</code>","text":"<p>The scenegraph node containing player-interactable objects from this cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3cell/#region","title":"<code>region</code>","text":"<p>The region associated with the cell. Only available on exterior cells, or interior cells that behave as exterior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3region)</li> </ul>"},{"location":"types/tes3cell/#restingisillegal","title":"<code>restingIsIllegal</code>","text":"<p>If true, the player may not rest in the cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3cell/#staticobjectsroot","title":"<code>staticObjectsRoot</code>","text":"<p>The scenegraph node containing static non-player-interactable objects from this cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3cell/#statics","title":"<code>statics</code>","text":"<p>Read-only. One of the three reference collections for a cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3cell/#suncolor","title":"<code>sunColor</code>","text":"<p>The cell's sun color. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPackedColor)</li> </ul>"},{"location":"types/tes3cell/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3cell/#waterlevel","title":"<code>waterLevel</code>","text":"<p>The water level in the cell. Only available on interior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3cell/#methods","title":"Methods","text":""},{"location":"types/tes3cell/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3cell/#ispointincell","title":"<code>isPointInCell</code>","text":"<p>Determines if a given X/Y coordinate falls in the given cell. This will always be true for interior cells.</p> <pre><code>local inCell = myObject:isPointInCell(x, y)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number): The X position to test.</li> <li><code>y</code> (number): The Y position to test.</li> </ul> <p>Returns:</p> <ul> <li><code>inCell</code> (boolean): true, if the point is found in the cell.</li> </ul>"},{"location":"types/tes3cell/#iteratereferences","title":"<code>iterateReferences</code>","text":"<p>Used in a for loop, iterates over objects in the cell.</p> <pre><code>myObject:iterateReferences(filter)\n</code></pre> <p>Parameters:</p> <ul> <li><code>filter</code> (integer, integer[]): Optional. The TES3 object type to filter results by. Those are stored in <code>tes3.objectType</code> namespace.</li> </ul>"},{"location":"types/tes3class/","title":"Tes3class","text":""},{"location":"types/tes3class/#tes3class","title":"tes3class","text":"<p>A core object representing a character class.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3class/#properties","title":"Properties","text":""},{"location":"types/tes3class/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. An array-style table of the two attribute IDs associated with the class. Maps to values in <code>tes3.attribute</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3class/#bartersalchemy","title":"<code>bartersAlchemy</code>","text":"<p>If true, the class will barter alchemy items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersapparatus","title":"<code>bartersApparatus</code>","text":"<p>If true, the class will barter apparatus items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersarmor","title":"<code>bartersArmor</code>","text":"<p>If true, the class will barter armor items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersbooks","title":"<code>bartersBooks</code>","text":"<p>If true, the class will barter book items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersclothing","title":"<code>bartersClothing</code>","text":"<p>If true, the class will barter clothing items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersenchanteditems","title":"<code>bartersEnchantedItems</code>","text":"<p>If true, the class will barter enchanted items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersingredients","title":"<code>bartersIngredients</code>","text":"<p>If true, the class will barter ingredient items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#barterslights","title":"<code>bartersLights</code>","text":"<p>If true, the class will barter light items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#barterslockpicks","title":"<code>bartersLockpicks</code>","text":"<p>If true, the class will barter lockpick items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersmiscitems","title":"<code>bartersMiscItems</code>","text":"<p>If true, the class will barter misc items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersprobes","title":"<code>bartersProbes</code>","text":"<p>If true, the class will barter probe items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersrepairtools","title":"<code>bartersRepairTools</code>","text":"<p>If true, the class will barter repair items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#bartersweapons","title":"<code>bartersWeapons</code>","text":"<p>If true, the class will barter weapon items.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#description","title":"<code>description</code>","text":"<p>Loads from disk and returns the description of the class.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3class/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3class/#image","title":"<code>image</code>","text":"<p>The path used for the class selection/level up menus, where appropriate. Custom classes may not have their images shown in the level up menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3class/#majorskills","title":"<code>majorSkills</code>","text":"<p>Read-only. An array-style table of the 5 skills IDs associated with the class' major skills. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3class/#minorskills","title":"<code>minorSkills</code>","text":"<p>Read-only. An array-style table of the 5 skills IDs associated with the class' minor skills. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3class/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3class/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3class/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3class/#offersenchanting","title":"<code>offersEnchanting</code>","text":"<p>If true, the class will offer repair services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#offersrepairs","title":"<code>offersRepairs</code>","text":"<p>If true, the class will offer enchanting services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#offersspellmaking","title":"<code>offersSpellmaking</code>","text":"<p>If true, the class will offer spellmaking services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#offersspells","title":"<code>offersSpells</code>","text":"<p>If true, the class will offer spell selling services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#offerstraining","title":"<code>offersTraining</code>","text":"<p>If true, the class will offer training services.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#playable","title":"<code>playable</code>","text":"<p>If true, the class is selectable at character generation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#services","title":"<code>services</code>","text":"<p>The services offered by the class. This is a bit field, and its values should typically be accessed through values such as <code>bartersAlchemy</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3class/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the <code>majorSkills</code> and <code>minorSkills</code> properties. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3class/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3class/#specialization","title":"<code>specialization</code>","text":"<p>The specialization for the class. Maps to values in the <code>tes3.specialization</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3class/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3class/#methods","title":"Methods","text":""},{"location":"types/tes3class/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3clothing/","title":"Tes3clothing","text":""},{"location":"types/tes3clothing/#tes3clothing","title":"tes3clothing","text":"<p>A clothing game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3clothing/#properties","title":"Properties","text":""},{"location":"types/tes3clothing/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3clothing/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#enchantcapacity","title":"<code>enchantCapacity</code>","text":"<p>The object's enchantment capacity.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#enchantment","title":"<code>enchantment</code>","text":"<p>The enchantment used by the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3clothing/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#isleftpart","title":"<code>isLeftPart</code>","text":"<p>Determines if the armor is the left part of a pair.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3clothing/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3clothing/#parts","title":"<code>parts</code>","text":"<p>An array-style table of the <code>tes3wearablePart</code> data on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3wearablePart[])</li> </ul>"},{"location":"types/tes3clothing/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3clothing/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3clothing/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3clothing/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3clothing/#slot","title":"<code>slot</code>","text":"<p>The slot used by the clothing object. Maps to values in <code>tes3.clothingSlot</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#slotname","title":"<code>slotName</code>","text":"<p>The name of the slot used by the clothing object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3clothing/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3clothing/#value","title":"<code>value</code>","text":"<p>The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3clothing/#methods","title":"Methods","text":""},{"location":"types/tes3clothing/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3clothing/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3clothing)</li> </ul>"},{"location":"types/tes3combatSession/","title":"tes3combatSession","text":""},{"location":"types/tes3combatSession/#tes3combatsession","title":"tes3combatSession","text":"<p>A structure that keeps track of combat session data.</p>"},{"location":"types/tes3combatSession/#properties","title":"Properties","text":""},{"location":"types/tes3combatSession/#alchemypriority","title":"<code>alchemyPriority</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3combatSession/#data","title":"<code>data</code>","text":"<p>A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json.</p> <p>There is a guide available here on using this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"types/tes3combatSession/#distance","title":"<code>distance</code>","text":"<p>The combat distance.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3combatSession/#lastusetimestamp","title":"<code>lastUseTimestamp</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3combatSession/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. Convenience access back to the associated actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3combatSession/#potionuseflag","title":"<code>potionUseFlag</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3combatSession/#selectedaction","title":"<code>selectedAction</code>","text":"<p>The next action. From observed behavior, this roughly maps to:</p> Value Behavior 0 Undecided 1 Use melee weapon 2 Use marksman weapon 3 Use hand to hand attacks 4 Use on-touch offensive spell 5 Use on-target offensive spell 6 Use summon spell 7 Flee 8 Cast on-self empowering spell (For example, Ancestor Guardian) 9 MaybeEquipUseItem? 10 Use enchanted item <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3combatSession/#selecteditem","title":"<code>selectedItem</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack)</li> </ul>"},{"location":"types/tes3combatSession/#selectedshield","title":"<code>selectedShield</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3combatSession/#selectedspell","title":"<code>selectedSpell</code>","text":"<p>This field containg the spell the actor is currently casting. If not in casting state this field has <code>nil</code> value.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3combatSession/#selectedweapon","title":"<code>selectedWeapon</code>","text":"<p>Read-only. The weapon the actor is using in this combat session.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3combatSession/#selectionpriority","title":"<code>selectionPriority</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3combatSession/#methods","title":"Methods","text":""},{"location":"types/tes3combatSession/#changeequipment","title":"<code>changeEquipment</code>","text":"<p>This method equips an item to the mobile in this combat sesion.</p> <pre><code>myObject:changeEquipment(equipmentStack)\n</code></pre> <p>Parameters:</p> <ul> <li><code>equipmentStack</code> (tes3equipmentStack): An item to equip.</li> </ul>"},{"location":"types/tes3combatSession/#selectalchemywitheffect","title":"<code>selectAlchemyWithEffect</code>","text":"<p>Selects the alchemy item with the greatest value, for a given effect ID and loads it into the <code>selectedItem</code> property.</p> <pre><code>local result = myObject:selectAlchemyWithEffect(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (integer)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/","title":"Tes3container","text":""},{"location":"types/tes3container/#tes3container","title":"tes3container","text":"<p>A container object that has not been cloned. Typically represents the raw information edited in the construction set.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3container/#properties","title":"Properties","text":""},{"location":"types/tes3container/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3container/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3container/#capacity","title":"<code>capacity</code>","text":"<p>The amount of weight that the container can hold.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3container/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3container/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3container/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns false.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3container/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3container/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3container/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#organic","title":"<code>organic</code>","text":"<p>Determines if the container's organic flag is enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3container/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3container/#respawns","title":"<code>respawns</code>","text":"<p>Determines if the container's respawn flag is enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3container/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3container/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3container/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3container/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3container/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3container/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#methods","title":"Methods","text":""},{"location":"types/tes3container/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3container/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3container)</li> </ul>"},{"location":"types/tes3container/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3container/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3container/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/","title":"tes3containerInstance","text":""},{"location":"types/tes3containerInstance/#tes3containerinstance","title":"tes3containerInstance","text":"<p>A container object that has been cloned. Typically represents a container that has been instanced by being opened by the player.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3containerInstance/#properties","title":"Properties","text":""},{"location":"types/tes3containerInstance/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#baseobject","title":"<code>baseObject</code>","text":"<p>Read-only. The base container object that the instance inherits from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3containerInstance/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3containerInstance/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3containerInstance/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3containerInstance/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3containerInstance/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3containerInstance/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns true.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3containerInstance/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3containerInstance/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3containerInstance/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#organic","title":"<code>organic</code>","text":"<p>Determines if the container's organic flag is enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3containerInstance/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3containerInstance/#reference","title":"<code>reference</code>","text":"<p>Read-only. The reference that the object is represented by.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3containerInstance/#respawns","title":"<code>respawns</code>","text":"<p>Determines if the container's respawn flag is enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3containerInstance/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3containerInstance/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3containerInstance/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3containerInstance/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3containerInstance/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3containerInstance/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#methods","title":"Methods","text":""},{"location":"types/tes3containerInstance/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3containerInstance/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3containerInstance/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3containerInstance/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/","title":"Tes3creature","text":""},{"location":"types/tes3creature/#tes3creature","title":"tes3creature","text":"<p>A creature object that has not been cloned. Typically represents the raw information edited in the construction set.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3creature/#properties","title":"Properties","text":""},{"location":"types/tes3creature/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#aiconfig","title":"<code>aiConfig</code>","text":"<p>Read-only. A substructure off of actors that contains information on the current AI configuration.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiConfig)</li> </ul> Example: Checking if a creature offers traveling service <pre><code>--- This function returns `true` if given NPC\n--- or creature offers traveling service.\n---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance\n---@return boolean\nlocal function offersTraveling(actor)\n    local travelDestinations = actor.aiConfig.travelDestinations\n\n    -- Actors that can't transport the player\n    -- have travelDestinations equal to `nil`\n    return travelDestinations ~= nil\nend\n</code></pre>"},{"location":"types/tes3creature/#attacks","title":"<code>attacks</code>","text":"<p>A table of three attacks, represented by a trio of <code>tes3rangeInt</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3rangeInt[])</li> </ul>"},{"location":"types/tes3creature/#attributes","title":"<code>attributes</code>","text":"<p>A table of eight numbers, representing the base values for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3creature/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#biped","title":"<code>biped</code>","text":"<p>Access to the creature's biped flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3creature/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3creature/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3creature/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. The actor's max fatigue.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#flies","title":"<code>flies</code>","text":"<p>Access to the creature's flies flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#health","title":"<code>health</code>","text":"<p>Read-only. The actor's max health.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creature/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3creature/#isattacked","title":"<code>isAttacked</code>","text":"<p>Read-only. If true, the actor's attacked flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#isessential","title":"<code>isEssential</code>","text":"<p>Read-only. If true, the actor's essential flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns false.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#isrespawn","title":"<code>isRespawn</code>","text":"<p>Read-only. If true, the actor's respawn flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#level","title":"<code>level</code>","text":"<p>Read-only. The base level of the creature.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. The actor's max magicka.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creature/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creature/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3creature/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3creature/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3creature/#respawns","title":"<code>respawns</code>","text":"<p>Access to the creature's respawns flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3creature/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3creature/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3creature/#skills","title":"<code>skills</code>","text":"<p>A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3creature/#soul","title":"<code>soul</code>","text":"<p>The amount of soul value that the creature provides.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#soundcreature","title":"<code>soundCreature</code>","text":"<p>A creature to use instead of this one for sound generation.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3creature)</li> </ul>"},{"location":"types/tes3creature/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creature/#spells","title":"<code>spells</code>","text":"<p>Read-only. A list of spells that the actor has access to. It is a <code>tes3spellList</code>, which is a list wrapper with helper functions. The actual list is accessed with <code>.iterator</code>. e.g. <code>for _, spell in pairs(creature.spells.iterator) do print(spell.name) end</code></p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3creature/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3creature/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#swims","title":"<code>swims</code>","text":"<p>Access to the creature's swims flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#type","title":"<code>type</code>","text":"<p>The type of the creature. Maps to <code>tes3.creatureType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creature/#usesequipment","title":"<code>usesEquipment</code>","text":"<p>Access to the creature's usesEquipment flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#walks","title":"<code>walks</code>","text":"<p>Access to the creature's walks flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#methods","title":"Methods","text":""},{"location":"types/tes3creature/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3creature/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creature/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3creature/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/","title":"tes3creatureInstance","text":""},{"location":"types/tes3creatureInstance/#tes3creatureinstance","title":"tes3creatureInstance","text":"<p>A creature object that has been cloned. Typically represents a creature that has been instanced in the world.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3creatureInstance/#properties","title":"Properties","text":""},{"location":"types/tes3creatureInstance/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#aiconfig","title":"<code>aiConfig</code>","text":"<p>Read-only. Simplified access to the base creature's AI configuration.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiConfig)</li> </ul> Example: Checking if a creature offers traveling service <pre><code>--- This function returns `true` if given NPC\n--- or creature offers traveling service.\n---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance\n---@return boolean\nlocal function offersTraveling(actor)\n    local travelDestinations = actor.aiConfig.travelDestinations\n\n    -- Actors that can't transport the player\n    -- have travelDestinations equal to `nil`\n    return travelDestinations ~= nil\nend\n</code></pre>"},{"location":"types/tes3creatureInstance/#attacks","title":"<code>attacks</code>","text":"<p>Simplified access to the base creature's attacks. A table of three attacks, represented by a trio of <code>tes3rangeInt</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3rangeInt[])</li> </ul>"},{"location":"types/tes3creatureInstance/#attributes","title":"<code>attributes</code>","text":"<p>Simplified access to the base creature's attributes. A table of eight numbers, representing the base values for the creature's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3creatureInstance/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#baseobject","title":"<code>baseObject</code>","text":"<p>Access to creature that this one is instanced from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3creature)</li> </ul>"},{"location":"types/tes3creatureInstance/#biped","title":"<code>biped</code>","text":"<p>Access to the creature's biped flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3creatureInstance/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3creatureInstance/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. A collection that contains the currently equipped items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3creatureInstance/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. The creature's current fatigue.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#flies","title":"<code>flies</code>","text":"<p>Access to the creature's flies flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#health","title":"<code>health</code>","text":"<p>Read-only. The creature's current health.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creatureInstance/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3creatureInstance/#isattacked","title":"<code>isAttacked</code>","text":"<p>Read-only. If true, the creature attacked flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#isessential","title":"<code>isEssential</code>","text":"<p>Read-only. If true, the creature essential flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns true.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#isrespawn","title":"<code>isRespawn</code>","text":"<p>Read-only. If true, the creature respawn flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#level","title":"<code>level</code>","text":"<p>Read-only. The base level of the creature.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. The creature's current magicka.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creatureInstance/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. The mobile that the object is represented by.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3creatureInstance/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creatureInstance/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3creatureInstance/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3creatureInstance/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3creatureInstance/#reference","title":"<code>reference</code>","text":"<p>Read-only. The reference that the object is represented by.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3creatureInstance/#respawns","title":"<code>respawns</code>","text":"<p>Access to the creature's respawns flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3creatureInstance/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3creatureInstance/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3creatureInstance/#skills","title":"<code>skills</code>","text":"<p>Simplified access to the base creature's skills. A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3creatureInstance/#soul","title":"<code>soul</code>","text":"<p>Simplified access to the base creature's soul. The amount of soul value that the creature provides.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#soundcreature","title":"<code>soundCreature</code>","text":"<p>Simplified access to the base creature's sound generator. A creature to use instead of this one for sound generation.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3creature)</li> </ul>"},{"location":"types/tes3creatureInstance/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3creatureInstance/#spells","title":"<code>spells</code>","text":"<p>Read-only. Quick access to the base creature's spell list. It is a <code>tes3spellList</code>, which is a list wrapper with helper functions. The actual list is accessed with <code>.iterator</code>. e.g. <code>for _, spell in pairs(creature.spells.iterator) do print(spell.name) end</code></p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3creatureInstance/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3creatureInstance/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#swims","title":"<code>swims</code>","text":"<p>Access to the creature's swims flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#type","title":"<code>type</code>","text":"<p>Simplified access to the base creature's type. The type of the creature, maps to values in <code>tes3.creatureType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3creatureInstance/#usesequipment","title":"<code>usesEquipment</code>","text":"<p>Access to the creature's usesEquipment flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#walks","title":"<code>walks</code>","text":"<p>Access to the creature's walks flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#weapon","title":"<code>weapon</code>","text":"<p>Read-only. The creature's currently equipped weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weapon)</li> </ul>"},{"location":"types/tes3creatureInstance/#methods","title":"Methods","text":""},{"location":"types/tes3creatureInstance/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3creatureInstance/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3creatureInstance/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3creatureInstance/#reevaluateequipment","title":"<code>reevaluateEquipment</code>","text":"<p>Causes the creature to reevaluate its equipment choices and equip the best available.</p> <pre><code>myObject:reevaluateEquipment()\n</code></pre>"},{"location":"types/tes3creatureInstance/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/","title":"tes3dataHandler","text":""},{"location":"types/tes3dataHandler/#tes3datahandler","title":"tes3dataHandler","text":"<p>A core game object used for storing both active and non-dynamic gameplay data.</p>"},{"location":"types/tes3dataHandler/#properties","title":"Properties","text":""},{"location":"types/tes3dataHandler/#backgroundthread","title":"<code>backgroundThread</code>","text":"<p>Read-only. A Windows handle to the background processing thread.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dataHandler/#backgroundthreadid","title":"<code>backgroundThreadId</code>","text":"<p>Read-only. The thread ID for the background processing thread.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dataHandler/#backgroundthreadrunning","title":"<code>backgroundThreadRunning</code>","text":"<p>Read-only. Access to the running state for the background processing thread.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#cellchanged","title":"<code>cellChanged</code>","text":"<p>Read-only. A flag set for the frame that the player has changed cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#centralgridx","title":"<code>centralGridX</code>","text":"<p>Read-only. The position of the origin horizontal grid coordinate.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#centralgridy","title":"<code>centralGridY</code>","text":"<p>Read-only. The position of the origin longitudinal grid coordinate.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#currentambientwatersound","title":"<code>currentAmbientWaterSound</code>","text":"<p>Access to the current ambient water sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3dataHandler/#currentcell","title":"<code>currentCell</code>","text":"<p>Read-only. Access to the cell that the player is currently in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3dataHandler/#currentinteriorcell","title":"<code>currentInteriorCell</code>","text":"<p>Read-only. Access to the current interior cell, if the player is in an interior.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3dataHandler/#dontthreadload","title":"<code>dontThreadLoad</code>","text":"<p>Access to dontThreadLoad setting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#exteriorcells","title":"<code>exteriorCells</code>","text":"<p>Read-only. A table of nine <code>tes3cellExteriorData</code> objects for all loaded exterior cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dataHandlerExteriorCellData[])</li> </ul>"},{"location":"types/tes3dataHandler/#lastexteriorcell","title":"<code>lastExteriorCell</code>","text":"<p>Read-only. Access to the last visited exterior cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3dataHandler/#mainthread","title":"<code>mainThread</code>","text":"<p>Read-only. A Windows handle to the main execution thread.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dataHandler/#mainthreadid","title":"<code>mainThreadId</code>","text":"<p>Read-only. The thread ID for the main execution thread.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dataHandler/#nondynamicdata","title":"<code>nonDynamicData</code>","text":"<p>Read-only. A child structure where core game objects are held.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3nonDynamicData)</li> </ul>"},{"location":"types/tes3dataHandler/#suppressthreadload","title":"<code>suppressThreadLoad</code>","text":"<p>Access to suppressThreadLoad setting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#threadsleeptime","title":"<code>threadSleepTime</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dataHandler/#usecelltransitionfader","title":"<code>useCellTransitionFader</code>","text":"<p>An engine flag that controls if there is a fade in/out between cells.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dataHandler/#worldlandscaperoot","title":"<code>worldLandscapeRoot</code>","text":"<p>Read-only. Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3dataHandler/#worldobjectroot","title":"<code>worldObjectRoot</code>","text":"<p>Read-only. Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3dataHandler/#worldpickobjectroot","title":"<code>worldPickObjectRoot</code>","text":"<p>Read-only. Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3dataHandler/#methods","title":"Methods","text":""},{"location":"types/tes3dataHandler/#updatecollisiongroupsforactivecells","title":"<code>updateCollisionGroupsForActiveCells</code>","text":"<p>No description yet available.</p> <pre><code>myObject:updateCollisionGroupsForActiveCells({ force = ..., isResettingData = ..., resetCollisionGroups = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>force</code> (boolean): Default: <code>true</code>.</li> <li><code>isResettingData</code> (boolean): Default: <code>false</code>.</li> <li><code>resetCollisionGroups</code> (boolean): Default: <code>true</code>.</li> </ul> </li> </ul>"},{"location":"types/tes3dataHandlerExteriorCellData/","title":"tes3dataHandlerExteriorCellData","text":""},{"location":"types/tes3dataHandlerExteriorCellData/#tes3datahandlerexteriorcelldata","title":"tes3dataHandlerExteriorCellData","text":"<p>A structure the data handler uses to track loaded exterior cell data.</p>"},{"location":"types/tes3dataHandlerExteriorCellData/#properties","title":"Properties","text":""},{"location":"types/tes3dataHandlerExteriorCellData/#cell","title":"<code>cell</code>","text":"<p>Read-only. The exterior cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3dataHandlerExteriorCellData/#loadingflags","title":"<code>loadingFlags</code>","text":"<p>Read-only. Direct access to cell load flags. Shouldn't be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogue/","title":"Tes3dialogue","text":""},{"location":"types/tes3dialogue/#tes3dialogue","title":"tes3dialogue","text":"<p>A parent-level dialogue, such as a topic, voice, greeting, persuasion response, or journal.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3dialogue/#properties","title":"Properties","text":""},{"location":"types/tes3dialogue/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3dialogue/#info","title":"<code>info</code>","text":"<p>Read-only. A collection of individual entries in the dialogue.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogueInfo[])</li> </ul>"},{"location":"types/tes3dialogue/#journalindex","title":"<code>journalIndex</code>","text":"<p>For journal dialogues, the currently active journal index.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3dialogue/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogue/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogue/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3dialogue/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#type","title":"<code>type</code>","text":"<p>Read-only. The type of the dialogue. Maps to values in <code>tes3.dialogueType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogue/#methods","title":"Methods","text":""},{"location":"types/tes3dialogue/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3dialogue/#addtojournal","title":"<code>addToJournal</code>","text":"<p>Adds the dialogue to the player's journal, if applicable, at a given index.</p> <pre><code>local result = myObject:addToJournal({ index = ..., actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>index</code> (number): Default: <code>0</code>.</li> <li><code>actor</code> (tes3mobileActor, tes3reference, string): Default: <code>tes3.player</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogue/#getinfo","title":"<code>getInfo</code>","text":"<p>Fetches the info that a given actor would produce for the dialogue.</p> <pre><code>local result = myObject:getInfo({ actor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3mobileActor, tes3reference, string)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogueInfo)</li> </ul>"},{"location":"types/tes3dialogue/#getjournalinfo","title":"<code>getJournalInfo</code>","text":"<p>Retrieves the info object for a journal. By default this will return the info for the player's current journal index for this dialogue. An index can be provided to fetch a specific index's related info.</p> <pre><code>local journalInfo = myObject:getJournalInfo(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (number): Optional. The index of the journal to fetch the info for. If not provided, the current player's journal index is used.</li> </ul> <p>Returns:</p> <ul> <li><code>journalInfo</code> (tes3dialogueInfo)</li> </ul>"},{"location":"types/tes3dialogue/#loadquestname","title":"<code>loadQuestName</code>","text":"<p>This method finds the info that contains the quest name, then loads and returns its text. This method accesses the disk, and may be slow to operate. For dialogues that aren't journal-based, this will be <code>nil</code>.</p> <pre><code>local questName = myObject:loadQuestName()\n</code></pre> <p>Returns:</p> <ul> <li><code>questName</code> (string, nil)</li> </ul>"},{"location":"types/tes3dialogueInfo/","title":"tes3dialogueInfo","text":""},{"location":"types/tes3dialogueInfo/#tes3dialogueinfo","title":"tes3dialogueInfo","text":"<p>A child for a given dialogue. Whereas a dialogue may be a conversation topic, a <code>tes3dialogueInfo</code> would be an individual response.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3dialogueInfo/#properties","title":"Properties","text":""},{"location":"types/tes3dialogueInfo/#actor","title":"<code>actor</code>","text":"<p>Read-only. The speaker's actor that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actor)</li> </ul>"},{"location":"types/tes3dialogueInfo/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#cell","title":"<code>cell</code>","text":"<p>Read-only. The speaker's current cell that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3dialogueInfo/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#disposition","title":"<code>disposition</code>","text":"<p>The minimum disposition that the info is filtered for. For journal-based dialogues, this is the same as the <code>journalIndex</code> property, which should be used instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#firstheardfrom","title":"<code>firstHeardFrom</code>","text":"<p>The actor that the player first heard the info from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actor)</li> </ul>"},{"location":"types/tes3dialogueInfo/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3dialogueInfo/#isquestfinished","title":"<code>isQuestFinished</code>","text":"<p>Quick access to the \"quest finished\" flag. For dialogues that aren't journal-based, this will be <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean, nil)</li> </ul>"},{"location":"types/tes3dialogueInfo/#isquestname","title":"<code>isQuestName</code>","text":"<p>Quick access to the \"quest name\" flag. If this is true, this info contains the name of the quest. For dialogues that aren't journal-based, this will be <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean, nil)</li> </ul>"},{"location":"types/tes3dialogueInfo/#isquestrestart","title":"<code>isQuestRestart</code>","text":"<p>Quick access to the \"quest restart\" flag. For dialogues that aren't journal-based, this will be <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean, nil)</li> </ul>"},{"location":"types/tes3dialogueInfo/#journalindex","title":"<code>journalIndex</code>","text":"<p>The current index for the quest. For dialogues that aren't journal-based, this will be <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3dialogueInfo/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#npcclass","title":"<code>npcClass</code>","text":"<p>Read-only. The speaker's class that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3class)</li> </ul>"},{"location":"types/tes3dialogueInfo/#npcfaction","title":"<code>npcFaction</code>","text":"<p>Read-only. The speaker's faction that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3faction)</li> </ul>"},{"location":"types/tes3dialogueInfo/#npcrace","title":"<code>npcRace</code>","text":"<p>Read-only. The speaker's race that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actor)</li> </ul>"},{"location":"types/tes3dialogueInfo/#npcrank","title":"<code>npcRank</code>","text":"<p>Read-only. The speaker's faction rank that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#npcsex","title":"<code>npcSex</code>","text":"<p>Read-only. The speaker's sex that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#pcfaction","title":"<code>pcFaction</code>","text":"<p>Read-only. The player's joined faction that the info is filtered for.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#pcrank","title":"<code>pcRank</code>","text":"<p>Read-only. The player's rank required rank in the speaker's faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3dialogueInfo/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#text","title":"<code>text</code>","text":"<p>Read-only. String contents for the info. This is not kept in memory, and must be loaded from files for each call.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3dialogueInfo/#type","title":"<code>type</code>","text":"<p>Read-only. The type of the info. Maps to values in <code>tes3.dialogueType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3dialogueInfo/#methods","title":"Methods","text":""},{"location":"types/tes3dialogueInfo/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3dialogueInfo/#filter","title":"<code>filter</code>","text":"<p>This method filters the associated dialogue info for given arguments and returns true if the dialogue info filtering passes. This method rises <code>infoFilter</code> event.</p> <pre><code>local result = myObject:filter(actor, reference, source, dialogue)\n</code></pre> <p>Parameters:</p> <ul> <li><code>actor</code> (tes3object)</li> <li><code>reference</code> (tes3reference)</li> <li><code>source</code> (number)</li> <li><code>dialogue</code> (tes3dialogue)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3dialogueInfo/#finddialogue","title":"<code>findDialogue</code>","text":"<p>This method searches for the dialogue that this info belongs to.</p> <pre><code>local dialogue = myObject:findDialogue()\n</code></pre> <p>Returns:</p> <ul> <li><code>dialogue</code> (tes3dialogue)</li> </ul>"},{"location":"types/tes3dialogueInfo/#runscript","title":"<code>runScript</code>","text":"<p>This method runs the dialogue info's associated script on a given reference.</p> <pre><code>myObject:runScript(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference): The reference on which to run the script on.</li> </ul>"},{"location":"types/tes3directInputMouseState/","title":"tes3directInputMouseState","text":""},{"location":"types/tes3directInputMouseState/#tes3directinputmousestate","title":"tes3directInputMouseState","text":"<p>A raw DirectInput mouse state.</p>"},{"location":"types/tes3directInputMouseState/#properties","title":"Properties","text":""},{"location":"types/tes3directInputMouseState/#buttons","title":"<code>buttons</code>","text":"<p>Read-only. The array-style access to 8 buttons states available on the mouse. Not all may be used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3directInputMouseState/#x","title":"<code>x</code>","text":"<p>A basic property of the mouse for the X-axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3directInputMouseState/#y","title":"<code>y</code>","text":"<p>A basic property of the mouse for the Y-axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3directInputMouseState/#z","title":"<code>z</code>","text":"<p>A basic property of the mouse for the Z-axis. This is typically the scroll wheel.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3door/","title":"Tes3door","text":""},{"location":"types/tes3door/#tes3door","title":"tes3door","text":"<p>A door game object. Data specific to a single door is stored on the door reference as destination and lock attachments. See <code>tes3reference</code> for details.</p> <p>There is a special-case door with id <code>PrisonMarker</code> used for finding the nearest prison when the player is sent to jail. You should normally exclude this if you are iterating over all doors. Use the <code>object.isLocationMarker</code> property to detect these markers.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3door/#properties","title":"Properties","text":""},{"location":"types/tes3door/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3door/#closesound","title":"<code>closeSound</code>","text":"<p>The sound to be played when the door closes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3door/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3door/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3door/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3door/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3door/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3door/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3door/#opensound","title":"<code>openSound</code>","text":"<p>The sound to be played when the door opens.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3door/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3door/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3door/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3door/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3door/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3door/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3door/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3door/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3door/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3door/#methods","title":"Methods","text":""},{"location":"types/tes3door/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3effect/","title":"Tes3effect","text":""},{"location":"types/tes3effect/#tes3effect","title":"tes3effect","text":"<p>A structure that defines information for an effect and its associated variables, typically found on spells, alchemy, and enchantments.</p>"},{"location":"types/tes3effect/#properties","title":"Properties","text":""},{"location":"types/tes3effect/#attribute","title":"<code>attribute</code>","text":"<p>The attribute associated with this effect, or <code>nil</code> if no attribute is used. Maps to values from <code>tes3.attribute</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer, nil)</li> </ul>"},{"location":"types/tes3effect/#cost","title":"<code>cost</code>","text":"<p>The base magicka cost of this effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3effect/#duration","title":"<code>duration</code>","text":"<p>How long the effect should last.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#id","title":"<code>id</code>","text":"<p>The base <code>tes3magicEffect</code> ID that the effect uses. Maps to values from <code>tes3.effect</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#max","title":"<code>max</code>","text":"<p>The maximum magnitude of the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#min","title":"<code>min</code>","text":"<p>The minimum magnitude of the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#object","title":"<code>object</code>","text":"<p>Read-only. Fetches the <code>tes3magicEffect</code> for the given id used.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicEffect)</li> </ul>"},{"location":"types/tes3effect/#radius","title":"<code>radius</code>","text":"<p>The radius of the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#rangetype","title":"<code>rangeType</code>","text":"<p>Determines if the effect is self, touch, or target ranged. Maps to <code>tes3.effectRange</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3effect/#skill","title":"<code>skill</code>","text":"<p>The skill associated with this effect, or <code>nil</code> if no skill is used. Maps to values from <code>tes3.skill</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer, nil)</li> </ul>"},{"location":"types/tes3enchantment/","title":"Tes3enchantment","text":""},{"location":"types/tes3enchantment/#tes3enchantment","title":"tes3enchantment","text":"<p>An enchantment game object.</p> <p>This type inherits the following: tes3object, tes3baseObject</p>"},{"location":"types/tes3enchantment/#properties","title":"Properties","text":""},{"location":"types/tes3enchantment/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#casttype","title":"<code>castType</code>","text":"<p>The enchantment's cast type. Maps to <code>tes3.enchantmentType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#chargecost","title":"<code>chargeCost</code>","text":"<p>The cost of using the enchantment.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#effects","title":"<code>effects</code>","text":"<p>Read-only. An array-style table of the <code>tes3effect</code> data on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3effect[])</li> </ul> Example: Determining if an enchantment is hostile <p>The following function returns <code>true</code> if the enchantment contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if use of enchantment on an NPC is considered an offense.</p> <pre><code>--- @param magicSource tes3spell|tes3enchantment|tes3alchemy\nlocal function isSpellHostile(magicSource)\n    for _, effect in ipairs(magicSource.effects) do\n        if (effect.object.isHarmful) then\n            -- If one of the spell's effects is harmful, then\n            -- `true` is returned and function ends here.\n            return true\n        end\n    end\n    -- If no harmful effect was found then return `false`.\n    return false\nend\n</code></pre>"},{"location":"types/tes3enchantment/#flags","title":"<code>flags</code>","text":"<p>A bit field for the enchantment's flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3enchantment/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#maxcharge","title":"<code>maxCharge</code>","text":"<p>The maximum charge for the associated enchantment.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3enchantment/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3enchantment/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3enchantment/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3enchantment/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3enchantment/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3enchantment/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3enchantment/#methods","title":"Methods","text":""},{"location":"types/tes3enchantment/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3enchantment/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3enchantment/#getactiveeffectcount","title":"<code>getActiveEffectCount</code>","text":"<p>Returns the amount of effects the <code>tes3enchantment</code> object has.</p> <pre><code>local count = myObject:getActiveEffectCount()\n</code></pre> <p>Returns:</p> <ul> <li><code>count</code> (number)</li> </ul>"},{"location":"types/tes3enchantment/#getfirstindexofeffect","title":"<code>getFirstIndexOfEffect</code>","text":"<p>Returns the index of a first effect of a given effectId in the parent <code>tes3enchantment</code> object.</p> <pre><code>local index = myObject:getFirstIndexOfEffect(effectId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effectId</code> (number): The effectId to perform a check for. Maps to <code>tes3.effect</code> constants, including magic effects added with <code>tes3.addMagicEffect()</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number)</li> </ul>"},{"location":"types/tes3equipmentStack/","title":"tes3equipmentStack","text":""},{"location":"types/tes3equipmentStack/#tes3equipmentstack","title":"tes3equipmentStack","text":"<p>A simple container that holds a relationship between an item, and any associated item data.</p>"},{"location":"types/tes3equipmentStack/#properties","title":"Properties","text":""},{"location":"types/tes3equipmentStack/#itemdata","title":"<code>itemData</code>","text":"<p>Item data associated with the stack's object, if any. All equipped items except ammunition will have itemData.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3equipmentStack/#object","title":"<code>object</code>","text":"<p>Read-only. The core game object that the stack represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3equipmentStackIterator/","title":"tes3equipmentStackIterator","text":""},{"location":"types/tes3equipmentStackIterator/#tes3equipmentstackiterator","title":"tes3equipmentStackIterator","text":"<p>A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail.</p>"},{"location":"types/tes3equipmentStackIterator/#properties","title":"Properties","text":""},{"location":"types/tes3equipmentStackIterator/#count","title":"<code>count</code>","text":"<p>Returns the amount of items in the iterator.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3equipmentStackIterator/#current","title":"<code>current</code>","text":"<p>A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStackIteratorNode)</li> </ul>"},{"location":"types/tes3equipmentStackIterator/#head","title":"<code>head</code>","text":"<p>The first node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStackIteratorNode)</li> </ul>"},{"location":"types/tes3equipmentStackIterator/#tail","title":"<code>tail</code>","text":"<p>The last node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStackIteratorNode)</li> </ul>"},{"location":"types/tes3equipmentStackIteratorNode/","title":"tes3equipmentStackIteratorNode","text":""},{"location":"types/tes3equipmentStackIteratorNode/#tes3equipmentstackiteratornode","title":"tes3equipmentStackIteratorNode","text":"<p>A node from a collection, which has a link to the previous and next node, as well as its contained data.</p>"},{"location":"types/tes3equipmentStackIteratorNode/#properties","title":"Properties","text":""},{"location":"types/tes3equipmentStackIteratorNode/#nextnode","title":"<code>nextNode</code>","text":"<p>The next node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStackIteratorNode)</li> </ul>"},{"location":"types/tes3equipmentStackIteratorNode/#nodedata","title":"<code>nodeData</code>","text":"<p>The equipment stack object stored in the node.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3equipmentStackIteratorNode/#previousnode","title":"<code>previousNode</code>","text":"<p>The previous node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStackIteratorNode)</li> </ul>"},{"location":"types/tes3faction/","title":"Tes3faction","text":""},{"location":"types/tes3faction/#tes3faction","title":"tes3faction","text":"<p>A faction game object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3faction/#properties","title":"Properties","text":""},{"location":"types/tes3faction/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. An array-style table holding the two attributes that govern advancement. Maps to values in <code>tes3.attribute</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3faction/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3faction/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#name","title":"<code>name</code>","text":"<p>The faction's player-facing name.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3faction/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3faction/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3faction/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#playerexpelled","title":"<code>playerExpelled</code>","text":"<p>The player's expelled state in the faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#playerjoined","title":"<code>playerJoined</code>","text":"<p>The player's join state for the faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#playerrank","title":"<code>playerRank</code>","text":"<p>The player's current rank in the faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3faction/#playerreputation","title":"<code>playerReputation</code>","text":"<p>The player's current reputation in the faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3faction/#ranks","title":"<code>ranks</code>","text":"<p>Read-only. An array-style table holding the ten related <code>tes3factionRank</code>s.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3factionRank[])</li> </ul>"},{"location":"types/tes3faction/#reactions","title":"<code>reactions</code>","text":"<p>Read-only. A collection of <code>tes3factionReaction</code>s.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3factionReaction[])</li> </ul>"},{"location":"types/tes3faction/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table holding the seven skills that govern advancement. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3faction/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3faction/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3faction/#methods","title":"Methods","text":""},{"location":"types/tes3faction/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3faction/#getlowestjoinedreaction","title":"<code>getLowestJoinedReaction</code>","text":"<p>For this faction, this function finds the worst reaction for another faction that the player has joined. It returns that reaction and its associated faction, or <code>nil</code> for both values if the no relationship is applicable.</p> <pre><code>local reaction, faction = myObject:getLowestJoinedReaction()\n</code></pre> <p>Returns:</p> <ul> <li><code>reaction</code> (number, nil): The reaction, if any, that is worst for the player.</li> <li><code>faction</code> (tes3faction, nil): The faction association, if any, that is worst for the player.</li> </ul>"},{"location":"types/tes3faction/#getrankname","title":"<code>getRankName</code>","text":"<p>This function fetches the player-facing name of a rank in the faction.</p> <pre><code>local result = myObject:getRankName(rank)\n</code></pre> <p>Parameters:</p> <ul> <li><code>rank</code> (number): A rank number in range [0, 9] inclusive.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3faction/#getreactionwithfaction","title":"<code>getReactionWithFaction</code>","text":"<p>Returns a reaction value for another faction, or <code>nil</code> if no relationship exists between the two factions.</p> <pre><code>local reaction = myObject:getReactionWithFaction(faction)\n</code></pre> <p>Parameters:</p> <ul> <li><code>faction</code> (tes3faction): Another faction to get a reaction for.</li> </ul> <p>Returns:</p> <ul> <li><code>reaction</code> (number, nil): The reaction, if any, with the other faction.</li> </ul>"},{"location":"types/tes3faction/#setrankname","title":"<code>setRankName</code>","text":"<p>This function changes the player-facing name of a given rank in the faction.</p> <pre><code>myObject:setRankName(rank, name)\n</code></pre> <p>Parameters:</p> <ul> <li><code>rank</code> (number): A rank number in range [0, 9] inclusive.</li> <li><code>name</code> (string): A new name to set.</li> </ul>"},{"location":"types/tes3factionRank/","title":"tes3factionRank","text":""},{"location":"types/tes3factionRank/#tes3factionrank","title":"tes3factionRank","text":"<p>A container describing an individual rank inside a faction. In Morrowind, the player needs to meet all the requirements to advance to a rank in a faction. These include two of the faction's favored attributes, any two of the faction's favored skills and reputation requirement.</p>"},{"location":"types/tes3factionRank/#properties","title":"Properties","text":""},{"location":"types/tes3factionRank/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. An array-style table holding the two attribute requirements.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3factionRank/#reputation","title":"<code>reputation</code>","text":"<p>The reputation requirement to advance to this rank.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3factionRank/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table holding the two skill requirements.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3factionReaction/","title":"tes3factionReaction","text":""},{"location":"types/tes3factionReaction/#tes3factionreaction","title":"tes3factionReaction","text":"<p>A container mapping a reputation for an associated faction.</p>"},{"location":"types/tes3factionReaction/#properties","title":"Properties","text":""},{"location":"types/tes3factionReaction/#faction","title":"<code>faction</code>","text":"<p>Read-only. The faction whose reaction will be adjusted.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3faction)</li> </ul>"},{"location":"types/tes3factionReaction/#reputation","title":"<code>reputation</code>","text":"<p>The reaction adjustment for the faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3fader/","title":"Tes3fader","text":""},{"location":"types/tes3fader/#tes3fader","title":"tes3fader","text":"<p>An object that applies a graphical effect on the screen, such as screen glare or damage coloring. For an example of how to set up a custom fader, see fadersCreated event.</p>"},{"location":"types/tes3fader/#properties","title":"Properties","text":""},{"location":"types/tes3fader/#active","title":"<code>active</code>","text":"<p>The activation state for the fader. Setting this effectively calls activate/deactivate.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3fader/#methods","title":"Methods","text":""},{"location":"types/tes3fader/#activate","title":"<code>activate</code>","text":"<p>Activates a deactivated fader.</p> <pre><code>myObject:activate()\n</code></pre>"},{"location":"types/tes3fader/#deactivate","title":"<code>deactivate</code>","text":"<p>Deactivates an activated fader.</p> <pre><code>myObject:deactivate()\n</code></pre>"},{"location":"types/tes3fader/#fadein","title":"<code>fadeIn</code>","text":"<p>Transitions the fader to a value of <code>1</code> over a given duration.</p> <pre><code>myObject:fadeIn({ duration = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>duration</code> (number): Default: <code>1</code>. The time it takes to fade, in seconds.</li> </ul> </li> </ul>"},{"location":"types/tes3fader/#fadeout","title":"<code>fadeOut</code>","text":"<p>Transitions the fader to a value of <code>0</code> over a given duration.</p> <pre><code>myObject:fadeOut({ duration = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>duration</code> (number): Default: <code>1</code>. The time it takes to fade, in seconds.</li> </ul> </li> </ul>"},{"location":"types/tes3fader/#fadeto","title":"<code>fadeTo</code>","text":"<p>Transitions the fader to a value over a given duration.</p> <pre><code>myObject:fadeTo({ value = ..., duration = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>value</code> (number): Default: <code>1</code>. The value to fade to.</li> <li><code>duration</code> (number): Default: <code>1</code>. The time it takes to fade, in seconds.</li> </ul> </li> </ul>"},{"location":"types/tes3fader/#setcolor","title":"<code>setColor</code>","text":"<p>Applies a coloring effect to the fader. A fader without a texture will apply a colouring effect over the screen. The colour set here can completely change the color of the fader's texture.</p> <pre><code>local result = myObject:setColor({ color = ..., flag = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>color</code> (tes3vector3, table): The RGB values to set in [0.0, 1.0] range.</li> <li><code>flag</code> (boolean): Default: <code>false</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3fader/#settexture","title":"<code>setTexture</code>","text":"<p>This method allows changing the texture of the fader.</p> <pre><code>myObject:setTexture(path)\n</code></pre> <p>Parameters:</p> <ul> <li><code>path</code> (string): A path for the texture that will be displayed on screen.</li> </ul>"},{"location":"types/tes3fader/#update","title":"<code>update</code>","text":"<p>Updates the fader for the current frame. This method needs to be called each frame for fader to be present.</p> <pre><code>myObject:update()\n</code></pre>"},{"location":"types/tes3fader/#updatematerialproperty","title":"<code>updateMaterialProperty</code>","text":"<p>Updates the fader's alpha. The fader needs to be active.</p> <pre><code>myObject:updateMaterialProperty(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number): The opacity of the fader in range [0.0, 1.0]</li> </ul>"},{"location":"types/tes3fader/#functions","title":"Functions","text":""},{"location":"types/tes3fader/#new","title":"<code>new</code>","text":"<p>Creates a new fader, and adds it to the fader system.</p> <pre><code>local fader = tes3fader.new(distance, unknownBool)\n</code></pre> <p>Parameters:</p> <ul> <li><code>distance</code> (number): Optional. If no distance is provided, a distance will be calculated based on current amount of faders, <code>tes3.worldController.projectionDistance</code> and crosshair node's <code>translation.y</code>.</li> <li><code>unknownBool</code> (boolean): Default: <code>true</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>fader</code> (tes3fader)</li> </ul> Example: Creating a new fader <pre><code>-- This is a working example. You are encouraged to create a new file\n-- main.lua, paste this code and see the results in-game!\n-- Use `u` key to activate the fader.\n-- Use `l` and `k` keys to increase or decrease the fader's opacity.\n\n-- This variable is used to store our fader.\nlocal fader = nil\n\nlocal function createFader()\n    fader = tes3fader.new()\n    fader:setColor({\n        -- This changes the color of our fader to green.\n        -- The RGB values are in range [0.0, 1.0].\n        color = { 0.0, 1.0, 0.0 },\n    })\n\n    -- The fader needs to be updated every frame to be rendered correctly.\n    -- You may notice that for this event we have registered a function with\n    -- no name. That is an anonymous function. It works exactly the same as\n    -- any other function. We have a need to register this function inside\n    -- our createFader() function, since our `fader` variable is `nil` at start\n    -- (look up). We can't call fader:update() if fader is `nil`.\n    event.register(tes3.event.enterFrame,\n        function()\n            fader:update()\n        end\n    )\nend\n\n-- The fader needs to be created during `fadersCreated` event,\n-- so our createFader() function is registered for that event.\nevent.register(tes3.event.fadersCreated, createFader)\n\n\nlocal opacity = 0.1\n\nlocal function activateFader()\n    -- The fader needs to be activated first to be visible.\n    fader:activate()\n    -- Now we change its visibility.\n    fader:fadeTo({\n        value = opacity,\n        duration = 3,\n    })\n    tes3.messageBox(\"Welcome to the Fallout mode!\")\nend\n\n-- We registered our activateFader() function on keyDown event, filtered for `u` key.\n-- That makes our activateFader() function called only when `u` is pressed.\nevent.register(tes3.event.keyDown, activateFader, { filter = tes3.scanCode.u })\n\nlocal function increaseOpacity()\n    -- The fader's opacity is in [0.0, 1.0] range.\n    -- Make sure we don't exceed it.\n    if opacity &lt;= 0.9 then\n        opacity = opacity + 0.1\n    else\n        return\n    end\n    -- This method sets the current opacity of our fader\n    -- to the value of `opacity` variable\n    fader:updateMaterialProperty(opacity)\n\n    -- The \"\\n\" sign means insert a new line here.\n    -- The \"%.1f\" code means insert the opacity's value in this text.\n    -- The \".1\" part means show 1 decimal after the decimal point.\n    tes3.messageBox(\"Fader opacity increased.\\nCurrent opacity: %.1f\", opacity)\nend\nevent.register(tes3.event.keyDown, increaseOpacity, { filter = tes3.scanCode.l })\n\nlocal function decreaseOpacity()\n    if opacity &gt;= 0.1 then\n        opacity = opacity - 0.1\n    else\n        return\n    end\n    fader:updateMaterialProperty(opacity)\n    tes3.messageBox(\"Fader opacity decreased.\\nCurrent opacity: %.1f\", opacity)\nend\nevent.register(tes3.event.keyDown, decreaseOpacity, { filter = tes3.scanCode.k })\n</code></pre>"},{"location":"types/tes3game/","title":"Tes3game","text":""},{"location":"types/tes3game/#tes3game","title":"tes3game","text":"<p>A core game object used for storing game settings.</p>"},{"location":"types/tes3game/#properties","title":"Properties","text":""},{"location":"types/tes3game/#activationambientlight","title":"<code>activationAmbientLight</code>","text":"<p>Read-only. An ambiental light inside the <code>worldObjectRoot</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAmbientLight)</li> </ul>"},{"location":"types/tes3game/#debugroot","title":"<code>debugRoot</code>","text":"<p>Read-only. Access to the root of the scene graph of the Debug menu layer.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#fogproperty","title":"<code>fogProperty</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (niFogProperty)</li> </ul>"},{"location":"types/tes3game/#parentwindowhandle","title":"<code>parentWindowHandle</code>","text":"<p>Read-only. The Windows HWND for the parent window.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#playertarget","title":"<code>playerTarget</code>","text":"<p>Read-only. The current activation target.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3game/#renderdistance","title":"<code>renderDistance</code>","text":"<p>The game's rendering distance.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#scenegraphcollidestring","title":"<code>sceneGraphCollideString</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#scenegraphgridstring","title":"<code>sceneGraphGridString</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#scenegraphtexturestring","title":"<code>sceneGraphTextureString</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#screenshotsenabled","title":"<code>screenShotsEnabled</code>","text":"<p>State on if screenshots are enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3game/#screenx","title":"<code>screenX</code>","text":"<p>Read-only. The screen's horizontal position.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#screeny","title":"<code>screenY</code>","text":"<p>Read-only. The screen's vertical position.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#soundquality","title":"<code>soundQuality</code>","text":"<p>Sound quality level.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#volumeeffect","title":"<code>volumeEffect</code>","text":"<p>Mix volumes for effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#volumefootsteps","title":"<code>volumeFootsteps</code>","text":"<p>Mix volumes for footsteps.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#volumemaster","title":"<code>volumeMaster</code>","text":"<p>Mix volumes for all sounds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#volumemedia","title":"<code>volumeMedia</code>","text":"<p>Mix volumes for music.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#volumevoice","title":"<code>volumeVoice</code>","text":"<p>Mix volumes for voices.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#windowhandle","title":"<code>windowHandle</code>","text":"<p>Read-only. The Windows HWND for the window.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3game/#wireframeproperty","title":"<code>wireframeProperty</code>","text":"<p>Read-only. The reused wireframe property, applied when toggling wireframe rendering.</p> <p>Returns:</p> <ul> <li><code>result</code> (niProperty)</li> </ul>"},{"location":"types/tes3game/#worldlandscaperoot","title":"<code>worldLandscapeRoot</code>","text":"<p>Read-only. Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#worldobjectroot","title":"<code>worldObjectRoot</code>","text":"<p>Read-only. Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#worldpickroot","title":"<code>worldPickRoot</code>","text":"<p>Read-only. Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#worldroot","title":"<code>worldRoot</code>","text":"<p>Read-only. Access to the root of the world scene graph. Contains all the 3D geometry. All the other available world root nodes are child nodes of the world root.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3game/#methods","title":"Methods","text":""},{"location":"types/tes3game/#cleartarget","title":"<code>clearTarget</code>","text":"<p>Clears data related to activation, resetting what the player can activate.</p> <pre><code>myObject:clearTarget()\n</code></pre>"},{"location":"types/tes3game/#saveplayeroptions","title":"<code>savePlayerOptions</code>","text":"<p>Saves all options menu settings, including those changed by editing controller variables. Writes to the Windows registry.</p> <p>Options saved:</p> <ul> <li>Difficulty and AI distance</li> <li>Render distance and actor shadow options</li> <li>Volume controls and subtitles</li> <li>All keybinds and mouse sensitivity</li> <li>Use best attack mode and save on rest mode</li> <li>Tooltip delay and menu background alpha</li> </ul> <pre><code>myObject:savePlayerOptions()\n</code></pre>"},{"location":"types/tes3game/#setgamma","title":"<code>setGamma</code>","text":"<p>This method allows changing gamma correction.</p> <pre><code>myObject:setGamma(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/","title":"tes3gameFile","text":""},{"location":"types/tes3gameFile/#tes3gamefile","title":"tes3gameFile","text":"<p>Represents a loaded ESM, ESP, or ESS file.</p>"},{"location":"types/tes3gameFile/#properties","title":"Properties","text":""},{"location":"types/tes3gameFile/#author","title":"<code>author</code>","text":"<p>Read-only. The file's author.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#cellname","title":"<code>cellName</code>","text":"<p>Read-only. The current cell, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#currenthealth","title":"<code>currentHealth</code>","text":"<p>Read-only. The player's health, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#day","title":"<code>day</code>","text":"<p>Read-only. The current day, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#dayspassed","title":"<code>daysPassed</code>","text":"<p>Read-only. The number of days passed, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#description","title":"<code>description</code>","text":"<p>Read-only. The description of the file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#filename","title":"<code>filename</code>","text":"<p>Read-only. The simple filename.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#filesize","title":"<code>fileSize</code>","text":"<p>Read-only. The size of the file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#gamehour","title":"<code>gameHour</code>","text":"<p>Read-only. The current game hour, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#highestformid","title":"<code>highestFormID</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#masterfilesizes","title":"<code>masterFileSizes</code>","text":"<p>Read-only. An array-style table of strings containing the file sizes of masters.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3gameFile/#masternames","title":"<code>masterNames</code>","text":"<p>Read-only. An array-style table of strings containing the name of master files.</p> <p>Returns:</p> <ul> <li><code>result</code> (string[])</li> </ul>"},{"location":"types/tes3gameFile/#masters","title":"<code>masters</code>","text":"<p>Read-only. An array-style table of the tes3gameFiles that this is dependent upon.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3gameFile[])</li> </ul>"},{"location":"types/tes3gameFile/#maxhealth","title":"<code>maxHealth</code>","text":"<p>Read-only. The player's maximum health, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#modifiedtime","title":"<code>modifiedTime</code>","text":"<p>Read-only. The timestamp that the file was modified.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#month","title":"<code>month</code>","text":"<p>Read-only. The current month, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#path","title":"<code>path</code>","text":"<p>Read-only. The path to the file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#playername","title":"<code>playerName</code>","text":"<p>Read-only. The player's name, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameFile/#year","title":"<code>year</code>","text":"<p>Read-only. The current year, from a save game.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameFile/#methods","title":"Methods","text":""},{"location":"types/tes3gameFile/#deletefile","title":"<code>deleteFile</code>","text":"<p>Deletes the file.</p> <pre><code>myObject:deleteFile()\n</code></pre>"},{"location":"types/tes3gameSetting/","title":"tes3gameSetting","text":""},{"location":"types/tes3gameSetting/#tes3gamesetting","title":"tes3gameSetting","text":"<p>A GMST game object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3gameSetting/#properties","title":"Properties","text":""},{"location":"types/tes3gameSetting/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#defaultvalue","title":"<code>defaultValue</code>","text":"<p>Read-only. The default value of the GMST, if no master defines the value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, string)</li> </ul>"},{"location":"types/tes3gameSetting/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameSetting/#index","title":"<code>index</code>","text":"<p>Read-only. The array index for the GMST.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameSetting/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameSetting/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameSetting/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#rawvalue","title":"<code>rawValue</code>","text":"<p>The base value of the game setting, as stored in memory. Prefer to use <code>.value</code> unless you know what you're doing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3gameSetting/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameSetting/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3gameSetting/#type","title":"<code>type</code>","text":"<p>Read-only. The type of the variable, either <code>i</code>, <code>f</code>, or <code>s</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3gameSetting/#value","title":"<code>value</code>","text":"<p>The value of the GMST.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, string)</li> </ul>"},{"location":"types/tes3gameSetting/#methods","title":"Methods","text":""},{"location":"types/tes3gameSetting/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3globalScript/","title":"tes3globalScript","text":""},{"location":"types/tes3globalScript/#tes3globalscript","title":"tes3globalScript","text":"<p>A global script object. Any script (in mwscript) that is not attached to any object is a global script.</p>"},{"location":"types/tes3globalScript/#properties","title":"Properties","text":""},{"location":"types/tes3globalScript/#context","title":"<code>context</code>","text":"<p>Read-only. A special context used for getting and setting script's variables.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptContext)</li> </ul>"},{"location":"types/tes3globalScript/#reference","title":"<code>reference</code>","text":"<p>Read-only. A reference this global script is tied to, if any. If the reference field isn't empty, then the global script in question is a Targeted script (a name given to it in Morrowind Scripting for Dummies).</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3globalScript/#script","title":"<code>script</code>","text":"<p>Read-only. Access to global script object's associated script.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3globalVariable/","title":"tes3globalVariable","text":""},{"location":"types/tes3globalVariable/#tes3globalvariable","title":"tes3globalVariable","text":"<p>A global variable game object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3globalVariable/#properties","title":"Properties","text":""},{"location":"types/tes3globalVariable/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3globalVariable/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3globalVariable/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3globalVariable/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3globalVariable/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3globalVariable/#value","title":"<code>value</code>","text":"<p>The value of the variable. Unlike GMSTs, globals are always numbers.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3globalVariable/#methods","title":"Methods","text":""},{"location":"types/tes3globalVariable/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/","title":"Tes3ingredient","text":""},{"location":"types/tes3ingredient/#tes3ingredient","title":"tes3ingredient","text":"<p>An ingredient game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3ingredient/#properties","title":"Properties","text":""},{"location":"types/tes3ingredient/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3ingredient/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#effectattributeids","title":"<code>effectAttributeIds</code>","text":"<p>Read-only. An array-style table access the attributes associated with the effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3ingredient/#effects","title":"<code>effects</code>","text":"<p>Read-only. An array-style table access to the four ingredient effects. Unlike alchemy or enchanting objects, these are simple numbers representing the effect ID (the values map to <code>tes3.effect</code> table).</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3ingredient/#effectskillids","title":"<code>effectSkillIds</code>","text":"<p>Read-only. An array-style table access the skills associated with the effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3ingredient/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3ingredient/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3ingredient/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3ingredient/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3ingredient/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3ingredient/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3ingredient/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3ingredient/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3ingredient/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3ingredient/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ingredient/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3ingredient/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3ingredient/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3ingredient/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3ingredient/#methods","title":"Methods","text":""},{"location":"types/tes3ingredient/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3inputConfig/","title":"tes3inputConfig","text":""},{"location":"types/tes3inputConfig/#tes3inputconfig","title":"tes3inputConfig","text":"<p>A structure that represents a configured key binding.</p>"},{"location":"types/tes3inputConfig/#properties","title":"Properties","text":""},{"location":"types/tes3inputConfig/#code","title":"<code>code</code>","text":"<p>The scan or input button code for the binding. Device specific. For keyboards, this is a scan code.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inputConfig/#device","title":"<code>device</code>","text":"<p>The index of the device used in the keybinding, such as keyboard, mouse, joystick, or gamepad.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inputController/","title":"tes3inputController","text":""},{"location":"types/tes3inputController/#tes3inputcontroller","title":"tes3inputController","text":"<p>A data structure, off of the world controller, that handles input.</p>"},{"location":"types/tes3inputController/#properties","title":"Properties","text":""},{"location":"types/tes3inputController/#creationflags","title":"<code>creationFlags</code>","text":"<p>Read-only. A bit field representing device capabilities and settings.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inputController/#inputmaps","title":"<code>inputMaps</code>","text":"<p>Read-only. The array-style access to input bindings (tes3inputConfig objects).</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inputConfig[])</li> </ul>"},{"location":"types/tes3inputController/#keyboardstate","title":"<code>keyboardState</code>","text":"<p>Read-only. The array-style access to raw key states.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3inputController/#mousestate","title":"<code>mouseState</code>","text":"<p>Read-only. The raw DirectInput mouse state.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3directInputMouseState)</li> </ul>"},{"location":"types/tes3inputController/#previouskeyboardstate","title":"<code>previousKeyboardState</code>","text":"<p>Read-only. The array-style access to the previous frame's raw key states.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3inputController/#previousmousestate","title":"<code>previousMouseState</code>","text":"<p>Read-only. The raw DirectInput mouse state for the previous state.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3directInputMouseState)</li> </ul>"},{"location":"types/tes3inputController/#methods","title":"Methods","text":""},{"location":"types/tes3inputController/#isaltdown","title":"<code>isAltDown</code>","text":"<p>Returns true if either alt modifier key is pressed.</p> <pre><code>local isPressed = myObject:isAltDown()\n</code></pre> <p>Returns:</p> <ul> <li><code>isPressed</code> (boolean): True if either alt key is pressed.</li> </ul>"},{"location":"types/tes3inputController/#iscapslockactive","title":"<code>isCapsLockActive</code>","text":"<p>Returns true if the caps lock mode is active.</p> <pre><code>local isPressed = myObject:isCapsLockActive()\n</code></pre> <p>Returns:</p> <ul> <li><code>isPressed</code> (boolean): True if caps lock is active.</li> </ul>"},{"location":"types/tes3inputController/#iscontroldown","title":"<code>isControlDown</code>","text":"<p>Returns true if either control modifier key is pressed.</p> <pre><code>local isPressed = myObject:isControlDown()\n</code></pre> <p>Returns:</p> <ul> <li><code>isPressed</code> (boolean): True if either control key is pressed.</li> </ul>"},{"location":"types/tes3inputController/#iskeydown","title":"<code>isKeyDown</code>","text":"<p>Performs a key down test for a given scan key code.</p> <pre><code>local result = myObject:isKeyDown(key)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (number): The scan code to test. Constants available through <code>tes3.scanCode</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#iskeypressedthisframe","title":"<code>isKeyPressedThisFrame</code>","text":"<p>Checks to see if a given scan code is pressed, and wasn't pressed last frame.</p> <pre><code>local result = myObject:isKeyPressedThisFrame(key)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (number): The scan code to test. Constants available through <code>tes3.scanCode</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#iskeyreleasedthisframe","title":"<code>isKeyReleasedThisFrame</code>","text":"<p>Checks to see if a given scan code is released, and was pressed last frame.</p> <pre><code>local result = myObject:isKeyReleasedThisFrame(key)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (number): The scan code to test. Constants available through <code>tes3.scanCode</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#ismousebuttondown","title":"<code>isMouseButtonDown</code>","text":"<p>Returns the mouse down state for a given mouse button.</p> <pre><code>local result = myObject:isMouseButtonDown(button)\n</code></pre> <p>Parameters:</p> <ul> <li><code>button</code> (number): The mouse button to test. Must be between <code>0</code> and <code>7</code>. Left mouse button is <code>0</code>, right is <code>1</code>, and middle is <code>2</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#ismousebuttonpressedthisframe","title":"<code>isMouseButtonPressedThisFrame</code>","text":"<p>Returns true if a mouse button was up last frame, and down this frame.</p> <pre><code>local result = myObject:isMouseButtonPressedThisFrame(button)\n</code></pre> <p>Parameters:</p> <ul> <li><code>button</code> (number): The mouse button to test. Must be between <code>0</code> and <code>7</code>. Left mouse button is <code>0</code>, right is <code>1</code>, and middle is <code>2</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#ismousebuttonreleasedthisframe","title":"<code>isMouseButtonReleasedThisFrame</code>","text":"<p>Returns true if a mouse button was down last frame, and up this frame.</p> <pre><code>local result = myObject:isMouseButtonReleasedThisFrame(button)\n</code></pre> <p>Parameters:</p> <ul> <li><code>button</code> (number): The mouse button to test. Must be between <code>0</code> and <code>7</code>. Left mouse button is <code>0</code>, right is <code>1</code>, and middle is <code>2</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inputController/#isshiftdown","title":"<code>isShiftDown</code>","text":"<p>Returns true if either shift modifier key is pressed. It does not take into account caps lock.</p> <pre><code>local isPressed = myObject:isShiftDown()\n</code></pre> <p>Returns:</p> <ul> <li><code>isPressed</code> (boolean): True if either shift key is pressed.</li> </ul>"},{"location":"types/tes3inputController/#issuperdown","title":"<code>isSuperDown</code>","text":"<p>Returns true if either super/windows modifier key is pressed.</p> <pre><code>local isPressed = myObject:isSuperDown()\n</code></pre> <p>Returns:</p> <ul> <li><code>isPressed</code> (boolean): True if either super/windows key is pressed.</li> </ul>"},{"location":"types/tes3inputController/#keybindtest","title":"<code>keybindTest</code>","text":"<p>Performs a test for a given keybind, and optionally a transition state.</p> <pre><code>local result = myObject:keybindTest(key, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (number): The keybind to test. Constants available through <code>tes3.keybind</code>.</li> <li><code>transition</code> (number): Optional. Transition state, e.g. down, or up. Constants available through <code>tes3.keyTransition</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inventory/","title":"Tes3inventory","text":""},{"location":"types/tes3inventory/#tes3inventory","title":"tes3inventory","text":"<p>An inventory composes of an iterator, and flags caching the state of the inventory.</p>"},{"location":"types/tes3inventory/#properties","title":"Properties","text":""},{"location":"types/tes3inventory/#flags","title":"<code>flags</code>","text":"<p>Read-only. Raw bit-based flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inventory/#items","title":"<code>items</code>","text":"<p>Read-only. Direct acces to the container that holds the inventory's items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul> Example: An example implementation of a generic iteration function for looping over all the items in an inventory using coroutine API from the Lua standard library. <pre><code>--- This is a generic iterator function that is used\n--- to loop over all the items in an inventory\n---@param ref tes3reference\n---@return fun(): tes3item, integer, tes3itemData|nil\nlocal function iterItems(ref)\n    local function iterator()\n        for _, stack in pairs(ref.object.inventory) do\n            ---@cast stack tes3itemStack\n            local item = stack.object\n\n            -- Account for restocking items,\n            -- since their count is negative\n            local count = math.abs(stack.count)\n\n            -- first yield stacks with custom data\n            if stack.variables then\n                for _, data in pairs(stack.variables) do\n                    if data then\n                        coroutine.yield(item, data.count, data)\n                        count = count - data.count\n                    end\n                end\n            end\n            -- then yield all the remaining copies\n            if count &gt; 0 then\n                coroutine.yield(item, count)\n            end\n        end\n    end\n    return coroutine.wrap(iterator)\nend\n\nfor item, count, itemData in iterItems(tes3.player) do\n    debug.log(item)\n    debug.log(count)\n    debug.log(itemData)\nend\n</code></pre>"},{"location":"types/tes3inventory/#methods","title":"Methods","text":""},{"location":"types/tes3inventory/#additem","title":"<code>addItem</code>","text":"<p>Adds an item into the inventory directly. This should not be used, in favor of the <code>tes3.addItem()</code> function.</p> <pre><code>myObject:addItem({ mobile = ..., item = ..., itemData = ..., count = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>mobile</code> (tes3mobileActor, tes3reference, string): Optional. The mobile actor whose stats will be updated.</li> <li><code>item</code> (tes3item): The item to add.</li> <li><code>itemData</code> (tes3itemData): Optional. Any associated item data to add.</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to add.</li> </ul> </li> </ul>"},{"location":"types/tes3inventory/#calculateweight","title":"<code>calculateWeight</code>","text":"<p>Calculates the weight of all items in the container.</p> <pre><code>local result = myObject:calculateWeight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inventory/#contains","title":"<code>contains</code>","text":"<p>Checks to see if the inventory contains an item.</p> <pre><code>local result = myObject:contains(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to check for.</li> <li><code>itemData</code> (tes3itemData): Optional. If provided, it will check for the specific data as well.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inventory/#dropitem","title":"<code>dropItem</code>","text":"<p>Checks to see if the inventory contains an item. This should not be used, instead use the <code>tes3.dropItem()</code> function.</p> <pre><code>myObject:dropItem(mobile, item, itemData, count, position, orientation, ignoreItemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor, tes3reference, string): The mobile actor whose stats will be updated.</li> <li><code>item</code> (tes3item, string): The item to drop.</li> <li><code>itemData</code> (tes3itemData): If provided, it will check for the specific data to drop it.</li> <li><code>count</code> (number): The number of items to drop.</li> <li><code>position</code> (tes3vector3): A vector determining placement location.</li> <li><code>orientation</code> (tes3vector3): A vector determining placement rotation.</li> <li><code>ignoreItemData</code> (boolean)</li> </ul>"},{"location":"types/tes3inventory/#finditemstack","title":"<code>findItemStack</code>","text":"<p>Searches for an item stack in the inventory.</p> <pre><code>local result = myObject:findItemStack(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to search for.</li> <li><code>itemData</code> (tes3itemData): Optional. If provided, it will check for the specific data as well.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack)</li> </ul>"},{"location":"types/tes3inventory/#removeitem","title":"<code>removeItem</code>","text":"<p>Removes an item from the inventory directly. This should not be used, in favor of the <code>tes3.removeItem()</code> function.</p> <pre><code>myObject:removeItem({ mobile = ..., item = ..., itemData = ..., count = ..., deleteItemData = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>mobile</code> (tes3mobileActor, tes3reference, string): Optional. The mobile actor whose stats will be updated.</li> <li><code>item</code> (tes3item): The item to add.</li> <li><code>itemData</code> (tes3itemData): Optional. Any associated item data to add.</li> <li><code>count</code> (number): Default: <code>1</code>. The number of items to add.</li> <li><code>deleteItemData</code> (boolean): Default: <code>false</code>. If set, the itemData will be deleted after being removed.</li> </ul> </li> </ul>"},{"location":"types/tes3inventory/#resolveleveleditems","title":"<code>resolveLeveledItems</code>","text":"<p>Resolves all contained leveled lists and adds the randomized items to the inventory. This should generally not be called directly.</p> <pre><code>myObject:resolveLeveledItems(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor): Optional. The mobile actor whose stats will be updated.</li> </ul>"},{"location":"types/tes3inventoryTile/","title":"tes3inventoryTile","text":""},{"location":"types/tes3inventoryTile/#tes3inventorytile","title":"tes3inventoryTile","text":"<p>An inventory tile, connecting an item, its data, and various related UI elements.</p>"},{"location":"types/tes3inventoryTile/#properties","title":"Properties","text":""},{"location":"types/tes3inventoryTile/#count","title":"<code>count</code>","text":"<p>Read-only. The number of items that the tile represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inventoryTile/#element","title":"<code>element</code>","text":"<p>Read-only. The UI element associated with the tile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3inventoryTile/#flags","title":"<code>flags</code>","text":"<p>Read-only. Direct access to the tile's flags. Use <code>.isBartered</code>, <code>.isBoundItem</code>, or <code>.isEquipped</code> to access individual flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3inventoryTile/#isbartered","title":"<code>isBartered</code>","text":"<p>If <code>true</code>, the tile represents an item being bartered.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inventoryTile/#isbounditem","title":"<code>isBoundItem</code>","text":"<p>Read-only. If <code>true</code>, the tile represents a bound item.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inventoryTile/#isequipped","title":"<code>isEquipped</code>","text":"<p>If <code>true</code>, the tile represents an item that is equipped.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3inventoryTile/#item","title":"<code>item</code>","text":"<p>Read-only. The item the tile represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3inventoryTile/#itemdata","title":"<code>itemData</code>","text":"<p>Read-only. The item data associated with this tile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3inventoryTile/#type","title":"<code>type</code>","text":"<p>Read-only. The type of tile represented. Maps to values in <code>tes3.inventoryTileType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3item/","title":"Tes3item","text":""},{"location":"types/tes3item/#tes3item","title":"tes3item","text":"<p>An item object.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3item/#properties","title":"Properties","text":""},{"location":"types/tes3item/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3item/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3item/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3item/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3item/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3item/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3item/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3item/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3item/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3item/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3item/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3item/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3item/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3item/#methods","title":"Methods","text":""},{"location":"types/tes3item/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3itemData/","title":"tes3itemData","text":""},{"location":"types/tes3itemData/#tes3itemdata","title":"tes3itemData","text":"<p>A set of variables that differentiates one item from another.</p>"},{"location":"types/tes3itemData/#properties","title":"Properties","text":""},{"location":"types/tes3itemData/#charge","title":"<code>charge</code>","text":"<p>The charge of the item. Provides incorrect values on misc items, which instead have a soul actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3itemData/#condition","title":"<code>condition</code>","text":"<p>The condition/health of the item. Provides incorrect values on light items, which instead have a <code>timeLeft</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3itemData/#context","title":"<code>context</code>","text":"<p>Returns an ease of use script context for variable access.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptContext)</li> </ul>"},{"location":"types/tes3itemData/#count","title":"<code>count</code>","text":"<p>The total number of identical items represented by this data. Reserved for use by in-world references. It should always be <code>1</code> for items in inventories. Inventories utilize the stack count in <code>tes3itemStack</code> object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3itemData/#data","title":"<code>data</code>","text":"<p>A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For data that doesn't persist, use <code>tempData</code>.</p> <p>There is a guide available here on using this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"types/tes3itemData/#owner","title":"<code>owner</code>","text":"<p>The owner of the associated item. An item can have an owner or it can be faction-owned.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3npc, tes3faction, nil)</li> </ul>"},{"location":"types/tes3itemData/#requirement","title":"<code>requirement</code>","text":"<p>A requirement, typically associated with ownership and when the player may freely interact with an object. The type depends on the owner. Faction owners provide a required rank as a number, while NPCs provide a global variable to check.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable, number, nil)</li> </ul>"},{"location":"types/tes3itemData/#script","title":"<code>script</code>","text":"<p>Read-only. The script associated with the scriptVariables.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3itemData/#scriptvariables","title":"<code>scriptVariables</code>","text":"<p>Access to the structure where individual mwscript data is stored.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptVariables)</li> </ul>"},{"location":"types/tes3itemData/#soul","title":"<code>soul</code>","text":"<p>Only available on misc items. The actor that is stored inside the soul gem.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actor)</li> </ul>"},{"location":"types/tes3itemData/#tempdata","title":"<code>tempData</code>","text":"<p>A generic lua table that data can be written to, but is not synced to/from a save.</p> <p>There is a guide available here on using this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"types/tes3itemData/#timeleft","title":"<code>timeLeft</code>","text":"<p>The time remaining on a light. Provides incorrect values on non-light items, which instead have a <code>condition</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3itemStack/","title":"tes3itemStack","text":""},{"location":"types/tes3itemStack/#tes3itemstack","title":"tes3itemStack","text":"<p>A complex container that holds a relationship between an item, and zero or more associated item datas.</p> <p>Item stack represents all copies of an item with the same id. Some of those may have itemData and some may not. E.g. you might have two lockpicks and one of them has fewer uses remaining. So <code>itemStack.variables</code> is a list of different itemData for each thing in the stack, not a single itemData.</p>"},{"location":"types/tes3itemStack/#properties","title":"Properties","text":""},{"location":"types/tes3itemStack/#count","title":"<code>count</code>","text":"<p>The total number of items in the stack.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3itemStack/#object","title":"<code>object</code>","text":"<p>Read-only. The core game object that the stack represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3itemStack/#variables","title":"<code>variables</code>","text":"<p>A collection of variables that are associated with the stack's object, or nil if there aren't any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData[])</li> </ul> Example: In the iterItems() function we can see that the an item stack can consist of items with itemData and items without it <pre><code>--- This is a generic iterator function that is used\n--- to loop over all the items in an inventory\n---@param ref tes3reference\n---@return fun(): tes3item, integer, tes3itemData|nil\nlocal function iterItems(ref)\n    local function iterator()\n        for _, stack in pairs(ref.object.inventory) do\n            ---@cast stack tes3itemStack\n            local item = stack.object\n\n            -- Account for restocking items,\n            -- since their count is negative\n            local count = math.abs(stack.count)\n\n            -- first yield stacks with custom data\n            if stack.variables then\n                for _, data in pairs(stack.variables) do\n                    if data then\n                        coroutine.yield(item, data.count, data)\n                        count = count - data.count\n                    end\n                end\n            end\n            -- then yield all the remaining copies\n            if count &gt; 0 then\n                coroutine.yield(item, count)\n            end\n        end\n    end\n    return coroutine.wrap(iterator)\nend\n\nfor item, count, itemData in iterItems(tes3.player) do\n    debug.log(item)\n    debug.log(count)\n    debug.log(itemData)\nend\n</code></pre>"},{"location":"types/tes3iterator/","title":"Tes3iterator","text":""},{"location":"types/tes3iterator/#tes3iterator","title":"tes3iterator","text":"<p>A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail.</p>"},{"location":"types/tes3iterator/#properties","title":"Properties","text":""},{"location":"types/tes3iterator/#current","title":"<code>current</code>","text":"<p>Read-only. A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iteratorNode)</li> </ul>"},{"location":"types/tes3iterator/#head","title":"<code>head</code>","text":"<p>Read-only. The first node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iteratorNode)</li> </ul>"},{"location":"types/tes3iterator/#tail","title":"<code>tail</code>","text":"<p>Read-only. The last node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iteratorNode)</li> </ul>"},{"location":"types/tes3iterator/#methods","title":"Methods","text":""},{"location":"types/tes3iterator/#size","title":"<code>size</code>","text":"<p>Read-only. Returns the amount of items in the iterator.</p> <pre><code>local result = myObject:size()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Iterating Lists <p>In this example, a list is iterated using the pairs iterator function. The node can be used directly.</p> <pre><code>-- Check player equipment. Equipment list contains only equipped items.\nfor _, stack in pairs(tes3.player.object.equipment) do\n    -- stack is type tes3equipmentStack, as tes3.player.object.equipment is a list of tes3equipmentStack objects.\n    mwse.log(\"Equipment object ID: %s\", stack.object.id)\nend\n\n-- This will iterate over all the items in player's inventory including equipped items.\nfor _, itemStack in pairs(tes3.player.object.inventory) do\n    -- itemStack is of tes3itemStack type\n    local item = itemStack.object\n    mwse.log(\"The player has %s of %s in inventory.\", itemStack.count, item.id)\nend\n\n-- tes3.player.object.spells is a tes3spellList with helper functions.\n-- The actual list is spells.iterator.\nfor _, spell in pairs(tes3.player.object.spells.iterator) do\n    -- spell is type tes3spell, as tes3.player.object.spells.iterator is a list of tes3spell objects.\n    mwse.log(\"Spell %s, cost %d\", spell.name, spell.magickaCost)\nend\n</code></pre>"},{"location":"types/tes3iteratorNode/","title":"tes3iteratorNode","text":""},{"location":"types/tes3iteratorNode/#tes3iteratornode","title":"tes3iteratorNode","text":"<p>A node from a collection, which has a link to the previous and next node, as well as its contained data.</p>"},{"location":"types/tes3iteratorNode/#properties","title":"Properties","text":""},{"location":"types/tes3iteratorNode/#data","title":"<code>data</code>","text":"<p>Read-only. The data stored in the node. Its type depends on the specific collection.</p>"},{"location":"types/tes3iteratorNode/#head","title":"<code>head</code>","text":"<p>Read-only. The previous node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iteratorNode)</li> </ul>"},{"location":"types/tes3iteratorNode/#tail","title":"<code>tail</code>","text":"<p>Read-only. The next node in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iteratorNode)</li> </ul>"},{"location":"types/tes3land/","title":"Tes3land","text":""},{"location":"types/tes3land/#tes3land","title":"tes3land","text":"<p>A heightfield landscape used by an exterior cell.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3land/#properties","title":"Properties","text":""},{"location":"types/tes3land/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#flags","title":"<code>flags</code>","text":"<p>Read-only. A numeric representation of the packed bit flags for the landscape, typically accessed from other properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#gridx","title":"<code>gridX</code>","text":"<p>Read-only. The cell's X grid coordinate.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#gridy","title":"<code>gridY</code>","text":"<p>Read-only. The cell's Y grid coordinate.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3land/#maxheight","title":"<code>maxHeight</code>","text":"<p>Read-only. The height of the highest land vertex.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#minheight","title":"<code>minHeight</code>","text":"<p>Read-only. The height of the lowest land vertex.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3land/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#scenenode","title":"<code>sceneNode</code>","text":"<p>Read-only. The scene graph node for the landscape. Contains sub nodes for land patches.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3land/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3land/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3land/#textureindices","title":"<code>textureIndices</code>","text":"<p>Read-only. An array containing texture index numbers. They are 0-based indexes. They index into the global land texture list, <code>tes3.dataHandler.nonDynamicData.landTextures</code>. Adjustment is required when indexing the list through lua.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3land/#methods","title":"Methods","text":""},{"location":"types/tes3land/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3landTexture/","title":"tes3landTexture","text":""},{"location":"types/tes3landTexture/#tes3landtexture","title":"tes3landTexture","text":"<p>Data for a texture used by a landscape object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3landTexture/#properties","title":"Properties","text":""},{"location":"types/tes3landTexture/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#filename","title":"<code>filename</code>","text":"<p>Read-only. The texture filename.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3landTexture/#id","title":"<code>id</code>","text":"<p>Read-only. The id string.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3landTexture/#index","title":"<code>index</code>","text":"<p>Read-only. The 0-based index number, as used in landscape objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3landTexture/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3landTexture/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3landTexture/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3landTexture/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3landTexture/#texture","title":"<code>texture</code>","text":"<p>Read-only. The texture object. Only available when the texture is loaded in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture)</li> </ul>"},{"location":"types/tes3landTexture/#methods","title":"Methods","text":""},{"location":"types/tes3landTexture/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3leveledCreature/","title":"tes3leveledCreature","text":""},{"location":"types/tes3leveledCreature/#tes3leveledcreature","title":"tes3leveledCreature","text":"<p>A leveled creature game object.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3leveledCreature/#properties","title":"Properties","text":""},{"location":"types/tes3leveledCreature/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3leveledCreature/#calculatefromalllevels","title":"<code>calculateFromAllLevels</code>","text":"<p>If <code>true</code>, the leveled list is picked from the entire level range, instead of just the highest.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#chancefornothing","title":"<code>chanceForNothing</code>","text":"<p>The percent chance, from <code>0</code> to <code>100</code>, for no object to be chosen.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#count","title":"<code>count</code>","text":"<p>Read-only. The number of possible options in the leveled object container.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#flags","title":"<code>flags</code>","text":"<p>A numerical representation of bit flags for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3leveledCreature/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#list","title":"<code>list</code>","text":"<p>Read-only. The collection that contains <code>tes3leveledListNode</code>s.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3leveledListNode[])</li> </ul>"},{"location":"types/tes3leveledCreature/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3leveledCreature/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3leveledCreature/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3leveledCreature/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledCreature/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3leveledCreature/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3leveledCreature/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3leveledCreature/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3leveledCreature/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#methods","title":"Methods","text":""},{"location":"types/tes3leveledCreature/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3leveledCreature/#insert","title":"<code>insert</code>","text":"<p>This function inserts given creature in the creature leveled list. Returns <code>true</code> if the operation was successful.</p> <pre><code>local result = myObject:insert(entry, level)\n</code></pre> <p>Parameters:</p> <ul> <li><code>entry</code> (tes3baseObject): A creature to insert.</li> <li><code>level</code> (number): At which player level the creature can be resolved from the leveled list.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledCreature/#pickfrom","title":"<code>pickFrom</code>","text":"<p>Chooses a random item from the list, based on the player's level.</p> <pre><code>local result = myObject:pickFrom()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3creature)</li> </ul>"},{"location":"types/tes3leveledCreature/#remove","title":"<code>remove</code>","text":"<p>This function removes a creature from the creature leveled list. Returns <code>true</code> if the operation was successful.</p> <pre><code>local result = myObject:remove(entry, level)\n</code></pre> <p>Parameters:</p> <ul> <li><code>entry</code> (tes3baseObject): A creature to remove.</li> <li><code>level</code> (number): At which player level the creature could be resolved from the leveled list.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/","title":"tes3leveledItem","text":""},{"location":"types/tes3leveledItem/#tes3leveleditem","title":"tes3leveledItem","text":"<p>A leveled creature game object.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3leveledItem/#properties","title":"Properties","text":""},{"location":"types/tes3leveledItem/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3leveledItem/#calculateforeachitem","title":"<code>calculateForEachItem</code>","text":"<p>If <code>true</code>, each entry is rolled in the leveled list when resolving items. This can result in multiple items from one list being added.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#calculatefromalllevels","title":"<code>calculateFromAllLevels</code>","text":"<p>If <code>true</code>, the leveled list is picked from the entire level range, instead of just the highest.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#chancefornothing","title":"<code>chanceForNothing</code>","text":"<p>The percent chance, from <code>0</code> to <code>100</code>, for no object to be chosen.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#count","title":"<code>count</code>","text":"<p>Read-only. The number of possible options in the leveled object container.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#flags","title":"<code>flags</code>","text":"<p>A numerical representation of bit flags for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3leveledItem/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#list","title":"<code>list</code>","text":"<p>Read-only. The collection that contains <code>tes3leveledListNode</code>s.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3leveledListNode[])</li> </ul>"},{"location":"types/tes3leveledItem/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3leveledItem/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3leveledItem/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3leveledItem/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledItem/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3leveledItem/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3leveledItem/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3leveledItem/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3leveledItem/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#methods","title":"Methods","text":""},{"location":"types/tes3leveledItem/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3leveledItem/#insert","title":"<code>insert</code>","text":"<p>This function inserts given item in the leveled list. Returns <code>true</code> if the operation was successful.</p> <pre><code>local result = myObject:insert(entry, level)\n</code></pre> <p>Parameters:</p> <ul> <li><code>entry</code> (tes3baseObject): An item to insert.</li> <li><code>level</code> (number): At which player level the item can be resolved from the leveled list.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledItem/#pickfrom","title":"<code>pickFrom</code>","text":"<p>Chooses a random item from the list, based on the player's level.</p> <pre><code>local result = myObject:pickFrom()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3leveledItem/#remove","title":"<code>remove</code>","text":"<p>This function removes an item from the leveled list. Returns <code>true</code> if the operation was successful.</p> <pre><code>local result = myObject:remove(entry, level)\n</code></pre> <p>Parameters:</p> <ul> <li><code>entry</code> (tes3baseObject): An item to remove.</li> <li><code>level</code> (number): At which player level the item could be resolved from the leveled list.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3leveledListNode/","title":"tes3leveledListNode","text":""},{"location":"types/tes3leveledListNode/#tes3leveledlistnode","title":"tes3leveledListNode","text":"<p>A simple collection that maps an object in a leveled list to a level required for that object to spawn.</p>"},{"location":"types/tes3leveledListNode/#properties","title":"Properties","text":""},{"location":"types/tes3leveledListNode/#levelrequired","title":"<code>levelRequired</code>","text":"<p>The minimum level the player must meet before the node can be used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3leveledListNode/#object","title":"<code>object</code>","text":"<p>The item or creature that can be resolved.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3light/","title":"Tes3light","text":""},{"location":"types/tes3light/#tes3light","title":"tes3light","text":"<p>A core light object. This isn't actually a light in the rendering engine, but something like a lamp or torch.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3light/#properties","title":"Properties","text":""},{"location":"types/tes3light/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3light/#cancarry","title":"<code>canCarry</code>","text":"<p>Access to the light's flags, determining if the light can be carried.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#color","title":"<code>color</code>","text":"<p>Read-only. Access to the light's base colors, in an array-style table of four values. The values can range from 0 to 255.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3light/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#flickers","title":"<code>flickers</code>","text":"<p>Access to the light's flags, determining if the light attenuation flickers.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#flickersslowly","title":"<code>flickersSlowly</code>","text":"<p>Access to the light's flags, determining if the light attenuation flickers slowly.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3light/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3light/#isdynamic","title":"<code>isDynamic</code>","text":"<p>Access to the light's flags, determining if the light affects dynamically moving objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#isfire","title":"<code>isFire</code>","text":"<p>Access to the light's flags, determining if the light represents flame.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#isnegative","title":"<code>isNegative</code>","text":"<p>Access to the light's flags, determining if the object creates darkness.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#isoffbydefault","title":"<code>isOffByDefault</code>","text":"<p>Access to the light's flags, determining if the light won't be active initially.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3light/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3light/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3light/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3light/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3light/#pulses","title":"<code>pulses</code>","text":"<p>Access to the light's flags, determining if the light attenuation pulses.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#pulsesslowly","title":"<code>pulsesSlowly</code>","text":"<p>Access to the light's flags, determining if the light attenuation pulses slowly.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#radius","title":"<code>radius</code>","text":"<p>The base radius of the light.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3light/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3light/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3light/#sound","title":"<code>sound</code>","text":"<p>Read-only. The sound that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3light/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3light/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3light/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3light/#time","title":"<code>time</code>","text":"<p>The amount of time that the light will last.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3light/#methods","title":"Methods","text":""},{"location":"types/tes3light/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3light/#gettimeleft","title":"<code>getTimeLeft</code>","text":"<p>Gets the time remaining for a light, given a <code>tes3itemData</code>, <code>tes3reference</code>, or <code>tes3equipmentStack</code>.</p> <pre><code>local result = myObject:getTimeLeft(data)\n</code></pre> <p>Parameters:</p> <ul> <li><code>data</code> (tes3reference, tes3itemData, tes3equipmentStack)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lightNode/","title":"tes3lightNode","text":""},{"location":"types/tes3lightNode/#tes3lightnode","title":"tes3lightNode","text":"<p>An attachment-capable structure that maintains dynamic lights.</p>"},{"location":"types/tes3lightNode/#properties","title":"Properties","text":""},{"location":"types/tes3lightNode/#light","title":"<code>light</code>","text":"<p>Access to the <code>niLight</code> object mantained by this <code>tes3lightNode</code> object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niLight)</li> </ul>"},{"location":"types/tes3lightNode/#value","title":"<code>value</code>","text":"<p>The flicker phase of the light.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockNode/","title":"tes3lockNode","text":""},{"location":"types/tes3lockNode/#tes3locknode","title":"tes3lockNode","text":"<p>An attachment-capable structure that maintains lock and trap data.</p>"},{"location":"types/tes3lockNode/#properties","title":"Properties","text":""},{"location":"types/tes3lockNode/#key","title":"<code>key</code>","text":"<p>The key that will open this door.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3misc)</li> </ul>"},{"location":"types/tes3lockNode/#level","title":"<code>level</code>","text":"<p>The level of the lock.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockNode/#locked","title":"<code>locked</code>","text":"<p>The locked state.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockNode/#trap","title":"<code>trap</code>","text":"<p>The trap associated with the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3lockpick/","title":"Tes3lockpick","text":""},{"location":"types/tes3lockpick/#tes3lockpick","title":"tes3lockpick","text":"<p>A core lockpick object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3lockpick/#properties","title":"Properties","text":""},{"location":"types/tes3lockpick/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3lockpick/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3lockpick/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3lockpick/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#maxcondition","title":"<code>maxCondition</code>","text":"<p>The maximum condition/health of the lockpick object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3lockpick/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3lockpick/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3lockpick/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3lockpick/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3lockpick/#quality","title":"<code>quality</code>","text":"<p>The quality of the object, with how much of a bonus it has.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3lockpick/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3lockpick/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3lockpick/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3lockpick/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3lockpick/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3lockpick/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3lockpick/#methods","title":"Methods","text":""},{"location":"types/tes3lockpick/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3magicEffect/","title":"tes3magicEffect","text":""},{"location":"types/tes3magicEffect/#tes3magiceffect","title":"tes3magicEffect","text":"<p>A core magic effect definition.</p>"},{"location":"types/tes3magicEffect/#properties","title":"Properties","text":""},{"location":"types/tes3magicEffect/#allowenchanting","title":"<code>allowEnchanting</code>","text":"<p>Access to the flag that determines if this effect can be used in enchanting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#allowspellmaking","title":"<code>allowSpellmaking</code>","text":"<p>Access to the flag that determines if this effect can be used with spellmaking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#appliesonce","title":"<code>appliesOnce</code>","text":"<p>Access to the base flag that determines if this effect is applied only once.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#areasoundeffect","title":"<code>areaSoundEffect</code>","text":"<p>The sound effect that plays on area of effect impacts. Can be set to <code>nil</code> to use the default sound effect for the magic school.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3magicEffect/#areavisualeffect","title":"<code>areaVisualEffect</code>","text":"<p>The visual played when a spell with this effect, with area of effect hits something.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3magicEffect/#baseflags","title":"<code>baseFlags</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#basemagickacost","title":"<code>baseMagickaCost</code>","text":"<p>The base magicka cost to use in calculations.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#bigicon","title":"<code>bigIcon</code>","text":"<p>The path to the large icon to use for the effect. This is derived from the base icon path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicEffect/#boltsoundeffect","title":"<code>boltSoundEffect</code>","text":"<p>The sound effect that plays for magic projectiles. Can be set to <code>nil</code> to use the default sound effect for the magic school.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3magicEffect/#boltvisualeffect","title":"<code>boltVisualEffect</code>","text":"<p>The visual played when a spell with this effect is in flight.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3magicEffect/#cancastself","title":"<code>canCastSelf</code>","text":"<p>Access to the base flag that determines if this effect can be used with a range of self.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#cancasttarget","title":"<code>canCastTarget</code>","text":"<p>Access to the base flag that determines if this effect can be used with a range of target.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#cancasttouch","title":"<code>canCastTouch</code>","text":"<p>Access to the base flag that determines if this effect can be used with a range of touch.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#casterlinked","title":"<code>casterLinked</code>","text":"<p>Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells.</p> <p>Note that this property is hidden in the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#castsoundeffect","title":"<code>castSoundEffect</code>","text":"<p>The sound effect that plays when casting. Can be set to <code>nil</code> to use the default sound effect for the magic school.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3magicEffect/#castvisualeffect","title":"<code>castVisualEffect</code>","text":"<p>The visual played when a spell with this effect is cast.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3magicEffect/#description","title":"<code>description</code>","text":"<p>Player-facing description of the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicEffect/#flags","title":"<code>flags</code>","text":"<p>Raw access to the numerical representation of flags. Typically shouldn't be used.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#hascontinuousvfx","title":"<code>hasContinuousVFX</code>","text":"<p>Access to the base flag that determines if this effect's VFX continuously plays for the full duration of the spell, rather than occuring once on hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#hasnoduration","title":"<code>hasNoDuration</code>","text":"<p>Access to the base flag that determines if this effect doesn't use a duration.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#hasnomagnitude","title":"<code>hasNoMagnitude</code>","text":"<p>Access to the base flag that determines if this effect doesn't make use of its magnitude.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#hitsoundeffect","title":"<code>hitSoundEffect</code>","text":"<p>The sound effect that plays when the effect hits a target. Can be set to <code>nil</code> to use the default sound effect for the magic school.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3magicEffect/#hitvisualeffect","title":"<code>hitVisualEffect</code>","text":"<p>The visual played when a spell with this effect hits something.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3magicEffect/#icon","title":"<code>icon</code>","text":"<p>The path to the icon to use for the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicEffect/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the magic effect. Maps to values in <code>tes3.effect</code>. Values not defined in <code>tes3.effect</code> are also possible for magic effects added by mods that don't use <code>tes3.claimSpellEffectId()</code> to register their id.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#illegaldaedra","title":"<code>illegalDaedra</code>","text":"<p>Access to the base flag that determines if this effect summons an illegal daedra. This flag isn't used.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#isharmful","title":"<code>isHarmful</code>","text":"<p>Access to the base flag that determines if this effect is counted as a hostile action.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#lightingblue","title":"<code>lightingBlue</code>","text":"<p>The amount of blue lighting to use when lighting projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#lightinggreen","title":"<code>lightingGreen</code>","text":"<p>The amount of green lighting to use when lighting projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#lightingred","title":"<code>lightingRed</code>","text":"<p>The amount of red lighting to use when lighting projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#name","title":"<code>name</code>","text":"<p>Read-only. Player-facing name of the effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicEffect/#nonrecastable","title":"<code>nonRecastable</code>","text":"<p>Access to the base flag that determines if this effect can be refreshed by recasting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#particletexture","title":"<code>particleTexture</code>","text":"<p>Read-only. The path to use for the particle effect texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#school","title":"<code>school</code>","text":"<p>The school that the effect is associated with. Maps to <code>tes3.magicSchool</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#size","title":"<code>size</code>","text":"<p>Controls how much the visual effect scales with its magnitude.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#sizecap","title":"<code>sizeCap</code>","text":"<p>The maximum possible size of the spell projectile with this effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#skill","title":"<code>skill</code>","text":"<p>Read-only. The skill for the associated school that the effect is associated with. This skill is used when calculating experience gain per skill after a spell with this effect is cast. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#speed","title":"<code>speed</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffect/#spellfailuresoundeffect","title":"<code>spellFailureSoundEffect</code>","text":"<p>Read-only. The sound effect that plays when a spell fails to cast, and when magic is resisted. This is determined only by the spell school.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3magicEffect/#targetsattributes","title":"<code>targetsAttributes</code>","text":"<p>Access to the base flag that determines if this effect makes use of attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#targetsskills","title":"<code>targetsSkills</code>","text":"<p>Access to the base flag that determines if this effect makes use of skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#unreflectable","title":"<code>unreflectable</code>","text":"<p>Access to the base flag that determines if this effect can't be reflected.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffect/#usesnegativelighting","title":"<code>usesNegativeLighting</code>","text":"<p>Access to the base flag that determines if this effect provides negative lighting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffectInstance/","title":"tes3magicEffectInstance","text":""},{"location":"types/tes3magicEffectInstance/#tes3magiceffectinstance","title":"tes3magicEffectInstance","text":"<p>Represents an individual instance of a magic effect being applied to a reference.</p>"},{"location":"types/tes3magicEffectInstance/#properties","title":"Properties","text":""},{"location":"types/tes3magicEffectInstance/#createddata","title":"<code>createdData</code>","text":"<p>Read-only. The bound or summoned data associated with the instance, for summoned creatures or items. The stack's object will be a reference in the case of summoned creatures.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#cumulativemagnitude","title":"<code>cumulativeMagnitude</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#effectivemagnitude","title":"<code>effectiveMagnitude</code>","text":"<p>The effective magnitude of the effect, after all resistances are applied.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#isbounditem","title":"<code>isBoundItem</code>","text":"<p>Read-only. If this effect has summoned a bound item.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#issummon","title":"<code>isSummon</code>","text":"<p>Read-only. If this effect has summoned a creature.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#lastusedarmor","title":"<code>lastUsedArmor</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#lastusedenchitem","title":"<code>lastUsedEnchItem</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#lastusedlight","title":"<code>lastUsedLight</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#lastusedshield","title":"<code>lastUsedShield</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#lastusedweapon","title":"<code>lastUsedWeapon</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#magnitude","title":"<code>magnitude</code>","text":"<p>The magnitude of the effect, before any resistances are applied.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#resistedpercent","title":"<code>resistedPercent</code>","text":"<p>The percentage of the magic effect that has been resisted. A value of <code>100</code> indicates that the magic effect has been completely resisted, whereas a value of <code>0</code> indicates it has not been resisted and is applied with its full magnitude. Values over <code>100</code> cause the magic effect to heal the actor instead of harming it, if it is a damaging magic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#state","title":"<code>state</code>","text":"<p>The state of this magic effect instance. Maps to <code>tes3.spellState</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#target","title":"<code>target</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#timeactive","title":"<code>timeActive</code>","text":"<p>The time since the effect started affecting its target in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicEffectInstance/#visual","title":"<code>visual</code>","text":"<p>The associated visual effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vfx)</li> </ul>"},{"location":"types/tes3magicSourceInstance/","title":"tes3magicSourceInstance","text":""},{"location":"types/tes3magicSourceInstance/#tes3magicsourceinstance","title":"tes3magicSourceInstance","text":"<p>A game structure that keeps track of a magic source on an object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3magicSourceInstance/#properties","title":"Properties","text":""},{"location":"types/tes3magicSourceInstance/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#castchanceoverride","title":"<code>castChanceOverride</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#caster","title":"<code>caster</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#corprushourssincelastworsen","title":"<code>corprusHoursSinceLastWorsen</code>","text":"<p>The number of hours passed since the player's corprus state last worsened.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#item","title":"<code>item</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#itemdata","title":"<code>itemData</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#itemid","title":"<code>itemID</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#magicid","title":"<code>magicID</code>","text":"<p>Read-only. For spells created in the Contruction Set, this is the id of the spell defined there. For spells created during play, with spellmaking, this is a number.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#projectile","title":"<code>projectile</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileProjectile)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#serialnumber","title":"<code>serialNumber</code>","text":"<p>Read-only. Unique indentifier for just this magic source.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#source","title":"<code>source</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3alchemy, tes3enchantment, tes3spell)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#sourceeffects","title":"<code>sourceEffects</code>","text":"<p>Read-only. An array-style table holding spell effects this magic source has.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3effect[])</li> </ul>"},{"location":"types/tes3magicSourceInstance/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#sourcetype","title":"<code>sourceType</code>","text":"<p>Read-only. The type of this magic source. Maps to <code>tes3.magicSourceType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#state","title":"<code>state</code>","text":"<p>Shows if the state is pre-cast, cast, beginning, working, ending, retired, etc. Maps to <code>tes3.spellState</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#target","title":"<code>target</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#timestampcastbegin","title":"<code>timestampCastBegin</code>","text":"<p>The timestamp at which this magic source was cast.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#methods","title":"Methods","text":""},{"location":"types/tes3magicSourceInstance/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#geteffectinstance","title":"<code>getEffectInstance</code>","text":"<p>Gets the magic effect instance for a given effect index and target reference. Effect instances may not all be active on a target, due to reflect, absorption, dispels, different durations and other factors.</p> <pre><code>local result = myObject:getEffectInstance(index, target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (number): The index in the effect list to fetch, between <code>0</code> and <code>7</code>.</li> <li><code>target</code> (tes3reference): The target actor for the effect.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicEffectInstance)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#getmagnitudeforindex","title":"<code>getMagnitudeForIndex</code>","text":"<p>Gets the magnitude from the casting source for a given effect index.</p> <pre><code>local result = myObject:getMagnitudeForIndex(index)\n</code></pre> <p>Parameters:</p> <ul> <li><code>index</code> (number): The index in the effect list to fetch, between <code>0</code> and <code>7</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3magicSourceInstance/#playvisualeffect","title":"<code>playVisualEffect</code>","text":"<p>This function plays an animation for an effect from the <code>tes3magicSourceInstance</code> object.</p> <pre><code>myObject:playVisualEffect({ effectIndex = ..., position = ..., visual = ..., scale = ..., reference = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>effectIndex</code> (number): The index in the effect whose visual will be played, a number in range [0, 7].</li> <li><code>position</code> (tes3vector3, table): A table or a <code>tes3vector3</code> holding <code>x</code>, <code>y</code> and <code>z</code> coordinates at which the visual effect will be played.</li> <li><code>visual</code> (tes3physicalObject, string): The visual effect to be played.</li> <li><code>scale</code> (number): Default: <code>1</code>. The scale of the effect. Only applies to effects that are designed to be scaled.</li> <li><code>reference</code> (tes3reference, string): A reference on which the visual effect will be played.</li> </ul> </li> </ul> Example: Plays the soul trap effect if the player kills a target that is affected by vampirism. <pre><code>local function onDamaged(e)\n    -- Check if we killed our target with this damage.\n    if e.killingBlow then\n        -- Iterate through the killed target's active magic effects.\n        for _, activeMagicEffect in pairs(e.mobile.activeMagicEffectList) do\n            -- Check if the target is a vampire.\n            if activeMagicEffect.effectId == tes3.effect.vampirism then\n                -- Play the soul trap visual effect at the position of the target.\n                activeMagicEffect.instance:playVisualEffect{\n                    effectIndex = 0,\n                    position = e.mobile.position,\n                    visual = \"VFX_Soul_Trap\"\n                }\n                break\n            end\n        end\n    end\nend\n\nevent.register(tes3.event.damaged, onDamaged)\n</code></pre>"},{"location":"types/tes3markData/","title":"tes3markData","text":""},{"location":"types/tes3markData/#tes3markdata","title":"tes3markData","text":"<p>A simple structure to hold mark/recall data.</p>"},{"location":"types/tes3markData/#properties","title":"Properties","text":""},{"location":"types/tes3markData/#cell","title":"<code>cell</code>","text":"<p>Read-only. The cell to recall to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3markData/#position","title":"<code>position</code>","text":"<p>The position to recall to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3markData/#rotation","title":"<code>rotation</code>","text":"<p>The rotation to use when recalling. It's the Euler rotation around the Z axis in Radians.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3matrix33/","title":"Tes3matrix33","text":""},{"location":"types/tes3matrix33/#tes3matrix33","title":"tes3matrix33","text":"<p>A 3 by 3 matrix. You can perform following arithmetic with this type: <code>==</code>.</p>"},{"location":"types/tes3matrix33/#properties","title":"Properties","text":""},{"location":"types/tes3matrix33/#x","title":"<code>x</code>","text":"<p>The first row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#y","title":"<code>y</code>","text":"<p>The second row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#z","title":"<code>z</code>","text":"<p>The third row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#methods","title":"Methods","text":""},{"location":"types/tes3matrix33/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the matrix.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3matrix33/#fromeulerxyz","title":"<code>fromEulerXYZ</code>","text":"<p>Fills the matrix with values from euler coordinates.</p> <pre><code>myObject:fromEulerXYZ(x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number)</li> <li><code>y</code> (number)</li> <li><code>z</code> (number)</li> </ul>"},{"location":"types/tes3matrix33/#fromeulerzyx","title":"<code>fromEulerZYX</code>","text":"<p>Fills the matrix with values from euler coordinates.</p> <pre><code>myObject:fromEulerZYX(z, y, x)\n</code></pre> <p>Parameters:</p> <ul> <li><code>z</code> (number)</li> <li><code>y</code> (number)</li> <li><code>x</code> (number)</li> </ul>"},{"location":"types/tes3matrix33/#fromquaternion","title":"<code>fromQuaternion</code>","text":"<p>Fill the matrix by converting a quaternion.</p> <pre><code>myObject:fromQuaternion(quaternion)\n</code></pre> <p>Parameters:</p> <ul> <li><code>quaternion</code> (niQuaternion)</li> </ul>"},{"location":"types/tes3matrix33/#getforwardvector","title":"<code>getForwardVector</code>","text":"<p>Returns a copy of the forward vector component. This is the second column of the matrix.</p> <pre><code>local result = myObject:getForwardVector()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#getrightvector","title":"<code>getRightVector</code>","text":"<p>Returns a copy of the right vector component. This is the first column of the matrix.</p> <pre><code>local result = myObject:getRightVector()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#getupvector","title":"<code>getUpVector</code>","text":"<p>Returns a copy of the up vector component. This is the third column of the matrix.</p> <pre><code>local result = myObject:getUpVector()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3matrix33/#invert","title":"<code>invert</code>","text":"<p>Inverts the matrix.</p> <pre><code>local matrix, valid = myObject:invert()\n</code></pre> <p>Returns:</p> <ul> <li><code>matrix</code> (tes3matrix33)</li> <li><code>valid</code> (boolean)</li> </ul>"},{"location":"types/tes3matrix33/#reorthogonalize","title":"<code>reorthogonalize</code>","text":"<p>Reorthogonalizes the matrix.</p> <pre><code>local result = myObject:reorthogonalize()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3matrix33/#toeulerxyz","title":"<code>toEulerXYZ</code>","text":"<p>Converts the matrix to series of rotations along each axis.</p> <pre><code>local vector3, isUnique = myObject:toEulerXYZ()\n</code></pre> <p>Returns:</p> <ul> <li><code>vector3</code> (tes3vector3)</li> <li><code>isUnique</code> (boolean)</li> </ul>"},{"location":"types/tes3matrix33/#toeulerzyx","title":"<code>toEulerZYX</code>","text":"<p>Converts the matrix to series of rotations along each axis.</p> <pre><code>local vector3, isUnique = myObject:toEulerZYX()\n</code></pre> <p>Returns:</p> <ul> <li><code>vector3</code> (tes3vector3)</li> <li><code>isUnique</code> (boolean)</li> </ul>"},{"location":"types/tes3matrix33/#toidentity","title":"<code>toIdentity</code>","text":"<p>Converts the matrix to the identity matrix's values.</p> <pre><code>myObject:toIdentity()\n</code></pre>"},{"location":"types/tes3matrix33/#toquaternion","title":"<code>toQuaternion</code>","text":"<p>Convert the matrix into a quaternion.</p> <pre><code>local result = myObject:toQuaternion()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niQuaternion)</li> </ul>"},{"location":"types/tes3matrix33/#torotation","title":"<code>toRotation</code>","text":"<p>Makes this matrix a rotation matrix with provided axis-angle rotation parameters.</p> <pre><code>myObject:toRotation(angle, x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>angle</code> (number)</li> <li><code>x</code> (number)</li> <li><code>y</code> (number)</li> <li><code>z</code> (number)</li> </ul>"},{"location":"types/tes3matrix33/#torotationx","title":"<code>toRotationX</code>","text":"<p>Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the X axis by <code>x</code> radians. For the rotation matrix A and vector v, the rotated vector is given by A * v.</p> <pre><code>myObject:toRotationX(x)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number): In radians.</li> </ul>"},{"location":"types/tes3matrix33/#torotationy","title":"<code>toRotationY</code>","text":"<p>Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Y axis by <code>y</code> radians. For the rotation matrix A and vector v, the rotated vector is given by A * v.</p> <pre><code>myObject:toRotationY(y)\n</code></pre> <p>Parameters:</p> <ul> <li><code>y</code> (number): In radians.</li> </ul>"},{"location":"types/tes3matrix33/#torotationz","title":"<code>toRotationZ</code>","text":"<p>Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Z axis by <code>z</code> radians. For the rotation matrix A and vector v, the rotated vector is given by A * v.</p> <pre><code>myObject:toRotationZ(z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>z</code> (number): In radians.</li> </ul>"},{"location":"types/tes3matrix33/#tozero","title":"<code>toZero</code>","text":"<p>Zeroes out all values in the matrix.</p> <pre><code>myObject:toZero()\n</code></pre>"},{"location":"types/tes3matrix33/#transpose","title":"<code>transpose</code>","text":"<p>No description yet available.</p> <pre><code>local result = myObject:transpose()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3matrix33/#functions","title":"Functions","text":""},{"location":"types/tes3matrix33/#new","title":"<code>new</code>","text":"<p>Creates a new 3 by 3 matrix from 3 provided vectors or 9 numbers. Creates an empty matrix if nothing is provided.</p> <pre><code>local matrix = tes3matrix33.new(x0, y0, z0, x1, y1, z1, x2, y2, z2, x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x0</code> (number): Default: <code>0</code>.</li> <li><code>y0</code> (number): Default: <code>0</code>.</li> <li><code>z0</code> (number): Default: <code>0</code>.</li> <li><code>x1</code> (number): Default: <code>0</code>.</li> <li><code>y1</code> (number): Default: <code>0</code>.</li> <li><code>z1</code> (number): Default: <code>0</code>.</li> <li><code>x2</code> (number): Default: <code>0</code>.</li> <li><code>y2</code> (number): Default: <code>0</code>.</li> <li><code>z2</code> (number): Default: <code>0</code>.</li> <li><code>x</code> (tes3vector3): Optional.</li> <li><code>y</code> (tes3vector3): Optional.</li> <li><code>z</code> (tes3vector3): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>matrix</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3matrix33/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3matrix33/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix addition."},{"location":"types/tes3matrix33/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix33 tes3vector3 tes3vector3 Multiplies the matrix by a vector. The resulting vector is starting vector with the matrix' transformations applied. tes3matrix33 number tes3matrix33 Multiplies the matrix by a scalar."},{"location":"types/tes3matrix33/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix subtraction."},{"location":"types/tes3matrix44/","title":"Tes3matrix44","text":""},{"location":"types/tes3matrix44/#tes3matrix44","title":"tes3matrix44","text":"<p>A 4 by 4 matrix. You can perform following arithmetic with this type: <code>==</code>.</p>"},{"location":"types/tes3matrix44/#properties","title":"Properties","text":""},{"location":"types/tes3matrix44/#w","title":"<code>w</code>","text":"<p>The 1st row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3matrix44/#x","title":"<code>x</code>","text":"<p>The 2nd row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3matrix44/#y","title":"<code>y</code>","text":"<p>The 3rd row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3matrix44/#z","title":"<code>z</code>","text":"<p>The 4th row of the matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3matrix44/#methods","title":"Methods","text":""},{"location":"types/tes3matrix44/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the matrix.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix44)</li> </ul>"},{"location":"types/tes3matrix44/#tozero","title":"<code>toZero</code>","text":"<p>Zeroes out all values in the matrix.</p> <pre><code>myObject:toZero()\n</code></pre>"},{"location":"types/tes3matrix44/#functions","title":"Functions","text":""},{"location":"types/tes3matrix44/#new","title":"<code>new</code>","text":"<p>Creates a new 4 by 4 matrix from 4 provided vectors or 16 numbers. Creates an empty matrix if nothing is provided.</p> <pre><code>local matrix = tes3matrix44.new(w0, x0, y0, z0, w1, x1, y1, z1, w2, x2, y2, z2, w3, x3, y3, z3, w, x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>w0</code> (number): Default: <code>0</code>.</li> <li><code>x0</code> (number): Default: <code>0</code>.</li> <li><code>y0</code> (number): Default: <code>0</code>.</li> <li><code>z0</code> (number): Default: <code>0</code>.</li> <li><code>w1</code> (number): Default: <code>0</code>.</li> <li><code>x1</code> (number): Default: <code>0</code>.</li> <li><code>y1</code> (number): Default: <code>0</code>.</li> <li><code>z1</code> (number): Default: <code>0</code>.</li> <li><code>w2</code> (number): Default: <code>0</code>.</li> <li><code>x2</code> (number): Default: <code>0</code>.</li> <li><code>y2</code> (number): Default: <code>0</code>.</li> <li><code>z2</code> (number): Default: <code>0</code>.</li> <li><code>w3</code> (number): Default: <code>0</code>.</li> <li><code>x3</code> (number): Default: <code>0</code>.</li> <li><code>y3</code> (number): Default: <code>0</code>.</li> <li><code>z3</code> (number): Default: <code>0</code>.</li> <li><code>w</code> (tes3vector4): Optional.</li> <li><code>x</code> (tes3vector4): Optional.</li> <li><code>y</code> (tes3vector4): Optional.</li> <li><code>z</code> (tes3vector4): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>matrix</code> (tes3matrix44)</li> </ul>"},{"location":"types/tes3matrix44/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3matrix44/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix addition."},{"location":"types/tes3matrix44/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix44 number tes3matrix44 Multiplies the matrix by a scalar."},{"location":"types/tes3matrix44/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix subtraction."},{"location":"types/tes3misc/","title":"Tes3misc","text":""},{"location":"types/tes3misc/#tes3misc","title":"tes3misc","text":"<p>A core miscellaneous object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3misc/#properties","title":"Properties","text":""},{"location":"types/tes3misc/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3misc/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3misc/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3misc/#isgold","title":"<code>isGold</code>","text":"<p>True if the misc item is a valid form of gold.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#iskey","title":"<code>isKey</code>","text":"<p>Access to the flag determining if this item is recognized as a key.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#issoulgem","title":"<code>isSoulGem</code>","text":"<p>Read-only. Determines if this item is a soul gem.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3misc/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3misc/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3misc/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3misc/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3misc/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3misc/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3misc/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3misc/#soulgemcapacity","title":"<code>soulGemCapacity</code>","text":"<p>Read-only. Fetches capacity of the soul gem, if this item is a soul gem.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#soulgemdata","title":"<code>soulGemData</code>","text":"<p>Read-only. Fetches related soul gem data, if this item is a soul gem.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3soulGemData)</li> </ul>"},{"location":"types/tes3misc/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3misc/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3misc/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3misc/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3misc/#methods","title":"Methods","text":""},{"location":"types/tes3misc/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3misc/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3misc)</li> </ul>"},{"location":"types/tes3mobManager/","title":"tes3mobManager","text":""},{"location":"types/tes3mobManager/#tes3mobmanager","title":"tes3mobManager","text":"<p>The manager responsible for mobile objects and collision.</p>"},{"location":"types/tes3mobManager/#properties","title":"Properties","text":""},{"location":"types/tes3mobManager/#gravity","title":"<code>gravity</code>","text":"<p>The gravity applied to all actors. Has a default value of <code>{0.0, 0.0, -627.2}</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobManager/#mobcollisiongroup","title":"<code>mobCollisionGroup</code>","text":"<p>Read-only. !!! warning     This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs.  Access to the collision group used by the game engine.</p> <p>Returns:</p> <ul> <li><code>result</code> (niCollisionGroup)</li> </ul>"},{"location":"types/tes3mobManager/#movingprops","title":"<code>movingProps</code>","text":"<p>Read-only. !!! warning     This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference[])</li> </ul>"},{"location":"types/tes3mobManager/#processmanager","title":"<code>processManager</code>","text":"<p>Read-only. Access to the process manager.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3processManager)</li> </ul>"},{"location":"types/tes3mobManager/#projectilemanager","title":"<code>projectileManager</code>","text":"<p>Read-only. Access to the projectile manager.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3projectileManager)</li> </ul>"},{"location":"types/tes3mobManager/#terminalvelocity","title":"<code>terminalVelocity</code>","text":"<p>The maximum velocity that actors can reach through the application of gravity. Has a default value of <code>{0.0, 0.0, -4005.5}</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/","title":"tes3mobileActor","text":""},{"location":"types/tes3mobileActor/#tes3mobileactor","title":"tes3mobileActor","text":"<p>A mobile object for a creature, NPC, or the player.</p> <p>This type inherits the following: tes3mobileObject</p>"},{"location":"types/tes3mobileActor/#properties","title":"Properties","text":""},{"location":"types/tes3mobileActor/#actionbeforecombat","title":"<code>actionBeforeCombat</code>","text":"<p>Read-only. Action data stored before the actor entered combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileActor/#actiondata","title":"<code>actionData</code>","text":"<p>Read-only. Current action data. Pre-combat action data is stored in the <code>actionBeforeCombat</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileActor/#activeai","title":"<code>activeAI</code>","text":"<p>Friendly access to the actor's flag that controls if AI is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#activemagiceffectlist","title":"<code>activeMagicEffectList</code>","text":"<p>Read-only. The active magic effects on the actor, from which all others can be accessed. A table with <code>tes3activeMagicEffect</code> items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileActor/#actortype","title":"<code>actorType</code>","text":"<p>Read-only. The type of the mobile actor. Maps to values in <code>tes3.actorType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#agility","title":"<code>agility</code>","text":"<p>Read-only. Direct access to the actor's agility attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#aiplanner","title":"<code>aiPlanner</code>","text":"<p>Read-only. Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPlanner, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#alarm","title":"<code>alarm</code>","text":"<p>The actor's alarm AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#animationcontroller","title":"<code>animationController</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actorAnimationController)</li> </ul>"},{"location":"types/tes3mobileActor/#armorrating","title":"<code>armorRating</code>","text":"<p>Read-only. The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the <code>applyDamage</code> function.</p> <p>Armour mitigation calculation:</p> <p>x = damage / (damage + target.armorRating)</p> <p>damage *= max(fCombatArmorMinMult, x)</p> <p>if damage &lt; 1 then</p> <pre><code>damage = 1\n</code></pre> <p>end</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#attackbonus","title":"<code>attackBonus</code>","text":"<p>Direct access to the actor's attack bonus effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#attacked","title":"<code>attacked</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has been attacked.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. Access to a table of 8 <code>tes3statistic</code> objects for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic[])</li> </ul>"},{"location":"types/tes3mobileActor/#bartergold","title":"<code>barterGold</code>","text":"<p>The current amount of gold that the actor has access to for bartering.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#blind","title":"<code>blind</code>","text":"<p>Direct access to the actor's blind effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileActor/#canact","title":"<code>canAct</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#canjump","title":"<code>canJump</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#canjumpmidair","title":"<code>canJumpMidair</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see <code>tes3mobileActor:doJump()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#canmove","title":"<code>canMove</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely move along the ground or in the air. This does not include jumping (see <code>canJump</code>). This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, or paralyzed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#cell","title":"<code>cell</code>","text":"<p>Read-only. Fetches the cell that the actor is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3mobileActor/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#chameleon","title":"<code>chameleon</code>","text":"<p>Direct access to the actor's chameleon effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#collidingreference","title":"<code>collidingReference</code>","text":"<p>Read-only. The reference that the mobile has collided with this frame. Doesn't include actors and terrain.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#combatsession","title":"<code>combatSession</code>","text":"<p>Read-only. Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3combatSession, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#corpsehourstamp","title":"<code>corpseHourstamp</code>","text":"<p>This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of <code>0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#currentenchanteditem","title":"<code>currentEnchantedItem</code>","text":"<p>Read-only. The currently equipped enchanted item that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#currentspell","title":"<code>currentSpell</code>","text":"<p>Read-only. The currently equipped spell that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3mobileActor/#effectattributes","title":"<code>effectAttributes</code>","text":"<p>Read-only. Access to a table of 24 numbers for the actor's effect attributes. In order those are: <code>attackBonus</code>, <code>sanctuary</code>, <code>resistMagicka</code>, <code>resistFire</code>, <code>resistFrost</code>, <code>resistShock</code>, <code>resistCommonDisease</code>, <code>resistBlightDisease</code>, <code>resistCorprus</code>, <code>resistPoison</code>, <code>resistParalysis</code>, <code>chameleon</code>, <code>resistNormalWeapons</code>, <code>waterBreathing</code>, <code>waterWalking</code>, <code>swiftSwim</code>, <code>jump</code>, <code>levitate</code>, <code>shield</code>, <code>sound</code>, <code>silence</code>, <code>blind</code>, <code>paralyze</code>, and <code>invisibility</code>. Each of those can be accessed individually. For example, <code>tes3mobileActor.chameleon</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobileActor/#encumbrance","title":"<code>encumbrance</code>","text":"<p>Read-only. Access to the actor's encumbrance statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#endurance","title":"<code>endurance</code>","text":"<p>Read-only. Direct access to the actor's endurance attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#facing","title":"<code>facing</code>","text":"<p>Read-only. The facing of the actor, in radians. It corresponds to the <code>mobile.reference.orientation.z</code>. Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. Access to the actor's fatigue statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#fight","title":"<code>fight</code>","text":"<p>The actor's fight AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileActor/#flee","title":"<code>flee</code>","text":"<p>The actor's flee AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#friendlyactors","title":"<code>friendlyActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers friendly.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileActor/#greetduration","title":"<code>greetDuration</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#greettimer","title":"<code>greetTimer</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#hasfreeaction","title":"<code>hasFreeAction</code>","text":"<p>Read-only. If true, the actor isn't knocked down or knocked out.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#health","title":"<code>health</code>","text":"<p>Read-only. Access to the actor's health statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#hello","title":"<code>hello</code>","text":"<p>The actor's hello AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#holdbreathtime","title":"<code>holdBreathTime</code>","text":"<p>This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is <code>fHoldBreathTime</code>(GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than <code>fHoldBreathTime</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#hostileactors","title":"<code>hostileActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers hostile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileActor/#idleanim","title":"<code>idleAnim</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is using their idle animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/#incombat","title":"<code>inCombat</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is in combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#intelligence","title":"<code>intelligence</code>","text":"<p>Read-only. Direct access to the actor's intelligence attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileActor/#invisibility","title":"<code>invisibility</code>","text":"<p>Direct access to the actor's invisibility effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isattackingorcasting","title":"<code>isAttackingOrCasting</code>","text":"<p>Read-only. If <code>true</code>, the actor is attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#iscrittable","title":"<code>isCrittable</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor can be critically hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isdead","title":"<code>isDead</code>","text":"<p>Read-only. True if the actor is dead.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isdiseased","title":"<code>isDiseased</code>","text":"<p>Read-only. True if the actor is has a disease effect. This counts normal, blight, and corprus effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isfalling","title":"<code>isFalling</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isflying","title":"<code>isFlying</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#ishitstunned","title":"<code>isHitStunned</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by hit stun. This prevents the actor from initiating an attack, but not continuing and finishing an attack. It also prevents movement except for jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isjumping","title":"<code>isJumping</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isknockeddown","title":"<code>isKnockedDown</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked down. An actor can be knocked down after being attacked or falling.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isknockedout","title":"<code>isKnockedOut</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#ismovingback","title":"<code>isMovingBack</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving backwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#ismovingforward","title":"<code>isMovingForward</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving forwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#ismovingleft","title":"<code>isMovingLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#ismovingright","title":"<code>isMovingRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isparalyzed","title":"<code>isParalyzed</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by the magic effect paralyze.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isplayerdetected","title":"<code>isPlayerDetected</code>","text":"<p>Direct access to the actor's flag showing the player was detected on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isplayerhidden","title":"<code>isPlayerHidden</code>","text":"<p>Direct access to the actor's flag showing the player was hidden on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isreadyingweapon","title":"<code>isReadyingWeapon</code>","text":"<p>Read-only. If <code>true</code>, the actor is drawing or sheathing their weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isrunning","title":"<code>isRunning</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is running.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#issneaking","title":"<code>isSneaking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is sneaking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isswimming","title":"<code>isSwimming</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is swimming.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isturningleft","title":"<code>isTurningLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isturningright","title":"<code>isTurningRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#iswalking","title":"<code>isWalking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is walking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#jump","title":"<code>jump</code>","text":"<p>Direct access to the actor's jump effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#lastgroundz","title":"<code>lastGroundZ</code>","text":"<p>This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During <code>jump</code> event this value is still negative. A split second after, it will have the value of the <code>.z</code> coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#levitate","title":"<code>levitate</code>","text":"<p>Direct access to the actor's levitate effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#luck","title":"<code>luck</code>","text":"<p>Read-only. Direct access to the actor's luck attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. Access to the actor's magicka statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#magickamultiplier","title":"<code>magickaMultiplier</code>","text":"<p>Read-only. Access to the actor's magicka multiplier statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#mobtomobcollision","title":"<code>mobToMobCollision</code>","text":"<p>Allows modifying if this actor will collide with other actors. When <code>true</code> (default), the actor cannot move through other actors. When <code>false</code>, the actor is allowed to move through other actors, and other actors can move through it.</p> <p>May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileActor/#nextactionweight","title":"<code>nextActionWeight</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#paralyze","title":"<code>paralyze</code>","text":"<p>Direct access to the actor's paralyze effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#personality","title":"<code>personality</code>","text":"<p>Read-only. Direct access to the actor's personality attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileActor/#readiedammo","title":"<code>readiedAmmo</code>","text":"<p>The currently equipped ammo, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#readiedammocount","title":"<code>readiedAmmoCount</code>","text":"<p>The number of ammo equipped for the readied ammo.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileActor/#readiedshield","title":"<code>readiedShield</code>","text":"<p>The currently equipped shield, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#readiedweapon","title":"<code>readiedWeapon</code>","text":"<p>The currently equipped weapon, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileActor/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileActor/#resistblightdisease","title":"<code>resistBlightDisease</code>","text":"<p>Direct access to the actor's blight disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistcommondisease","title":"<code>resistCommonDisease</code>","text":"<p>Direct access to the actor's common disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistcorprus","title":"<code>resistCorprus</code>","text":"<p>Direct access to the actor's corprus disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistfire","title":"<code>resistFire</code>","text":"<p>Direct access to the actor's fire resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistfrost","title":"<code>resistFrost</code>","text":"<p>Direct access to the actor's frost resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistmagicka","title":"<code>resistMagicka</code>","text":"<p>Direct access to the actor's magicka resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistnormalweapons","title":"<code>resistNormalWeapons</code>","text":"<p>Direct access to the actor's normal weapon resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistparalysis","title":"<code>resistParalysis</code>","text":"<p>Direct access to the actor's paralysis resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistpoison","title":"<code>resistPoison</code>","text":"<p>Direct access to the actor's poison resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#resistshock","title":"<code>resistShock</code>","text":"<p>Direct access to the actor's shock resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#sanctuary","title":"<code>sanctuary</code>","text":"<p>Direct access to the actor's sanctuary effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#scaninterval","title":"<code>scanInterval</code>","text":"<p>The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of <code>0.0</code> will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active <code>tes3aiPlanner</code>, meaning the checks will be executed at different intervals for each actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#scantimer","title":"<code>scanTimer</code>","text":"<p>Read-only. The time in seconds since the last time the checks specified in <code>scanInterval</code> were executed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#shield","title":"<code>shield</code>","text":"<p>Direct access to the actor's shield effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#silence","title":"<code>silence</code>","text":"<p>Direct access to the actor's silence effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#sound","title":"<code>sound</code>","text":"<p>Direct access to the actor's sound effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#speed","title":"<code>speed</code>","text":"<p>Read-only. Direct access to the actor's speed attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#spellreadied","title":"<code>spellReadied</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has a spell readied.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#strength","title":"<code>strength</code>","text":"<p>Read-only. Direct access to the actor's strength attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#swiftswim","title":"<code>swiftSwim</code>","text":"<p>Direct access to the actor's swift swim effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#talkedto","title":"<code>talkedTo</code>","text":"<p>Direct access to the actor's flag that shows it was recently talked to.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#torchslot","title":"<code>torchSlot</code>","text":"<p>The currently equipped light.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3mobileActor/#underwater","title":"<code>underwater</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is under water.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#velocity","title":"<code>velocity</code>","text":"<p>A vector that represents the 3D velocity of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/#waterbreathing","title":"<code>waterBreathing</code>","text":"<p>Direct access to the actor's water breathing effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#waterwalking","title":"<code>waterWalking</code>","text":"<p>Direct access to the actor's water walking effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#weapondrawn","title":"<code>weaponDrawn</code>","text":"<p>Read-only. Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#weaponready","title":"<code>weaponReady</code>","text":"<p>A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#werewolf","title":"<code>werewolf</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor in werewolf form.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#width","title":"<code>width</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#willpower","title":"<code>willpower</code>","text":"<p>Read-only. Direct access to the actor's willpower attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileActor/#methods","title":"Methods","text":""},{"location":"types/tes3mobileActor/#applydamage","title":"<code>applyDamage</code>","text":"<p>Damages the actor, with options to control mitigation and difficulty scaling. Invokes the <code>damage</code> and <code>damaged</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:applyDamage({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> <li><code>applyDifficulty</code> (boolean): Default: <code>false</code>. If the game difficulty modifier should be applied. Must be used with the <code>playerAttack</code> argument to apply the correct modifier.</li> <li><code>playerAttack</code> (boolean): Optional. If the attack came from the player. Used for difficulty calculation.</li> <li><code>doNotChangeHealth</code> (boolean): Default: <code>false</code>. If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#applyfatiguedamage","title":"<code>applyFatigueDamage</code>","text":"<p>Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the <code>damageHandToHand</code> and <code>damagedHandToHand</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual fatigue damage done.</p> <pre><code>local result = myObject:applyFatigueDamage(fatigueDamage, swing, alwaysPlayHitVoice)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fatigueDamage</code> (number): The amount of fatigue damage to apply.</li> <li><code>swing</code> (number): Optional. The attack swing magnitude, range 0-1. Only modifies hit volume.</li> <li><code>alwaysPlayHitVoice</code> (boolean): Optional. Always play the hit reaction voiceover.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#applyjumpfatiguecost","title":"<code>applyJumpFatigueCost</code>","text":"<p>Reduces the actor's current fatigue by the amount a regular jump would currently cost.</p> <pre><code>myObject:applyJumpFatigueCost()\n</code></pre>"},{"location":"types/tes3mobileActor/#calceffectivedamage","title":"<code>calcEffectiveDamage</code>","text":"<p>Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:calcEffectiveDamage({ damage = ..., applyArmor = ..., resistAttribute = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#calculatejumpvelocity","title":"<code>calculateJumpVelocity</code>","text":"<p>Calculates the starting velocity of a jump.</p> <pre><code>local result = myObject:calculateJumpVelocity({ direction = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>direction</code> (tes3vector2): Optional. The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileActor/#dojump","title":"<code>doJump</code>","text":"<p>Forces the actor to jump. If <code>velocity</code> or other parameters with non-default values are specified it will be treated as a non-default jump during the <code>jump</code> event. Returns <code>false</code> if the actor is currently unable to jump or the jump has been cancelled, otherwise returns <code>true</code>.</p> <pre><code>local result = myObject:doJump({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>velocity</code> (tes3vector3): Optional. The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used.</li> <li><code>applyFatigueCost</code> (boolean): Default: <code>true</code>. If <code>true</code>, reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if <code>false</code>.</li> <li><code>allowMidairJumping</code> (boolean): Default: <code>false</code>. If <code>true</code>, enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#equip","title":"<code>equip</code>","text":"<p>Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return <code>true</code>.</p> <pre><code>local itemEquipped = myObject:equip({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): The item to equip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to equip, if a specific item is required.</li> <li><code>addItem</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item will be added to the actor's inventory if needed.</li> <li><code>selectBestCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the best condition and best charge will be selected.</li> <li><code>selectWorstCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemEquipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#equipmagic","title":"<code>equipMagic</code>","text":"<p>Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns <code>false</code> if the item could not be equipped.</p> <pre><code>local result = myObject:equipMagic({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li> <p><code>source</code> (tes3spell, tes3item, string): The source of the magic to equip.</p> <p>Spells must be castable. Castable spells have a <code>castType</code> of <code>tes3.spellType.spell</code> or <code>tes3.spellType.power</code>. The actor is not required to know this spell.</p> <p>Items must have a castable enchantment. Castable enchantments have a <code>castType</code> of <code>tes3.enchantmentType.onUse</code> or <code>tes3.enchantmentType.castOnce</code>. The actor is not required to have this item in their inventory, unless <code>equipItem</code> is <code>true</code>.</p> </li> <li> <p><code>itemData</code> (tes3itemData): Optional. Only valid if an item has been assigned to <code>source</code>. The item data of the specific item to equip.</p> </li> <li><code>equipItem</code> (boolean): Default: <code>false</code>. Only valid if an item has been assigned to <code>source</code>. If <code>true</code>, the item assigned to <code>source</code> will be equipped. Requires the actor to have the item in their inventory. If <code>false</code>, <code>itemData</code> must not be nil.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#getactivemagiceffects","title":"<code>getActiveMagicEffects</code>","text":"<p>Fetches a filtered list of the active magic effects on the actor.</p> <pre><code>local result = myObject:getActiveMagicEffects({ effect = ..., serial = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>effect</code> (integer): Optional. The magic effect ID to search for, from <code>tes3.effect</code> table.</li> <li><code>serial</code> (integer): Optional. The magic instance serial to search for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileActor/#getbootsweight","title":"<code>getBootsWeight</code>","text":"<p>Read-only. Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped.</p> <pre><code>local result = myObject:getBootsWeight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#getfatigueterm","title":"<code>getFatigueTerm</code>","text":"<p>Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to <code>max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base))</code></p> <pre><code>local result = myObject:getFatigueTerm()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#getpowerusetimestamp","title":"<code>getPowerUseTimestamp</code>","text":"<p>Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</p> <pre><code>local timestamp = myObject:getPowerUseTimestamp(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>timestamp</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#getskillstatistic","title":"<code>getSkillStatistic</code>","text":"<p>Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillStatistic(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileActor/#getskillvalue","title":"<code>getSkillValue</code>","text":"<p>Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillValue(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic's value to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#getviewtoactor","title":"<code>getViewToActor</code>","text":"<p>Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToActor(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor): The target actor to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileActor/#getviewtopoint","title":"<code>getViewToPoint</code>","text":"<p>Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToPoint(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileActor/#getviewtopointwithfacing","title":"<code>getViewToPointWithFacing</code>","text":"<p>Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position.</p> <pre><code>local angle = myObject:getViewToPointWithFacing(facing, point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>facing</code> (number): The facing angle in radians. The values should be in [0, PI] interval.</li> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileActor/#getweaponspeed","title":"<code>getWeaponSpeed</code>","text":"<p>Fetches the weapon speed of the actor's currently equipped weapon, or <code>1.0</code> if no weapon is equipped.</p> <pre><code>local result = myObject:getWeaponSpeed()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileActor/#hasusedpower","title":"<code>hasUsedPower</code>","text":"<p>Check if a power has been used and is recharging.</p> <pre><code>local result = myObject:hasUsedPower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#isaffectedbyobject","title":"<code>isAffectedByObject</code>","text":"<p>Determines if the actor is currently being affected by a given alchemy, enchantment, or spell.</p> <pre><code>local result = myObject:isAffectedByObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3alchemy, tes3enchantment, tes3spell): The magic to check for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#kill","title":"<code>kill</code>","text":"<p>Kills the actor by setting its health to 0.</p> <pre><code>myObject:kill()\n</code></pre>"},{"location":"types/tes3mobileActor/#rechargepower","title":"<code>rechargePower</code>","text":"<p>Makes a power immediately available for casting again.</p> <pre><code>local result = myObject:rechargePower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#setpowerusetimestamp","title":"<code>setPowerUseTimestamp</code>","text":"<p>Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp.</p> <pre><code>myObject:setPowerUseTimestamp(power, timestamp)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> <li><code>timestamp</code> (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</li> </ul>"},{"location":"types/tes3mobileActor/#startcombat","title":"<code>startCombat</code>","text":"<p>Forces the actor into combat with another actor.</p> <pre><code>myObject:startCombat(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobileActor/#startdialogue","title":"<code>startDialogue</code>","text":"<p>Starts dialogue with this actor for the player.</p> <pre><code>myObject:startDialogue()\n</code></pre>"},{"location":"types/tes3mobileActor/#stopcombat","title":"<code>stopCombat</code>","text":"<p>Ends combat for the actor.</p> <pre><code>myObject:stopCombat(force)\n</code></pre> <p>Parameters:</p> <ul> <li><code>force</code> (boolean): Default: <code>false</code>. If <code>false</code>, the function won't stop combat if the actor has other valid hostile targets.</li> </ul>"},{"location":"types/tes3mobileActor/#unequip","title":"<code>unequip</code>","text":"<p>Unequips one or more items from the actor.</p> <pre><code>local itemUnequipped = myObject:unequip({ item = ..., itemData = ..., type = ..., armorSlot = ..., clothingSlot = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): Optional. The item to unequip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to unequip, if a specific item is required.</li> <li><code>type</code> (number): Optional. The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from <code>tes3.objectType</code> can be passed here.</li> <li><code>armorSlot</code> (number): Optional. The armor slot to unequip. Maps to values in <code>tes3.armorSlot</code> namespace.</li> <li><code>clothingSlot</code> (number): Optional. The clothing slot to unequip. Maps to values in <code>tes3.clothingSlot</code> namespace</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemUnequipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileActor/#unequipmagic","title":"<code>unequipMagic</code>","text":"<p>Unequips the currently equipped magic, optionally unequipping the enchanted item if needed.</p> <pre><code>myObject:unequipMagic({ unequipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>unequipItem</code> (boolean): Default: <code>false</code>. Only valid if the currently equipped magic is from an equippable item enchantment. If <code>true</code>, the item containing the enchantment will be unequipped.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul>"},{"location":"types/tes3mobileActor/#updatederivedstatistics","title":"<code>updateDerivedStatistics</code>","text":"<p>Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use <code>tes3.modStatistic()</code>.</p> <pre><code>myObject:updateDerivedStatistics(attribute)\n</code></pre> <p>Parameters:</p> <ul> <li><code>attribute</code> (tes3statistic): Optional. Limits the update to statistics derived from this attribute.  e.g. <code>mobile:updateDerivedStatistics(mobile.strength)</code>. If not present, all derived statistics will be updated.</li> </ul>"},{"location":"types/tes3mobileActor/#updateopacity","title":"<code>updateOpacity</code>","text":"<p>Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects.</p> <pre><code>myObject:updateOpacity()\n</code></pre>"},{"location":"types/tes3mobileCreature/","title":"tes3mobileCreature","text":""},{"location":"types/tes3mobileCreature/#tes3mobilecreature","title":"tes3mobileCreature","text":"<p>A mobile object for a creature.</p> <p>This type inherits the following: tes3mobileActor, tes3mobileObject</p>"},{"location":"types/tes3mobileCreature/#properties","title":"Properties","text":""},{"location":"types/tes3mobileCreature/#actionbeforecombat","title":"<code>actionBeforeCombat</code>","text":"<p>Read-only. Action data stored before the actor entered combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileCreature/#actiondata","title":"<code>actionData</code>","text":"<p>Read-only. Current action data. Pre-combat action data is stored in the <code>actionBeforeCombat</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileCreature/#activeai","title":"<code>activeAI</code>","text":"<p>Friendly access to the actor's flag that controls if AI is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#activemagiceffectlist","title":"<code>activeMagicEffectList</code>","text":"<p>Read-only. The active magic effects on the actor, from which all others can be accessed. A table with <code>tes3activeMagicEffect</code> items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileCreature/#actortype","title":"<code>actorType</code>","text":"<p>Read-only. The type of the mobile actor. Maps to values in <code>tes3.actorType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#agility","title":"<code>agility</code>","text":"<p>Read-only. Direct access to the actor's agility attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#aiplanner","title":"<code>aiPlanner</code>","text":"<p>Read-only. Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPlanner, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#alarm","title":"<code>alarm</code>","text":"<p>The actor's alarm AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#animationcontroller","title":"<code>animationController</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actorAnimationController)</li> </ul>"},{"location":"types/tes3mobileCreature/#armorrating","title":"<code>armorRating</code>","text":"<p>Read-only. The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the <code>applyDamage</code> function.</p> <p>Armour mitigation calculation:</p> <p>x = damage / (damage + target.armorRating)</p> <p>damage *= max(fCombatArmorMinMult, x)</p> <p>if damage &lt; 1 then</p> <pre><code>damage = 1\n</code></pre> <p>end</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#attackbonus","title":"<code>attackBonus</code>","text":"<p>Direct access to the actor's attack bonus effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#attacked","title":"<code>attacked</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has been attacked.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. Access to a table of 8 <code>tes3statistic</code> objects for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic[])</li> </ul>"},{"location":"types/tes3mobileCreature/#bartergold","title":"<code>barterGold</code>","text":"<p>The current amount of gold that the actor has access to for bartering.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#blind","title":"<code>blind</code>","text":"<p>Direct access to the actor's blind effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileCreature/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileCreature/#canact","title":"<code>canAct</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#canjump","title":"<code>canJump</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#canjumpmidair","title":"<code>canJumpMidair</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see <code>tes3mobileActor:doJump()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#canmove","title":"<code>canMove</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely move along the ground or in the air. This does not include jumping (see <code>canJump</code>). This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, or paralyzed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#cell","title":"<code>cell</code>","text":"<p>Read-only. Fetches the cell that the actor is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3mobileCreature/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#chameleon","title":"<code>chameleon</code>","text":"<p>Direct access to the actor's chameleon effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#collidingreference","title":"<code>collidingReference</code>","text":"<p>Read-only. The reference that the mobile has collided with this frame. Doesn't include actors and terrain.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#combat","title":"<code>combat</code>","text":"<p>Read-only. Direct access to the creature's combat statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all combat skills. To get an individual skill value by skill ID, see the <code>getSkillValue</code> or <code>getSkillStatistic</code> methods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#combatsession","title":"<code>combatSession</code>","text":"<p>Read-only. Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3combatSession, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#corpsehourstamp","title":"<code>corpseHourstamp</code>","text":"<p>This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of <code>0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#currentenchanteditem","title":"<code>currentEnchantedItem</code>","text":"<p>Read-only. The currently equipped enchanted item that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#currentspell","title":"<code>currentSpell</code>","text":"<p>Read-only. The currently equipped spell that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3mobileCreature/#effectattributes","title":"<code>effectAttributes</code>","text":"<p>Read-only. Access to a table of 24 numbers for the actor's effect attributes. In order those are: <code>attackBonus</code>, <code>sanctuary</code>, <code>resistMagicka</code>, <code>resistFire</code>, <code>resistFrost</code>, <code>resistShock</code>, <code>resistCommonDisease</code>, <code>resistBlightDisease</code>, <code>resistCorprus</code>, <code>resistPoison</code>, <code>resistParalysis</code>, <code>chameleon</code>, <code>resistNormalWeapons</code>, <code>waterBreathing</code>, <code>waterWalking</code>, <code>swiftSwim</code>, <code>jump</code>, <code>levitate</code>, <code>shield</code>, <code>sound</code>, <code>silence</code>, <code>blind</code>, <code>paralyze</code>, and <code>invisibility</code>. Each of those can be accessed individually. For example, <code>tes3mobileActor.chameleon</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobileCreature/#encumbrance","title":"<code>encumbrance</code>","text":"<p>Read-only. Access to the actor's encumbrance statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#endurance","title":"<code>endurance</code>","text":"<p>Read-only. Direct access to the actor's endurance attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#facing","title":"<code>facing</code>","text":"<p>Read-only. The facing of the actor, in radians. It corresponds to the <code>mobile.reference.orientation.z</code>. Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. Access to the actor's fatigue statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#fight","title":"<code>fight</code>","text":"<p>The actor's fight AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileCreature/#flee","title":"<code>flee</code>","text":"<p>The actor's flee AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#flyspeed","title":"<code>flySpeed</code>","text":"<p>Read-only. The calculated fly movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#friendlyactors","title":"<code>friendlyActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers friendly.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileCreature/#greetduration","title":"<code>greetDuration</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#greettimer","title":"<code>greetTimer</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#hasfreeaction","title":"<code>hasFreeAction</code>","text":"<p>Read-only. If true, the actor isn't knocked down or knocked out.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#health","title":"<code>health</code>","text":"<p>Read-only. Access to the actor's health statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#hello","title":"<code>hello</code>","text":"<p>The actor's hello AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#holdbreathtime","title":"<code>holdBreathTime</code>","text":"<p>This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is <code>fHoldBreathTime</code>(GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than <code>fHoldBreathTime</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#hostileactors","title":"<code>hostileActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers hostile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileCreature/#idleanim","title":"<code>idleAnim</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is using their idle animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileCreature/#incombat","title":"<code>inCombat</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is in combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#intelligence","title":"<code>intelligence</code>","text":"<p>Read-only. Direct access to the actor's intelligence attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileCreature/#invisibility","title":"<code>invisibility</code>","text":"<p>Direct access to the actor's invisibility effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isattackingorcasting","title":"<code>isAttackingOrCasting</code>","text":"<p>Read-only. If <code>true</code>, the actor is attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#iscrittable","title":"<code>isCrittable</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor can be critically hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isdead","title":"<code>isDead</code>","text":"<p>Read-only. True if the actor is dead.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isdiseased","title":"<code>isDiseased</code>","text":"<p>Read-only. True if the actor is has a disease effect. This counts normal, blight, and corprus effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isfalling","title":"<code>isFalling</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isflying","title":"<code>isFlying</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#ishitstunned","title":"<code>isHitStunned</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by hit stun. This prevents the actor from initiating an attack, but not continuing and finishing an attack. It also prevents movement except for jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isjumping","title":"<code>isJumping</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isknockeddown","title":"<code>isKnockedDown</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked down. An actor can be knocked down after being attacked or falling.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isknockedout","title":"<code>isKnockedOut</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#ismovingback","title":"<code>isMovingBack</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving backwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#ismovingforward","title":"<code>isMovingForward</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving forwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#ismovingleft","title":"<code>isMovingLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#ismovingright","title":"<code>isMovingRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isparalyzed","title":"<code>isParalyzed</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by the magic effect paralyze.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isplayerdetected","title":"<code>isPlayerDetected</code>","text":"<p>Direct access to the actor's flag showing the player was detected on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isplayerhidden","title":"<code>isPlayerHidden</code>","text":"<p>Direct access to the actor's flag showing the player was hidden on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isreadyingweapon","title":"<code>isReadyingWeapon</code>","text":"<p>Read-only. If <code>true</code>, the actor is drawing or sheathing their weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isrunning","title":"<code>isRunning</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is running.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#issneaking","title":"<code>isSneaking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is sneaking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isswimming","title":"<code>isSwimming</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is swimming.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isturningleft","title":"<code>isTurningLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isturningright","title":"<code>isTurningRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#iswalking","title":"<code>isWalking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is walking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#jump","title":"<code>jump</code>","text":"<p>Direct access to the actor's jump effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#lastgroundz","title":"<code>lastGroundZ</code>","text":"<p>This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During <code>jump</code> event this value is still negative. A split second after, it will have the value of the <code>.z</code> coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#levitate","title":"<code>levitate</code>","text":"<p>Direct access to the actor's levitate effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#luck","title":"<code>luck</code>","text":"<p>Read-only. Direct access to the actor's luck attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#magic","title":"<code>magic</code>","text":"<p>Read-only. Direct access to the creature's magic statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all magic skills. To get an individual skill value by skill ID, see the <code>getSkillValue</code> or <code>getSkillStatistic</code> methods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. Access to the actor's magicka statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#magickamultiplier","title":"<code>magickaMultiplier</code>","text":"<p>Read-only. Access to the actor's magicka multiplier statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#mobtomobcollision","title":"<code>mobToMobCollision</code>","text":"<p>Allows modifying if this actor will collide with other actors. When <code>true</code> (default), the actor cannot move through other actors. When <code>false</code>, the actor is allowed to move through other actors, and other actors can move through it.</p> <p>May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileCreature/#movespeed","title":"<code>moveSpeed</code>","text":"<p>Read-only. The calculated base movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#nextactionweight","title":"<code>nextActionWeight</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#object","title":"<code>object</code>","text":"<p>Read-only. The actor object that maps to this mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3creatureInstance)</li> </ul>"},{"location":"types/tes3mobileCreature/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#paralyze","title":"<code>paralyze</code>","text":"<p>Direct access to the actor's paralyze effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#personality","title":"<code>personality</code>","text":"<p>Read-only. Direct access to the actor's personality attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileCreature/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileCreature/#readiedammo","title":"<code>readiedAmmo</code>","text":"<p>The currently equipped ammo, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#readiedammocount","title":"<code>readiedAmmoCount</code>","text":"<p>The number of ammo equipped for the readied ammo.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileCreature/#readiedshield","title":"<code>readiedShield</code>","text":"<p>The currently equipped shield, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#readiedweapon","title":"<code>readiedWeapon</code>","text":"<p>The currently equipped weapon, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileCreature/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistblightdisease","title":"<code>resistBlightDisease</code>","text":"<p>Direct access to the actor's blight disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistcommondisease","title":"<code>resistCommonDisease</code>","text":"<p>Direct access to the actor's common disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistcorprus","title":"<code>resistCorprus</code>","text":"<p>Direct access to the actor's corprus disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistfire","title":"<code>resistFire</code>","text":"<p>Direct access to the actor's fire resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistfrost","title":"<code>resistFrost</code>","text":"<p>Direct access to the actor's frost resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistmagicka","title":"<code>resistMagicka</code>","text":"<p>Direct access to the actor's magicka resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistnormalweapons","title":"<code>resistNormalWeapons</code>","text":"<p>Direct access to the actor's normal weapon resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistparalysis","title":"<code>resistParalysis</code>","text":"<p>Direct access to the actor's paralysis resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistpoison","title":"<code>resistPoison</code>","text":"<p>Direct access to the actor's poison resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#resistshock","title":"<code>resistShock</code>","text":"<p>Direct access to the actor's shock resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#runspeed","title":"<code>runSpeed</code>","text":"<p>Read-only. The calculated run movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#sanctuary","title":"<code>sanctuary</code>","text":"<p>Direct access to the actor's sanctuary effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#scaninterval","title":"<code>scanInterval</code>","text":"<p>The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of <code>0.0</code> will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active <code>tes3aiPlanner</code>, meaning the checks will be executed at different intervals for each actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#scantimer","title":"<code>scanTimer</code>","text":"<p>Read-only. The time in seconds since the last time the checks specified in <code>scanInterval</code> were executed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#shield","title":"<code>shield</code>","text":"<p>Direct access to the actor's shield effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#silence","title":"<code>silence</code>","text":"<p>Direct access to the actor's silence effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table with access to the three creature skill statistics.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic[])</li> </ul>"},{"location":"types/tes3mobileCreature/#sound","title":"<code>sound</code>","text":"<p>Direct access to the actor's sound effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#speed","title":"<code>speed</code>","text":"<p>Read-only. Direct access to the actor's speed attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#spellreadied","title":"<code>spellReadied</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has a spell readied.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#stealth","title":"<code>stealth</code>","text":"<p>Read-only. Direct access to the creature's stealth statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all stealth skills. To get an individual skill value by skill ID, see the <code>getSkillValue</code> or <code>getSkillStatistic</code> methods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#strength","title":"<code>strength</code>","text":"<p>Read-only. Direct access to the actor's strength attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#swiftswim","title":"<code>swiftSwim</code>","text":"<p>Direct access to the actor's swift swim effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#swimrunspeed","title":"<code>swimRunSpeed</code>","text":"<p>Read-only. The calculated swim movement speed while running.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#swimspeed","title":"<code>swimSpeed</code>","text":"<p>Read-only. The calculated swim movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#talkedto","title":"<code>talkedTo</code>","text":"<p>Direct access to the actor's flag that shows it was recently talked to.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#torchslot","title":"<code>torchSlot</code>","text":"<p>The currently equipped light.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3mobileCreature/#underwater","title":"<code>underwater</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is under water.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#velocity","title":"<code>velocity</code>","text":"<p>A vector that represents the 3D velocity of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileCreature/#walkspeed","title":"<code>walkSpeed</code>","text":"<p>Read-only. The calculated walk movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#waterbreathing","title":"<code>waterBreathing</code>","text":"<p>Direct access to the actor's water breathing effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#waterwalking","title":"<code>waterWalking</code>","text":"<p>Direct access to the actor's water walking effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#weapondrawn","title":"<code>weaponDrawn</code>","text":"<p>Read-only. Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#weaponready","title":"<code>weaponReady</code>","text":"<p>A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#werewolf","title":"<code>werewolf</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor in werewolf form.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#width","title":"<code>width</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#willpower","title":"<code>willpower</code>","text":"<p>Read-only. Direct access to the actor's willpower attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileCreature/#methods","title":"Methods","text":""},{"location":"types/tes3mobileCreature/#applydamage","title":"<code>applyDamage</code>","text":"<p>Damages the actor, with options to control mitigation and difficulty scaling. Invokes the <code>damage</code> and <code>damaged</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:applyDamage({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> <li><code>applyDifficulty</code> (boolean): Default: <code>false</code>. If the game difficulty modifier should be applied. Must be used with the <code>playerAttack</code> argument to apply the correct modifier.</li> <li><code>playerAttack</code> (boolean): Optional. If the attack came from the player. Used for difficulty calculation.</li> <li><code>doNotChangeHealth</code> (boolean): Default: <code>false</code>. If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#applyfatiguedamage","title":"<code>applyFatigueDamage</code>","text":"<p>Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the <code>damageHandToHand</code> and <code>damagedHandToHand</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual fatigue damage done.</p> <pre><code>local result = myObject:applyFatigueDamage(fatigueDamage, swing, alwaysPlayHitVoice)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fatigueDamage</code> (number): The amount of fatigue damage to apply.</li> <li><code>swing</code> (number): Optional. The attack swing magnitude, range 0-1. Only modifies hit volume.</li> <li><code>alwaysPlayHitVoice</code> (boolean): Optional. Always play the hit reaction voiceover.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#applyjumpfatiguecost","title":"<code>applyJumpFatigueCost</code>","text":"<p>Reduces the actor's current fatigue by the amount a regular jump would currently cost.</p> <pre><code>myObject:applyJumpFatigueCost()\n</code></pre>"},{"location":"types/tes3mobileCreature/#calceffectivedamage","title":"<code>calcEffectiveDamage</code>","text":"<p>Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:calcEffectiveDamage({ damage = ..., applyArmor = ..., resistAttribute = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#calculatejumpvelocity","title":"<code>calculateJumpVelocity</code>","text":"<p>Calculates the starting velocity of a jump.</p> <pre><code>local result = myObject:calculateJumpVelocity({ direction = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>direction</code> (tes3vector2): Optional. The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileCreature/#dojump","title":"<code>doJump</code>","text":"<p>Forces the actor to jump. If <code>velocity</code> or other parameters with non-default values are specified it will be treated as a non-default jump during the <code>jump</code> event. Returns <code>false</code> if the actor is currently unable to jump or the jump has been cancelled, otherwise returns <code>true</code>.</p> <pre><code>local result = myObject:doJump({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>velocity</code> (tes3vector3): Optional. The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used.</li> <li><code>applyFatigueCost</code> (boolean): Default: <code>true</code>. If <code>true</code>, reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if <code>false</code>.</li> <li><code>allowMidairJumping</code> (boolean): Default: <code>false</code>. If <code>true</code>, enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#equip","title":"<code>equip</code>","text":"<p>Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return <code>true</code>.</p> <pre><code>local itemEquipped = myObject:equip({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): The item to equip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to equip, if a specific item is required.</li> <li><code>addItem</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item will be added to the actor's inventory if needed.</li> <li><code>selectBestCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the best condition and best charge will be selected.</li> <li><code>selectWorstCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemEquipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#equipmagic","title":"<code>equipMagic</code>","text":"<p>Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns <code>false</code> if the item could not be equipped.</p> <pre><code>local result = myObject:equipMagic({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li> <p><code>source</code> (tes3spell, tes3item, string): The source of the magic to equip.</p> <p>Spells must be castable. Castable spells have a <code>castType</code> of <code>tes3.spellType.spell</code> or <code>tes3.spellType.power</code>. The actor is not required to know this spell.</p> <p>Items must have a castable enchantment. Castable enchantments have a <code>castType</code> of <code>tes3.enchantmentType.onUse</code> or <code>tes3.enchantmentType.castOnce</code>. The actor is not required to have this item in their inventory, unless <code>equipItem</code> is <code>true</code>.</p> </li> <li> <p><code>itemData</code> (tes3itemData): Optional. Only valid if an item has been assigned to <code>source</code>. The item data of the specific item to equip.</p> </li> <li><code>equipItem</code> (boolean): Default: <code>false</code>. Only valid if an item has been assigned to <code>source</code>. If <code>true</code>, the item assigned to <code>source</code> will be equipped. Requires the actor to have the item in their inventory. If <code>false</code>, <code>itemData</code> must not be nil.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#getactivemagiceffects","title":"<code>getActiveMagicEffects</code>","text":"<p>Fetches a filtered list of the active magic effects on the actor.</p> <pre><code>local result = myObject:getActiveMagicEffects({ effect = ..., serial = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>effect</code> (integer): Optional. The magic effect ID to search for, from <code>tes3.effect</code> table.</li> <li><code>serial</code> (integer): Optional. The magic instance serial to search for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileCreature/#getbootsweight","title":"<code>getBootsWeight</code>","text":"<p>Read-only. Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped.</p> <pre><code>local result = myObject:getBootsWeight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#getfatigueterm","title":"<code>getFatigueTerm</code>","text":"<p>Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to <code>max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base))</code></p> <pre><code>local result = myObject:getFatigueTerm()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#getpowerusetimestamp","title":"<code>getPowerUseTimestamp</code>","text":"<p>Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</p> <pre><code>local timestamp = myObject:getPowerUseTimestamp(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>timestamp</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#getskillstatistic","title":"<code>getSkillStatistic</code>","text":"<p>Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillStatistic(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileCreature/#getskillvalue","title":"<code>getSkillValue</code>","text":"<p>Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillValue(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic's value to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#getviewtoactor","title":"<code>getViewToActor</code>","text":"<p>Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToActor(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor): The target actor to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileCreature/#getviewtopoint","title":"<code>getViewToPoint</code>","text":"<p>Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToPoint(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileCreature/#getviewtopointwithfacing","title":"<code>getViewToPointWithFacing</code>","text":"<p>Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position.</p> <pre><code>local angle = myObject:getViewToPointWithFacing(facing, point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>facing</code> (number): The facing angle in radians. The values should be in [0, PI] interval.</li> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileCreature/#getweaponspeed","title":"<code>getWeaponSpeed</code>","text":"<p>Fetches the weapon speed of the actor's currently equipped weapon, or <code>1.0</code> if no weapon is equipped.</p> <pre><code>local result = myObject:getWeaponSpeed()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileCreature/#hasusedpower","title":"<code>hasUsedPower</code>","text":"<p>Check if a power has been used and is recharging.</p> <pre><code>local result = myObject:hasUsedPower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#isaffectedbyobject","title":"<code>isAffectedByObject</code>","text":"<p>Determines if the actor is currently being affected by a given alchemy, enchantment, or spell.</p> <pre><code>local result = myObject:isAffectedByObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3alchemy, tes3enchantment, tes3spell): The magic to check for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#kill","title":"<code>kill</code>","text":"<p>Kills the actor by setting its health to 0.</p> <pre><code>myObject:kill()\n</code></pre>"},{"location":"types/tes3mobileCreature/#rechargepower","title":"<code>rechargePower</code>","text":"<p>Makes a power immediately available for casting again.</p> <pre><code>local result = myObject:rechargePower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#setpowerusetimestamp","title":"<code>setPowerUseTimestamp</code>","text":"<p>Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp.</p> <pre><code>myObject:setPowerUseTimestamp(power, timestamp)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> <li><code>timestamp</code> (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</li> </ul>"},{"location":"types/tes3mobileCreature/#startcombat","title":"<code>startCombat</code>","text":"<p>Forces the actor into combat with another actor.</p> <pre><code>myObject:startCombat(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobileCreature/#startdialogue","title":"<code>startDialogue</code>","text":"<p>Starts dialogue with this actor for the player.</p> <pre><code>myObject:startDialogue()\n</code></pre>"},{"location":"types/tes3mobileCreature/#stopcombat","title":"<code>stopCombat</code>","text":"<p>Ends combat for the actor.</p> <pre><code>myObject:stopCombat(force)\n</code></pre> <p>Parameters:</p> <ul> <li><code>force</code> (boolean): Default: <code>false</code>. If <code>false</code>, the function won't stop combat if the actor has other valid hostile targets.</li> </ul>"},{"location":"types/tes3mobileCreature/#unequip","title":"<code>unequip</code>","text":"<p>Unequips one or more items from the actor.</p> <pre><code>local itemUnequipped = myObject:unequip({ item = ..., itemData = ..., type = ..., armorSlot = ..., clothingSlot = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): Optional. The item to unequip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to unequip, if a specific item is required.</li> <li><code>type</code> (number): Optional. The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from <code>tes3.objectType</code> can be passed here.</li> <li><code>armorSlot</code> (number): Optional. The armor slot to unequip. Maps to values in <code>tes3.armorSlot</code> namespace.</li> <li><code>clothingSlot</code> (number): Optional. The clothing slot to unequip. Maps to values in <code>tes3.clothingSlot</code> namespace</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemUnequipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileCreature/#unequipmagic","title":"<code>unequipMagic</code>","text":"<p>Unequips the currently equipped magic, optionally unequipping the enchanted item if needed.</p> <pre><code>myObject:unequipMagic({ unequipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>unequipItem</code> (boolean): Default: <code>false</code>. Only valid if the currently equipped magic is from an equippable item enchantment. If <code>true</code>, the item containing the enchantment will be unequipped.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul>"},{"location":"types/tes3mobileCreature/#updatederivedstatistics","title":"<code>updateDerivedStatistics</code>","text":"<p>Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use <code>tes3.modStatistic()</code>.</p> <pre><code>myObject:updateDerivedStatistics(attribute)\n</code></pre> <p>Parameters:</p> <ul> <li><code>attribute</code> (tes3statistic): Optional. Limits the update to statistics derived from this attribute.  e.g. <code>mobile:updateDerivedStatistics(mobile.strength)</code>. If not present, all derived statistics will be updated.</li> </ul>"},{"location":"types/tes3mobileCreature/#updateopacity","title":"<code>updateOpacity</code>","text":"<p>Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects.</p> <pre><code>myObject:updateOpacity()\n</code></pre>"},{"location":"types/tes3mobileNPC/","title":"tes3mobileNPC","text":""},{"location":"types/tes3mobileNPC/#tes3mobilenpc","title":"tes3mobileNPC","text":"<p>A mobile object for an NPC.</p> <p>This type inherits the following: tes3mobileActor, tes3mobileObject</p>"},{"location":"types/tes3mobileNPC/#properties","title":"Properties","text":""},{"location":"types/tes3mobileNPC/#acrobatics","title":"<code>acrobatics</code>","text":"<p>Read-only. Direct access to the NPC's acrobatics skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#actionbeforecombat","title":"<code>actionBeforeCombat</code>","text":"<p>Read-only. Action data stored before the actor entered combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileNPC/#actiondata","title":"<code>actionData</code>","text":"<p>Read-only. Current action data. Pre-combat action data is stored in the <code>actionBeforeCombat</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobileNPC/#activeai","title":"<code>activeAI</code>","text":"<p>Friendly access to the actor's flag that controls if AI is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#activemagiceffectlist","title":"<code>activeMagicEffectList</code>","text":"<p>Read-only. The active magic effects on the actor, from which all others can be accessed. A table with <code>tes3activeMagicEffect</code> items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileNPC/#actortype","title":"<code>actorType</code>","text":"<p>Read-only. The type of the mobile actor. Maps to values in <code>tes3.actorType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#agility","title":"<code>agility</code>","text":"<p>Read-only. Direct access to the actor's agility attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#aiplanner","title":"<code>aiPlanner</code>","text":"<p>Read-only. Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPlanner, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#alarm","title":"<code>alarm</code>","text":"<p>The actor's alarm AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#alchemy","title":"<code>alchemy</code>","text":"<p>Read-only. Direct access to the NPC's alchemy skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#alteration","title":"<code>alteration</code>","text":"<p>Read-only. Direct access to the NPC's alteration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#animationcontroller","title":"<code>animationController</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actorAnimationController)</li> </ul>"},{"location":"types/tes3mobileNPC/#armorer","title":"<code>armorer</code>","text":"<p>Read-only. Direct access to the NPC's armorer skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#armorrating","title":"<code>armorRating</code>","text":"<p>Read-only. The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the <code>applyDamage</code> function.</p> <p>Armour mitigation calculation:</p> <p>x = damage / (damage + target.armorRating)</p> <p>damage *= max(fCombatArmorMinMult, x)</p> <p>if damage &lt; 1 then</p> <pre><code>damage = 1\n</code></pre> <p>end</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#athletics","title":"<code>athletics</code>","text":"<p>Read-only. Direct access to the NPC's athletics skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#attackbonus","title":"<code>attackBonus</code>","text":"<p>Direct access to the actor's attack bonus effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#attacked","title":"<code>attacked</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has been attacked.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. Access to a table of 8 <code>tes3statistic</code> objects for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic[])</li> </ul>"},{"location":"types/tes3mobileNPC/#axe","title":"<code>axe</code>","text":"<p>Read-only. Direct access to the NPC's axe skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#bartergold","title":"<code>barterGold</code>","text":"<p>The current amount of gold that the actor has access to for bartering.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#blind","title":"<code>blind</code>","text":"<p>Direct access to the actor's blind effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#block","title":"<code>block</code>","text":"<p>Read-only. Direct access to the NPC's block skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#bluntweapon","title":"<code>bluntWeapon</code>","text":"<p>Read-only. Direct access to the NPC's blunt weapon skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileNPC/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileNPC/#canact","title":"<code>canAct</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#canjump","title":"<code>canJump</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#canjumpmidair","title":"<code>canJumpMidair</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see <code>tes3mobileActor:doJump()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#canmove","title":"<code>canMove</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely move along the ground or in the air. This does not include jumping (see <code>canJump</code>). This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, or paralyzed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#cell","title":"<code>cell</code>","text":"<p>Read-only. Fetches the cell that the actor is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3mobileNPC/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#chameleon","title":"<code>chameleon</code>","text":"<p>Direct access to the actor's chameleon effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#collidingreference","title":"<code>collidingReference</code>","text":"<p>Read-only. The reference that the mobile has collided with this frame. Doesn't include actors and terrain.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#combatsession","title":"<code>combatSession</code>","text":"<p>Read-only. Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3combatSession, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#conjuration","title":"<code>conjuration</code>","text":"<p>Read-only. Direct access to the NPC's conjuration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#corpsehourstamp","title":"<code>corpseHourstamp</code>","text":"<p>This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of <code>0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#currentenchanteditem","title":"<code>currentEnchantedItem</code>","text":"<p>Read-only. The currently equipped enchanted item that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#currentspell","title":"<code>currentSpell</code>","text":"<p>Read-only. The currently equipped spell that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3mobileNPC/#destruction","title":"<code>destruction</code>","text":"<p>Read-only. Direct access to the NPC's destruction skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#effectattributes","title":"<code>effectAttributes</code>","text":"<p>Read-only. Access to a table of 24 numbers for the actor's effect attributes. In order those are: <code>attackBonus</code>, <code>sanctuary</code>, <code>resistMagicka</code>, <code>resistFire</code>, <code>resistFrost</code>, <code>resistShock</code>, <code>resistCommonDisease</code>, <code>resistBlightDisease</code>, <code>resistCorprus</code>, <code>resistPoison</code>, <code>resistParalysis</code>, <code>chameleon</code>, <code>resistNormalWeapons</code>, <code>waterBreathing</code>, <code>waterWalking</code>, <code>swiftSwim</code>, <code>jump</code>, <code>levitate</code>, <code>shield</code>, <code>sound</code>, <code>silence</code>, <code>blind</code>, <code>paralyze</code>, and <code>invisibility</code>. Each of those can be accessed individually. For example, <code>tes3mobileActor.chameleon</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobileNPC/#enchant","title":"<code>enchant</code>","text":"<p>Read-only. Direct access to the NPC's enchant skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#encumbrance","title":"<code>encumbrance</code>","text":"<p>Read-only. Access to the actor's encumbrance statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#endurance","title":"<code>endurance</code>","text":"<p>Read-only. Direct access to the actor's endurance attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#facing","title":"<code>facing</code>","text":"<p>Read-only. The facing of the actor, in radians. It corresponds to the <code>mobile.reference.orientation.z</code>. Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. Access to the actor's fatigue statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#fight","title":"<code>fight</code>","text":"<p>The actor's fight AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileNPC/#flee","title":"<code>flee</code>","text":"<p>The actor's flee AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#flyspeed","title":"<code>flySpeed</code>","text":"<p>Read-only. The calculated fly movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#forcejump","title":"<code>forceJump</code>","text":"<p>Toggle flag for if the NPC jumps.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#forcemovejump","title":"<code>forceMoveJump</code>","text":"<p>Toggle flag for if the NPC moves and jumps.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#forcerun","title":"<code>forceRun</code>","text":"<p>Toggle flag for if the NPC runs.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#forcesneak","title":"<code>forceSneak</code>","text":"<p>Toggle flag for if the NPC sneaks.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#friendlyactors","title":"<code>friendlyActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers friendly.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileNPC/#greetduration","title":"<code>greetDuration</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#greettimer","title":"<code>greetTimer</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#handtohand","title":"<code>handToHand</code>","text":"<p>Read-only. Direct access to the NPC's hand to hand skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#hasfreeaction","title":"<code>hasFreeAction</code>","text":"<p>Read-only. If true, the actor isn't knocked down or knocked out.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#health","title":"<code>health</code>","text":"<p>Read-only. Access to the actor's health statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#heavyarmor","title":"<code>heavyArmor</code>","text":"<p>Read-only. Direct access to the NPC's heavy armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#hello","title":"<code>hello</code>","text":"<p>The actor's hello AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#holdbreathtime","title":"<code>holdBreathTime</code>","text":"<p>This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is <code>fHoldBreathTime</code>(GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than <code>fHoldBreathTime</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#hostileactors","title":"<code>hostileActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers hostile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobileNPC/#idleanim","title":"<code>idleAnim</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is using their idle animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#illusion","title":"<code>illusion</code>","text":"<p>Read-only. Direct access to the NPC's illusion skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileNPC/#incombat","title":"<code>inCombat</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is in combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#intelligence","title":"<code>intelligence</code>","text":"<p>Read-only. Direct access to the actor's intelligence attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileNPC/#invisibility","title":"<code>invisibility</code>","text":"<p>Direct access to the actor's invisibility effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isattackingorcasting","title":"<code>isAttackingOrCasting</code>","text":"<p>Read-only. If <code>true</code>, the actor is attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#iscrittable","title":"<code>isCrittable</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor can be critically hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isdead","title":"<code>isDead</code>","text":"<p>Read-only. True if the actor is dead.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isdiseased","title":"<code>isDiseased</code>","text":"<p>Read-only. True if the actor is has a disease effect. This counts normal, blight, and corprus effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isfalling","title":"<code>isFalling</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isflying","title":"<code>isFlying</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#ishitstunned","title":"<code>isHitStunned</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by hit stun. This prevents the actor from initiating an attack, but not continuing and finishing an attack. It also prevents movement except for jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isjumping","title":"<code>isJumping</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isknockeddown","title":"<code>isKnockedDown</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked down. An actor can be knocked down after being attacked or falling.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isknockedout","title":"<code>isKnockedOut</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#ismovingback","title":"<code>isMovingBack</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving backwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#ismovingforward","title":"<code>isMovingForward</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving forwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#ismovingleft","title":"<code>isMovingLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#ismovingright","title":"<code>isMovingRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isparalyzed","title":"<code>isParalyzed</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by the magic effect paralyze.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isplayerdetected","title":"<code>isPlayerDetected</code>","text":"<p>Direct access to the actor's flag showing the player was detected on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isplayerhidden","title":"<code>isPlayerHidden</code>","text":"<p>Direct access to the actor's flag showing the player was hidden on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isreadyingweapon","title":"<code>isReadyingWeapon</code>","text":"<p>Read-only. If <code>true</code>, the actor is drawing or sheathing their weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isrunning","title":"<code>isRunning</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is running.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#issneaking","title":"<code>isSneaking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is sneaking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isswimming","title":"<code>isSwimming</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is swimming.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isturningleft","title":"<code>isTurningLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isturningright","title":"<code>isTurningRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#iswalking","title":"<code>isWalking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is walking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#jump","title":"<code>jump</code>","text":"<p>Direct access to the actor's jump effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#lastgroundz","title":"<code>lastGroundZ</code>","text":"<p>This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During <code>jump</code> event this value is still negative. A split second after, it will have the value of the <code>.z</code> coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#levitate","title":"<code>levitate</code>","text":"<p>Direct access to the actor's levitate effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#lightarmor","title":"<code>lightArmor</code>","text":"<p>Read-only. Direct access to the NPC's light armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#longblade","title":"<code>longBlade</code>","text":"<p>Read-only. Direct access to the NPC's long blade skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#luck","title":"<code>luck</code>","text":"<p>Read-only. Direct access to the actor's luck attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. Access to the actor's magicka statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#magickamultiplier","title":"<code>magickaMultiplier</code>","text":"<p>Read-only. Access to the actor's magicka multiplier statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#marksman","title":"<code>marksman</code>","text":"<p>Read-only. Direct access to the NPC's marksman skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#mediumarmor","title":"<code>mediumArmor</code>","text":"<p>Read-only. Direct access to the NPC's medium armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#mercantile","title":"<code>mercantile</code>","text":"<p>Read-only. Direct access to the NPC's mercantile skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#mobtomobcollision","title":"<code>mobToMobCollision</code>","text":"<p>Allows modifying if this actor will collide with other actors. When <code>true</code> (default), the actor cannot move through other actors. When <code>false</code>, the actor is allowed to move through other actors, and other actors can move through it.</p> <p>May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileNPC/#movespeed","title":"<code>moveSpeed</code>","text":"<p>Read-only. The calculated base movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#mysticism","title":"<code>mysticism</code>","text":"<p>Read-only. Direct access to the NPC's mysticism skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#nextactionweight","title":"<code>nextActionWeight</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#object","title":"<code>object</code>","text":"<p>Read-only. The actor object that maps to this mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3npcInstance)</li> </ul>"},{"location":"types/tes3mobileNPC/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#paralyze","title":"<code>paralyze</code>","text":"<p>Direct access to the actor's paralyze effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#personality","title":"<code>personality</code>","text":"<p>Read-only. Direct access to the actor's personality attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileNPC/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileNPC/#readiedammo","title":"<code>readiedAmmo</code>","text":"<p>The currently equipped ammo, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#readiedammocount","title":"<code>readiedAmmoCount</code>","text":"<p>The number of ammo equipped for the readied ammo.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileNPC/#readiedshield","title":"<code>readiedShield</code>","text":"<p>The currently equipped shield, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#readiedweapon","title":"<code>readiedWeapon</code>","text":"<p>The currently equipped weapon, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobileNPC/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistblightdisease","title":"<code>resistBlightDisease</code>","text":"<p>Direct access to the actor's blight disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistcommondisease","title":"<code>resistCommonDisease</code>","text":"<p>Direct access to the actor's common disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistcorprus","title":"<code>resistCorprus</code>","text":"<p>Direct access to the actor's corprus disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistfire","title":"<code>resistFire</code>","text":"<p>Direct access to the actor's fire resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistfrost","title":"<code>resistFrost</code>","text":"<p>Direct access to the actor's frost resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistmagicka","title":"<code>resistMagicka</code>","text":"<p>Direct access to the actor's magicka resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistnormalweapons","title":"<code>resistNormalWeapons</code>","text":"<p>Direct access to the actor's normal weapon resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistparalysis","title":"<code>resistParalysis</code>","text":"<p>Direct access to the actor's paralysis resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistpoison","title":"<code>resistPoison</code>","text":"<p>Direct access to the actor's poison resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#resistshock","title":"<code>resistShock</code>","text":"<p>Direct access to the actor's shock resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#restoration","title":"<code>restoration</code>","text":"<p>Read-only. Direct access to the NPC's restoration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#runspeed","title":"<code>runSpeed</code>","text":"<p>Read-only. The calculated run movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#sanctuary","title":"<code>sanctuary</code>","text":"<p>Direct access to the actor's sanctuary effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#scaninterval","title":"<code>scanInterval</code>","text":"<p>The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of <code>0.0</code> will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active <code>tes3aiPlanner</code>, meaning the checks will be executed at different intervals for each actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#scantimer","title":"<code>scanTimer</code>","text":"<p>Read-only. The time in seconds since the last time the checks specified in <code>scanInterval</code> were executed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#security","title":"<code>security</code>","text":"<p>Read-only. Direct access to the NPC's security skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#shield","title":"<code>shield</code>","text":"<p>Direct access to the actor's shield effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#shortblade","title":"<code>shortBlade</code>","text":"<p>Read-only. Direct access to the NPC's short blade skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#silence","title":"<code>silence</code>","text":"<p>Direct access to the actor's silence effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table with access to the twenty seven NPC skill statistics (tes3statisticSkill).</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill[])</li> </ul>"},{"location":"types/tes3mobileNPC/#sneak","title":"<code>sneak</code>","text":"<p>Read-only. Direct access to the NPC's sneak skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#sound","title":"<code>sound</code>","text":"<p>Direct access to the actor's sound effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#spear","title":"<code>spear</code>","text":"<p>Read-only. Direct access to the NPC's spear skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#speechcraft","title":"<code>speechcraft</code>","text":"<p>Read-only. Direct access to the NPC's speechcraft skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#speed","title":"<code>speed</code>","text":"<p>Read-only. Direct access to the actor's speed attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#spellreadied","title":"<code>spellReadied</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has a spell readied.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#strength","title":"<code>strength</code>","text":"<p>Read-only. Direct access to the actor's strength attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#swiftswim","title":"<code>swiftSwim</code>","text":"<p>Direct access to the actor's swift swim effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#swimrunspeed","title":"<code>swimRunSpeed</code>","text":"<p>Read-only. The calculated swim movement speed while running.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#swimspeed","title":"<code>swimSpeed</code>","text":"<p>Read-only. The calculated swim movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#talkedto","title":"<code>talkedTo</code>","text":"<p>Direct access to the actor's flag that shows it was recently talked to.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#torchslot","title":"<code>torchSlot</code>","text":"<p>The currently equipped light.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3mobileNPC/#unarmored","title":"<code>unarmored</code>","text":"<p>Read-only. Direct access to the NPC's unarmored skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#underwater","title":"<code>underwater</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is under water.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#velocity","title":"<code>velocity</code>","text":"<p>A vector that represents the 3D velocity of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileNPC/#walkspeed","title":"<code>walkSpeed</code>","text":"<p>Read-only. The calculated walk movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#waterbreathing","title":"<code>waterBreathing</code>","text":"<p>Direct access to the actor's water breathing effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#waterwalking","title":"<code>waterWalking</code>","text":"<p>Direct access to the actor's water walking effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#weapondrawn","title":"<code>weaponDrawn</code>","text":"<p>Read-only. Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#weaponready","title":"<code>weaponReady</code>","text":"<p>A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#werewolf","title":"<code>werewolf</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor in werewolf form.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#width","title":"<code>width</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#willpower","title":"<code>willpower</code>","text":"<p>Read-only. Direct access to the actor's willpower attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobileNPC/#methods","title":"Methods","text":""},{"location":"types/tes3mobileNPC/#applydamage","title":"<code>applyDamage</code>","text":"<p>Damages the actor, with options to control mitigation and difficulty scaling. Invokes the <code>damage</code> and <code>damaged</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:applyDamage({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> <li><code>applyDifficulty</code> (boolean): Default: <code>false</code>. If the game difficulty modifier should be applied. Must be used with the <code>playerAttack</code> argument to apply the correct modifier.</li> <li><code>playerAttack</code> (boolean): Optional. If the attack came from the player. Used for difficulty calculation.</li> <li><code>doNotChangeHealth</code> (boolean): Default: <code>false</code>. If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#applyfatiguedamage","title":"<code>applyFatigueDamage</code>","text":"<p>Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the <code>damageHandToHand</code> and <code>damagedHandToHand</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual fatigue damage done.</p> <pre><code>local result = myObject:applyFatigueDamage(fatigueDamage, swing, alwaysPlayHitVoice)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fatigueDamage</code> (number): The amount of fatigue damage to apply.</li> <li><code>swing</code> (number): Optional. The attack swing magnitude, range 0-1. Only modifies hit volume.</li> <li><code>alwaysPlayHitVoice</code> (boolean): Optional. Always play the hit reaction voiceover.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#applyjumpfatiguecost","title":"<code>applyJumpFatigueCost</code>","text":"<p>Reduces the actor's current fatigue by the amount a regular jump would currently cost.</p> <pre><code>myObject:applyJumpFatigueCost()\n</code></pre>"},{"location":"types/tes3mobileNPC/#calceffectivedamage","title":"<code>calcEffectiveDamage</code>","text":"<p>Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:calcEffectiveDamage({ damage = ..., applyArmor = ..., resistAttribute = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#calculatejumpvelocity","title":"<code>calculateJumpVelocity</code>","text":"<p>Calculates the starting velocity of a jump.</p> <pre><code>local result = myObject:calculateJumpVelocity({ direction = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>direction</code> (tes3vector2): Optional. The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileNPC/#dojump","title":"<code>doJump</code>","text":"<p>Forces the actor to jump. If <code>velocity</code> or other parameters with non-default values are specified it will be treated as a non-default jump during the <code>jump</code> event. Returns <code>false</code> if the actor is currently unable to jump or the jump has been cancelled, otherwise returns <code>true</code>.</p> <pre><code>local result = myObject:doJump({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>velocity</code> (tes3vector3): Optional. The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used.</li> <li><code>applyFatigueCost</code> (boolean): Default: <code>true</code>. If <code>true</code>, reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if <code>false</code>.</li> <li><code>allowMidairJumping</code> (boolean): Default: <code>false</code>. If <code>true</code>, enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#equip","title":"<code>equip</code>","text":"<p>Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return <code>true</code>.</p> <pre><code>local itemEquipped = myObject:equip({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): The item to equip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to equip, if a specific item is required.</li> <li><code>addItem</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item will be added to the actor's inventory if needed.</li> <li><code>selectBestCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the best condition and best charge will be selected.</li> <li><code>selectWorstCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemEquipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#equipmagic","title":"<code>equipMagic</code>","text":"<p>Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns <code>false</code> if the item could not be equipped.</p> <pre><code>local result = myObject:equipMagic({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li> <p><code>source</code> (tes3spell, tes3item, string): The source of the magic to equip.</p> <p>Spells must be castable. Castable spells have a <code>castType</code> of <code>tes3.spellType.spell</code> or <code>tes3.spellType.power</code>. The actor is not required to know this spell.</p> <p>Items must have a castable enchantment. Castable enchantments have a <code>castType</code> of <code>tes3.enchantmentType.onUse</code> or <code>tes3.enchantmentType.castOnce</code>. The actor is not required to have this item in their inventory, unless <code>equipItem</code> is <code>true</code>.</p> </li> <li> <p><code>itemData</code> (tes3itemData): Optional. Only valid if an item has been assigned to <code>source</code>. The item data of the specific item to equip.</p> </li> <li><code>equipItem</code> (boolean): Default: <code>false</code>. Only valid if an item has been assigned to <code>source</code>. If <code>true</code>, the item assigned to <code>source</code> will be equipped. Requires the actor to have the item in their inventory. If <code>false</code>, <code>itemData</code> must not be nil.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#getactivemagiceffects","title":"<code>getActiveMagicEffects</code>","text":"<p>Fetches a filtered list of the active magic effects on the actor.</p> <pre><code>local result = myObject:getActiveMagicEffects({ effect = ..., serial = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>effect</code> (integer): Optional. The magic effect ID to search for, from <code>tes3.effect</code> table.</li> <li><code>serial</code> (integer): Optional. The magic instance serial to search for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobileNPC/#getbootsweight","title":"<code>getBootsWeight</code>","text":"<p>Read-only. Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped.</p> <pre><code>local result = myObject:getBootsWeight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#getfatigueterm","title":"<code>getFatigueTerm</code>","text":"<p>Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to <code>max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base))</code></p> <pre><code>local result = myObject:getFatigueTerm()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#getpowerusetimestamp","title":"<code>getPowerUseTimestamp</code>","text":"<p>Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</p> <pre><code>local timestamp = myObject:getPowerUseTimestamp(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>timestamp</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#getskillstatistic","title":"<code>getSkillStatistic</code>","text":"<p>Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillStatistic(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobileNPC/#getskillvalue","title":"<code>getSkillValue</code>","text":"<p>Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillValue(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic's value to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#getviewtoactor","title":"<code>getViewToActor</code>","text":"<p>Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToActor(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor): The target actor to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileNPC/#getviewtopoint","title":"<code>getViewToPoint</code>","text":"<p>Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToPoint(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileNPC/#getviewtopointwithfacing","title":"<code>getViewToPointWithFacing</code>","text":"<p>Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position.</p> <pre><code>local angle = myObject:getViewToPointWithFacing(facing, point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>facing</code> (number): The facing angle in radians. The values should be in [0, PI] interval.</li> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobileNPC/#getweaponspeed","title":"<code>getWeaponSpeed</code>","text":"<p>Fetches the weapon speed of the actor's currently equipped weapon, or <code>1.0</code> if no weapon is equipped.</p> <pre><code>local result = myObject:getWeaponSpeed()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileNPC/#hasusedpower","title":"<code>hasUsedPower</code>","text":"<p>Check if a power has been used and is recharging.</p> <pre><code>local result = myObject:hasUsedPower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#isaffectedbyobject","title":"<code>isAffectedByObject</code>","text":"<p>Determines if the actor is currently being affected by a given alchemy, enchantment, or spell.</p> <pre><code>local result = myObject:isAffectedByObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3alchemy, tes3enchantment, tes3spell): The magic to check for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#kill","title":"<code>kill</code>","text":"<p>Kills the actor by setting its health to 0.</p> <pre><code>myObject:kill()\n</code></pre>"},{"location":"types/tes3mobileNPC/#rechargepower","title":"<code>rechargePower</code>","text":"<p>Makes a power immediately available for casting again.</p> <pre><code>local result = myObject:rechargePower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#setpowerusetimestamp","title":"<code>setPowerUseTimestamp</code>","text":"<p>Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp.</p> <pre><code>myObject:setPowerUseTimestamp(power, timestamp)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> <li><code>timestamp</code> (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</li> </ul>"},{"location":"types/tes3mobileNPC/#startcombat","title":"<code>startCombat</code>","text":"<p>Forces the actor into combat with another actor.</p> <pre><code>myObject:startCombat(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobileNPC/#startdialogue","title":"<code>startDialogue</code>","text":"<p>Starts dialogue with this actor for the player.</p> <pre><code>myObject:startDialogue()\n</code></pre>"},{"location":"types/tes3mobileNPC/#stopcombat","title":"<code>stopCombat</code>","text":"<p>Ends combat for the actor.</p> <pre><code>myObject:stopCombat(force)\n</code></pre> <p>Parameters:</p> <ul> <li><code>force</code> (boolean): Default: <code>false</code>. If <code>false</code>, the function won't stop combat if the actor has other valid hostile targets.</li> </ul>"},{"location":"types/tes3mobileNPC/#unequip","title":"<code>unequip</code>","text":"<p>Unequips one or more items from the actor.</p> <pre><code>local itemUnequipped = myObject:unequip({ item = ..., itemData = ..., type = ..., armorSlot = ..., clothingSlot = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): Optional. The item to unequip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to unequip, if a specific item is required.</li> <li><code>type</code> (number): Optional. The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from <code>tes3.objectType</code> can be passed here.</li> <li><code>armorSlot</code> (number): Optional. The armor slot to unequip. Maps to values in <code>tes3.armorSlot</code> namespace.</li> <li><code>clothingSlot</code> (number): Optional. The clothing slot to unequip. Maps to values in <code>tes3.clothingSlot</code> namespace</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemUnequipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileNPC/#unequipmagic","title":"<code>unequipMagic</code>","text":"<p>Unequips the currently equipped magic, optionally unequipping the enchanted item if needed.</p> <pre><code>myObject:unequipMagic({ unequipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>unequipItem</code> (boolean): Default: <code>false</code>. Only valid if the currently equipped magic is from an equippable item enchantment. If <code>true</code>, the item containing the enchantment will be unequipped.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul>"},{"location":"types/tes3mobileNPC/#updatederivedstatistics","title":"<code>updateDerivedStatistics</code>","text":"<p>Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use <code>tes3.modStatistic()</code>.</p> <pre><code>myObject:updateDerivedStatistics(attribute)\n</code></pre> <p>Parameters:</p> <ul> <li><code>attribute</code> (tes3statistic): Optional. Limits the update to statistics derived from this attribute.  e.g. <code>mobile:updateDerivedStatistics(mobile.strength)</code>. If not present, all derived statistics will be updated.</li> </ul>"},{"location":"types/tes3mobileNPC/#updateopacity","title":"<code>updateOpacity</code>","text":"<p>Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects.</p> <pre><code>myObject:updateOpacity()\n</code></pre>"},{"location":"types/tes3mobileObject/","title":"tes3mobileObject","text":""},{"location":"types/tes3mobileObject/#tes3mobileobject","title":"tes3mobileObject","text":"<p>The base object from which all other mobiles (AI/movement using) structures derive.</p>"},{"location":"types/tes3mobileObject/#properties","title":"Properties","text":""},{"location":"types/tes3mobileObject/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObject/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileObject/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObject/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObject/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileObject/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObject/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObject/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileObject/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileObject/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileObject/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileObject/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObject/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObject/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObject/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileObject/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileObject/#velocity","title":"<code>velocity</code>","text":"<p>A vector that represents the 3D velocity of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/","title":"tes3mobileObjectCollision","text":""},{"location":"types/tes3mobileObjectCollision/#tes3mobileobjectcollision","title":"tes3mobileObjectCollision","text":"<p>The base object holding the information of a collision.</p>"},{"location":"types/tes3mobileObjectCollision/#properties","title":"Properties","text":""},{"location":"types/tes3mobileObjectCollision/#colliderref","title":"<code>colliderRef</code>","text":"<p>Read-only. Access to the reference of the colliding object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#colliderroot","title":"<code>colliderRoot</code>","text":"<p>Read-only. The collider's root scene graph node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#collisiontype","title":"<code>collisionType</code>","text":"<p>Read-only. The collision type.</p> Value Collsion type 0 Actor 1 Static 2 Terrain 3 Water 4 Activator 5 staticAvoidNode 6 none <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#normal","title":"<code>normal</code>","text":"<p>Read-only. The normal vector at the collision point.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#objectposatcollision","title":"<code>objectPosAtCollision</code>","text":"<p>Read-only. The location of the mobile object at the moment of collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#point","title":"<code>point</code>","text":"<p>Read-only. The point of contact.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#time","title":"<code>time</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#valid","title":"<code>valid</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileObjectCollision/#velocity","title":"<code>velocity</code>","text":"<p>Read-only. The velocity of the associated mobile object at the point of collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/","title":"tes3mobilePlayer","text":""},{"location":"types/tes3mobilePlayer/#tes3mobileplayer","title":"tes3mobilePlayer","text":"<p>A mobile object for a the player.</p> <p>This type inherits the following: tes3mobileNPC, tes3mobileActor, tes3mobileObject</p>"},{"location":"types/tes3mobilePlayer/#properties","title":"Properties","text":""},{"location":"types/tes3mobilePlayer/#acrobatics","title":"<code>acrobatics</code>","text":"<p>Read-only. Direct access to the NPC's acrobatics skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#actionbeforecombat","title":"<code>actionBeforeCombat</code>","text":"<p>Read-only. Action data stored before the actor entered combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobilePlayer/#actiondata","title":"<code>actionData</code>","text":"<p>Read-only. Current action data. Pre-combat action data is stored in the <code>actionBeforeCombat</code> property.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3actionData)</li> </ul>"},{"location":"types/tes3mobilePlayer/#activeai","title":"<code>activeAI</code>","text":"<p>Friendly access to the actor's flag that controls if AI is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#activemagiceffectlist","title":"<code>activeMagicEffectList</code>","text":"<p>Read-only. The active magic effects on the actor, from which all others can be accessed. A table with <code>tes3activeMagicEffect</code> items.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#actortype","title":"<code>actorType</code>","text":"<p>Read-only. The type of the mobile actor. Maps to values in <code>tes3.actorType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#agility","title":"<code>agility</code>","text":"<p>Read-only. Direct access to the actor's agility attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#aiplanner","title":"<code>aiPlanner</code>","text":"<p>Read-only. Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiPlanner, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#alarm","title":"<code>alarm</code>","text":"<p>The actor's alarm AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#alchemy","title":"<code>alchemy</code>","text":"<p>Read-only. Direct access to the NPC's alchemy skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#alteration","title":"<code>alteration</code>","text":"<p>Read-only. Direct access to the NPC's alteration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#alwaysrun","title":"<code>alwaysRun</code>","text":"<p>Toggle flag for if the player should always run.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#animationcontroller","title":"<code>animationController</code>","text":"<p>Read-only. Access to the player's animation controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3playerAnimationController)</li> </ul>"},{"location":"types/tes3mobilePlayer/#armorer","title":"<code>armorer</code>","text":"<p>Read-only. Direct access to the NPC's armorer skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#armorrating","title":"<code>armorRating</code>","text":"<p>Read-only. The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the <code>applyDamage</code> function.</p> <p>Armour mitigation calculation:</p> <p>x = damage / (damage + target.armorRating)</p> <p>damage *= max(fCombatArmorMinMult, x)</p> <p>if damage &lt; 1 then</p> <pre><code>damage = 1\n</code></pre> <p>end</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#athletics","title":"<code>athletics</code>","text":"<p>Read-only. Direct access to the NPC's athletics skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#attackbonus","title":"<code>attackBonus</code>","text":"<p>Direct access to the actor's attack bonus effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#attackdisabled","title":"<code>attackDisabled</code>","text":"<p>Toggle flag for if the player can attack.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#attacked","title":"<code>attacked</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has been attacked.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#attributes","title":"<code>attributes</code>","text":"<p>Read-only. Access to a table of 8 <code>tes3statistic</code> objects for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#autorun","title":"<code>autoRun</code>","text":"<p>Toggle flag for if the player should constantly run forward.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#axe","title":"<code>axe</code>","text":"<p>Read-only. Direct access to the NPC's axe skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#bartergold","title":"<code>barterGold</code>","text":"<p>The current amount of gold that the actor has access to for bartering.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#birthsign","title":"<code>birthsign</code>","text":"<p>Read-only. The player's birthsign.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3birthsign)</li> </ul>"},{"location":"types/tes3mobilePlayer/#blind","title":"<code>blind</code>","text":"<p>Direct access to the actor's blind effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#block","title":"<code>block</code>","text":"<p>Read-only. Direct access to the NPC's block skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#bluntweapon","title":"<code>bluntWeapon</code>","text":"<p>Read-only. Direct access to the NPC's blunt weapon skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobilePlayer/#bounty","title":"<code>bounty</code>","text":"<p>The player's current bounty.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#cameraheight","title":"<code>cameraHeight</code>","text":"<p>Access to the player camera height, used for both the first person and third person camera (specifically the orbit centre). It is normally placed at head height by the game, on loading, or when a race is selected. The camera height can be reset to its regular value by setting this property to <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Adjust the camera to match shrunken player scale <pre><code>local function shrink()\n    -- Shrink player.\n    tes3.player.scale = 0.5\n    -- Reset camera height to default value.\n    tes3.mobilePlayer.cameraHeight = nil\n    -- Modify camera height to match scale.\n    tes3.mobilePlayer.cameraHeight = tes3.player.scale * tes3.mobilePlayer.cameraHeight\nend\n\nlocal function unshrink()\n    tes3.player.scale = 1\n    tes3.mobilePlayer.cameraHeight = nil\nend\n</code></pre>"},{"location":"types/tes3mobilePlayer/#canact","title":"<code>canAct</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#canjump","title":"<code>canJump</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#canjumpmidair","title":"<code>canJumpMidair</code>","text":"<p>Read-only. If <code>true</code>, the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see <code>tes3mobileActor:doJump()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#canmove","title":"<code>canMove</code>","text":"<p>Read-only. If <code>true</code>, the actor is able to freely move along the ground or in the air. This does not include jumping (see <code>canJump</code>). This is equal to checking if the actor is not dead, knocked down, knocked out, hit stunned, or paralyzed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#castready","title":"<code>castReady</code>","text":"<p>Toggle flag for if the player has casting ready.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#cell","title":"<code>cell</code>","text":"<p>Read-only. Fetches the cell that the actor is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3mobilePlayer/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#chameleon","title":"<code>chameleon</code>","text":"<p>Direct access to the actor's chameleon effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#clawmultiplier","title":"<code>clawMultiplier</code>","text":"<p>Read-only. Quick access to the <code>ClawMultiplier</code> global variable.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3mobilePlayer/#collidingreference","title":"<code>collidingReference</code>","text":"<p>Read-only. The reference that the mobile has collided with this frame. Doesn't include actors and terrain.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#combatsession","title":"<code>combatSession</code>","text":"<p>Read-only. Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3combatSession, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#conjuration","title":"<code>conjuration</code>","text":"<p>Read-only. Direct access to the NPC's conjuration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#controlsdisabled","title":"<code>controlsDisabled</code>","text":"<p>Toggle flag for if the player's controls are disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#corpsehourstamp","title":"<code>corpseHourstamp</code>","text":"<p>This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of <code>0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#currentenchanteditem","title":"<code>currentEnchantedItem</code>","text":"<p>Read-only. The currently equipped enchanted item that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#currentspell","title":"<code>currentSpell</code>","text":"<p>Read-only. The currently equipped spell that the actor will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3mobilePlayer/#destruction","title":"<code>destruction</code>","text":"<p>Read-only. Direct access to the NPC's destruction skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#dialoguelist","title":"<code>dialogueList</code>","text":"<p>Read-only. Access to the collection that holds what dialogue topics the player has access to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogue[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#effectattributes","title":"<code>effectAttributes</code>","text":"<p>Read-only. Access to a table of 24 numbers for the actor's effect attributes. In order those are: <code>attackBonus</code>, <code>sanctuary</code>, <code>resistMagicka</code>, <code>resistFire</code>, <code>resistFrost</code>, <code>resistShock</code>, <code>resistCommonDisease</code>, <code>resistBlightDisease</code>, <code>resistCorprus</code>, <code>resistPoison</code>, <code>resistParalysis</code>, <code>chameleon</code>, <code>resistNormalWeapons</code>, <code>waterBreathing</code>, <code>waterWalking</code>, <code>swiftSwim</code>, <code>jump</code>, <code>levitate</code>, <code>shield</code>, <code>sound</code>, <code>silence</code>, <code>blind</code>, <code>paralyze</code>, and <code>invisibility</code>. Each of those can be accessed individually. For example, <code>tes3mobileActor.chameleon</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#enchant","title":"<code>enchant</code>","text":"<p>Read-only. Direct access to the NPC's enchant skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#encumbrance","title":"<code>encumbrance</code>","text":"<p>Read-only. Access to the actor's encumbrance statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#endurance","title":"<code>endurance</code>","text":"<p>Read-only. Direct access to the actor's endurance attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#facing","title":"<code>facing</code>","text":"<p>Read-only. The facing of the actor, in radians. It corresponds to the <code>mobile.reference.orientation.z</code>. Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. Access to the actor's fatigue statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#fight","title":"<code>fight</code>","text":"<p>The actor's fight AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#firstperson","title":"<code>firstPerson</code>","text":"<p>Read-only. Quick access to the first person NPC.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3npc)</li> </ul>"},{"location":"types/tes3mobilePlayer/#firstpersonreference","title":"<code>firstPersonReference</code>","text":"<p>Read-only. Quick access to the first person NPC's reference.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobilePlayer/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#flee","title":"<code>flee</code>","text":"<p>The actor's flee AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#flyspeed","title":"<code>flySpeed</code>","text":"<p>Read-only. The calculated fly movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#forcejump","title":"<code>forceJump</code>","text":"<p>Toggle flag for if the NPC jumps.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#forcemovejump","title":"<code>forceMoveJump</code>","text":"<p>Toggle flag for if the NPC moves and jumps.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#forcerun","title":"<code>forceRun</code>","text":"<p>Toggle flag for if the NPC runs.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#forcesneak","title":"<code>forceSneak</code>","text":"<p>Toggle flag for if the NPC sneaks.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#friendlyactors","title":"<code>friendlyActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers friendly.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#greetduration","title":"<code>greetDuration</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#greettimer","title":"<code>greetTimer</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#handtohand","title":"<code>handToHand</code>","text":"<p>Read-only. Direct access to the NPC's hand to hand skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#hasfreeaction","title":"<code>hasFreeAction</code>","text":"<p>Read-only. If true, the actor isn't knocked down or knocked out.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#health","title":"<code>health</code>","text":"<p>Read-only. Access to the actor's health statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#heavyarmor","title":"<code>heavyArmor</code>","text":"<p>Read-only. Direct access to the NPC's heavy armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#hello","title":"<code>hello</code>","text":"<p>The actor's hello AI value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#holdbreathtime","title":"<code>holdBreathTime</code>","text":"<p>This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is <code>fHoldBreathTime</code>(GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than <code>fHoldBreathTime</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#hostileactors","title":"<code>hostileActors</code>","text":"<p>Read-only. A collection of other <code>tes3mobileActor</code>s that this actor considers hostile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#idleanim","title":"<code>idleAnim</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is using their idle animation.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#illusion","title":"<code>illusion</code>","text":"<p>Read-only. Direct access to the NPC's illusion skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/#inactivitytime","title":"<code>inactivityTime</code>","text":"<p>The time that the player has spent inactive.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#incombat","title":"<code>inCombat</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is in combat.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#injail","title":"<code>inJail</code>","text":"<p>Toggle flag for if the player is currently in jail.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#intelligence","title":"<code>intelligence</code>","text":"<p>Read-only. Direct access to the actor's intelligence attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#invisibility","title":"<code>invisibility</code>","text":"<p>Direct access to the actor's invisibility effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#is3rdperson","title":"<code>is3rdPerson</code>","text":"<p>Read-only. Shows if the player's camera is currently in 3rd person view.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isattackingorcasting","title":"<code>isAttackingOrCasting</code>","text":"<p>Read-only. If <code>true</code>, the actor is attacking, casting magic or using a lockpick or probe.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#iscrittable","title":"<code>isCrittable</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor can be critically hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isdead","title":"<code>isDead</code>","text":"<p>Read-only. True if the actor is dead.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isdiseased","title":"<code>isDiseased</code>","text":"<p>Read-only. True if the actor is has a disease effect. This counts normal, blight, and corprus effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isfalling","title":"<code>isFalling</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isflying","title":"<code>isFlying</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is flying.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#ishitstunned","title":"<code>isHitStunned</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by hit stun. This prevents the actor from initiating an attack, but not continuing and finishing an attack. It also prevents movement except for jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isjumping","title":"<code>isJumping</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is jumping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isknockeddown","title":"<code>isKnockedDown</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked down. An actor can be knocked down after being attacked or falling.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isknockedout","title":"<code>isKnockedOut</code>","text":"<p>Read-only. If <code>true</code>, the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#ismovingback","title":"<code>isMovingBack</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving backwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#ismovingforward","title":"<code>isMovingForward</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving forwards.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#ismovingleft","title":"<code>isMovingLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#ismovingright","title":"<code>isMovingRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is moving right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isparalyzed","title":"<code>isParalyzed</code>","text":"<p>Read-only. If <code>true</code>, the actor is affected by the magic effect paralyze.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isplayerdetected","title":"<code>isPlayerDetected</code>","text":"<p>Direct access to the actor's flag showing the player was detected on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isplayerhidden","title":"<code>isPlayerHidden</code>","text":"<p>Direct access to the actor's flag showing the player was hidden on the last detection check.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isreadyingweapon","title":"<code>isReadyingWeapon</code>","text":"<p>Read-only. If <code>true</code>, the actor is drawing or sheathing their weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isrunning","title":"<code>isRunning</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is running.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#issneaking","title":"<code>isSneaking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is sneaking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isswimming","title":"<code>isSwimming</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is swimming.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isturningleft","title":"<code>isTurningLeft</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning left.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isturningright","title":"<code>isTurningRight</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is turning right.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#iswalking","title":"<code>isWalking</code>","text":"<p>Direct access to the actor's current movement flags, showing if the actor is walking.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#jump","title":"<code>jump</code>","text":"<p>Direct access to the actor's jump effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#jumpingdisabled","title":"<code>jumpingDisabled</code>","text":"<p>Toggle flag for if the player can jump.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#knownwerewolf","title":"<code>knownWerewolf</code>","text":"<p>Read-only. Quick access to the <code>KnownWerewolf</code> global variable.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastgroundz","title":"<code>lastGroundZ</code>","text":"<p>This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During <code>jump</code> event this value is still negative. A split second after, it will have the value of the <code>.z</code> coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastusedalembic","title":"<code>lastUsedAlembic</code>","text":"<p>Read-only. The last used alchemy alembic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3apparatus)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastusedammocount","title":"<code>lastUsedAmmoCount</code>","text":"<p>The amount of ammo for the ranged weapon that that was last equipped.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastusedcalcinator","title":"<code>lastUsedCalcinator</code>","text":"<p>Read-only. The last used alchemy calcinator.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3apparatus)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastusedmortar","title":"<code>lastUsedMortar</code>","text":"<p>Read-only. The last used alchemy mortar.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3apparatus)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lastusedretort","title":"<code>lastUsedRetort</code>","text":"<p>Read-only. The last used alchemy retort.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3apparatus)</li> </ul>"},{"location":"types/tes3mobilePlayer/#levelupperspecialization","title":"<code>levelupPerSpecialization</code>","text":"<p>Read-only. Array-style table access to how many skill levels there have been for each of the 3 specializations.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#levelupprogress","title":"<code>levelUpProgress</code>","text":"<p>The progress the player has made towards leveling up. Equal to the total amount of Minor and Major skill increases during the current level. This value can be larger than 10.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#levelupsperattribute","title":"<code>levelupsPerAttribute</code>","text":"<p>Read-only. Array-style table access to how many skill levels there have been for each of the 8 attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#levitate","title":"<code>levitate</code>","text":"<p>Direct access to the actor's levitate effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#lightarmor","title":"<code>lightArmor</code>","text":"<p>Read-only. Direct access to the NPC's light armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#longblade","title":"<code>longBlade</code>","text":"<p>Read-only. Direct access to the NPC's long blade skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#luck","title":"<code>luck</code>","text":"<p>Read-only. Direct access to the actor's luck attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#magicdisabled","title":"<code>magicDisabled</code>","text":"<p>Toggle flag for if the player can use magic.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. Access to the actor's magicka statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#magickamultiplier","title":"<code>magickaMultiplier</code>","text":"<p>Read-only. Access to the actor's magicka multiplier statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#marklocation","title":"<code>markLocation</code>","text":"<p>Read-only. Access to the structure that holds the player's current mark/recall location.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3markData)</li> </ul>"},{"location":"types/tes3mobilePlayer/#marksman","title":"<code>marksman</code>","text":"<p>Read-only. Direct access to the NPC's marksman skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#mediumarmor","title":"<code>mediumArmor</code>","text":"<p>Read-only. Direct access to the NPC's medium armor skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#mercantile","title":"<code>mercantile</code>","text":"<p>Read-only. Direct access to the NPC's mercantile skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#mobtomobcollision","title":"<code>mobToMobCollision</code>","text":"<p>Allows modifying if this actor will collide with other actors. When <code>true</code> (default), the actor cannot move through other actors. When <code>false</code>, the actor is allowed to move through other actors, and other actors can move through it.</p> <p>May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#mouselookdisabled","title":"<code>mouseLookDisabled</code>","text":"<p>Toggle flag for if the player's mouse look controls are disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#movespeed","title":"<code>moveSpeed</code>","text":"<p>Read-only. The calculated base movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#mysticism","title":"<code>mysticism</code>","text":"<p>Read-only. Direct access to the NPC's mysticism skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#nextactionweight","title":"<code>nextActionWeight</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#object","title":"<code>object</code>","text":"<p>Read-only. The actor object that maps to this mobile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3npcInstance)</li> </ul>"},{"location":"types/tes3mobilePlayer/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#paralyze","title":"<code>paralyze</code>","text":"<p>Direct access to the actor's paralyze effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#personality","title":"<code>personality</code>","text":"<p>Read-only. Direct access to the actor's personality attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#readiedammo","title":"<code>readiedAmmo</code>","text":"<p>The currently equipped ammo, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#readiedammocount","title":"<code>readiedAmmoCount</code>","text":"<p>The number of ammo equipped for the readied ammo.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#readiedshield","title":"<code>readiedShield</code>","text":"<p>The currently equipped shield, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#readiedweapon","title":"<code>readiedWeapon</code>","text":"<p>The currently equipped weapon, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack, nil)</li> </ul>"},{"location":"types/tes3mobilePlayer/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistblightdisease","title":"<code>resistBlightDisease</code>","text":"<p>Direct access to the actor's blight disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistcommondisease","title":"<code>resistCommonDisease</code>","text":"<p>Direct access to the actor's common disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistcorprus","title":"<code>resistCorprus</code>","text":"<p>Direct access to the actor's corprus disease resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistfire","title":"<code>resistFire</code>","text":"<p>Direct access to the actor's fire resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistfrost","title":"<code>resistFrost</code>","text":"<p>Direct access to the actor's frost resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistmagicka","title":"<code>resistMagicka</code>","text":"<p>Direct access to the actor's magicka resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistnormalweapons","title":"<code>resistNormalWeapons</code>","text":"<p>Direct access to the actor's normal weapon resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistparalysis","title":"<code>resistParalysis</code>","text":"<p>Direct access to the actor's paralysis resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistpoison","title":"<code>resistPoison</code>","text":"<p>Direct access to the actor's poison resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resistshock","title":"<code>resistShock</code>","text":"<p>Direct access to the actor's shock resistance effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#resthoursremaining","title":"<code>restHoursRemaining</code>","text":"<p>How many hours are left while resting.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#restoration","title":"<code>restoration</code>","text":"<p>Read-only. Direct access to the NPC's restoration skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#runspeed","title":"<code>runSpeed</code>","text":"<p>Read-only. The calculated run movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#sanctuary","title":"<code>sanctuary</code>","text":"<p>Direct access to the actor's sanctuary effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#scaninterval","title":"<code>scanInterval</code>","text":"<p>The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of <code>0.0</code> will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active <code>tes3aiPlanner</code>, meaning the checks will be executed at different intervals for each actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#scantimer","title":"<code>scanTimer</code>","text":"<p>Read-only. The time in seconds since the last time the checks specified in <code>scanInterval</code> were executed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#security","title":"<code>security</code>","text":"<p>Read-only. Direct access to the NPC's security skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#shield","title":"<code>shield</code>","text":"<p>Direct access to the actor's shield effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#shortblade","title":"<code>shortBlade</code>","text":"<p>Read-only. Direct access to the NPC's short blade skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#silence","title":"<code>silence</code>","text":"<p>Direct access to the actor's silence effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#skillprogress","title":"<code>skillProgress</code>","text":"<p>Read-only. Array-style table access to skill progress for each of the 27 skills.</p> <p>Attention</p> <p>The first index in the array is 1, but skill indices in tes3.skill table start from 0.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#skills","title":"<code>skills</code>","text":"<p>Read-only. An array-style table with access to the twenty seven NPC skill statistics (tes3statisticSkill).</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#sleeping","title":"<code>sleeping</code>","text":"<p>Toggle flag for if the player is currently sleeping.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#sneak","title":"<code>sneak</code>","text":"<p>Read-only. Direct access to the NPC's sneak skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#sound","title":"<code>sound</code>","text":"<p>Direct access to the actor's sound effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#spear","title":"<code>spear</code>","text":"<p>Read-only. Direct access to the NPC's spear skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#speechcraft","title":"<code>speechcraft</code>","text":"<p>Read-only. Direct access to the NPC's speechcraft skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#speed","title":"<code>speed</code>","text":"<p>Read-only. Direct access to the actor's speed attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#spellreadied","title":"<code>spellReadied</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor has a spell readied.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#strength","title":"<code>strength</code>","text":"<p>Read-only. Direct access to the actor's strength attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#swiftswim","title":"<code>swiftSwim</code>","text":"<p>Direct access to the actor's swift swim effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#swimrunspeed","title":"<code>swimRunSpeed</code>","text":"<p>Read-only. The calculated swim movement speed while running.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#swimspeed","title":"<code>swimSpeed</code>","text":"<p>Read-only. The calculated swim movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#talkedto","title":"<code>talkedTo</code>","text":"<p>Direct access to the actor's flag that shows it was recently talked to.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#telekinesis","title":"<code>telekinesis</code>","text":"<p>Direct access to the player's telekinesis effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#torchslot","title":"<code>torchSlot</code>","text":"<p>The currently equipped light.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack)</li> </ul>"},{"location":"types/tes3mobilePlayer/#traveling","title":"<code>traveling</code>","text":"<p>Toggle flag for if the player is currently travelling.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#unarmored","title":"<code>unarmored</code>","text":"<p>Read-only. Direct access to the NPC's unarmored skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#underwater","title":"<code>underwater</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor is under water.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#vanitydisabled","title":"<code>vanityDisabled</code>","text":"<p>Toggle flag for if the player's vanity camera is disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#velocity","title":"<code>velocity</code>","text":"<p>A vector that represents the 3D velocity of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/#viewswitchdisabled","title":"<code>viewSwitchDisabled</code>","text":"<p>Toggle flag for if the player can switch between first person and vanity cameras.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#visionbonus","title":"<code>visionBonus</code>","text":"<p>Direct access to the player's vision bonus effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#waiting","title":"<code>waiting</code>","text":"<p>Toggle flag for if the player is currently waiting.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#walkspeed","title":"<code>walkSpeed</code>","text":"<p>Read-only. The calculated walk movement speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#waterbreathing","title":"<code>waterBreathing</code>","text":"<p>Direct access to the actor's water breathing effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#waterwalking","title":"<code>waterWalking</code>","text":"<p>Direct access to the actor's water walking effect attribute.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#weapondrawn","title":"<code>weaponDrawn</code>","text":"<p>Read-only. Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#weaponready","title":"<code>weaponReady</code>","text":"<p>A flag for if the player has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the player to take out their weapon. Setting it to false will cause the player to put it away.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#werewolf","title":"<code>werewolf</code>","text":"<p>Read-only. Friendly access to the actor's flag that controls if the actor in werewolf form.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#width","title":"<code>width</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#willpower","title":"<code>willpower</code>","text":"<p>Read-only. Direct access to the actor's willpower attribute statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3statistic)</li> </ul>"},{"location":"types/tes3mobilePlayer/#methods","title":"Methods","text":""},{"location":"types/tes3mobilePlayer/#applydamage","title":"<code>applyDamage</code>","text":"<p>Damages the actor, with options to control mitigation and difficulty scaling. Invokes the <code>damage</code> and <code>damaged</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:applyDamage({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> <li><code>applyDifficulty</code> (boolean): Default: <code>false</code>. If the game difficulty modifier should be applied. Must be used with the <code>playerAttack</code> argument to apply the correct modifier.</li> <li><code>playerAttack</code> (boolean): Optional. If the attack came from the player. Used for difficulty calculation.</li> <li><code>doNotChangeHealth</code> (boolean): Default: <code>false</code>. If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#applyfatiguedamage","title":"<code>applyFatigueDamage</code>","text":"<p>Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the <code>damageHandToHand</code> and <code>damagedHandToHand</code> events, with <code>tes3.damageSource.script</code> source. Returns the actual fatigue damage done.</p> <pre><code>local result = myObject:applyFatigueDamage(fatigueDamage, swing, alwaysPlayHitVoice)\n</code></pre> <p>Parameters:</p> <ul> <li><code>fatigueDamage</code> (number): The amount of fatigue damage to apply.</li> <li><code>swing</code> (number): Optional. The attack swing magnitude, range 0-1. Only modifies hit volume.</li> <li><code>alwaysPlayHitVoice</code> (boolean): Optional. Always play the hit reaction voiceover.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#applyjumpfatiguecost","title":"<code>applyJumpFatigueCost</code>","text":"<p>Reduces the actor's current fatigue by the amount a regular jump would currently cost.</p> <pre><code>myObject:applyJumpFatigueCost()\n</code></pre>"},{"location":"types/tes3mobilePlayer/#calceffectivedamage","title":"<code>calcEffectiveDamage</code>","text":"<p>Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling.</p> <pre><code>local result = myObject:calcEffectiveDamage({ damage = ..., applyArmor = ..., resistAttribute = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>damage</code> (number): The amount of damage to apply.</li> <li><code>applyArmor</code> (boolean): Default: <code>false</code>. If armor should mitigate the incoming damage.</li> <li><code>resistAttribute</code> (number): Optional. The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from <code>tes3.effectAttribute</code> namespace.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#calculatejumpvelocity","title":"<code>calculateJumpVelocity</code>","text":"<p>Calculates the starting velocity of a jump.</p> <pre><code>local result = myObject:calculateJumpVelocity({ direction = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>direction</code> (tes3vector2): Optional. The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobilePlayer/#dojump","title":"<code>doJump</code>","text":"<p>Forces the actor to jump. If <code>velocity</code> or other parameters with non-default values are specified it will be treated as a non-default jump during the <code>jump</code> event. Returns <code>false</code> if the actor is currently unable to jump or the jump has been cancelled, otherwise returns <code>true</code>.</p> <pre><code>local result = myObject:doJump({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>velocity</code> (tes3vector3): Optional. The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used.</li> <li><code>applyFatigueCost</code> (boolean): Default: <code>true</code>. If <code>true</code>, reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if <code>false</code>.</li> <li><code>allowMidairJumping</code> (boolean): Default: <code>false</code>. If <code>true</code>, enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#equip","title":"<code>equip</code>","text":"<p>Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return <code>true</code>.</p> <pre><code>local itemEquipped = myObject:equip({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): The item to equip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to equip, if a specific item is required.</li> <li><code>addItem</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item will be added to the actor's inventory if needed.</li> <li><code>selectBestCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the best condition and best charge will be selected.</li> <li><code>selectWorstCondition</code> (boolean): Default: <code>false</code>. If <code>true</code>, the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemEquipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#equipmagic","title":"<code>equipMagic</code>","text":"<p>Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns <code>false</code> if the item could not be equipped.</p> <pre><code>local result = myObject:equipMagic({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li> <p><code>params</code> (table)</p> <ul> <li> <p><code>source</code> (tes3spell, tes3item, string): The source of the magic to equip.</p> <p>Spells must be castable. Castable spells have a <code>castType</code> of <code>tes3.spellType.spell</code> or <code>tes3.spellType.power</code>. The actor is not required to know this spell.</p> <p>Items must have a castable enchantment. Castable enchantments have a <code>castType</code> of <code>tes3.enchantmentType.onUse</code> or <code>tes3.enchantmentType.castOnce</code>. The actor is not required to have this item in their inventory, unless <code>equipItem</code> is <code>true</code>.</p> </li> <li> <p><code>itemData</code> (tes3itemData): Optional. Only valid if an item has been assigned to <code>source</code>. The item data of the specific item to equip.</p> </li> <li><code>equipItem</code> (boolean): Default: <code>false</code>. Only valid if an item has been assigned to <code>source</code>. If <code>true</code>, the item assigned to <code>source</code> will be equipped. Requires the actor to have the item in their inventory. If <code>false</code>, <code>itemData</code> must not be nil.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#exerciseskill","title":"<code>exerciseSkill</code>","text":"<p>Exercises a skill, providing experience in it. Invokes <code>exerciseSkill</code> event.</p> <pre><code>myObject:exerciseSkill(skill, progress)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skill</code> (integer): The skill index to give experience to. Maps to values from <code>tes3.skill</code> table.</li> <li><code>progress</code> (number): The amount of experience to grant.</li> </ul>"},{"location":"types/tes3mobilePlayer/#getactivemagiceffects","title":"<code>getActiveMagicEffects</code>","text":"<p>Fetches a filtered list of the active magic effects on the actor.</p> <pre><code>local result = myObject:getActiveMagicEffects({ effect = ..., serial = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>effect</code> (integer): Optional. The magic effect ID to search for, from <code>tes3.effect</code> table.</li> <li><code>serial</code> (integer): Optional. The magic instance serial to search for.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3activeMagicEffect[])</li> </ul>"},{"location":"types/tes3mobilePlayer/#getbootsweight","title":"<code>getBootsWeight</code>","text":"<p>Read-only. Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped.</p> <pre><code>local result = myObject:getBootsWeight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getfatigueterm","title":"<code>getFatigueTerm</code>","text":"<p>Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to <code>max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base))</code></p> <pre><code>local result = myObject:getFatigueTerm()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getpowerusetimestamp","title":"<code>getPowerUseTimestamp</code>","text":"<p>Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</p> <pre><code>local timestamp = myObject:getPowerUseTimestamp(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>timestamp</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getskillprogressrequirement","title":"<code>getSkillProgressRequirement</code>","text":"<p>Returns the total progress needed to progress the skill to the next level. The actual amount of progress needed is the floor of the value returned by this function.</p> <pre><code>local progressNeeded = myObject:getSkillProgressRequirement(skill)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skill</code> (integer): The skill index to check. Maps to values from <code>tes3.skill</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>progressNeeded</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getskillstatistic","title":"<code>getSkillStatistic</code>","text":"<p>Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillStatistic(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3statisticSkill)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getskillvalue","title":"<code>getSkillValue</code>","text":"<p>Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same.</p> <pre><code>local result = myObject:getSkillValue(skillId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skillId</code> (number): The index of the skill statistic's value to fetch. Maps to values in <code>tes3.skill</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#getviewtoactor","title":"<code>getViewToActor</code>","text":"<p>Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToActor(mobile)\n</code></pre> <p>Parameters:</p> <ul> <li><code>mobile</code> (tes3mobileActor): The target actor to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobilePlayer/#getviewtopoint","title":"<code>getViewToPoint</code>","text":"<p>Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right.</p> <pre><code>local angle = myObject:getViewToPoint(point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobilePlayer/#getviewtopointwithfacing","title":"<code>getViewToPointWithFacing</code>","text":"<p>Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position.</p> <pre><code>local angle = myObject:getViewToPointWithFacing(facing, point)\n</code></pre> <p>Parameters:</p> <ul> <li><code>facing</code> (number): The facing angle in radians. The values should be in [0, PI] interval.</li> <li><code>point</code> (tes3vector3): The target point to calculate the facing angle.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): In range of [-180, 180] in degrees.</li> </ul>"},{"location":"types/tes3mobilePlayer/#getweaponspeed","title":"<code>getWeaponSpeed</code>","text":"<p>Fetches the weapon speed of the actor's currently equipped weapon, or <code>1.0</code> if no weapon is equipped.</p> <pre><code>local result = myObject:getWeaponSpeed()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobilePlayer/#hasusedpower","title":"<code>hasUsedPower</code>","text":"<p>Check if a power has been used and is recharging.</p> <pre><code>local result = myObject:hasUsedPower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#isaffectedbyobject","title":"<code>isAffectedByObject</code>","text":"<p>Determines if the actor is currently being affected by a given alchemy, enchantment, or spell.</p> <pre><code>local result = myObject:isAffectedByObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3alchemy, tes3enchantment, tes3spell): The magic to check for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#kill","title":"<code>kill</code>","text":"<p>Kills the actor by setting its health to 0.</p> <pre><code>myObject:kill()\n</code></pre>"},{"location":"types/tes3mobilePlayer/#progressskilllevelifrequirementsmet","title":"<code>progressSkillLevelIfRequirementsMet</code>","text":"<p>Checks to see if a skill is ready to be leveled up, and performs any levelup logic.</p> <pre><code>myObject:progressSkillLevelIfRequirementsMet(skill)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skill</code> (integer): The skill index to check for leveling. Maps to values from <code>tes3.skill</code> table.</li> </ul>"},{"location":"types/tes3mobilePlayer/#progressskilltonextlevel","title":"<code>progressSkillToNextLevel</code>","text":"<p>Increments the player's skill to the next level, while respecting all level up mechanics.</p> <pre><code>local newLevel = myObject:progressSkillToNextLevel(skill)\n</code></pre> <p>Parameters:</p> <ul> <li><code>skill</code> (integer): The skill index to increase. Maps to values from <code>tes3.skill</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>newLevel</code> (integer)</li> </ul>"},{"location":"types/tes3mobilePlayer/#rechargepower","title":"<code>rechargePower</code>","text":"<p>Makes a power immediately available for casting again.</p> <pre><code>local result = myObject:rechargePower(power)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#setpowerusetimestamp","title":"<code>setPowerUseTimestamp</code>","text":"<p>Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp.</p> <pre><code>myObject:setPowerUseTimestamp(power, timestamp)\n</code></pre> <p>Parameters:</p> <ul> <li><code>power</code> (tes3spell): The spell object for the power.</li> <li><code>timestamp</code> (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at <code>tes3.getSimulationTimestamp()</code>.</li> </ul>"},{"location":"types/tes3mobilePlayer/#startcombat","title":"<code>startCombat</code>","text":"<p>Forces the actor into combat with another actor.</p> <pre><code>myObject:startCombat(target)\n</code></pre> <p>Parameters:</p> <ul> <li><code>target</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobilePlayer/#startdialogue","title":"<code>startDialogue</code>","text":"<p>Starts dialogue with this actor for the player.</p> <pre><code>myObject:startDialogue()\n</code></pre>"},{"location":"types/tes3mobilePlayer/#stopcombat","title":"<code>stopCombat</code>","text":"<p>Ends combat for the actor.</p> <pre><code>myObject:stopCombat(force)\n</code></pre> <p>Parameters:</p> <ul> <li><code>force</code> (boolean): Default: <code>false</code>. If <code>false</code>, the function won't stop combat if the actor has other valid hostile targets.</li> </ul>"},{"location":"types/tes3mobilePlayer/#unequip","title":"<code>unequip</code>","text":"<p>Unequips one or more items from the actor.</p> <pre><code>local itemUnequipped = myObject:unequip({ item = ..., itemData = ..., type = ..., armorSlot = ..., clothingSlot = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>item</code> (tes3item, string): Optional. The item to unequip.</li> <li><code>itemData</code> (tes3itemData): Optional. The item data of the specific item to unequip, if a specific item is required.</li> <li><code>type</code> (number): Optional. The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from <code>tes3.objectType</code> can be passed here.</li> <li><code>armorSlot</code> (number): Optional. The armor slot to unequip. Maps to values in <code>tes3.armorSlot</code> namespace.</li> <li><code>clothingSlot</code> (number): Optional. The clothing slot to unequip. Maps to values in <code>tes3.clothingSlot</code> namespace</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>itemUnequipped</code> (boolean)</li> </ul>"},{"location":"types/tes3mobilePlayer/#unequipmagic","title":"<code>unequipMagic</code>","text":"<p>Unequips the currently equipped magic, optionally unequipping the enchanted item if needed.</p> <pre><code>myObject:unequipMagic({ unequipItem = ..., updateGUI = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>unequipItem</code> (boolean): Default: <code>false</code>. Only valid if the currently equipped magic is from an equippable item enchantment. If <code>true</code>, the item containing the enchantment will be unequipped.</li> <li><code>updateGUI</code> (boolean): Default: <code>true</code>. Only valid if this actor is the player. If <code>false</code>, the player GUI will not be updated to reflect the change to equipped magic.</li> </ul> </li> </ul>"},{"location":"types/tes3mobilePlayer/#updatederivedstatistics","title":"<code>updateDerivedStatistics</code>","text":"<p>Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use <code>tes3.modStatistic()</code>.</p> <pre><code>myObject:updateDerivedStatistics(attribute)\n</code></pre> <p>Parameters:</p> <ul> <li><code>attribute</code> (tes3statistic): Optional. Limits the update to statistics derived from this attribute.  e.g. <code>mobile:updateDerivedStatistics(mobile.strength)</code>. If not present, all derived statistics will be updated.</li> </ul>"},{"location":"types/tes3mobilePlayer/#updateopacity","title":"<code>updateOpacity</code>","text":"<p>Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects.</p> <pre><code>myObject:updateOpacity()\n</code></pre>"},{"location":"types/tes3mobileProjectile/","title":"tes3mobileProjectile","text":""},{"location":"types/tes3mobileProjectile/#tes3mobileprojectile","title":"tes3mobileProjectile","text":"<p>A mobile object for a physical projectile.</p> <p>This type inherits the following: tes3mobileObject</p>"},{"location":"types/tes3mobileProjectile/#properties","title":"Properties","text":""},{"location":"types/tes3mobileProjectile/#animtime","title":"<code>animTime</code>","text":"<p>The time index for the projectile model's animation controllers.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#attackswing","title":"<code>attackSwing</code>","text":"<p>The attack swing value of the attacker at the time of releasing the projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileProjectile/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileProjectile/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#damage","title":"<code>damage</code>","text":"<p>Access to the raw damage that this projectile will inflict.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#expire","title":"<code>expire</code>","text":"<p>A flag that causes the projectile to expire when set to <code>1</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#firingmobile","title":"<code>firingMobile</code>","text":"<p>Read-only. The mobile that fired this projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobileProjectile/#firingweapon","title":"<code>firingWeapon</code>","text":"<p>Read-only. The weapon that fired this projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weapon)</li> </ul>"},{"location":"types/tes3mobileProjectile/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileProjectile/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileProjectile/#initialspeed","title":"<code>initialSpeed</code>","text":"<p>Read-only. The initial speed that the projectile was launched at.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileProjectile/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileProjectile/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileProjectile/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileProjectile/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileProjectile/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileProjectile/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileProjectile/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileProjectile/#spellinstance","title":"<code>spellInstance</code>","text":"<p>A quick access to <code>tes3magicSourceInstance</code> object of this <code>tes3mobileProjectile</code> if aplicable.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"types/tes3mobileProjectile/#velocity","title":"<code>velocity</code>","text":"<p>Access to the current velocity of the projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/","title":"tes3mobileSpellProjectile","text":""},{"location":"types/tes3mobileSpellProjectile/#tes3mobilespellprojectile","title":"tes3mobileSpellProjectile","text":"<p>A mobile object for a spell projectile.</p> <p>This type inherits the following: tes3mobileProjectile, tes3mobileObject</p>"},{"location":"types/tes3mobileSpellProjectile/#properties","title":"Properties","text":""},{"location":"types/tes3mobileSpellProjectile/#animtime","title":"<code>animTime</code>","text":"<p>The time index for the projectile model's animation controllers.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#attackswing","title":"<code>attackSwing</code>","text":"<p>The attack swing value of the attacker at the time of releasing the projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#boundsize","title":"<code>boundSize</code>","text":"<p>A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the <code>x</code> and <code>y</code> values from <code>boundSize2D</code> with the <code>z</code> value of the mobile's <code>height</code>. Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#boundsize2d","title":"<code>boundSize2D</code>","text":"<p>A vector that shows the size of the bounding box in X and Y directions. <code>boundSize</code> is a convenience property that exposes the bounding in 3 dimensions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#cellx","title":"<code>cellX</code>","text":"<p>Read-only. The X grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#celly","title":"<code>cellY</code>","text":"<p>Read-only. The Y grid coordinate of the cell the mobile is in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#damage","title":"<code>damage</code>","text":"<p>Access to the raw damage that this projectile will inflict.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#expire","title":"<code>expire</code>","text":"<p>A flag that causes the projectile to expire when set to <code>1</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#firingmobile","title":"<code>firingMobile</code>","text":"<p>Read-only. The mobile that fired this projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#firingweapon","title":"<code>firingWeapon</code>","text":"<p>Read-only. The weapon that fired this projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weapon)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#flags","title":"<code>flags</code>","text":"<p>Access to the root mobile object flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#height","title":"<code>height</code>","text":"<p>The height of the mobile above the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#impulsevelocity","title":"<code>impulseVelocity</code>","text":"<p>A vector that represents the 3D acceleration of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#initialspeed","title":"<code>initialSpeed</code>","text":"<p>Read-only. The initial speed that the projectile was launched at.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. Access to the items the mobile object has in its inventory.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemStack[])</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#isaffectedbygravity","title":"<code>isAffectedByGravity</code>","text":"<p>If <code>true</code>, the mobile is affected by gravity. Does not have any effect on spell projectiles.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#movementcollision","title":"<code>movementCollision</code>","text":"<p>Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#movementflags","title":"<code>movementFlags</code>","text":"<p>Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of mobile object. Maps to values in <code>tes3.objectType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#playerdistance","title":"<code>playerDistance</code>","text":"<p>The distance to the player. Updated every frame when the mobile is in an active cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#position","title":"<code>position</code>","text":"<p>A vector that represents the 3D position of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#prevmovementflags","title":"<code>prevMovementFlags</code>","text":"<p>Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#reference","title":"<code>reference</code>","text":"<p>Read-only. Access to the reference object for the mobile, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#rotationspeed","title":"<code>rotationSpeed</code>","text":"<p>The angular speed that the projectile rotates around its local Y axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#spellinstance","title":"<code>spellInstance</code>","text":"<p>Access to the magic source instance of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#spellinstanceserial","title":"<code>spellInstanceSerial</code>","text":"<p>Unique indentifier for just this magic source.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#velocity","title":"<code>velocity</code>","text":"<p>Access to the current velocity of the projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3mobileSpellProjectile/#methods","title":"Methods","text":""},{"location":"types/tes3mobileSpellProjectile/#explode","title":"<code>explode</code>","text":"<p>Detonates the projectile, as if it hit a static object. The effects of detonation are not applied immediately, but later in the frame, at the same time as projectile collisions. This ensures consistent behaviour of the magic system.</p> <pre><code>myObject:explode()\n</code></pre>"},{"location":"types/tes3moon/","title":"Tes3moon","text":""},{"location":"types/tes3moon/#tes3moon","title":"tes3moon","text":"<p>A structure that keeps track of information related two the game's two moons.</p> <p>Moon move in an arc shape along the sky. The arc's start is at in-game North and ends in the South. The arc's plane can be rotated from North-South axis, by <code>axisOffset</code> property. If moons overlap, Secunda is always rendered in front of Masser, so the Masser is covered by Secunda.</p> <p>Each moon has 8 phases, which differ by the amount of the moon that is visible and the part covered in black. During waxing the moon appears in the sky during the first part of the night, before midnight. After the full phase, the moons usually rise during the later part of the night, after midnight. Much like the Earth's moon. Absolutely the first moment the moon can appear is controlled by <code>fadeInStart</code> property, while the latest moment the moon sets is controlled by <code>fadeOutFinish</code> property.</p> <p>Most of the properties exposed here correspond to the setting of the same name in [Moons] section of the Morrowind.ini file.</p>"},{"location":"types/tes3moon/#properties","title":"Properties","text":""},{"location":"types/tes3moon/#axisoffset","title":"<code>axisOffset</code>","text":"<p>The rotation of the moon's path arc from the North-South axis, in degrees.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#dailyincrement","title":"<code>dailyIncrement</code>","text":"<p>Looks like this property controls when the moon raises during each phase of its cycle. Also seems to impact the progression of moon phases. The units of this property are most likely game hours.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadeendangle","title":"<code>fadeEndAngle</code>","text":"<p>This angle represents the angle from the water plane, in degrees. If a moon arrives at that point in the sky it will start disappearing. A moon can disappear even before its <code>fadeOutStart</code> hour if it reaches this angle.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadeinfinish","title":"<code>fadeInFinish</code>","text":"<p>The game hour at which the moon finishes fading in.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadeinstart","title":"<code>fadeInStart</code>","text":"<p>The game hour at which the moon starts to be visible in the sky.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadeoutfinish","title":"<code>fadeOutFinish</code>","text":"<p>The game hour at which has completely faded out.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadeoutstart","title":"<code>fadeOutStart</code>","text":"<p>The game hour at which the moon starts fading out.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#fadestartangle","title":"<code>fadeStartAngle</code>","text":"<p>The angle, in degrees, from the water plane at which the moon first appears in the sky.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#index","title":"<code>index</code>","text":"<p>Read-only. The index of the moon, 0 for Masser, 1 for Secunda.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#isred","title":"<code>isRed</code>","text":"<p>Determines if the moon is red, typically during the events of Bloodmoon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3moon/#phase","title":"<code>phase</code>","text":"<p>The moon's current phase. The phase controls which of the moon's textures is currently being used.</p> Moon's phase Used texture's suffix 0 _new 1 _one_wax 2 _half_wax 3 _three_wax 4 _full 5 _three_wan 6 _half_wan 7 _one_wan <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#shadowearlyfadeangle","title":"<code>shadowEarlyFadeAngle</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#speed","title":"<code>speed</code>","text":"<p>Controls the speed of the moons across the sky. This corresponds to the setting of the same name in [Moons] section of the Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3moon/#texture","title":"<code>texture</code>","text":"<p>Read-only. The texture to use for the moon. These look like \"Textures\\tx_masser\". The actual texture that is used is determined by the current moon phase.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3moon/#weathercontroller","title":"<code>weatherController</code>","text":"<p>Read-only. Quick access back to the weather controller structure.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3nonDynamicData/","title":"tes3nonDynamicData","text":""},{"location":"types/tes3nonDynamicData/#tes3nondynamicdata","title":"tes3nonDynamicData","text":"<p>A child container from <code>tes3dataHandler</code>, where game data is stored.</p>"},{"location":"types/tes3nonDynamicData/#properties","title":"Properties","text":""},{"location":"types/tes3nonDynamicData/#activemods","title":"<code>activeMods</code>","text":"<p>Read-only. A collection of all actively loaded mods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3gameFile[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#birthsigns","title":"<code>birthsigns</code>","text":"<p>Read-only. A collection of all birthsign objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3birthsign[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#cells","title":"<code>cells</code>","text":"<p>Read-only. A collection of all cell objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#classes","title":"<code>classes</code>","text":"<p>Read-only. A collection of all class objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3class[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#dialogues","title":"<code>dialogues</code>","text":"<p>Read-only. A collection of all dialogue objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogue[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#factions","title":"<code>factions</code>","text":"<p>Read-only. A collection of all faction objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3faction[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#globals","title":"<code>globals</code>","text":"<p>Read-only. A collection of all global variable objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3iterator)</li> </ul>"},{"location":"types/tes3nonDynamicData/#issavingorloading","title":"<code>isSavingOrLoading</code>","text":"<p>Read-only. True when in the process of saving or loading the game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3nonDynamicData/#lastloadedfile","title":"<code>lastLoadedFile</code>","text":"<p>Read-only. The last loaded savegame file.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3gameFile)</li> </ul>"},{"location":"types/tes3nonDynamicData/#magiceffects","title":"<code>magicEffects</code>","text":"<p>Read-only. A table of references to all magic effects. This is a dictionary, as the effect list may have gaps.</p> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;integer, tes3magicEffect&gt;)</li> </ul>"},{"location":"types/tes3nonDynamicData/#maptexture","title":"<code>mapTexture</code>","text":"<p>Access to the World map texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture)</li> </ul>"},{"location":"types/tes3nonDynamicData/#objects","title":"<code>objects</code>","text":"<p>Read-only. A collection of all other game objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#races","title":"<code>races</code>","text":"<p>Read-only. A collection of all race objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3race[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#regions","title":"<code>regions</code>","text":"<p>Read-only. A collection of all region objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3region[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#scripts","title":"<code>scripts</code>","text":"<p>Read-only. A collection of all script objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#skills","title":"<code>skills</code>","text":"<p>Read-only. A table of references to all 27 skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3skill[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#soundgenerators","title":"<code>soundGenerators</code>","text":"<p>Read-only. A collection of all sound generator objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3soundGenerator[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#sounds","title":"<code>sounds</code>","text":"<p>Read-only. A collection of all sound objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#spells","title":"<code>spells</code>","text":"<p>Read-only. A collection of all spell objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#startscripts","title":"<code>startScripts</code>","text":"<p>Read-only. A collection of all start script objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3startScript[])</li> </ul>"},{"location":"types/tes3nonDynamicData/#methods","title":"Methods","text":""},{"location":"types/tes3nonDynamicData/#addnewobject","title":"<code>addNewObject</code>","text":"<p>Inserts a newly created object into the proper collections.</p> <pre><code>local result = myObject:addNewObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3baseObject)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3nonDynamicData/#deleteobject","title":"<code>deleteObject</code>","text":"<p>Removes an object from the proper collections.</p> <pre><code>myObject:deleteObject(object)\n</code></pre> <p>Parameters:</p> <ul> <li><code>object</code> (tes3baseObject)</li> </ul>"},{"location":"types/tes3nonDynamicData/#drawcellmapmarker","title":"<code>drawCellMapMarker</code>","text":"<p>Draws a map marker box for an exterior cell onto the world map.</p> <pre><code>myObject:drawCellMapMarker(cell)\n</code></pre> <p>Parameters:</p> <ul> <li><code>cell</code> (tes3cell)</li> </ul>"},{"location":"types/tes3nonDynamicData/#finddialogue","title":"<code>findDialogue</code>","text":"<p>Locates a dialogue for a given ID.</p> <pre><code>local result = myObject:findDialogue(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogue)</li> </ul>"},{"location":"types/tes3nonDynamicData/#findfirstcloneofactor","title":"<code>findFirstCloneOfActor</code>","text":"<p>Locates the first reference for a given object ID.</p> <pre><code>local result = myObject:findFirstCloneOfActor(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3nonDynamicData/#findglobalvariable","title":"<code>findGlobalVariable</code>","text":"<p>Locates a global variable for a given ID.</p> <pre><code>local result = myObject:findGlobalVariable(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3nonDynamicData/#findscript","title":"<code>findScript</code>","text":"<p>Locates a script for a given ID.</p> <pre><code>local result = myObject:findScript(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3nonDynamicData/#findsound","title":"<code>findSound</code>","text":"<p>Locates a sound for a given ID.</p> <pre><code>local result = myObject:findSound(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3nonDynamicData/#resolveobject","title":"<code>resolveObject</code>","text":"<p>Locates a general object for a given ID.</p> <pre><code>local result = myObject:resolveObject(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject)</li> </ul>"},{"location":"types/tes3nonDynamicData/#showlocationonmap","title":"<code>showLocationOnMap</code>","text":"<p>Draws map marker boxes onto the world map for all cells with names starting with the prefix. e.g. <code>showLocationOnMap(\"Vivec\")</code> draws boxes for all cells in Vivec, because the cell names \"Vivec, Arena\", \"Vivec, Temple\", etc. matches.</p> <pre><code>myObject:showLocationOnMap(cellNamePrefix)\n</code></pre> <p>Parameters:</p> <ul> <li><code>cellNamePrefix</code> (string)</li> </ul>"},{"location":"types/tes3npc/","title":"Tes3npc","text":""},{"location":"types/tes3npc/#tes3npc","title":"tes3npc","text":"<p>An NPC object that has not been cloned. Typically represents the raw information edited in the construction set.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3npc/#properties","title":"Properties","text":""},{"location":"types/tes3npc/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#aiconfig","title":"<code>aiConfig</code>","text":"<p>Read-only. A substructure off of actors that contains information on the current AI configuration.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiConfig)</li> </ul> Example: Checking if an NPC offers traveling service <pre><code>--- This function returns `true` if given NPC\n--- or creature offers traveling service.\n---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance\n---@return boolean\nlocal function offersTraveling(actor)\n    local travelDestinations = actor.aiConfig.travelDestinations\n\n    -- Actors that can't transport the player\n    -- have travelDestinations equal to `nil`\n    return travelDestinations ~= nil\nend\n</code></pre>"},{"location":"types/tes3npc/#attributes","title":"<code>attributes</code>","text":"<p>A table of eight numbers, representing the base values for the actor's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3npc/#autocalc","title":"<code>autoCalc</code>","text":"<p>Direct access to the actor autocalc flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#basedisposition","title":"<code>baseDisposition</code>","text":"<p>The actor's base disposition.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3npc/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3npc/#class","title":"<code>class</code>","text":"<p>Read-only. The class that the NPC uses.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3class)</li> </ul>"},{"location":"types/tes3npc/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3npc/#faction","title":"<code>faction</code>","text":"<p>Read-only. The class that the NPC is joined to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3faction)</li> </ul>"},{"location":"types/tes3npc/#factionindex","title":"<code>factionIndex</code>","text":"<p>Deprecated. Use <code>reputation</code> instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#factionrank","title":"<code>factionRank</code>","text":"<p>The NPC's rank in their faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#fatigue","title":"<code>fatigue</code>","text":"<p>The actor's max fatigue.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#female","title":"<code>female</code>","text":"<p>Direct access to the actor female flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#hair","title":"<code>hair</code>","text":"<p>The hair body part that the NPC will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3npc/#head","title":"<code>head</code>","text":"<p>The head body part that the NPC will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3npc/#health","title":"<code>health</code>","text":"<p>The actor's max health.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#height","title":"<code>height</code>","text":"<p>Read-only. Convenience access to the NPCs (race) height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npc/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3npc/#isattacked","title":"<code>isAttacked</code>","text":"<p>Read-only. If true, the actor's attacked flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#isessential","title":"<code>isEssential</code>","text":"<p>Read-only. If true, the actor's essential flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns false.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#isrespawn","title":"<code>isRespawn</code>","text":"<p>Read-only. If true, the actor's respawn flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#level","title":"<code>level</code>","text":"<p>The actor's level.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#magicka","title":"<code>magicka</code>","text":"<p>The actor's max magicka.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npc/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npc/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3npc/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3npc/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3npc/#race","title":"<code>race</code>","text":"<p>Read-only. The race that the NPC uses.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3race)</li> </ul>"},{"location":"types/tes3npc/#reputation","title":"<code>reputation</code>","text":"<p>The actor's reputation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3npc/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3npc/#script","title":"<code>script</code>","text":"<p>The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3npc/#skills","title":"<code>skills</code>","text":"<p>A table of twenty seven numbers, representing the base values for the NPC's skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3npc/#soul","title":"<code>soul</code>","text":"<p>The soul value for this NPC. This is typically <code>nil</code>, unless the <code>calcSouLValue</code> event provides one for this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3npc/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npc/#spells","title":"<code>spells</code>","text":"<p>Read-only. A list of spells that the actor has access to. It is a <code>tes3spellList</code>, which is a list wrapper with helper functions. The actual list is accessed with <code>.iterator</code>. e.g. <code>for _, spell in pairs(npc.spells.iterator) do print(spell.name) end</code></p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3npc/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3npc/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#weight","title":"<code>weight</code>","text":"<p>Read-only. Convenience access to the NPCs (race) weight.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npc/#methods","title":"Methods","text":""},{"location":"types/tes3npc/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3npc/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npc/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3npc/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/","title":"tes3npcInstance","text":""},{"location":"types/tes3npcInstance/#tes3npcinstance","title":"tes3npcInstance","text":"<p>An NPC object that has been cloned. Typically represents an NPC that has been instanced in the world.</p> <p>This type inherits the following: tes3actor, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3npcInstance/#properties","title":"Properties","text":""},{"location":"types/tes3npcInstance/#actorflags","title":"<code>actorFlags</code>","text":"<p>Read-only. A number representing the actor flags. Truly a bit field.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#aiconfig","title":"<code>aiConfig</code>","text":"<p>Read-only. A substructure off of actors that contains information on the current AI configuration.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3aiConfig)</li> </ul> Example: Checking if an NPC offers traveling service <pre><code>--- This function returns `true` if given NPC\n--- or creature offers traveling service.\n---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance\n---@return boolean\nlocal function offersTraveling(actor)\n    local travelDestinations = actor.aiConfig.travelDestinations\n\n    -- Actors that can't transport the player\n    -- have travelDestinations equal to `nil`\n    return travelDestinations ~= nil\nend\n</code></pre>"},{"location":"types/tes3npcInstance/#attributes","title":"<code>attributes</code>","text":"<p>Quick access to the base NPC's attributes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3npcInstance/#autocalc","title":"<code>autoCalc</code>","text":"<p>Direct access to the actor autocalc flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#bartergold","title":"<code>barterGold</code>","text":"<p>Friendly access to actor's barter gold amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#basedisposition","title":"<code>baseDisposition</code>","text":"<p>The actor's base disposition.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#baseobject","title":"<code>baseObject</code>","text":"<p>Read-only. Access to the base NPC object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3npc)</li> </ul>"},{"location":"types/tes3npcInstance/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#blood","title":"<code>blood</code>","text":"<p>Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3npcInstance/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3npcInstance/#class","title":"<code>class</code>","text":"<p>Read-only. Quick access to the base NPC's class.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3class)</li> </ul>"},{"location":"types/tes3npcInstance/#clonecount","title":"<code>cloneCount</code>","text":"<p>Read-only. The number of clones that exist of this actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#disposition","title":"<code>disposition</code>","text":"<p>Read-only. The actor's effective disposition, with all modifiers applied.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#equipment","title":"<code>equipment</code>","text":"<p>Read-only. The items currently equipped to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3equipmentStack[])</li> </ul>"},{"location":"types/tes3npcInstance/#faction","title":"<code>faction</code>","text":"<p>Read-only. Quick access to the base NPC's faction.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3faction)</li> </ul>"},{"location":"types/tes3npcInstance/#factionindex","title":"<code>factionIndex</code>","text":"<p>Deprecated. Use <code>reputation</code> instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#fatigue","title":"<code>fatigue</code>","text":"<p>Read-only. Quick access to the base NPC's fatigue.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#female","title":"<code>female</code>","text":"<p>Direct access to the actor female flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#health","title":"<code>health</code>","text":"<p>Read-only. Quick access to the base NPC's health.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#height","title":"<code>height</code>","text":"<p>Read-only. Convenience access to the NPCs (race) height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npcInstance/#inventory","title":"<code>inventory</code>","text":"<p>Read-only. The items currently carried by the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inventory)</li> </ul>"},{"location":"types/tes3npcInstance/#isattacked","title":"<code>isAttacked</code>","text":"<p>Read-only. If true, the actor's attacked flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#isessential","title":"<code>isEssential</code>","text":"<p>Read-only. If true, the actor's essential flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#isguard","title":"<code>isGuard</code>","text":"<p>Read-only. If true, the actor is a guard.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#isinstance","title":"<code>isInstance</code>","text":"<p>Always returns true.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#isrespawn","title":"<code>isRespawn</code>","text":"<p>Read-only. If true, the actor's respawn flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#level","title":"<code>level</code>","text":"<p>Read-only. Quick access to the base NPC's level.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#magicka","title":"<code>magicka</code>","text":"<p>Read-only. Quick access to the base NPC's magicka.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npcInstance/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. The mobile that the object is represented by.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3npcInstance/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#name","title":"<code>name</code>","text":"<p>Quick access to the base NPC's name.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npcInstance/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3npcInstance/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3npcInstance/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3npcInstance/#race","title":"<code>race</code>","text":"<p>Read-only. Quick access to the base NPC's race.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3race)</li> </ul>"},{"location":"types/tes3npcInstance/#reference","title":"<code>reference</code>","text":"<p>Read-only. The reference that the object is represented by.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3npcInstance/#reputation","title":"<code>reputation</code>","text":"<p>The actor's reputation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3npcInstance/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3npcInstance/#script","title":"<code>script</code>","text":"<p>Read-only. Quick access to the base NPC's script.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3npcInstance/#skills","title":"<code>skills</code>","text":"<p>Quick access to the base NPC's skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3npcInstance/#soul","title":"<code>soul</code>","text":"<p>The soul value for this NPC's base object. This is typically <code>nil</code>, unless the <code>calcSouLValue</code> event provides one for the base actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3npcInstance/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3npcInstance/#spells","title":"<code>spells</code>","text":"<p>Read-only. Quick access to the base NPC's spell list. It is a <code>tes3spellList</code>, which is a list wrapper with helper functions. The actual list is accessed with <code>.iterator</code>. e.g. <code>for _, spell in pairs(npc.spells.iterator) do print(spell.name) end</code></p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3npcInstance/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3npcInstance/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#weight","title":"<code>weight</code>","text":"<p>Read-only. Convenience access to the NPCs (race) weight.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3npcInstance/#methods","title":"Methods","text":""},{"location":"types/tes3npcInstance/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3npcInstance/#hasitemequipped","title":"<code>hasItemEquipped</code>","text":"<p>Checks if the actor has provided item equipped.</p> <pre><code>local result = myObject:hasItemEquipped(item, itemData)\n</code></pre> <p>Parameters:</p> <ul> <li><code>item</code> (tes3item, string): The item to perform a check for.</li> <li><code>itemData</code> (tes3itemData): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#offersservice","title":"<code>offersService</code>","text":"<p>Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use <code>tes3.checkMerchantOffersService()</code>.</p> <pre><code>local result = myObject:offersService(service)\n</code></pre> <p>Parameters:</p> <ul> <li><code>service</code> (number): Use one of the values in the <code>tes3.merchantService.*</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3npcInstance/#oninventoryclose","title":"<code>onInventoryClose</code>","text":"<p>A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find <code>tes3.reference</code>'s <code>onCloseInventory()</code> to be more convenient to use.</p> <pre><code>myObject:onInventoryClose(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference)</li> </ul>"},{"location":"types/tes3npcInstance/#reevaluateequipment","title":"<code>reevaluateEquipment</code>","text":"<p>Causes the NPC to reevaluate his/hers equipment choices and equip the best available.</p> <pre><code>myObject:reevaluateEquipment()\n</code></pre>"},{"location":"types/tes3npcInstance/#tradesitemtype","title":"<code>tradesItemType</code>","text":"<p>Checks if the actor will buy and sell items of a given object type. e.g. <code>actor:tradesItemType(tes3.objectType.repairItem)</code></p> <pre><code>local result = myObject:tradesItemType(objectType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>objectType</code> (number): Accepts values from <code>tes3.objectType</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/","title":"Tes3object","text":""},{"location":"types/tes3object/#tes3object","title":"tes3object","text":"<p>Almost anything that can be represented in the Construction Set is based on this structure.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3object/#properties","title":"Properties","text":""},{"location":"types/tes3object/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3object/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3object/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3object/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3object/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3object/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3object/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3object/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3object/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3object/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3object/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3object/#methods","title":"Methods","text":""},{"location":"types/tes3object/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3packedColor/","title":"tes3packedColor","text":""},{"location":"types/tes3packedColor/#tes3packedcolor","title":"tes3packedColor","text":"<p>A densely packed structure for single-byte red, green, blue and alpha values. The values are from 0 to 255.</p>"},{"location":"types/tes3packedColor/#properties","title":"Properties","text":""},{"location":"types/tes3packedColor/#a","title":"<code>a</code>","text":"<p>The alpha color value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#alpha","title":"<code>alpha</code>","text":"<p>The alpha color value. Another alias for a.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#b","title":"<code>b</code>","text":"<p>The blue color value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#blue","title":"<code>blue</code>","text":"<p>The blue color value. Another alias for b.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#g","title":"<code>g</code>","text":"<p>The green color value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#green","title":"<code>green</code>","text":"<p>The green color value. Another alias for g.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#r","title":"<code>r</code>","text":"<p>The red color value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3packedColor/#red","title":"<code>red</code>","text":"<p>The red color value. Another alias for r.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3pathGrid/","title":"tes3pathGrid","text":""},{"location":"types/tes3pathGrid/#tes3pathgrid","title":"tes3pathGrid","text":"<p>A navigation graph used for pathfinding through cells. Composed of nodes (waypoints) connected by navigable edges. Pathgrid data is only available when the <code>isLoaded</code> property is true.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3pathGrid/#properties","title":"Properties","text":""},{"location":"types/tes3pathGrid/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#granularity","title":"<code>granularity</code>","text":"<p>Read-only. Unknown purpose.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3pathGrid/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3pathGrid/#isloaded","title":"<code>isLoaded</code>","text":"<p>Read-only. If the game has loaded the path grid data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#nodecount","title":"<code>nodeCount</code>","text":"<p>Read-only. The total number of nodes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3pathGrid/#nodes","title":"<code>nodes</code>","text":"<p>Read-only. A list of all path nodes in the grid. Note that for some cells, not all nodes are placed on the ground.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3pathGridNode[])</li> </ul>"},{"location":"types/tes3pathGrid/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3pathGrid/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3pathGrid/#parentcell","title":"<code>parentCell</code>","text":"<p>Read-only. The cell that the pathgrid belongs to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3pathGrid/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3pathGrid/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3pathGrid/#methods","title":"Methods","text":""},{"location":"types/tes3pathGrid/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3pathGridNode/","title":"tes3pathGridNode","text":""},{"location":"types/tes3pathGridNode/#tes3pathgridnode","title":"tes3pathGridNode","text":"<p>A node within a path grid.</p>"},{"location":"types/tes3pathGridNode/#properties","title":"Properties","text":""},{"location":"types/tes3pathGridNode/#connectednodes","title":"<code>connectedNodes</code>","text":"<p>Read-only. The list of nodes connected to this node. This table value is a copy generated from the actual data.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3pathGridNode[])</li> </ul>"},{"location":"types/tes3pathGridNode/#grid","title":"<code>grid</code>","text":"<p>Read-only. The pathgrid that this node belongs to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3pathGrid)</li> </ul>"},{"location":"types/tes3pathGridNode/#position","title":"<code>position</code>","text":"<p>Read-only. The world position of the node.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3physicalObject/","title":"tes3physicalObject","text":""},{"location":"types/tes3physicalObject/#tes3physicalobject","title":"tes3physicalObject","text":"<p>Almost anything that can be represented in the Construction Set is based on this structure.</p> <p>This type inherits the following: tes3object, tes3baseObject</p>"},{"location":"types/tes3physicalObject/#properties","title":"Properties","text":""},{"location":"types/tes3physicalObject/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3physicalObject/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3physicalObject/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3physicalObject/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3physicalObject/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3physicalObject/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3physicalObject/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3physicalObject/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3physicalObject/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3physicalObject/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3physicalObject/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3physicalObject/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3physicalObject/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3physicalObject/#methods","title":"Methods","text":""},{"location":"types/tes3physicalObject/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3playerAnimationController/","title":"tes3playerAnimationController","text":""},{"location":"types/tes3playerAnimationController/#tes3playeranimationcontroller","title":"tes3playerAnimationController","text":"<p>Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated.</p> <p>This type inherits the following: tes3actorAnimationController</p>"},{"location":"types/tes3playerAnimationController/#properties","title":"Properties","text":""},{"location":"types/tes3playerAnimationController/#allowverticalaircontrol","title":"<code>allowVerticalAirControl</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3playerAnimationController/#alphaproperty","title":"<code>alphaProperty</code>","text":"<p>The alpha property applied to the actor. Controls the opacity/opaqueness of the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAlphaProperty)</li> </ul>"},{"location":"types/tes3playerAnimationController/#animationdata","title":"<code>animationData</code>","text":"<p>Access to the actor's animation data.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3animationData)</li> </ul>"},{"location":"types/tes3playerAnimationController/#animgroupidle","title":"<code>animGroupIdle</code>","text":"<p>The actor's idle animation. Maps to values in <code>tes3.animationGroup</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#animgroupidle2","title":"<code>animGroupIdle2</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#animgroupmovement","title":"<code>animGroupMovement</code>","text":"<p>The actor's movement animations group. Maps to values in <code>tes3.animationGroup</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#attachtiming","title":"<code>attachTiming</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#attackfollowtiming","title":"<code>attackFollowTiming</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#cameraoffset","title":"<code>cameraOffset</code>","text":"<p>Read-only. Additional offset applied to the camera's position during the third person.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3playerAnimationController/#firstpersonheadcameranode","title":"<code>firstPersonHeadCameraNode</code>","text":"<p>Read-only. This is the camera used while in first person. Switching from first person to third person point of view doesn't affect this camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (niCamera)</li> </ul>"},{"location":"types/tes3playerAnimationController/#groundplanerotation","title":"<code>groundPlaneRotation</code>","text":"<p>The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3playerAnimationController/#hittiming","title":"<code>hitTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code>, played during the hit phase for fully charged attack. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#is3rdperson","title":"<code>is3rdPerson</code>","text":"<p>Read-only. This flag is set to <code>true</code> when the player's view is in third person. To change the player's POV, you can use tes3.force1stPerson and tes3.force3rdPerson.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3playerAnimationController/#materialproperty","title":"<code>materialProperty</code>","text":"<p>The material property applied to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niMaterialProperty)</li> </ul>"},{"location":"types/tes3playerAnimationController/#maxattacktiming","title":"<code>maxAttackTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code> file, when the attack animation is fully charged. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#minattacktiming","title":"<code>minAttackTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code> file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#minhittiming","title":"<code>minHitTiming</code>","text":"<p>This it the time of the actor's attack animation in their <code>.kf</code>, played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. The mobile actor that this controller is responsible for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor)</li> </ul>"},{"location":"types/tes3playerAnimationController/#patchedoverridestate","title":"<code>patchedOverrideState</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#pickdata","title":"<code>pickData</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (niPick)</li> </ul>"},{"location":"types/tes3playerAnimationController/#remainingblocktime","title":"<code>remainingBlockTime</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#shadowcameramatrix","title":"<code>shadowCameraMatrix</code>","text":"<p>Read-only. The local rotation matrix of the shadow camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3playerAnimationController/#shouldjump","title":"<code>shouldJump</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#speedmultiplier","title":"<code>speedMultiplier</code>","text":"<p>This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#starttime","title":"<code>startTime</code>","text":"<p>This it the starting time of the actor's attack animation in their <code>.kf</code> file. It's updated for the attacks from different directions.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#strikewhenattackswingreaches","title":"<code>strikeWhenAttackSwingReaches</code>","text":"<p>For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#togglepov","title":"<code>togglePOV</code>","text":"<p>Read-only. This property is set to <code>true</code> for one frame to change the point of view. Since this property is read-only, you can use tes3.force1stPerson and tes3.force3rdPerson.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3playerAnimationController/#usethirdpersonaftervanitycameradone","title":"<code>useThirdPersonAfterVanityCameraDone</code>","text":"<p>Read-only. This flag is set to <code>true</code> if vanity mode was entered from third person view. If vanity mode was entered from first person view, this flag is set to <code>false</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3playerAnimationController/#vanitycamera","title":"<code>vanityCamera</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (niCamera)</li> </ul>"},{"location":"types/tes3playerAnimationController/#vanitycameradistance","title":"<code>vanityCameraDistance</code>","text":"<p>Read-only. The orbiting radius of the camera during vanity mode in game units. Measured from the center of the player's head.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#vanitycameraenabled","title":"<code>vanityCameraEnabled</code>","text":"<p>Read-only. The value of this property is <code>1</code> during vanity camera mode, and <code>0</code> otherwise.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3playerAnimationController/#vanitycameraz","title":"<code>vanityCameraZ</code>","text":"<p>Read-only. The offset on up-down (world z) axis of the camera in third person or during vanity mode from the player's head height in game units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#vertexcolorproperty","title":"<code>vertexColorProperty</code>","text":"<p>The vertex color property applied to the actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (niVertexColorProperty)</li> </ul>"},{"location":"types/tes3playerAnimationController/#verticalrotation","title":"<code>verticalRotation</code>","text":"<p>Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3playerAnimationController/#weaponspeed","title":"<code>weaponSpeed</code>","text":"<p>The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed.</p> <p>Use by getting the animation controller from the mobile. e.g. <code>mobile.animationController.weaponSpeed = 0.5</code></p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3playerAnimationController/#methods","title":"Methods","text":""},{"location":"types/tes3playerAnimationController/#calculateattackswing","title":"<code>calculateAttackSwing</code>","text":"<p>Calculates how much an attack is currently being charged. Returns a value ranging from <code>0.0</code> to <code>1.0</code>. A value of <code>1.0</code> indicates that the attack is fully charged. Will always return <code>0.0</code> when not currently charging an attack.</p> <pre><code>local result = myObject:calculateAttackSwing()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/","title":"Tes3probe","text":""},{"location":"types/tes3probe/#tes3probe","title":"tes3probe","text":"<p>A core lockpick object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3probe/#properties","title":"Properties","text":""},{"location":"types/tes3probe/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3probe/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3probe/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3probe/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#maxcondition","title":"<code>maxCondition</code>","text":"<p>The maximum condition/health of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3probe/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3probe/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3probe/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3probe/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3probe/#quality","title":"<code>quality</code>","text":"<p>The quality of the object, with how much of a bonus it has.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3probe/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3probe/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3probe/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3probe/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3probe/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3probe/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3probe/#methods","title":"Methods","text":""},{"location":"types/tes3probe/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3processManager/","title":"tes3processManager","text":""},{"location":"types/tes3processManager/#tes3processmanager","title":"tes3processManager","text":""},{"location":"types/tes3processManager/#properties","title":"Properties","text":""},{"location":"types/tes3processManager/#aidistance","title":"<code>aiDistance</code>","text":"<p>A value which controls how far the game AI is processed, measured in game distance units. Corresponds to AI Distance slider in Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3processManager/#aidistancescale","title":"<code>aiDistanceScale</code>","text":"<p>A value which controls how far the game AI is processed. Corresponds to AI Distance slider in Options menu. This scale is in range [0, 1]. Where <code>0</code> means the minimal AI processing range, while <code>1</code> means maximal AI processing range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3processManager/#methods","title":"Methods","text":""},{"location":"types/tes3processManager/#checkalarmradius","title":"<code>checkAlarmRadius</code>","text":"<pre><code>myObject:checkAlarmRadius({ actor = ..., container = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3mobileActor): The actor to perform a check for.</li> <li><code>container</code> (tes3iterator): Container is a actor's AI planner e.g. <code>mobile.aiPlanner</code>.</li> </ul> </li> </ul>"},{"location":"types/tes3processManager/#checknearbyenemiesallowrest","title":"<code>checkNearbyEnemiesAllowRest</code>","text":"<p>Performs a check whether any potential nearby enemies allow the player to rest.</p> <pre><code>local result = myObject:checkNearbyEnemiesAllowRest()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3processManager/#checkplayerdistance","title":"<code>checkPlayerDistance</code>","text":"<p>Forces a new distance check for actor AI behaviour.</p> <pre><code>myObject:checkPlayerDistance()\n</code></pre>"},{"location":"types/tes3processManager/#detectpresence","title":"<code>detectPresence</code>","text":"<p>This function performs a check for presence of a given mobile actor.</p> <pre><code>myObject:detectPresence({ actor = ..., unknown = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>actor</code> (tes3mobileActor): The actor to perform a check for.</li> <li><code>unknown</code> (boolean)</li> </ul> </li> </ul>"},{"location":"types/tes3processManager/#detectsneak","title":"<code>detectSneak</code>","text":"<p>This function performs a check whether a detector can detect another actor sneaking.</p> <pre><code>local isDetected = myObject:detectSneak({ detector = ..., target = ..., unknown = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>detector</code> (tes3mobileActor): The detector actor to perform a check for.</li> <li><code>target</code> (tes3mobileActor): The target actor to perform a check for.</li> <li><code>unknown</code> (boolean)</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>isDetected</code> (boolean)</li> </ul>"},{"location":"types/tes3projectileManager/","title":"tes3projectileManager","text":""},{"location":"types/tes3projectileManager/#tes3projectilemanager","title":"tes3projectileManager","text":"<p>A game structure which holds all active projectiles.</p>"},{"location":"types/tes3projectileManager/#properties","title":"Properties","text":""},{"location":"types/tes3projectileManager/#projectiles","title":"<code>projectiles</code>","text":"<p>Read-only. A list of all currently active projectiles (tes3mobileProjectile).</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileProjectile[])</li> </ul>"},{"location":"types/tes3quest/","title":"Tes3quest","text":""},{"location":"types/tes3quest/#tes3quest","title":"tes3quest","text":"<p>A representation of a quest, with associated dialogue and info.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3quest/#properties","title":"Properties","text":""},{"location":"types/tes3quest/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#dialogue","title":"<code>dialogue</code>","text":"<p>Read-only. A collection of dialogues associated with the quest.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogue[])</li> </ul>"},{"location":"types/tes3quest/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3quest/#info","title":"<code>info</code>","text":"<p>Read-only. A collection of dialogue info associated with the quest.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3dialogueInfo[])</li> </ul>"},{"location":"types/tes3quest/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3quest/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3quest/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3quest/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3quest/#methods","title":"Methods","text":""},{"location":"types/tes3quest/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3quickKey/","title":"tes3quickKey","text":""},{"location":"types/tes3quickKey/#tes3quickkey","title":"tes3quickKey","text":"<p>A configuration detailing a quick key.</p>"},{"location":"types/tes3quickKey/#properties","title":"Properties","text":""},{"location":"types/tes3quickKey/#item","title":"<code>item</code>","text":"<p>Read-only. The raw item bound to the quick key. To change its value, use either the <code>setItem</code> or <code>setMagic</code> methods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3quickKey/#itemdata","title":"<code>itemData</code>","text":"<p>Read-only. The raw item data bound to the quick key. To change its value, use either the <code>setItem</code> or <code>setMagic</code> methods.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3quickKey/#spell","title":"<code>spell</code>","text":"<p>Read-only. The raw spell bound to the quick key. To change its value, use the <code>setMagic</code> method.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3quickKey/#type","title":"<code>type</code>","text":"<p>Read-only. The type of the quick key, with the numeric value matching <code>tes3.quickKeyType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3quickKey/#methods","title":"Methods","text":""},{"location":"types/tes3quickKey/#clear","title":"<code>clear</code>","text":"<p>Unbinds the quick key, removing any data in it.</p> <pre><code>myObject:clear()\n</code></pre>"},{"location":"types/tes3quickKey/#getitem","title":"<code>getItem</code>","text":"<p>Gets the item associated with the given quick key. If the quick key is not marked as an item, this will return <code>nil</code>. This is equivalent to fetching the <code>item</code> and <code>itemData</code> properties, after checking to make sure the <code>type</code> is set to item.</p> <pre><code>local source, data = myObject:getItem()\n</code></pre> <p>Returns:</p> <ul> <li><code>source</code> (tes3item, nil): The item bound to the quick key.</li> <li><code>data</code> (tes3itemData, nil): Any associated item data bound to the quick key</li> </ul>"},{"location":"types/tes3quickKey/#getmagic","title":"<code>getMagic</code>","text":"<p>Gets the magic associated with the given quick key. If the quick key is not marked as magic, this will return <code>nil</code>. This is equivalent to fetching either the <code>spell</code> or <code>item</code> properties and the <code>itemData</code> property, after checking to make sure the <code>type</code> is set to magic.</p> <pre><code>local source, data = myObject:getMagic()\n</code></pre> <p>Returns:</p> <ul> <li><code>source</code> (tes3spell, tes3item, nil): The castable source bound to the quick key.</li> <li><code>data</code> (tes3itemData, nil): Any associated item data bound to the quick key</li> </ul>"},{"location":"types/tes3quickKey/#setitem","title":"<code>setItem</code>","text":"<p>Sets the binding of the quick key to a given item source.</p> <pre><code>myObject:setItem(source, data)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (tes3item): The item to be bound to the quick key.</li> <li><code>data</code> (tes3itemData, nil): The optional item data to be paired with the binding.</li> </ul>"},{"location":"types/tes3quickKey/#setmagic","title":"<code>setMagic</code>","text":"<p>Sets the binding of the quick key to a given magic source. This must be a spell, or an item with an on-use enchantment.</p> <pre><code>myObject:setMagic(source, data)\n</code></pre> <p>Parameters:</p> <ul> <li><code>source</code> (tes3spell, tes3item): The castable source to be bound to the quick key.</li> <li><code>data</code> (tes3itemData, nil): If given an item as the source, the optional item data to be paired with the binding.</li> </ul>"},{"location":"types/tes3race/","title":"Tes3race","text":""},{"location":"types/tes3race/#tes3race","title":"tes3race","text":"<p>A core object representing a character race.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3race/#properties","title":"Properties","text":""},{"location":"types/tes3race/#abilities","title":"<code>abilities</code>","text":"<p>Read-only. A list of abilities that NPCs of that race have access to. It is a <code>tes3spellList</code>, which is a list wrapper with helper functions. The actual list is accessed with <code>.iterator</code>. e.g. <code>for _, ability in pairs(race.abilities.iterator) do print(ability.name) end</code></p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spellList)</li> </ul>"},{"location":"types/tes3race/#baseattributes","title":"<code>baseAttributes</code>","text":"<p>Read-only. Array-style table access to base 8 attributes for the race. Each element in the array is a <code>tes3raceBaseAttribute</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceBaseAttribute[])</li> </ul>"},{"location":"types/tes3race/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#description","title":"<code>description</code>","text":"<p>Read-only. Loads from disk and returns the description of the race.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3race/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#femalebody","title":"<code>femaleBody</code>","text":"<p>Read-only. Access to all the body parts that will be used for female actors of this race.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceBodyParts)</li> </ul>"},{"location":"types/tes3race/#flags","title":"<code>flags</code>","text":"<p>Raw bit-based flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3race/#height","title":"<code>height</code>","text":"<p>Read-only. Access to the the height pair for males/females of the race.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceHeightWeight)</li> </ul>"},{"location":"types/tes3race/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3race/#isbeast","title":"<code>isBeast</code>","text":"<p>Access to the beast race flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#isplayable","title":"<code>isPlayable</code>","text":"<p>Access to the playable race flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#malebody","title":"<code>maleBody</code>","text":"<p>Read-only. Access to all the body parts that will be used for male actors of this race.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceBodyParts)</li> </ul>"},{"location":"types/tes3race/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#name","title":"<code>name</code>","text":"<p>Read-only. The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3race/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3race/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3race/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#skillbonuses","title":"<code>skillBonuses</code>","text":"<p>Read-only. Array-style table access for 7 skill bonuses for the race. Each element in the array is a <code>tes3raceSkillBonus</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceSkillBonus[])</li> </ul>"},{"location":"types/tes3race/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3race/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3race/#weight","title":"<code>weight</code>","text":"<p>Read-only. Access to the the height pair for males/females of the race.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3raceHeightWeight)</li> </ul>"},{"location":"types/tes3race/#methods","title":"Methods","text":""},{"location":"types/tes3race/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3raceBaseAttribute/","title":"tes3raceBaseAttribute","text":""},{"location":"types/tes3raceBaseAttribute/#tes3racebaseattribute","title":"tes3raceBaseAttribute","text":"<p>A substructure for a race, storing a base attribute value for male and female actors.</p>"},{"location":"types/tes3raceBaseAttribute/#properties","title":"Properties","text":""},{"location":"types/tes3raceBaseAttribute/#female","title":"<code>female</code>","text":"<p>The base attribute for female actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3raceBaseAttribute/#male","title":"<code>male</code>","text":"<p>The base attribute for male actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3raceBodyParts/","title":"tes3raceBodyParts","text":""},{"location":"types/tes3raceBodyParts/#tes3racebodyparts","title":"tes3raceBodyParts","text":"<p>A substructure for a race, storing the used body parts for a given sex.</p>"},{"location":"types/tes3raceBodyParts/#properties","title":"Properties","text":""},{"location":"types/tes3raceBodyParts/#ankle","title":"<code>ankle</code>","text":"<p>The ankle that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#chest","title":"<code>chest</code>","text":"<p>The chest that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#clavicle","title":"<code>clavicle</code>","text":"<p>The clavicle that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#foot","title":"<code>foot</code>","text":"<p>The foot that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#forearm","title":"<code>forearm</code>","text":"<p>The forearm that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#groin","title":"<code>groin</code>","text":"<p>The groin that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#hair","title":"<code>hair</code>","text":"<p>The base hair that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#hands","title":"<code>hands</code>","text":"<p>The hands that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#head","title":"<code>head</code>","text":"<p>The head that an actor of this race and sex will use. If the actor is a vampire, the <code>.vampireHead</code> part will be used instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#knee","title":"<code>knee</code>","text":"<p>The knee that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#neck","title":"<code>neck</code>","text":"<p>The neck that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#tail","title":"<code>tail</code>","text":"<p>The tail that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#upperarm","title":"<code>upperArm</code>","text":"<p>The upper arm that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#upperleg","title":"<code>upperLeg</code>","text":"<p>The upper leg that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#vampirehead","title":"<code>vampireHead</code>","text":"<p>The head that an actor of this race and sex will use when they are a vampire.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceBodyParts/#wrist","title":"<code>wrist</code>","text":"<p>The wrist that an actor of this race and sex will use.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3raceHeightWeight/","title":"tes3raceHeightWeight","text":""},{"location":"types/tes3raceHeightWeight/#tes3raceheightweight","title":"tes3raceHeightWeight","text":"<p>A substructure for a race, storing a height or weight for male and female actors.</p>"},{"location":"types/tes3raceHeightWeight/#properties","title":"Properties","text":""},{"location":"types/tes3raceHeightWeight/#female","title":"<code>female</code>","text":"<p>The height or weight for female actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3raceHeightWeight/#male","title":"<code>male</code>","text":"<p>The height or weight for male actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3raceSkillBonus/","title":"tes3raceSkillBonus","text":""},{"location":"types/tes3raceSkillBonus/#tes3raceskillbonus","title":"tes3raceSkillBonus","text":"<p>A substructure for a race, storing up to 7 skill bonuses.</p>"},{"location":"types/tes3raceSkillBonus/#properties","title":"Properties","text":""},{"location":"types/tes3raceSkillBonus/#bonus","title":"<code>bonus</code>","text":"<p>The value to modify the skill with.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3raceSkillBonus/#skill","title":"<code>skill</code>","text":"<p>The skill id to modify. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3rangeInt/","title":"tes3rangeInt","text":""},{"location":"types/tes3rangeInt/#tes3rangeint","title":"tes3rangeInt","text":"<p>A simple pair of integers, typically used to define a range.</p>"},{"location":"types/tes3rangeInt/#properties","title":"Properties","text":""},{"location":"types/tes3rangeInt/#max","title":"<code>max</code>","text":"<p>The maximum value in the range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3rangeInt/#min","title":"<code>min</code>","text":"<p>The minimum value in the range.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3rechargingItem/","title":"tes3rechargingItem","text":""},{"location":"types/tes3rechargingItem/#tes3rechargingitem","title":"tes3rechargingItem","text":"<p>Data for a recharging item. Not necessarily an item owned by the player.</p>"},{"location":"types/tes3rechargingItem/#properties","title":"Properties","text":""},{"location":"types/tes3rechargingItem/#enchantment","title":"<code>enchantment</code>","text":"<p>Read-only. The enchantment of the recharging item.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3rechargingItem/#itemdata","title":"<code>itemData</code>","text":"<p>Read-only. The specific item data being recharged.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3rechargingItem/#object","title":"<code>object</code>","text":"<p>Read-only. The item being recharged.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3item)</li> </ul>"},{"location":"types/tes3reference/","title":"Tes3reference","text":""},{"location":"types/tes3reference/#tes3reference","title":"tes3reference","text":"<p>A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique.</p> <p>For example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique.</p> <p>This type inherits the following: tes3object, tes3baseObject</p>"},{"location":"types/tes3reference/#properties","title":"Properties","text":""},{"location":"types/tes3reference/#activationreference","title":"<code>activationReference</code>","text":"<p>The current reference, if any, that this reference will activate.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3reference/#attachments","title":"<code>attachments</code>","text":"<p>Read-only. A table with friendly named access to all supported attachments.</p> <p>Returns:</p> <ul> <li><code>result</code> (table&lt;string, tes3bodyPartManager|tes3itemData|tes3lightNode|tes3lockNode|tes3mobileActor|tes3reference|tes3travelDestinationNode|tes3animationData&gt;)</li> </ul>"},{"location":"types/tes3reference/#baseobject","title":"<code>baseObject</code>","text":"<p>Read-only. This is similar to the object field, but is guaranteed to provide the base-most object. If object is an actor clone, the base actor will be given instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3reference/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#bodypartmanager","title":"<code>bodyPartManager</code>","text":"<p>Read-only. Access to the reference's body part manager, if available. Typically this is only available on NPC references.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPartManager, nil)</li> </ul>"},{"location":"types/tes3reference/#cell","title":"<code>cell</code>","text":"<p>Read-only. The cell that the reference is currently in.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3reference/#context","title":"<code>context</code>","text":"<p>Read-only. Access to the script context for this reference and its associated script.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptContext)</li> </ul> Example: Checking reference's script variables <p>Companions usually have a mwscript script with variable named <code>companion</code> set to 1. This can be used to determine if a reference is player's companion or not. Note that companion share functionality was added to Morrowind in Tribunal expansion. In vanilla game it is used by Tribunal companions. Also, companion mods usually use this feature. But note that all the followers (during certain parts of their quests) from base Morrowind don't have companion share.</p> <pre><code>--- This function returns `true` if the reference\n--- has a variable companion set to 1 in its script.\n---@param reference tes3reference\n---@return boolean\nlocal function hasCompanionShare(reference)\n\n    -- This shows that we can read any variable inside\n    -- `tes3scriptContext` objects as if it was normal Lua table\n    -- (`reference.context` is of `tes3scriptContext` type)\n    local companion = reference.context[\"companion\"]\n    return (companion and\n            companion == 1 or\n            false\n    )\nend\n</code></pre> Example: Checking if an actor is a follower <p>In this example we provide a way to check if a certain actor is currently player's follower. This function can also be useful besides the one from previous example, since not all of the followers have companion share enabled.</p> <pre><code>--- This function returns `true` if a given mobile has\n--- follow ai package with player as its target\n---@param mobile tes3mobileNPC|tes3mobileCreature\n---@return boolean isFollower\nlocal function isFollower(mobile)\n    local planner = mobile.aiPlanner\n    if not planner then\n        return false\n    end\n\n    local package = planner:getActivePackage()\n    if not package then\n        return false\n    end\n    if package.type == tes3.aiPackage.follow then\n        local target = package.targetActor\n\n        if target.objectType == tes3.objectType.mobilePlayer then\n            return true\n        end\n    end\n    return false\nend\n\n--- With the above function we can build a function that\n--- creates a table with all of the player's followers\n---@return tes3reference[] followerList\nlocal function getFollowers()\n    local followers = {}\n    local i = 1\n\n    for _, mobile in pairs(tes3.mobilePlayer.friendlyActors) do\n        ---@cast mobile tes3mobileNPC|tes3mobileCreature\n        if isFollower(mobile) then\n            followers[i] = mobile.reference\n            i = i + 1\n        end\n    end\n\n    return followers\nend\n</code></pre>"},{"location":"types/tes3reference/#data","title":"<code>data</code>","text":"<p>A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For item references, this is the same table as on the <code>tes3itemData</code> structure. To store data that doesn't get serialized to/from the save, use <code>tempData</code>.</p> <p>There is a guide available here on using this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"types/tes3reference/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#destination","title":"<code>destination</code>","text":"<p>Read-only. Returns the travel destination node for this reference, or <code>nil</code>. This can be used to determine where a given door links to.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3travelDestinationNode, nil)</li> </ul>"},{"location":"types/tes3reference/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#facing","title":"<code>facing</code>","text":"<p>Convenient access to the z-component of the reference's orientation. Setting the facing sets the reference as modified.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#forwarddirection","title":"<code>forwardDirection</code>","text":"<p>Read-only. The normalized forward or Y direction vector of the reference.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#hasnocollision","title":"<code>hasNoCollision</code>","text":"<p>Sets the no-collision flag on this reference, and recalculates collision groups. Use the <code>setNoCollisionFlag()</code> function to manage collision group recalculation instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3reference/#isdead","title":"<code>isDead</code>","text":"<p>Read-only. Returns <code>true</code> if the object is dead, <code>false</code> if they are alive, or <code>nil</code> if that couldn't be determined.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean, nil)</li> </ul>"},{"location":"types/tes3reference/#isempty","title":"<code>isEmpty</code>","text":"<p>Friendly access onto the reference's empty inventory flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#isleveledspawn","title":"<code>isLeveledSpawn</code>","text":"<p>Read-only. If true, this reference was created as a result of a leveled spawn.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#isrespawn","title":"<code>isRespawn</code>","text":"<p>Read-only. If true, the references respawn flag is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#itemdata","title":"<code>itemData</code>","text":"<p>Gets or sets the attached <code>itemData</code> for this reference. If set to <code>nil</code>, the item data will be unhooked but not deleted.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3itemData)</li> </ul>"},{"location":"types/tes3reference/#leveledbasereference","title":"<code>leveledBaseReference</code>","text":"<p>Read-only. If this reference is a leveled spawn, this is the leveled creature spawn reference. If this reference wasn't the result of a leveled spawn, the value is <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference, nil)</li> </ul>"},{"location":"types/tes3reference/#light","title":"<code>light</code>","text":"<p>Read-only. Direct access to the scene graph light, if a dynamic light is set.</p> <p>Returns:</p> <ul> <li><code>result</code> (niPointLight)</li> </ul>"},{"location":"types/tes3reference/#locknode","title":"<code>lockNode</code>","text":"<p>Read-only. Quick access to the reference's lock node, if any. Doors or containers that aren't locked nor trapped have this property set to <code>nil</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3lockNode, nil)</li> </ul>"},{"location":"types/tes3reference/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3reference/#mobile","title":"<code>mobile</code>","text":"<p>Read-only. Access to the attached mobile object, if applicable.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileCreature, tes3mobileNPC, tes3mobilePlayer, tes3mobileProjectile, tes3mobileSpellProjectile, nil)</li> </ul>"},{"location":"types/tes3reference/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3reference/#nextnode","title":"<code>nextNode</code>","text":"<p>Read-only. The next reference in the parent reference list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3reference/#nodedata","title":"<code>nodeData</code>","text":"<p>Read-only. Redundant access to this object, for iterating over a tes3referenceList.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3reference/#object","title":"<code>object</code>","text":"<p>Read-only. The object that the reference is for, such as a weapon, armor, or actor.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3reference/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#orientation","title":"<code>orientation</code>","text":"<p>Access to the reference's orientation, in XYZ Euler angles in Radians. Changing the orientation marks the reference as modified.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3reference/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#position","title":"<code>position</code>","text":"<p>Access to the reference's position. Setting the position sets the reference as modified.</p> <p>For actors, the axes are:</p> <ul> <li>X right - left(+)</li> <li>Y front - back(+)</li> <li>Z down  - up(+)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3reference/#previousnode","title":"<code>previousNode</code>","text":"<p>Read-only. The previous reference in the parent reference list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3reference/#rightdirection","title":"<code>rightDirection</code>","text":"<p>Read-only. The normalized right or X direction vector of the reference.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3reference/#scenenode","title":"<code>sceneNode</code>","text":"<p>Read-only. The scene graph node that the reference uses for rendering.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3reference/#sourceformid","title":"<code>sourceFormId</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3reference/#sourcemodid","title":"<code>sourceModId</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#stacksize","title":"<code>stackSize</code>","text":"<p>Access to the size of a stack, if the reference represents one or more items.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#startingorientation","title":"<code>startingOrientation</code>","text":"<p>Read-only. Access to the reference's original orientation. Note that this value is invalid for NPCs and creatures.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#startingposition","title":"<code>startingPosition</code>","text":"<p>Read-only. Access to the reference's original position. Note that this value is invalid for NPCs and creatures.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, this reference can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#targetformid","title":"<code>targetFormId</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#targetmodid","title":"<code>targetModId</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3reference/#tempdata","title":"<code>tempData</code>","text":"<p>As with the <code>data</code> field, a generic lua table that data can be written to. No information in this table will persist into saves. For item references, this is the same table as on the <code>tes3itemData</code> structure.</p> <p>There is a guide available here on using this table.</p> <p>Returns:</p> <ul> <li><code>result</code> (table)</li> </ul>"},{"location":"types/tes3reference/#updirection","title":"<code>upDirection</code>","text":"<p>Read-only. The normalized up or Z direction vector of the reference.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3reference/#methods","title":"Methods","text":""},{"location":"types/tes3reference/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3reference/#activate","title":"<code>activate</code>","text":"<p>Causes this reference to activate another. This will lead them to go through doors, pick up items, etc.</p> <pre><code>myObject:activate(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference): The other reference to activate.</li> </ul>"},{"location":"types/tes3reference/#clearactionflag","title":"<code>clearActionFlag</code>","text":"<p>Unsets a bit in the reference's action data attachment</p> <pre><code>myObject:clearActionFlag(flagIndex)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flagIndex</code> (integer): The action flag to clear. Maps to values in <code>tes3.actionFlag</code> namespace.</li> </ul>"},{"location":"types/tes3reference/#clone","title":"<code>clone</code>","text":"<p>Clones a reference for a base actor into a reference to an instance of that actor. For example, this will force a container to resolve its leveled items and have its own unique inventory.</p> <pre><code>local result = myObject:clone()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#delete","title":"<code>delete</code>","text":"<p>Disables the reference, removes all its attachments, resets its scale, and sets the reference to be deleted.</p> <pre><code>myObject:delete()\n</code></pre>"},{"location":"types/tes3reference/#deletedynamiclightattachment","title":"<code>deleteDynamicLightAttachment</code>","text":"<p>Deletes the dynamic light attachment, if it exists. This will automatically detach the dynamic light from affected nodes.</p> <pre><code>myObject:deleteDynamicLightAttachment(removeLightFromParent)\n</code></pre> <p>Parameters:</p> <ul> <li><code>removeLightFromParent</code> (boolean): Default: <code>false</code>. If <code>true</code>, the dynamic light is removed from its parent node as well.</li> </ul>"},{"location":"types/tes3reference/#detachdynamiclightfromaffectednodes","title":"<code>detachDynamicLightFromAffectedNodes</code>","text":"<p>Removes the dynamic light from any affected scene graph nodes, but will not delete the associated attachment.</p> <pre><code>myObject:detachDynamicLightFromAffectedNodes()\n</code></pre>"},{"location":"types/tes3reference/#disable","title":"<code>disable</code>","text":"<p>Hides the reference, detaches all dynamic lights and sounds, and stops any mobile simulation. Sets the reference as modified implicitly.</p> <pre><code>local success = myObject:disable()\n</code></pre> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If <code>true</code>, the reference was successfully disabled.</li> </ul>"},{"location":"types/tes3reference/#enable","title":"<code>enable</code>","text":"<p>Shows the reference, reattaches all dynamic lights and sounds, and restarts any mobile simulation if the player is close enough. Sets the reference as modified implicitly.</p> <pre><code>local success = myObject:enable()\n</code></pre> <p>Returns:</p> <ul> <li><code>success</code> (boolean): If <code>true</code>, the reference was successfully enabled.</li> </ul>"},{"location":"types/tes3reference/#getangleto","title":"<code>getAngleTo</code>","text":"<p>Calculates the angle from this reference's current facing to the target reference.</p> <pre><code>local angle = myObject:getAngleTo(reference)\n</code></pre> <p>Parameters:</p> <ul> <li><code>reference</code> (tes3reference): The reference to calculate the angle to.</li> </ul> <p>Returns:</p> <ul> <li><code>angle</code> (number): The angle to the given reference in radians.</li> </ul>"},{"location":"types/tes3reference/#getattacheddynamiclight","title":"<code>getAttachedDynamicLight</code>","text":"<p>Fetches the dynamic light attachment.</p> <pre><code>local result = myObject:getAttachedDynamicLight()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3lightNode)</li> </ul>"},{"location":"types/tes3reference/#getorcreateattacheddynamiclight","title":"<code>getOrCreateAttachedDynamicLight</code>","text":"<p>Fetches the dynamic light attachment. If there isn't one, a new one will be created with the given light and value.</p> <p>If no light is supplied as an argument, a point light of radius 512 will be automatically created.</p> <p>If the light is not attached to any part of the scene graph yet, the point light will be placed as a child of the \"attachLight\" subnode of the model, or a child of the model if \"attachLight\" is not found.</p> <pre><code>local result = myObject:getOrCreateAttachedDynamicLight(light, phase)\n</code></pre> <p>Parameters:</p> <ul> <li><code>light</code> (niPointLight): Optional.</li> <li><code>phase</code> (number): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3lightNode)</li> </ul>"},{"location":"types/tes3reference/#oncloseinventory","title":"<code>onCloseInventory</code>","text":"<p>A function that tells the game that an inventory has been closed, if you are simulating inventory operations. It has the capability of un-cloning an inventory if it has not been modified. Typically not used outside of specific purposes.</p> <pre><code>local result = myObject:onCloseInventory()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#setactionflag","title":"<code>setActionFlag</code>","text":"<p>Sets a bit in the reference's action data attachment.</p> <pre><code>myObject:setActionFlag(flagIndex)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flagIndex</code> (integer): The action flag to clear. Maps to values in <code>tes3.actionFlag</code> namespace.</li> </ul>"},{"location":"types/tes3reference/#setdynamiclighting","title":"<code>setDynamicLighting</code>","text":"<p>Sets the dynamic lighting state of the reference using the global data handler.</p> <pre><code>myObject:setDynamicLighting()\n</code></pre>"},{"location":"types/tes3reference/#setnocollisionflag","title":"<code>setNoCollisionFlag</code>","text":"<p>Sets if this reference has active collision. This is preferable to changing the <code>hasNoCollision</code> property, if you are manipulating multiple objects at once and do not want to constantly recalculate collision groups.</p> <pre><code>myObject:setNoCollisionFlag(hasNoCollision, updateCollisions)\n</code></pre> <p>Parameters:</p> <ul> <li><code>hasNoCollision</code> (boolean): If <code>true</code>, the reference no longer has collision.</li> <li><code>updateCollisions</code> (boolean): Default: <code>true</code>. If <code>true</code>, collision groups for the active cells are recalculated.</li> </ul>"},{"location":"types/tes3reference/#testactionflag","title":"<code>testActionFlag</code>","text":"<p>Returns the flag's value in the reference's action data attachment.</p> <pre><code>local result = myObject:testActionFlag(flagIndex)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flagIndex</code> (integer): The action flag to test. Maps to values in <code>tes3.actionFlag</code> namespace.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3reference/#updateequipment","title":"<code>updateEquipment</code>","text":"<p>Causes the reference, if of an actor, to update the reference's bodyparts with the currently equipped ones.</p> <pre><code>myObject:updateEquipment()\n</code></pre>"},{"location":"types/tes3reference/#updatelighting","title":"<code>updateLighting</code>","text":"<p>Updates the lighting of the reference using the global data handler.</p> <pre><code>myObject:updateLighting()\n</code></pre>"},{"location":"types/tes3reference/#updatescenegraph","title":"<code>updateSceneGraph</code>","text":"<p>Updates the reference's local rotation matrix, propagates position changes to the scene graph, and sets the reference's modified flag. You need to call this if the orientation or position was manually modified.</p> <pre><code>myObject:updateSceneGraph()\n</code></pre>"},{"location":"types/tes3referenceList/","title":"tes3referenceList","text":""},{"location":"types/tes3referenceList/#tes3referencelist","title":"tes3referenceList","text":"<p>A collection for references, holding a cell and a linked list of references contained in the cell.</p>"},{"location":"types/tes3referenceList/#properties","title":"Properties","text":""},{"location":"types/tes3referenceList/#cell","title":"<code>cell</code>","text":"<p>Read-only. The cell for the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3referenceList/#head","title":"<code>head</code>","text":"<p>Read-only. The first reference in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3referenceList/#size","title":"<code>size</code>","text":"<p>Read-only. The number of references in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3referenceList/#tail","title":"<code>tail</code>","text":"<p>Read-only. The last reference in the collection.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul> Example: Converting reference list to array style table <p>An example is given of a general function that can be used to convert a tes3referenceList to simple array which can be looped over with standard ipairs().</p> <pre><code>-- This function loops over the references inside the\n-- tes3referenceList and adds them to an array-style table\n---@param list tes3referenceList\n---@return tes3reference[]\nlocal function referenceListToTable(list)\n    local result = {}\n    local i = 1\n    if list.size == 0 then\n        return {}\n    end\n    local ref = list.head\n\n    while ref.nextNode do\n        result[i] = ref\n        i = i + 1\n        ref = ref.nextNode\n    end\n\n    -- Add the last reference\n    result[i] = ref\n\n    return result\nend\n\n-- Usage:\nlocal list = tes3.player.cell.actors\n\n-- The references is now a simple array style table\n-- that can be looped over with regular ipairs()\nlocal references = referenceListToTable(list)\n\nfor i, ref in ipairs(references) do\n    -- Do something with the reference\n    tes3ui.log(ref.id)\nend\n</code></pre> Example: Generic iterator function <p>In this more involved example, we used the corouting API from the Lua standard library to construct a generic iterator function. The iterReferenceList() function can then be used directly inside a for loop.</p> <pre><code>--- This is a generic iterator function used\n--- to loop over a tes3referenceList\n---@param list tes3referenceList\n---@return fun(): tes3reference\nlocal function iterReferenceList(list)\n    local function iterator()\n        local ref = list.head\n\n        if list.size ~= 0 then\n            coroutine.yield(ref)\n        end\n\n        while ref.nextNode do\n            ref = ref.nextNode\n            coroutine.yield(ref)\n        end\n    end\n    return coroutine.wrap(iterator)\nend\n\n-- Usage:\nlocal list = tes3.player.cell.actors\nfor ref in iterReferenceList(list) do\n    -- Do something with the reference\n    tes3ui.log(ref.id)\nend\n</code></pre>"},{"location":"types/tes3region/","title":"Tes3region","text":""},{"location":"types/tes3region/#tes3region","title":"tes3region","text":"<p>A structure that contains region information.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3region/#properties","title":"Properties","text":""},{"location":"types/tes3region/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3region/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#name","title":"<code>name</code>","text":"<p>The region's name. It must be a string less than 32 characters long.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3region/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3region/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3region/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#sleepcreature","title":"<code>sleepCreature</code>","text":"<p>Read-only. The region's leveled creature that can be spawned while the player is sleeping.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3leveledCreature)</li> </ul>"},{"location":"types/tes3region/#sounds","title":"<code>sounds</code>","text":"<p>Read-only. Array-style table for the different region sounds. Each object in the table is a <code>tes3regionSound</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3regionSound[])</li> </ul>"},{"location":"types/tes3region/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3region/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3region/#weather","title":"<code>weather</code>","text":"<p>The region's current weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weather)</li> </ul>"},{"location":"types/tes3region/#weatherchanceash","title":"<code>weatherChanceAsh</code>","text":"<p>The chance the Ash weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchanceblight","title":"<code>weatherChanceBlight</code>","text":"<p>The chance the Blight weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchanceblizzard","title":"<code>weatherChanceBlizzard</code>","text":"<p>The chance the Blizzard weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchanceclear","title":"<code>weatherChanceClear</code>","text":"<p>The chance the Clear weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchancecloudy","title":"<code>weatherChanceCloudy</code>","text":"<p>The chance the Cloudy weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchancefoggy","title":"<code>weatherChanceFoggy</code>","text":"<p>The chance the Foggy weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchanceovercast","title":"<code>weatherChanceOvercast</code>","text":"<p>The chance the Overcast weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchancerain","title":"<code>weatherChanceRain</code>","text":"<p>The chance the Rain weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchances","title":"<code>weatherChances</code>","text":"<p>Read-only. Array-style table for the different weather chances. Each object in the table is a number, between 1 - 100. The index of the table is the weather type.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3region/#weatherchancesnow","title":"<code>weatherChanceSnow</code>","text":"<p>The chance the Snow weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#weatherchancethunder","title":"<code>weatherChanceThunder</code>","text":"<p>The chance the Thunder weather-type will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3region/#methods","title":"Methods","text":""},{"location":"types/tes3region/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3region/#changeweather","title":"<code>changeWeather</code>","text":"<p>Changes the current weather for the region to the provided weather-type parameter.</p> <pre><code>myObject:changeWeather(weatherId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weatherId</code> (number): Maps to values in the <code>tes3.weather</code> table.</li> </ul>"},{"location":"types/tes3region/#randomizeweather","title":"<code>randomizeWeather</code>","text":"<p>Changes the weather to a random weather type.</p> <pre><code>myObject:randomizeWeather()\n</code></pre> <p>Parameters:</p>"},{"location":"types/tes3regionSound/","title":"tes3regionSound","text":""},{"location":"types/tes3regionSound/#tes3regionsound","title":"tes3regionSound","text":"<p>A structure that contains region sound information.</p>"},{"location":"types/tes3regionSound/#properties","title":"Properties","text":""},{"location":"types/tes3regionSound/#chance","title":"<code>chance</code>","text":"<p>The chance the region sound will be used. Must be an integer between <code>0</code> and <code>100</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3regionSound/#sound","title":"<code>sound</code>","text":"<p>The access to object's associated sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3repairTool/","title":"tes3repairTool","text":""},{"location":"types/tes3repairTool/#tes3repairtool","title":"tes3repairTool","text":"<p>A core repair tool object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3repairTool/#properties","title":"Properties","text":""},{"location":"types/tes3repairTool/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3repairTool/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3repairTool/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3repairTool/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#maxcondition","title":"<code>maxCondition</code>","text":"<p>The maximum condition/health of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3repairTool/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3repairTool/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3repairTool/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3repairTool/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3repairTool/#quality","title":"<code>quality</code>","text":"<p>The quality of the object, with how much of a bonus it has.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3repairTool/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3repairTool/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3repairTool/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3repairTool/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3repairTool/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3repairTool/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3repairTool/#methods","title":"Methods","text":""},{"location":"types/tes3repairTool/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3script/","title":"Tes3script","text":""},{"location":"types/tes3script/#tes3script","title":"tes3script","text":"<p>A script object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3script/#properties","title":"Properties","text":""},{"location":"types/tes3script/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#context","title":"<code>context</code>","text":"<p>Read-only. A special context used for getting and setting script's variables.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptContext)</li> </ul>"},{"location":"types/tes3script/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#floatvariablecount","title":"<code>floatVariableCount</code>","text":"<p>Read-only. The number of variables of float type in the script.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3script/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3script/#longvariablecount","title":"<code>longVariableCount</code>","text":"<p>Read-only. The number of variables of long type in the script.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3script/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3script/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3script/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#shortvariablecount","title":"<code>shortVariableCount</code>","text":"<p>Read-only. The number of variables of short type in the script.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3script/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3script/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3script/#methods","title":"Methods","text":""},{"location":"types/tes3script/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3script/#getvariabledata","title":"<code>getVariableData</code>","text":"<p>This method fetches all of the script's variables as a table.</p> <pre><code>local results = myObject:getVariableData()\n</code></pre> <p>Returns:</p> <ul> <li><code>results</code> (table): The table with all of script's variable names as keys.</li> </ul> <p>Each entry has the following fields:</p> <ol> <li>type - <code>s</code>, <code>f</code> or <code>l</code>, which stand for <code>short</code>, <code>float</code>, and <code>long</code></li> <li>index - the order of occurrence of the variable in the script, starting from <code>0</code></li> <li>value - this can have <code>nil</code> value</li> </ol>"},{"location":"types/tes3scriptContext/","title":"tes3scriptContext","text":""},{"location":"types/tes3scriptContext/#tes3scriptcontext","title":"tes3scriptContext","text":"<p>A script context object, which allows variables to be get/set using the variable name.</p>"},{"location":"types/tes3scriptContext/#methods","title":"Methods","text":""},{"location":"types/tes3scriptContext/#getvariabledata","title":"<code>getVariableData</code>","text":"<p>This method fetches all of the script's variables as a table.</p> <pre><code>local results = myObject:getVariableData()\n</code></pre> <p>Returns:</p> <ul> <li><code>results</code> (table&lt;string, table&gt;): The table with all of script's variable names as keys.</li> </ul> <p>Each entry has following fields:</p> <ol> <li>type  - <code>s</code>, <code>f</code> or <code>l</code>, which stand for <code>short</code>, <code>float</code>, and <code>long</code></li> <li>index - the order of occurance of the variable in the script, starting from <code>0</code></li> <li>value - this can have <code>nil</code> value</li> </ol>"},{"location":"types/tes3scriptContext/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3scriptContext/#length","title":"Length (<code>#</code>)","text":"Result type Description number Returns the total amount of variables in this tes3scriptContext. Example: An example of indexing local script variables inside <code>tes3scriptContext</code> objects <p>Companions usually have a mwscript script with variable named <code>companion</code> set to 1. This can be used to determine if a reference is player's companion or not.</p> <pre><code>--- This function returns `true` if the reference\n--- has a variable companion set to 1 in its script.\n---@param reference tes3reference\n---@return boolean\nlocal function hasCompanionShare(reference)\n\n    -- This shows that we can read any variable inside\n    -- `tes3scriptContext` objects as if it was normal Lua table\n    -- (`reference.context` is of `tes3scriptContext` type)\n    local companion = reference.context[\"companion\"]\n    return (companion and\n            companion == 1 or\n            false\n    )\nend\n</code></pre>"},{"location":"types/tes3skill/","title":"Tes3skill","text":""},{"location":"types/tes3skill/#tes3skill","title":"tes3skill","text":"<p>A skill object.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3skill/#properties","title":"Properties","text":""},{"location":"types/tes3skill/#actions","title":"<code>actions</code>","text":"<p>Read-only. A table with 4 values. The amount of experience an action (use of skill) awards.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3skill/#attribute","title":"<code>attribute</code>","text":"<p>Read-only. Skill's governing attribute. Maps to <code>tes3.attribute</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3skill/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#iconpath","title":"<code>iconPath</code>","text":"<p>Read-only. The path to the icon for the skill.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3skill/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3skill/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#name","title":"<code>name</code>","text":"<p>Read-only. The player-facing name of the skill.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3skill/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3skill/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3skill/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3skill/#specialization","title":"<code>specialization</code>","text":"<p>The specialization in which the skill belongs. Maps to values in the <code>tes3.specialization</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3skill/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3skill/#methods","title":"Methods","text":""},{"location":"types/tes3skill/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3soulGemData/","title":"tes3soulGemData","text":""},{"location":"types/tes3soulGemData/#tes3soulgemdata","title":"tes3soulGemData","text":"<p>A structure that holds (sometimes redundant) information on a soul gem.</p>"},{"location":"types/tes3soulGemData/#properties","title":"Properties","text":""},{"location":"types/tes3soulGemData/#capacity","title":"<code>capacity</code>","text":"<p>Read-only. The capacity of the soul gem.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3soulGemData/#id","title":"<code>id</code>","text":"<p>Read-only. The unique object ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soulGemData/#item","title":"<code>item</code>","text":"<p>Read-only. A reference back to the misc item that the soul gem represents.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3misc)</li> </ul>"},{"location":"types/tes3soulGemData/#mesh","title":"<code>mesh</code>","text":"<p>Read-only. The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soulGemData/#name","title":"<code>name</code>","text":"<p>Read-only. The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soulGemData/#texture","title":"<code>texture</code>","text":"<p>Read-only. The path to the object's texture.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soulGemData/#value","title":"<code>value</code>","text":"<p>Read-only. The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3soulGemData/#weight","title":"<code>weight</code>","text":"<p>Read-only. The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/","title":"Tes3sound","text":""},{"location":"types/tes3sound/#tes3sound","title":"tes3sound","text":"<p>A sound object created in the TES3 CS.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3sound/#properties","title":"Properties","text":""},{"location":"types/tes3sound/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#filename","title":"<code>filename</code>","text":"<p>Read-only. Path to the sound file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3sound/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3sound/#maxdistance","title":"<code>maxDistance</code>","text":"<p>The maximum distance the sound will be played at. Defaults to <code>0</code>. If both this and minDistance are <code>0</code>, the values are ignored.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/#mindistance","title":"<code>minDistance</code>","text":"<p>The minimum distance the sound will be played at. Defaults to <code>0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3sound/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#volume","title":"<code>volume</code>","text":"<p>Direct access to sound's volume.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3sound/#methods","title":"Methods","text":""},{"location":"types/tes3sound/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local result = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3sound/#islooping","title":"<code>isLooping</code>","text":"<p>Returns <code>true</code> if the sound is actively looping.</p> <pre><code>local result = myObject:isLooping()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#isplaying","title":"<code>isPlaying</code>","text":"<p>Returns <code>true</code> if the sound is actively playing.</p> <pre><code>local result = myObject:isPlaying()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3sound/#play","title":"<code>play</code>","text":"<p>This method plays the sound.</p> <pre><code>myObject:play(playbackFlags, volume, pitch, isNot3D)\n</code></pre> <p>Parameters:</p> <ul> <li><code>playbackFlags</code> (number): Optional. These match low-level DirectSound flags. Most mods don't need to modify this, though a value of <code>1</code> to loop may be useful. The rest of the flags can be read in the IDirectSoundBuffer8::Play documentation: https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee418074(v=vs.85).</li> <li><code>volume</code> (number): Optional.</li> <li><code>pitch</code> (number): Optional.</li> <li><code>isNot3D</code> (boolean): Optional.</li> </ul>"},{"location":"types/tes3sound/#stop","title":"<code>stop</code>","text":"<p>This stops playing the sound.</p> <pre><code>myObject:stop()\n</code></pre>"},{"location":"types/tes3soundGenerator/","title":"tes3soundGenerator","text":""},{"location":"types/tes3soundGenerator/#tes3soundgenerator","title":"tes3soundGenerator","text":"<p>A sound generator object created in the TES3 CS</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3soundGenerator/#properties","title":"Properties","text":""},{"location":"types/tes3soundGenerator/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soundGenerator/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3soundGenerator/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3soundGenerator/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#sound","title":"<code>sound</code>","text":"<p>Read-only. Sound object tied to this sound generator.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3soundGenerator/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3soundGenerator/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3soundGenerator/#type","title":"<code>type</code>","text":"<p>Read-only. Maps to <code>tes3.soundGenType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3soundGenerator/#methods","title":"Methods","text":""},{"location":"types/tes3soundGenerator/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local result = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3spell/","title":"Tes3spell","text":""},{"location":"types/tes3spell/#tes3spell","title":"tes3spell","text":"<p>A spell game object.</p> <p>This type inherits the following: tes3object, tes3baseObject</p>"},{"location":"types/tes3spell/#properties","title":"Properties","text":""},{"location":"types/tes3spell/#alwayssucceeds","title":"<code>alwaysSucceeds</code>","text":"<p>A flag that determines if casting the spell will always succeed.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#autocalc","title":"<code>autoCalc</code>","text":"<p>Determines if the magicka cost for the spell is autocalculated, and if the spell may be automatically assigned to NPCs if they are skillful enough to cast it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#basepurchasecost","title":"<code>basePurchaseCost</code>","text":"<p>Calculates the base cost to purchase the spell. This value is not adjusted by mercantile skills.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#casttype","title":"<code>castType</code>","text":"<p>The spell's cast type. Maps to <code>tes3.spellType</code> constants.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#effects","title":"<code>effects</code>","text":"<p>Read-only. An array-style table of the <code>tes3effect</code> data on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3effect[])</li> </ul> Example: Determining if a spell is hostile <p>The following function returns <code>true</code> if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense.</p> <pre><code>--- @param magicSource tes3spell|tes3enchantment|tes3alchemy\nlocal function isSpellHostile(magicSource)\n    for _, effect in ipairs(magicSource.effects) do\n        if (effect.object.isHarmful) then\n            -- If one of the spell's effects is harmful, then\n            -- `true` is returned and function ends here.\n            return true\n        end\n    end\n    -- If no harmful effect was found then return `false`.\n    return false\nend\n</code></pre>"},{"location":"types/tes3spell/#flags","title":"<code>flags</code>","text":"<p>A bit field for the spell's flags.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3spell/#isactivecast","title":"<code>isActiveCast</code>","text":"<p>Read-only. True if the spell is actively cast. If false, the spell's effects are always passively affecting the owner.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#magickacost","title":"<code>magickaCost</code>","text":"<p>No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#name","title":"<code>name</code>","text":"<p>The name of the spell.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3spell/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3spell/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3spell/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#playerstart","title":"<code>playerStart</code>","text":"<p>A flag that determines if the spell may be assigned to the player at character generation if the player has enough skill to cast it.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3spell/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3spell/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3spell/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3spell/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spell/#value","title":"<code>value</code>","text":"<p>Read-only. The calculated base price of the spell. This is the <code>magickaCost</code> of the spell multiplied by the <code>fSpellValueMult</code> GMST.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#methods","title":"Methods","text":""},{"location":"types/tes3spell/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3spell/#calculatecastchance","title":"<code>calculateCastChance</code>","text":"<p>Calculates the chance that a caster can cast a given spell.</p> <pre><code>local result = myObject:calculateCastChance({ checkMagicka = ..., caster = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>checkMagicka</code> (boolean): Default: <code>true</code>. Determines if the caster's magicka should be taken into account during the calculation.</li> <li><code>caster</code> (tes3reference, tes3mobileActor): The caster to perform the calculation against.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3spell/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3spell)</li> </ul>"},{"location":"types/tes3spell/#getactiveeffectcount","title":"<code>getActiveEffectCount</code>","text":"<p>Gets the number of active effects in the spell effect table.</p> <pre><code>local result = myObject:getActiveEffectCount()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3spell/#getfirstindexofeffect","title":"<code>getFirstIndexOfEffect</code>","text":"<p>Gets the first index of an effect ID in the spell effect table. Returns <code>-1</code> if provided effect doesn't exist in the spell</p> <pre><code>local result = myObject:getFirstIndexOfEffect(effectId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>effectId</code> (number): A value from <code>tes3.effect</code> table.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3spell/#getleastproficienteffect","title":"<code>getLeastProficientEffect</code>","text":"<p>Returns the effect of the spell that a given actor is least proficient with.</p> <pre><code>local effect = myObject:getLeastProficientEffect(actor)\n</code></pre> <p>Parameters:</p> <ul> <li><code>actor</code> (tes3mobileActor, tes3reference, tes3npc, tes3npcInstance): The actor to calculate for. A mobile actor is preferred, as passing only a <code>tes3npc</code> will not use up to date skill information.</li> </ul> <p>Returns:</p> <ul> <li><code>effect</code> (tes3effect, nil): The least proficient effect, or <code>nil</code> if the spell has no valid effects.</li> </ul>"},{"location":"types/tes3spell/#getleastproficientschool","title":"<code>getLeastProficientSchool</code>","text":"<p>Returns the school of the least proficient effect on the spell, for a given actor.</p> <pre><code>local schoolID = myObject:getLeastProficientSchool(actor)\n</code></pre> <p>Parameters:</p> <ul> <li><code>actor</code> (tes3mobileActor, tes3reference, tes3npc, tes3npcInstance): The actor to calculate for. A mobile actor is preferred, as passing only a <code>tes3npc</code> will not use up to date skill information.</li> </ul> <p>Returns:</p> <ul> <li><code>schoolID</code> (number, nil): The least proficient school ID (from <code>tes3.magicSchool</code> table), or <code>nil</code> if the spell has no valid effects.</li> </ul>"},{"location":"types/tes3spellList/","title":"tes3spellList","text":""},{"location":"types/tes3spellList/#tes3spelllist","title":"tes3spellList","text":"<p>A list of spells. Used by actors, birthsigns, and races.</p>"},{"location":"types/tes3spellList/#properties","title":"Properties","text":""},{"location":"types/tes3spellList/#iterator","title":"<code>iterator</code>","text":"<p>Read-only. Deprecated. Use <code>for index, spell in pairs(spellList)</code> to iterate over spells.</p> <p>Direct access to the spells in this list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell[])</li> </ul>"},{"location":"types/tes3spellList/#methods","title":"Methods","text":""},{"location":"types/tes3spellList/#add","title":"<code>add</code>","text":"<p>Adds a spell to the list.</p> <pre><code>local result = myObject:add(spell)\n</code></pre> <p>Parameters:</p> <ul> <li><code>spell</code> (string, tes3spell): The spell.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spellList/#contains","title":"<code>contains</code>","text":"<p>Checks if the specified spell is contained in the spell list.</p> <pre><code>local result = myObject:contains(spell)\n</code></pre> <p>Parameters:</p> <ul> <li><code>spell</code> (string, tes3spell): The spell.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3spellList/#containstype","title":"<code>containsType</code>","text":"<p>Finds the first spell with the type provided.</p> <pre><code>local result = myObject:containsType(spellType)\n</code></pre> <p>Parameters:</p> <ul> <li><code>spellType</code> (number): A value from <code>tes3.spellType</code> enumeration.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3spellList/#getcheapest","title":"<code>getCheapest</code>","text":"<p>Finds the castable spell in the list with the lowest casting cost.</p> <pre><code>local result = myObject:getCheapest()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell)</li> </ul>"},{"location":"types/tes3spellList/#remove","title":"<code>remove</code>","text":"<p>Removes a spell from the list.</p> <pre><code>local result = myObject:remove(spell)\n</code></pre> <p>Parameters:</p> <ul> <li><code>spell</code> (string, tes3spell): The spell.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3splashController/","title":"tes3splashController","text":""},{"location":"types/tes3splashController/#tes3splashcontroller","title":"tes3splashController","text":"<p>A core game controller responsible for controlling temporary graphics.</p>"},{"location":"types/tes3splashController/#properties","title":"Properties","text":""},{"location":"types/tes3splashController/#activesplashes","title":"<code>activeSplashes</code>","text":"<p>Read-only. A list of tes3splashControllerActiveSplash objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3splashControllerActiveSplash[])</li> </ul>"},{"location":"types/tes3splashController/#bloodmeshcount","title":"<code>bloodMeshCount</code>","text":"<p>Read-only. The number of loaded blood meshes.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3splashController/#bloodmeshes","title":"<code>bloodMeshes</code>","text":"<p>Read-only. A list of loaded blood meshes.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode[])</li> </ul>"},{"location":"types/tes3splashController/#bloodsplashdurations","title":"<code>bloodSplashDurations</code>","text":"<p>Read-only. A list of blood splash durations, measured in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3splashController/#bloodtexturecount","title":"<code>bloodTextureCount</code>","text":"<p>Read-only. The number of loaded blood textures.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3splashController/#bloodtextureproperties","title":"<code>bloodTextureProperties</code>","text":"<p>Read-only. A list of loaded blood texturing properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTexturingProperty[])</li> </ul>"},{"location":"types/tes3splashController/#bloodtextures","title":"<code>bloodTextures</code>","text":"<p>Read-only. A list of blood splash textures.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture[])</li> </ul>"},{"location":"types/tes3splashControllerActiveSplash/","title":"tes3splashControllerActiveSplash","text":""},{"location":"types/tes3splashControllerActiveSplash/#tes3splashcontrolleractivesplash","title":"tes3splashControllerActiveSplash","text":"<p>An object representing an active splash, such as a blood particle.</p>"},{"location":"types/tes3splashControllerActiveSplash/#properties","title":"Properties","text":""},{"location":"types/tes3splashControllerActiveSplash/#age","title":"<code>age</code>","text":"<p>The splash's current age, measured in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3splashControllerActiveSplash/#maxage","title":"<code>maxAge</code>","text":"<p>The splash's maximum age, measured in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3splashControllerActiveSplash/#node","title":"<code>node</code>","text":"<p>Read-only. The splash's node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3startScript/","title":"tes3startScript","text":""},{"location":"types/tes3startScript/#tes3startscript","title":"tes3startScript","text":"<p>An object representing a script which autostarts at the game load.</p> <p>This type inherits the following: tes3baseObject</p>"},{"location":"types/tes3startScript/#properties","title":"Properties","text":""},{"location":"types/tes3startScript/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3startScript/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3startScript/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3startScript/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#script","title":"<code>script</code>","text":"<p>Read-only. A script which is set to start at game start with this <code>tes3startScript</code> object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3startScript/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3startScript/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3startScript/#methods","title":"Methods","text":""},{"location":"types/tes3startScript/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3static/","title":"Tes3static","text":""},{"location":"types/tes3static/#tes3static","title":"tes3static","text":"<p>A static game object. A non-animated object like a building or rock.</p> <p>There are special-case marker statics used for gameplay purposes, such as travel and intervention. Use the <code>object.isLocationMarker</code> property to detect these markers.</p> <p>This type inherits the following: tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3static/#properties","title":"Properties","text":""},{"location":"types/tes3static/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3static/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3static/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3static/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3static/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3static/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3static/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3static/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3static/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3static/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3static/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3static/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3static/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3static/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3static/#methods","title":"Methods","text":""},{"location":"types/tes3static/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3static/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3static)</li> </ul>"},{"location":"types/tes3statistic/","title":"Tes3statistic","text":""},{"location":"types/tes3statistic/#tes3statistic","title":"tes3statistic","text":"<p>A structure that holds statistical information relating to the current and base values of a statistic such as health, fatigue, magicka, or attributes.</p> <p>Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the <code>tes3.getEffectMagnitude()</code> function, using the appropriate buff or debuff magic effect for the statistic.</p>"},{"location":"types/tes3statistic/#properties","title":"Properties","text":""},{"location":"types/tes3statistic/#base","title":"<code>base</code>","text":"<p>The base value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the base value would be 100, the normal health amount.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statistic/#baseraw","title":"<code>baseRaw</code>","text":"<p>The base value of the statistic, as stored in memory. Prefer to use <code>.base</code> unless you know what you're doing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statistic/#current","title":"<code>current</code>","text":"<p>The current value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the current value would be 125, the health amount after all buffs and debuffs have been accounted for.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statistic/#currentraw","title":"<code>currentRaw</code>","text":"<p>The current value of the statistic, as stored in memory. Prefer to use <code>.current</code> unless you know what you're doing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statistic/#normalized","title":"<code>normalized</code>","text":"<p>The normalized value of the statistic. For example, for an account with current health of 50 and base health of 100, the normalized value would be equal to current divided by base. 50 (current) / 100 (base) = .5 (normalized). This is useful for quickly calculating percentages for statistics.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/","title":"tes3statisticSkill","text":""},{"location":"types/tes3statisticSkill/#tes3statisticskill","title":"tes3statisticSkill","text":"<p>A structure that holds statistical information relating to the current and base values of a skill statistic.</p> <p>Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the <code>tes3.getEffectMagnitude()</code> function, using the appropriate buff or debuff magic effect for the statistic.</p> <p>This type inherits the following: tes3statistic</p>"},{"location":"types/tes3statisticSkill/#properties","title":"Properties","text":""},{"location":"types/tes3statisticSkill/#base","title":"<code>base</code>","text":"<p>The base value of the skill statistic. Damage, and fortify spell effects don't change base skill value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/#baseraw","title":"<code>baseRaw</code>","text":"<p>The base value of the skill statistic, as stored in memory. Prefer to use <code>.base</code> unless you know what you're doing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/#current","title":"<code>current</code>","text":"<p>The current value of the skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/#currentraw","title":"<code>currentRaw</code>","text":"<p>The current value of the skill statistic, as stored in memory. Prefer to use <code>.current</code> unless you know what you're doing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/#normalized","title":"<code>normalized</code>","text":"<p>The normalized value of the skill statistic.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3statisticSkill/#type","title":"<code>type</code>","text":"<p>The type of the skill, as assigned by the actor's class. Maps to values in <code>tes3.skillType</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3tarray/","title":"Tes3tarray","text":""},{"location":"types/tes3tarray/#tes3tarray","title":"tes3tarray","text":"<p>This class is a template array used for some parts of the API. They are mostly invisible to the user since they can be looped over the same as over standard array-style tables.</p>"},{"location":"types/tes3transform/","title":"Tes3transform","text":""},{"location":"types/tes3transform/#tes3transform","title":"tes3transform","text":"<p>A rotation matrix, translation vector, and scale that marks an object's transformation.</p>"},{"location":"types/tes3transform/#properties","title":"Properties","text":""},{"location":"types/tes3transform/#rotation","title":"<code>rotation</code>","text":"<p>The transform's rotation matrix.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3transform/#scale","title":"<code>scale</code>","text":"<p>The transform's scale.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3transform/#translation","title":"<code>translation</code>","text":"<p>The transform's translation vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3transform/#methods","title":"Methods","text":""},{"location":"types/tes3transform/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the transform.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/tes3transform/#invert","title":"<code>invert</code>","text":"<p>Returns a new transform that is the inverse of this transform. The second return value indicates whether the calculating the inverse was possible.</p> <pre><code>local transform, valid = myObject:invert()\n</code></pre> <p>Returns:</p> <ul> <li><code>transform</code> (tes3transform)</li> <li><code>valid</code> (boolean)</li> </ul>"},{"location":"types/tes3transform/#new","title":"<code>new</code>","text":"<p>Creates a new instance of this type.</p> <pre><code>local result = myObject:new(rotation, translation, scale)\n</code></pre> <p>Parameters:</p> <ul> <li><code>rotation</code> (tes3matrix33): Optional.</li> <li><code>translation</code> (tes3vector3): Optional.</li> <li><code>scale</code> (number): Optional.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3transform)</li> </ul>"},{"location":"types/tes3transform/#toidentity","title":"<code>toIdentity</code>","text":"<p>Sets transform's rotation matrix to the identity matrix, translation to null vector, and scale to 1.0.</p> <pre><code>myObject:toIdentity()\n</code></pre>"},{"location":"types/tes3transform/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3transform/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3transform tes3transform tes3transform Calculate the combination of two transforms. tes3transform tes3vector3 tes3vector3 Calculate the result of applying this transform to a vector."},{"location":"types/tes3travelDestinationNode/","title":"tes3travelDestinationNode","text":""},{"location":"types/tes3travelDestinationNode/#tes3traveldestinationnode","title":"tes3travelDestinationNode","text":"<p>An attachment-capable structure to manage a travel destination. This is either exposed as a destination attachment for a door or as part of a list of possible travel services in an actor's AI configuration.</p>"},{"location":"types/tes3travelDestinationNode/#properties","title":"Properties","text":""},{"location":"types/tes3travelDestinationNode/#cell","title":"<code>cell</code>","text":"<p>The destination cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3cell)</li> </ul>"},{"location":"types/tes3travelDestinationNode/#marker","title":"<code>marker</code>","text":"<p>The reference door marker that the destination places the traveling actor at.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/","title":"tes3ui.showMessageMenu.params.button","text":""},{"location":"types/tes3ui.showMessageMenu.params.button/#tes3uishowmessagemenuparamsbutton","title":"tes3ui.showMessageMenu.params.button","text":"<p>Layout for the buttons table passed to <code>tes3ui.showMessageMenu</code> function.</p>"},{"location":"types/tes3ui.showMessageMenu.params.button/#properties","title":"Properties","text":""},{"location":"types/tes3ui.showMessageMenu.params.button/#callback","title":"<code>callback</code>","text":"<p>The function to call when this button is clicked.</p> <p>Returns:</p> <ul> <li><code>result</code> (fun(callbackParams: table))</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/#enablerequirements","title":"<code>enableRequirements</code>","text":"<p>Function that, if provided, determines whether the button will call the callback when clicked, or be disabled + greyed out. This function will be passed the <code>callbackParams</code> table that was provided in <code>tes3ui.showMessageMenu</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (fun(callbackParams: table): boolean, nil)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/#showrequirements","title":"<code>showRequirements</code>","text":"<p>If set, the button will only be visible if this function returns true. This function will be passed the <code>callbackParams</code> table that was provided in <code>tes3ui.showMessageMenu</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (fun(callbackParams: table): boolean, nil)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/#text","title":"<code>text</code>","text":"<p>Required. The label on the button.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/#tooltip","title":"<code>tooltip</code>","text":"<p>A table with header and text that will display as a tooltip when an enabled button is hovered over. Can also be a function that returns a tes3ui.showMessageMenu.params.tooltip.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3ui.showMessageMenu.params.tooltip, fun(callbackParams: table): tes3ui.showMessageMenu.params.tooltip, nil)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.button/#tooltipdisabled","title":"<code>tooltipDisabled</code>","text":"<p>A table with header and text that will display as a tooltip when a disabled button is hovered over. Can also be a function that returns a tes3ui.showMessageMenu.params.tooltip.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3ui.showMessageMenu.params.tooltip, fun(callbackParams: table): tes3ui.showMessageMenu.params.tooltip, nil)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/","title":"tes3ui.showMessageMenu.params.tooltip.callbackData","text":""},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/#tes3uishowmessagemenuparamstooltipcallbackdata","title":"tes3ui.showMessageMenu.params.tooltip.callbackData","text":"<p>Layout for the table passed to tooltip callback function of buttons in menu created with <code>tes3ui.showMessageMenu</code> function.</p>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/#properties","title":"Properties","text":""},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/#button","title":"<code>button</code>","text":"<p>The button table of the button this tooltip was created over.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3ui.showMessageMenu.params.button)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/#data","title":"<code>data</code>","text":"<p>The table passed to <code>tes3ui.showMessageMenu</code> when this menu was created.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3ui.showMessageMenu.params)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip.callbackData/#tooltip","title":"<code>tooltip</code>","text":"<p>The actual ui element for the tooltip.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip/","title":"tes3ui.showMessageMenu.params.tooltip","text":""},{"location":"types/tes3ui.showMessageMenu.params.tooltip/#tes3uishowmessagemenuparamstooltip","title":"tes3ui.showMessageMenu.params.tooltip","text":"<p>Layout for the tooltip table passed to <code>tes3ui.showMessageMenu</code> function.</p>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip/#properties","title":"Properties","text":""},{"location":"types/tes3ui.showMessageMenu.params.tooltip/#callback","title":"<code>callback</code>","text":"<p>A function to call when the tooltip has been created. Passes context information. Can be used to make further adjustments to the tooltip.</p> <p>Returns:</p> <ul> <li><code>result</code> (fun(params: tes3ui.showMessageMenu.params.tooltip.callbackData))</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip/#header","title":"<code>header</code>","text":"<p>The header at the top of the tooltip. Can also be a function that returns a string.</p> <p>Returns:</p> <ul> <li><code>result</code> (string, fun(callbackParams: table): string, nil)</li> </ul>"},{"location":"types/tes3ui.showMessageMenu.params.tooltip/#text","title":"<code>text</code>","text":"<p>The text in the body of the tooltip. Can also be a function that returns a string.</p> <p>Returns:</p> <ul> <li><code>result</code> (string, fun(callbackParams: table): string, nil)</li> </ul>"},{"location":"types/tes3uiButton/","title":"tes3uiButton","text":""},{"location":"types/tes3uiButton/#tes3uibutton","title":"tes3uiButton","text":"<p>A structure containing properties specific to buttons.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiButton/#properties","title":"Properties","text":""},{"location":"types/tes3uiButton/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiButton/#idle","title":"<code>idle</code>","text":"<p>The RGB color of the button's text when <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#idleactive","title":"<code>idleActive</code>","text":"<p>The RGB color of the button's text when <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#idledisabled","title":"<code>idleDisabled</code>","text":"<p>The RGB color of the button's text when <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#over","title":"<code>over</code>","text":"<p>The RGB color of the button's text when the button is selected and <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#overactive","title":"<code>overActive</code>","text":"<p>The RGB color of the button's text when the button is selected and <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#overdisabled","title":"<code>overDisabled</code>","text":"<p>The RGB color of the button's text when the button is selected and <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#pressed","title":"<code>pressed</code>","text":"<p>The RGB color of the button's text when the button is pressed and <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#pressedactive","title":"<code>pressedActive</code>","text":"<p>The RGB color of the button's text when the button is pressed and <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#presseddisabled","title":"<code>pressedDisabled</code>","text":"<p>The RGB color of the button's text when the button is pressed and <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiButton/#state","title":"<code>state</code>","text":"<p>The state of the button. Controls which color set to use for its text. Maps to values in <code>tes3.uiState</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiCycleButton/","title":"tes3uiCycleButton","text":""},{"location":"types/tes3uiCycleButton/#tes3uicyclebutton","title":"tes3uiCycleButton","text":"<p>A structure containing properties specific to cycle buttons.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiCycleButton/#properties","title":"Properties","text":""},{"location":"types/tes3uiCycleButton/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiCycleButton/#index","title":"<code>index</code>","text":"<p>The current index of the widget. If this is set, the text will be updated accordingly.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiCycleButton/#options","title":"<code>options</code>","text":"<p>The options available to the cycle button. Setting this value will reset the active index to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiCycleButtonOption[])</li> </ul>"},{"location":"types/tes3uiCycleButton/#text","title":"<code>text</code>","text":"<p>The current text of the button. This will change every time the index changes.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiCycleButton/#value","title":"<code>value</code>","text":"<p>The value associated with the current index. Setting this property will search for an option that has the given value, and change the active index to that option's. If the value does not exist in the available options, it will throw an error.</p> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul>"},{"location":"types/tes3uiCycleButton/#methods","title":"Methods","text":""},{"location":"types/tes3uiCycleButton/#addoption","title":"<code>addOption</code>","text":"<p>Adds a new option to the cycle button.</p> <pre><code>myObject:addOption(option)\n</code></pre> <p>Parameters:</p> <ul> <li><code>option</code> (tes3uiCycleButtonOption): The option to add to the last position.</li> </ul>"},{"location":"types/tes3uiCycleButton/#getindexforvalue","title":"<code>getIndexForValue</code>","text":"<p>Gets the index used by a particular value.</p> <pre><code>local index = myObject:getIndexForValue(value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>value</code> (any): The value to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>index</code> (number): The found index matching the value.</li> </ul>"},{"location":"types/tes3uiCycleButton/#gettextelement","title":"<code>getTextElement</code>","text":"<p>Gets the text element to use.</p> <pre><code>local element = myObject:getTextElement()\n</code></pre> <p>Returns:</p> <ul> <li><code>element</code> (tes3uiElement): The <code>tes3uiElement</code> containing the button's text.</li> </ul>"},{"location":"types/tes3uiCycleButton/#next","title":"<code>next</code>","text":"<p>Cycles the button to the next option.</p> <pre><code>myObject:next()\n</code></pre>"},{"location":"types/tes3uiCycleButton/#previous","title":"<code>previous</code>","text":"<p>Cycles the button to the previous option.</p> <pre><code>myObject:previous()\n</code></pre>"},{"location":"types/tes3uiCycleButtonOption/","title":"tes3uiCycleButtonOption","text":""},{"location":"types/tes3uiCycleButtonOption/#tes3uicyclebuttonoption","title":"tes3uiCycleButtonOption","text":"<p>This table defines an option available for a tes3uiCycleButton. This must at minimum contain <code>text</code>, though it can also contain a <code>value</code> or any arbitrary other data.</p>"},{"location":"types/tes3uiCycleButtonOption/#properties","title":"Properties","text":""},{"location":"types/tes3uiCycleButtonOption/#text","title":"<code>text</code>","text":"<p>The text to use when this option is active.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiCycleButtonOption/#value","title":"<code>value</code>","text":"<p>An optional value associated with this option.</p> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul>"},{"location":"types/tes3uiElement/","title":"tes3uiElement","text":""},{"location":"types/tes3uiElement/#tes3uielement","title":"tes3uiElement","text":"<p>A UI element, the main building block of the UI system. All elements are created with methods on a parent Element.  Elements are very configurable, and have many HTML-like layout features. All layout properties can be set to <code>nil</code> to reset them to the default value, which will deactivate any related layout mode.</p> <p>Elements can have custom data attached using their <code>Property</code>_ key-value store, and specific Elements have specific <code>element.widget</code> accessors to control behaviour.</p>"},{"location":"types/tes3uiElement/#properties","title":"Properties","text":""},{"location":"types/tes3uiElement/#absoluteposalignx","title":"<code>absolutePosAlignX</code>","text":"<p>The horizontal alignment of the element relative to it's parent element. Can be <code>nil</code>. If <code>nil</code>, deactivates behaviour associated with this property. Valid values range from <code>0.0</code> to <code>1.0</code>. Sets the element's <code>positionX</code> to a point relative to the parent element. A value of <code>0.0</code> is equal to the parent element's left content edge, whereas a value of <code>1.0</code> is equal to the parent element's right content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements.</p> <p>Incompatible with and will change the value of <code>ignoreLayoutX</code>.</p> <p>Elements may not respond to <code>widthProportional</code> sizing after this property is set. If you need to use both you should consider testing if it works first.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#absoluteposaligny","title":"<code>absolutePosAlignY</code>","text":"<p>The vertical alignment of the element relative to it's parent element. Can be <code>nil</code>. If <code>nil</code>, deactivates behaviour associated with this property. Valid values range from <code>0.0</code> to <code>1.0</code>. Sets the element's <code>positionY</code> to a point relative to the parent element. A value of <code>0.0</code> is equal to the parent element's top content edge, whereas a value of <code>1.0</code> is equal to the parent element's bottom content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements.</p> <p>Incompatible with and will change the value of <code>ignoreLayoutY</code>.</p> <p>Elements may not respond to <code>heightProportional</code> sizing after this property is set. If you need to use both you should consider testing if it works first.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#alpha","title":"<code>alpha</code>","text":"<p>The element's alpha color. Valid values range from <code>0.0</code> to <code>1.0</code>. Used to composite elements. If you wish to hide an element completely, use <code>disable</code> instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#autoheight","title":"<code>autoHeight</code>","text":"<p>If <code>true</code>, automatically expands element dimensions to fit child elements. Ignores child elements that have <code>ignoreLayoutY</code> set to <code>true</code>. Dimensions are restricted by <code>minWidth</code>, <code>minHeight</code>, <code>maxWidth</code> and <code>maxHeight</code> properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#autowidth","title":"<code>autoWidth</code>","text":"<p>If <code>true</code>, automatically expands element dimensions to fit child elements. Ignores child elements that have <code>ignoreLayoutX</code> set to <code>true</code>. Dimensions are restricted by <code>minWidth</code>, <code>minHeight</code>, <code>maxWidth</code> and <code>maxHeight</code> properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#borderallsides","title":"<code>borderAllSides</code>","text":"<p>The border size in pixels. Border is the extra empty space around an element. Individual border sizes default to using the borderAllSides setting.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#borderbottom","title":"<code>borderBottom</code>","text":"<p>The bottom border size in pixels. When this is set to <code>-1</code>, the <code>borderAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#borderleft","title":"<code>borderLeft</code>","text":"<p>The left border size in pixels. When this is set to <code>-1</code>, the <code>borderAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#borderright","title":"<code>borderRight</code>","text":"<p>The left border size in pixels. When this is set to <code>-1</code>, the <code>borderAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#bordertop","title":"<code>borderTop</code>","text":"<p>The top border size in pixels. When this is set to <code>-1</code>, the <code>borderAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#childalignx","title":"<code>childAlignX</code>","text":"<p>Sets alignment of child elements inside its parent, though it only works in specific conditions. 0.0 = left/top edge touches left/top edge of parent, 0.5 = centred, 1.0 = right/bottom edge touches right/bottom edge of parent. For negative values, there is a special case behaviour: all children but the last will be left-aligned/top-aligned, the last child will be right-aligned/bottom-aligned.</p> <p>Important</p> <p>Child alignment only works if the element has proportional sizing (using widthProportional/heightProportional) and all children use non-proportional sizing (widthProportional and heightProportional are nil).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#childaligny","title":"<code>childAlignY</code>","text":"<p>See childAlignX.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#childoffsetx","title":"<code>childOffsetX</code>","text":"<p>The view offset in pixels, applied to the position of child nodes. Used in scroll panes.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#childoffsety","title":"<code>childOffsetY</code>","text":"<p>See childOffsetX.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#children","title":"<code>children</code>","text":"<p>Read-only. The child elements of this element. This is a copy that does not track changes.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement[])</li> </ul>"},{"location":"types/tes3uiElement/#color","title":"<code>color</code>","text":"<p>The RGB color of the element. An array of 3 numbers with values ranging from <code>0.0</code> to <code>1.0</code>. For menus and rects, it sets the background color. For text, it sets the text color. For images, it multiplies the image by the color.</p> <p>Returns:</p> <ul> <li><code>result</code> (number[])</li> </ul>"},{"location":"types/tes3uiElement/#consumemouseevents","title":"<code>consumeMouseEvents</code>","text":"<p>When <code>true</code>, mouse events over this element are sent to event handlers, or discarded if there is no handler. When <code>false</code>, mouse events go upwards to the first ancestor that can consume mouse events. Useful to set on widget sub-elements. <code>true</code> by default.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#contentpath","title":"<code>contentPath</code>","text":"<p>The file path to the image or model content of this element. Only used if <code>contentType</code> is set to <code>tes3.contentType.image</code> or <code>tes3.contentType.model</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#contenttype","title":"<code>contentType</code>","text":"<p>Read-only. The type of content this <code>tes3uiElement</code> represents. Maps to values in the <code>tes3.contentType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#disabled","title":"<code>disabled</code>","text":"<p>Disables user actions on this element. Widgets may stop accepting mouse and keyboard input while disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#flowdirection","title":"<code>flowDirection</code>","text":"<p>Can have values <code>\"left_to_right\"</code> or <code>\"top_to_bottom\"</code>. These values are available as <code>tes3.flowDirection</code> enumeration. Indicates which direction child elements are laid out.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#font","title":"<code>font</code>","text":"<p>Index of font to use for text.         0 - Magic Cards (default)         1 - Century Sans         2 - Daedric</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#height","title":"<code>height</code>","text":"<p>The element's height in pixels.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#heightproportional","title":"<code>heightProportional</code>","text":"<p>Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible.</p> <p>Bug</p> <p>If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required.</p> <p>Overrides fixed, minimum and maximum sizes unless this value is <code>nil</code> (default).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#id","title":"<code>id</code>","text":"<p>Read-only. The element's ID.  The element can be later accessed by <code>ancestor:findChild(id)</code>. Note that multiple elements may have the same ID, such as subparts of a widget, or list items. Therefore, you may think of ids as an element class identifier.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#ignorelayoutx","title":"<code>ignoreLayoutX</code>","text":"<p>If <code>true</code>, the element's <code>positionX</code> can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of <code>absolutePosAlignX</code>.</p> <p>Elements that bypass parent layout will be ignored when automatically determing the parent's width. See <code>autoWidth</code> for more information.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#ignorelayouty","title":"<code>ignoreLayoutY</code>","text":"<p>If <code>true</code>, the element's <code>positionY</code> can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of <code>absolutePosAlignY</code>.</p> <p>Elements that bypass parent layout will be ignored when automatically determing the parent's height. See <code>autoHeight</code> for more information.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#imagescalex","title":"<code>imageScaleX</code>","text":"<p>Image scaling multipliers. Only applies to image elements. <code>0</code> disables scaling and displays the original image. Negative numbers will mirror and scale along this axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#imagescaley","title":"<code>imageScaleY</code>","text":"<p>Image scaling multipliers. Only applies to image elements. <code>0</code> disables scaling and displays the original image. Negative numbers will mirror and scale along this axis.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#justifytext","title":"<code>justifyText</code>","text":"<p>Can have values <code>\"left\"</code>, <code>\"center\"</code>, or <code>\"right\"</code>. Controls text justification. Maps to values in the <code>tes3.justifyText</code> table. To work correctly for center/right justification, <code>wrapText</code> must be <code>true</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#maxheight","title":"<code>maxHeight</code>","text":"<p>The maximum height for auto-size layout and resizable frames.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#maxwidth","title":"<code>maxWidth</code>","text":"<p>The maximum width for auto-size layout and resizable frames.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#minheight","title":"<code>minHeight</code>","text":"<p>The minimum height for auto-size layout and resizable frames.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#minwidth","title":"<code>minWidth</code>","text":"<p>The minimum width for auto-size layout and resizable frames.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#name","title":"<code>name</code>","text":"<p>Read-only. The element's name, taken from the name registered for the ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#paddingallsides","title":"<code>paddingAllSides</code>","text":"<p>The padding size in pixels. Padding is the blank space between the edge of an element and its contents. Individual padding sizes default to <code>-1</code>, making it use the <code>paddingAllSides</code> setting.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#paddingbottom","title":"<code>paddingBottom</code>","text":"<p>The bottom padding size in pixels. When this is set to <code>-1</code>, the <code>paddingAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#paddingleft","title":"<code>paddingLeft</code>","text":"<p>The left padding size in pixels. When this is set to <code>-1</code>, the <code>paddingAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#paddingright","title":"<code>paddingRight</code>","text":"<p>Integer number. Right padding size in pixels. When this is set to <code>-1</code>, the paddingAllSides setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#paddingtop","title":"<code>paddingTop</code>","text":"<p>The top padding size in pixels. When this is set to <code>-1</code>, the <code>paddingAllSides</code> setting is used for this side instead.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#parent","title":"<code>parent</code>","text":"<p>Read-only. A reference to the parent element.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#positionx","title":"<code>positionX</code>","text":"<p>The element's horizontal position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless <code>ignoreLayoutX</code> is <code>true</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#positiony","title":"<code>positionY</code>","text":"<p>The element's vertical position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless <code>ignoreLayoutY</code> is <code>true</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#rawtext","title":"<code>rawText</code>","text":"<p>The raw value of the element's text. This, unlike the normal text property, will not directly read widget information or handle the removal of the positional cursor.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#repeatkeys","title":"<code>repeatKeys</code>","text":"<p>Controls if there is repeating text input when keys are held down. <code>true</code> by default.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#scalemode","title":"<code>scaleMode</code>","text":"<p>When set to <code>true</code> on image and NIF elements, the image or NIF is scaled to fit the element <code>width</code> and <code>height</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#scenenode","title":"<code>sceneNode</code>","text":"<p>Read-only. Underlying access to the scene graph responsible for this element.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3uiElement/#text","title":"<code>text</code>","text":"<p>The element's text. Text input can be read by accessing this property.</p> <p>Tip</p> <p>If your element's text is a number, you need to manually convert it to string using <code>tostring()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#texture","title":"<code>texture</code>","text":"<p>The underlying texture for the element. This assumes that the element is of an element type. Setting this value will change the element to an image type.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture)</li> </ul>"},{"location":"types/tes3uiElement/#type","title":"<code>type</code>","text":"<p>Read-only. The type of content this <code>tes3uiElement</code> represents. This is an expanded set of the options available from the <code>contentType</code> property. Maps to values in <code>tes3.uiElementType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiElement/#visible","title":"<code>visible</code>","text":"<p>Controls if the element is visible.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#widget","title":"<code>widget</code>","text":"<p>Access to element specific properties. This will be <code>nil</code> if there are no element specific properties. See the return types and the create* functions for more details.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiWidget, nil)</li> </ul>"},{"location":"types/tes3uiElement/#width","title":"<code>width</code>","text":"<p>The element's width in pixels.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiElement/#widthproportional","title":"<code>widthProportional</code>","text":"<p>Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible.</p> <p>Bug</p> <p>If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required.</p> <p>Overrides fixed, minimum and maximum sizes unless this value is <code>nil</code> (default).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiElement/#wraptext","title":"<code>wrapText</code>","text":"<p>Controls text wrapping. Setting this to <code>true</code> will also set <code>heightProportional</code> to <code>1.0</code>, which is required for wrapping text to adjust to its container size.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#methods","title":"Methods","text":""},{"location":"types/tes3uiElement/#copy","title":"<code>copy</code>","text":"<p>Copies this element to a new parent. This function can have unintended consequences. The specifics of what exact elements are being copied is important.</p> <pre><code>local copy = myObject:copy({ to = ..., copyChildren = ..., copyProperties = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>to</code> (tes3uiElement): The element to create the copy in. Will be the parent of the newly created element.</li> <li><code>copyChildren</code> (boolean): Default: <code>true</code>. If <code>true</code>, all children will also be copied to the newly created element.</li> <li><code>copyProperties</code> (boolean): Default: <code>true</code>. If <code>true</code>, all properties will be copied to the newly created element.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>copy</code> (tes3uiElement): The created copy.</li> </ul>"},{"location":"types/tes3uiElement/#createblock","title":"<code>createBlock</code>","text":"<p>Creates an empty block container inside the element. Used to group and layout elements.</p> <pre><code>local result = myObject:createBlock({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createbutton","title":"<code>createButton</code>","text":"<p>Creates a clickable button. Register the <code>mouseClick</code> event to capture a button press.</p> <p>Button specific properties can be accessed through the <code>widget</code> property. The widget type for buttons is <code>tes3uiButton</code>.</p> <pre><code>local result = myObject:createButton({ id = ..., text = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): Optional. The text to add to the button. It will highlight on mouseover like a text select widget.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createcyclebutton","title":"<code>createCycleButton</code>","text":"<p>Creates a clickable button, whose text changes linearly through options as it is clicked. Register the <code>valueChanged</code> event for when the option is cycled or changed via script.</p> <p>Button specific properties can be accessed through the <code>widget</code> property. The widget type for buttons is <code>tes3uiCycleButton</code>.</p> <pre><code>local result = myObject:createCycleButton({ id = ..., options = ..., index = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>options</code> (tes3uiCycleButtonOption[]): An array of options for the button to cycle through. At minimum the option must have a <code>text</code> property defined, to show on the button. If a <code>value</code> is provided, it can be accessed through the <code>.widget</code>'s <code>.value</code> property.</li> <li><code>index</code> (number): Optional. The index selected by default.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createdivider","title":"<code>createDivider</code>","text":"<p>Creates a textured horizontal divider line, as used in the magic and stat menus. Scales automatically to the container width.</p> <pre><code>local result = myObject:createDivider({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createfillbar","title":"<code>createFillBar</code>","text":"<p>Creates a horizontal quantity indicator bar.</p> <p>Fillbar specific properties can be accessed through the <code>widget</code> property. The widget type for fillbars is <code>tes3uiFillBar</code>.</p> <pre><code>local result = myObject:createFillBar({ id = ..., current = ..., max = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>current</code> (number): Optional. The current value of the fillbar.</li> <li><code>max</code> (number): Optional. The maximum value of the fillbar.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createhorizontalscrollpane","title":"<code>createHorizontalScrollPane</code>","text":"<p>Creates a horizontally scrolling pane.</p> <p>Scroll pane specific properties can be accessed through the <code>widget</code> property. The widget type for scroll panes is <code>tes3uiScrollPane</code>.</p> <pre><code>local result = myObject:createHorizontalScrollPane({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createhyperlink","title":"<code>createHyperlink</code>","text":"<p>Creates a clickable text, colored as a link. When the link is clicked, a URL is opened in the player's browser. If the <code>confirm</code> property is set, a confirmation prompt is opened first.</p> <p>Hyperlink-specific properties can be accessed through the <code>widget</code> property. The widget type for hyperlinks is <code>tes3uiHyperlink</code>.</p> <pre><code>local element = myObject:createHyperlink({ id = ..., text = ..., url = ..., confirm = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): The text to add to the hyperlink.</li> <li><code>url</code> (string): The URL to open when the text is clicked.</li> <li><code>confirm</code> (boolean): Default: <code>true</code>. If true, a confirmation prompt will be shown before any URL is opened.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>element</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createhypertext","title":"<code>createHypertext</code>","text":"<p>Creates a text area with clickable words as links. Usage is still under research.</p> <pre><code>local result = myObject:createHypertext({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createimage","title":"<code>createImage</code>","text":"<p>Creates an image element from a texture file. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height.</p> <pre><code>local result = myObject:createImage({ id = ..., path = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>path</code> (string): Optional. An image path. This path is relative to <code>Data Files</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createimagebutton","title":"<code>createImageButton</code>","text":"<p>Creates an interactive button composed of images for the idle, over, and pressed states. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height.</p> <pre><code>local result = myObject:createImageButton({ id = ..., idle = ..., over = ..., pressed = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>idle</code> (string): The path to the idle image. This path is relative to <code>Data Files</code>.</li> <li><code>over</code> (string): The path to the mouse hover image. This path is relative to <code>Data Files</code>.</li> <li><code>pressed</code> (string): The path to the mouse pressed image. This path is relative to <code>Data Files</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createlabel","title":"<code>createLabel</code>","text":"<p>Creates a text label. It defaults to displaying all text on a single line. To get a multi-line label, set <code>wrapText</code> to <code>true</code>. The element is created with <code>autoWidth</code> and <code>autoHeight</code> turned on.</p> <pre><code>local result = myObject:createLabel({ id = ..., text = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): Default: <code>(nil)</code>. The text to display.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createnif","title":"<code>createNif</code>","text":"<p>Creates a NIF model from a file. Still under research.</p> <pre><code>local result = myObject:createNif({ id = ..., text = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): A model path. This path is relative to <code>Data Files</code>.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createparagraphinput","title":"<code>createParagraphInput</code>","text":"<p>Creates a multi-line text input element, with line wrapping on. To receive input the keyboard must be captured with <code>tes3ui.acquireTextInput(element)</code>. Read the input with the <code>text</code> property. Write an initial value to edit by setting the <code>text</code> property.</p> <p>Paragraph input specific properties can be accessed through the <code>widget</code> property. The widget type for paragraph inputs is <code>tes3uiParagraphInput</code>.</p> <pre><code>local result = myObject:createParagraphInput({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createrect","title":"<code>createRect</code>","text":"<p>Creates a filled rectangle. The rectangle is displayed as filled with the element's color. It supports alpha compositing.</p> <pre><code>local result = myObject:createRect({ id = ..., color = ..., randomizeColor = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>color</code> (tes3vector3, table): Optional. The fill color for the element.</li> <li><code>randomizeColor</code> (boolean): Default: <code>false</code>. If true, the creation color will be randomized.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createslider","title":"<code>createSlider</code>","text":"<p>Creates a horizontal slider.</p> <p>Slider specific properties can be accessed through the <code>widget</code> property. The widget type for sliders is <code>tes3uiSlider</code>.</p> <pre><code>local result = myObject:createSlider({ id = ..., current = ..., max = ..., step = ..., jump = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>current</code> (number): The current value of the slider.</li> <li><code>max</code> (number): The maximum value of the slider.</li> <li><code>step</code> (number): Default: <code>1</code>. The change in value when clicking the left and right arrow buttons.</li> <li><code>jump</code> (number): Default: <code>5</code>. The change in value when clicking into the empty areas next to the slider handle.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createslidervertical","title":"<code>createSliderVertical</code>","text":"<p>Creates a vertical slider.</p> <p>Slider specific properties can be accessed through the <code>widget</code> property. The widget type for sliders is <code>tes3uiSlider</code>.</p> <pre><code>local result = myObject:createSliderVertical({ id = ..., current = ..., max = ..., step = ..., jump = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>current</code> (number): The current value of the slider.</li> <li><code>max</code> (number): The maximum value of the slider.</li> <li><code>step</code> (number): Default: <code>1</code>. The change in value when clicking the left and right arrow buttons.</li> <li><code>jump</code> (number): Default: <code>5</code>. The change in value when clicking into the empty areas next to the slider handle.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createtextinput","title":"<code>createTextInput</code>","text":"<p>Creates a single line text input element. To receive input the keyboard must be captured with <code>tes3ui.acquireTextInput(element)</code>. Read the input with the <code>text</code> property. Write an initial value to display by setting the <code>text</code> property; that value will be cleared on the first keypress.</p> <p>Text input specific properties can be accessed through the <code>widget</code> property. The widget type for text inputs is <code>tes3uiTextInput</code>.</p> <pre><code>local result = myObject:createTextInput({ id = ..., text = ..., placeholderText = ..., numeric = ..., autoFocus = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): Optional. The initial text to use for the input.</li> <li><code>placeholderText</code> (string): Optional. Placeholder text for the input. If the element is ever made empty, this will be displayed instead in the disabled text color.</li> <li><code>numeric</code> (boolean): Default: <code>false</code>. If true, only numbers can be put into the input. The text value of the element will still be a string, and need to be converted using <code>tonumber</code>.</li> <li><code>autoFocus</code> (boolean): Default: <code>false</code>. If true, the input will be automatically focused after creation.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createtextselect","title":"<code>createTextSelect</code>","text":"<p>Creates a selectable line of text, with configurable hover, click, and disabled colors. Can be used to create a list box by placing them in a ScrollPane.</p> <p>Text select specific properties can be accessed through the <code>widget</code> property. The widget type for text selects is <code>tes3uiTextSelect</code>.</p> <pre><code>local result = myObject:createTextSelect({ id = ..., text = ..., state = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> <li><code>text</code> (string): Optional. The text to display.</li> <li><code>state</code> (number): Default: <code>tes3.uiState.normal</code>. The initial interaction state.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createthinborder","title":"<code>createThinBorder</code>","text":"<p>Creates a styled thin border element. Any content should be created as children of this border.</p> <pre><code>local result = myObject:createThinBorder({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#createverticalscrollpane","title":"<code>createVerticalScrollPane</code>","text":"<p>Creates a vertically scrolling pane. Useful as a list box.</p> <p>Scroll pane specific properties can be accessed through the <code>widget</code> property. The widget type for scroll panes is <code>tes3uiScrollPane</code>.</p> <pre><code>local result = myObject:createVerticalScrollPane({ id = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table): Optional.<ul> <li><code>id</code> (string, number): Optional. An identifier to help find this element later.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul> Example: Sorting the child elements in a scroll pane <pre><code>local myMenu -- Created before\n---@cast myMenu tes3uiElement\n\nlocal pane = myMenu:createVerticalScrollPane{ id = \"sortedPane\" }\npane:createButton{ text = \"V\" }\npane:createButton{ text = \"S\" }\npane:createButton{ text = \"B\" }\npane:getContentElement():sortChildren(function(a, b)\n    return a.text &lt; b.text\nend)\n</code></pre>"},{"location":"types/tes3uiElement/#destroy","title":"<code>destroy</code>","text":"<p>Deletes an element and all its child elements. If any element is bound to text input by <code>tes3ui.acquireTextInput</code>_, the input is automatically released.</p> <pre><code>myObject:destroy()\n</code></pre>"},{"location":"types/tes3uiElement/#destroychildren","title":"<code>destroyChildren</code>","text":"<p>Deletes all the child elements of this element. If any element is bound to text input by <code>tes3ui.acquireTextInput</code>_, the input is automatically released.</p> <pre><code>myObject:destroyChildren()\n</code></pre>"},{"location":"types/tes3uiElement/#findchild","title":"<code>findChild</code>","text":"<p>Finds a child element matching the <code>id</code> argument. Searches children recursively. Returns the first child element with a matching id, or <code>nil</code> if no match found.</p> <pre><code>local result = myObject:findChild(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (string, number): The id to search for.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#forwardevent","title":"<code>forwardEvent</code>","text":"<p>Forwards an event to the original Morrowind event handler, using this element as a source. This may be optionally called at any point in a callback. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. </p> <pre><code>myObject:forwardEvent(id)\n</code></pre> <p>Parameters:</p> <ul> <li><code>id</code> (tes3uiEventData): The original UI event.</li> </ul>"},{"location":"types/tes3uiElement/#getcontentelement","title":"<code>getContentElement</code>","text":"<p>Returns the descendant element that creation functions used on this element will place children into, or the calling element if there is no specific descendant for children.</p> <p>Some widgets like ScrollPanes are built of multiple layers of elements. When an element is created in a complex widget, it is automatically placed as a child of a content element, but other functions do not access this content element directly. This function finds this content container for any element, so that changing layout and accessing children is possible. For simple elements, the calling element will be returned so that there is always a valid container element.</p> <pre><code>local result = myObject:getContentElement()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#getluadata","title":"<code>getLuaData</code>","text":"<p>Gets an arbitrary lua value from the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and <code>setLuaData</code>.</p> <pre><code>local result = myObject:getLuaData(key)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (string): The key for the lua data.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (any)</li> </ul>"},{"location":"types/tes3uiElement/#getpropertybool","title":"<code>getPropertyBool</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a boolean value, defaulting to false if the property was not set.</p> <pre><code>local value = myObject:getPropertyBool(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (boolean): The value of the property, defaulting to false if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#getpropertycallback","title":"<code>getPropertyCallback</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a number value, defaulting to <code>0</code> if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood.</p> <pre><code>local value = myObject:getPropertyCallback(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (number): The value of the property, defaulting to <code>0</code> if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#getpropertyfloat","title":"<code>getPropertyFloat</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a floating-point value, defaulting to <code>0</code> if the property was not set.</p> <pre><code>local value = myObject:getPropertyFloat(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (number): The value of the property, defaulting to <code>0</code> if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#getpropertyint","title":"<code>getPropertyInt</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an integer value, defaulting to <code>0</code> if the property was not set.</p> <pre><code>local value = myObject:getPropertyInt(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (integer): The value of the property, defaulting to <code>0</code> if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#getpropertyobject","title":"<code>getPropertyObject</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an object value, defaulting to <code>nil</code> if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood.</p> <pre><code>local object = myObject:getPropertyObject(property, typeCast)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> <li><code>typeCast</code> (string, nil): Default: <code>\"tes3baseObject\"</code>. The casting of the property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>object</code> (any): The value of the property, defaulting to <code>nil</code> if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#getpropertyproperty","title":"<code>getPropertyProperty</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property whose value is, itself, a property, defaulting to <code>0</code> if the property was not set.</p> <pre><code>local value = myObject:getPropertyProperty(property)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> </ul> <p>Returns:</p> <ul> <li><code>value</code> (number): The value of the property, defaulting to <code>0</code> if the property was not set.</li> </ul>"},{"location":"types/tes3uiElement/#gettoplevelmenu","title":"<code>getTopLevelMenu</code>","text":"<p>Finds the parent menu containing the element. Useful for finding the correct menu to run layout updates on.</p> <pre><code>local result = myObject:getTopLevelMenu()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiElement/#loadmenuposition","title":"<code>loadMenuPosition</code>","text":"<p>Restores the menu's position and size information from the Morrowind.ini file. This may only be called on top-level parents.</p> <pre><code>myObject:loadMenuPosition()\n</code></pre>"},{"location":"types/tes3uiElement/#move","title":"<code>move</code>","text":"<p>Copies this element to a new parent, then destroys this element. This function can have unintended consequences. The specifics of what exact elements are being copied is important.</p> <pre><code>local copy = myObject:move(to)\n</code></pre> <p>Parameters:</p> <ul> <li><code>to</code> (tes3uiElement): Where to create the copy.</li> </ul> <p>Returns:</p> <ul> <li><code>copy</code> (tes3uiElement): The created copy.</li> </ul>"},{"location":"types/tes3uiElement/#register","title":"<code>register</code>","text":"<p>Sets an <code>event</code> handler, which can add or override an existing event handler. The use of <code>registerBefore</code> or <code>registerAfter</code> is recommended if you do not want to replace the existing event handler. The eventID can be a standard <code>event</code> name, or an event specific to an element class. These can be accessed through <code>tes3.uiEvent</code> for convenience. The callback receives an argument with the event data. See below for details.</p> <p>The original Morrowind callback is captured and can be invoked with the <code>forwardEvent</code> method on the event argument. If there is an existing Lua callback, it is replaced.</p> <pre><code>Standard events:\n    **mouseLeave**\n        Mouse cursor moving outside an element. Triggers once.\n    **mouseOver**\n        Mouse cursor moving over an element. Triggers once.\n    **mouseDown**\n        Left mouse button down over an element.\n    **mouseClick**\n        Left mouse button up over an element, after a mouseDown over the element.\n    **mouseScrollUp**\n        ..\n    **mouseScrollDown**\n        Mouse wheel scrolling.\n    **mouseDoubleClick**\n        Standard double-click.\n    **mouseStillIdle**\n        Mouse cursor positioned outside an element. Triggers every frame.\n    **mouseStillOver**\n        Mouse cursor positioned over an element. Triggers every frame.\n    **mouseStillPressed**\n        Mouse cursor positioned over an element, after a mouseDown over the element. Triggers every frame.\n    **mouseStillPressedOutside**\n        Apparently not working in the engine. Mouse cursor positioned outside an element, after a mouseDown over the element. Triggers every frame.\n    **mouseRelease**\n        Left mouse button up over an element.\n    **keyPress**\n        A raw key press.\n    **keyEnter**\n        The Return key is pressed.\n    **help**\n        On mouseover, but also marking the element as having a tooltip. Create a tooltip within the callback using the `tes3ui.createTooltipMenu` function.\n    **focus**\n        When a menu is clicked on, and moved on top of other menus.\n    **unfocus**\n        Just before another menu is clicked on, or a widget in that menu receives an event, or when the menu mode is toggled off. You may return false from this event to prevent the menu from being deselected, and to prevent leaving menu mode.\n    **preUpdate**\n        Before the menu layout is updated.\n    **update**\n        After the menu layout is updated.\n    **destroy**\n        When the UI element is destroyed, before any data or children are destroyed.\n\nWidget-specific events:\n    Slider:\n        **PartScrollBar_changed**\n            Triggers on value change; moving the slider is not enough if the value is the same.\n</code></pre>"},{"location":"types/tes3uiElement/#event-forwarding","title":"Event forwarding","text":"<p>The original Morrowind event handler is saved when you first register an event. It may be optionally invoked with the <code>forwardEvent</code> method.  Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback.</p> <p>Example <pre><code>local function onClick(e)\n    -- pre-event code\n    e.source:forwardEvent(e)\n    -- post-event code\nend\n\nlocal button = menu:findChild(\"MenuExample_Ok\")\nbutton:register(\"mouseClick\", onClick)\n</code></pre></p>"},{"location":"types/tes3uiElement/#event-handler","title":"Event handler","text":"<p>The standard type signature for events.</p> <pre><code>`boolean`_ eventHandler(**EventData** e)\n    Returns: `optional`\n        Returning `false` may cancel an interaction for certain events. e.g. unfocus\n\n    EventData:\n        **source** (`Element`_)\n            The source element of the event.\n\n        **id** (`number`_)\n            The numeric id of the event type.\n\n        **widget** (`Element`_)\n            The widget element that the source belongs to, if the element is a sub-part of a widget. May not be accurate if the element is not a sub-part.\n\n        **data0** (`number`_)\n            ..\n\n        **data1** (`number`_)\n            Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the `scan code`_.\n\n        **relativeX** (`number`_)\n            ..\n\n        **relativeY** (`number`_)\n            For mouse events only. X and Y coordinates of the pointer relative to the top-left of the element.\n</code></pre> <pre><code>myObject:register(eventID, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id. Maps to values in <code>tes3.uiEvent</code>.</li> <li><code>callback</code> (function): The callback function.</li> </ul>"},{"location":"types/tes3uiElement/#registerafter","title":"<code>registerAfter</code>","text":"<p>Sets an <code>event</code> handler to run after any existing event handler on the element. Can be any event usable with <code>register</code>. The callback receives an argument with the event data. See <code>register</code> for details.</p> <pre><code>myObject:registerAfter(eventID, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id.</li> <li><code>callback</code> (function): The callback function.</li> </ul>"},{"location":"types/tes3uiElement/#registerbefore","title":"<code>registerBefore</code>","text":"<p>Sets an <code>event</code> handler to run before any existing event handler on the element. Can be any event usable with <code>register</code>. The callback receives an argument with the event data. See <code>register</code> for details.</p> <pre><code>myObject:registerBefore(eventID, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id.</li> <li><code>callback</code> (function): The callback function.</li> </ul>"},{"location":"types/tes3uiElement/#reorderchildren","title":"<code>reorderChildren</code>","text":"<p>Moves the layout order of the children of this element. <code>count</code> elements are taken from starting child <code>Element</code> or index (0-based) <code>moveFrom</code>, and moved before the child <code>Element</code> or index (0-based) <code>insertBefore</code>. If <code>count</code> is -1, all children after <code>moveFrom</code> are moved. If any index is a negative number, then the index represents a distance from the end of the child list.</p> <p>Returns <code>true</code> if the operation succeeded, or <code>false</code> if at least one argument was invalid.</p> <pre><code>local result = myObject:reorderChildren(insertBefore, moveFrom, count)\n</code></pre> <p>Parameters:</p> <ul> <li><code>insertBefore</code> (tes3uiElement, number): The insertion point (or its 0-based child index).</li> <li><code>moveFrom</code> (tes3uiElement, number): The first child (or 0-based child index) to be moved.</li> <li><code>count</code> (number): The number of child elements to move.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#savemenuposition","title":"<code>saveMenuPosition</code>","text":"<p>Saves the menu's position and size information to the Morrowind.ini file. This may only be called on top-level parents. Note that most menus save their position automatically.</p> <pre><code>myObject:saveMenuPosition()\n</code></pre>"},{"location":"types/tes3uiElement/#setluadata","title":"<code>setLuaData</code>","text":"<p>Sets an arbitrary lua value for the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and <code>getLuaData</code>.</p> <pre><code>myObject:setLuaData(key, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>key</code> (string): The key for the lua data.</li> <li><code>value</code> (any): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertybool","title":"<code>setPropertyBool</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a boolean value.</p> <pre><code>myObject:setPropertyBool(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to set.</li> <li><code>value</code> (boolean): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertycallback","title":"<code>setPropertyCallback</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a callback value, represented as a number. This function can be dangerous to use, and can lead to crashes if not properly understood.</p> <pre><code>myObject:setPropertyCallback(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to set.</li> <li><code>value</code> (number): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertyfloat","title":"<code>setPropertyFloat</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a floating-point value.</p> <pre><code>myObject:setPropertyFloat(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to set.</li> <li><code>value</code> (number): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertyint","title":"<code>setPropertyInt</code>","text":"<p>Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to an integer value.</p> <pre><code>myObject:setPropertyInt(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to set.</li> <li><code>value</code> (number): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertyobject","title":"<code>setPropertyObject</code>","text":"<p>Sets a property value with <code>prop</code> as the property key. Properties are named variables attached to an element. Gets a property value with <code>propName</code> as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties.</p> <pre><code>myObject:setPropertyObject(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> <li><code>value</code> (any): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#setpropertyproperty","title":"<code>setPropertyProperty</code>","text":"<p>Properties are named variables attached to an element. Sets a property value with <code>property</code> as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. This function sets a property whose value is, itself, a property.</p> <pre><code>myObject:setPropertyProperty(property, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>property</code> (number, string): The property to get.</li> <li><code>value</code> (number, string): The value to set.</li> </ul>"},{"location":"types/tes3uiElement/#sortchildren","title":"<code>sortChildren</code>","text":"<p>Reorders the element's children given a sorting function.</p> <pre><code>myObject:sortChildren(sortFunction)\n</code></pre> <p>Parameters:</p> <ul> <li><code>sortFunction</code> (function): The function to sort with. Like most sorting functions, this is given two arguments to compare.</li> </ul>"},{"location":"types/tes3uiElement/#triggerevent","title":"<code>triggerEvent</code>","text":"<p>Triggers a UI event on an element, either using supplied event data, or by constructing new event data using <code>eventName</code>. <code>eventName</code> is the same as used in <code>register</code>.</p> <pre><code>myObject:triggerEvent(eventID)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (tes3uiEventData, string): The event, or event ID.</li> </ul>"},{"location":"types/tes3uiElement/#unregister","title":"<code>unregister</code>","text":"<p>Unregisters an <code>event</code> handler.</p> <pre><code>local wasUnregistered = myObject:unregister(eventID)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id.</li> </ul> <p>Returns:</p> <ul> <li><code>wasUnregistered</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#unregisterafter","title":"<code>unregisterAfter</code>","text":"<p>Unregisters a function previously registered using <code>:registerAfter</code>.</p> <pre><code>local wasUnregistered = myObject:unregisterAfter(eventID, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id.</li> <li><code>callback</code> (function): The callback function.</li> </ul> <p>Returns:</p> <ul> <li><code>wasUnregistered</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#unregisterbefore","title":"<code>unregisterBefore</code>","text":"<p>Unregisters a function previously registered using <code>:registerBefore</code>.</p> <pre><code>local wasUnregistered = myObject:unregisterBefore(eventID, callback)\n</code></pre> <p>Parameters:</p> <ul> <li><code>eventID</code> (string): The event id.</li> <li><code>callback</code> (function): The callback function.</li> </ul> <p>Returns:</p> <ul> <li><code>wasUnregistered</code> (boolean)</li> </ul>"},{"location":"types/tes3uiElement/#updatelayout","title":"<code>updateLayout</code>","text":"<p>Updates a menu's element layout and all child elements. Needs to be called on a top level menu when any elements contained in it are added, moved or resized.</p> <pre><code>myObject:updateLayout()\n</code></pre>"},{"location":"types/tes3uiEventData/","title":"tes3uiEventData","text":""},{"location":"types/tes3uiEventData/#tes3uieventdata","title":"tes3uiEventData","text":"<p>Contains information from a standard UI callback. This is the parameter passed to callbacks when using <code>:register</code>, <code>:registerBefore</code>, or <code>:registerAfter</code>.</p>"},{"location":"types/tes3uiEventData/#properties","title":"Properties","text":""},{"location":"types/tes3uiEventData/#data0","title":"<code>data0</code>","text":"<p>Read-only. Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the scan code.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiEventData/#data1","title":"<code>data1</code>","text":"<p>Read-only. Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the scan code.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiEventData/#forwardsource","title":"<code>forwardSource</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiEventData/#id","title":"<code>id</code>","text":"<p>Read-only. The ID of the event that is being triggered.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiEventData/#relativex","title":"<code>relativeX</code>","text":"<p>Read-only. For mouse-related events, this is the relative horizontal position for the current element.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3uiEventData/#relativey","title":"<code>relativeY</code>","text":"<p>Read-only. For mouse-related events, this is the relative vertical position for the current element.</p> <p>Returns:</p> <ul> <li><code>result</code> (number, nil)</li> </ul>"},{"location":"types/tes3uiEventData/#source","title":"<code>source</code>","text":"<p>Read-only. The element that owns the event.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiEventData/#widget","title":"<code>widget</code>","text":"<p>Read-only. No description yet available.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiFillBar/","title":"tes3uiFillBar","text":""},{"location":"types/tes3uiFillBar/#tes3uifillbar","title":"tes3uiFillBar","text":"<p>A structure containing properties specific to fillbars.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiFillBar/#properties","title":"Properties","text":""},{"location":"types/tes3uiFillBar/#current","title":"<code>current</code>","text":"<p>The current value. The size of the filled portion is determined by dividing <code>current</code> by <code>max</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFillBar/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiFillBar/#fillalpha","title":"<code>fillAlpha</code>","text":"<p>The alpha value of <code>fillColor</code>. Setting this will also set the alpha value of <code>fillColor</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFillBar/#fillcolor","title":"<code>fillColor</code>","text":"<p>The RGB color of the filled portion. An array of 3 floats with value range [0.0, 1.0]. Does not affect the background or the border.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiFillBar/#max","title":"<code>max</code>","text":"<p>The maximum value. The size of the filled portion is determined by dividing <code>current</code> by <code>max</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFillBar/#normalized","title":"<code>normalized</code>","text":"<p>The current value in range [0.0, 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFillBar/#showtext","title":"<code>showText</code>","text":"<p>If <code>true</code>, shows a centered text with the format <code>current/max</code> inside the fillbar.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiFontColor/","title":"tes3uiFontColor","text":""},{"location":"types/tes3uiFontColor/#tes3uifontcolor","title":"tes3uiFontColor","text":"<p>Contains color information of a font.</p>"},{"location":"types/tes3uiFontColor/#properties","title":"Properties","text":""},{"location":"types/tes3uiFontColor/#b","title":"<code>b</code>","text":"<p>Blue color value, in range [0.0, 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFontColor/#g","title":"<code>g</code>","text":"<p>Green color value, in range [0.0, 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiFontColor/#r","title":"<code>r</code>","text":"<p>Red color value, in range [0.0, 1.0].</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiHyperlink/","title":"tes3uiHyperlink","text":""},{"location":"types/tes3uiHyperlink/#tes3uihyperlink","title":"tes3uiHyperlink","text":"<p>A structure containing properties specific to hyperlinks.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiHyperlink/#properties","title":"Properties","text":""},{"location":"types/tes3uiHyperlink/#confirm","title":"<code>confirm</code>","text":"<p>If true, a confirmation prompt will be shown before any URLs are opened.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiHyperlink/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiHyperlink/#url","title":"<code>url</code>","text":"<p>The URL to open if the element is clicked.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiHyperlink/#methods","title":"Methods","text":""},{"location":"types/tes3uiHyperlink/#openurl","title":"<code>openURL</code>","text":"<p>Opens a contained URL. If the <code>confirm</code> property is set, a modal prompt will be given to confirm the user wants to open the URL.</p> <pre><code>myObject:openURL()\n</code></pre>"},{"location":"types/tes3uiMenuController/","title":"tes3uiMenuController","text":""},{"location":"types/tes3uiMenuController/#tes3uimenucontroller","title":"tes3uiMenuController","text":"<p>The controller responsible for the menu system.</p>"},{"location":"types/tes3uiMenuController/#properties","title":"Properties","text":""},{"location":"types/tes3uiMenuController/#fogofwardisabled","title":"<code>fogOfWarDisabled</code>","text":"<p>A flag that controls whether the local map menu renders fog of war.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiMenuController/#fontcolors","title":"<code>fontColors</code>","text":"<p>Read-only. A 1-indexed table with 49 <code>tes3uiFontColor</code> objects for all different in-game uses for fonts.</p> <p>Namely: <code>normal</code>, <code>normal_over</code>, <code>normal_pressed</code>, <code>active</code>, <code>active_over</code>, <code>active_pressed</code>, <code>disabled</code>, <code>disabled_over</code>, <code>disabled_pressed</code>, <code>link</code>, <code>link_over</code>, <code>link_pressed</code>, <code>journal</code>, <code>journal_over</code>, <code>journal_pressed</code>, <code>journal_topic</code>, <code>journal_topic_over</code>, <code>journal_topic_pressed</code>, <code>journal_finished_quest_topic</code>, <code>journal_finished_quest_topic_over</code>, <code>journal_finished_quest_topic_pressed</code>, <code>answer</code>, <code>answer_over</code>, <code>answer_pressed</code>, <code>header</code>, <code>notify</code>, <code>big_normal</code>, <code>big_normal_over</code>, <code>big_normal_pressed</code>, <code>big_link</code>, <code>big_link_over</code>, <code>big_link_pressed</code>, <code>big_answer</code>, <code>big_answer_over</code>, <code>big_answer_pressed</code>, <code>big_header</code>, <code>big_notify</code>, <code>background</code>, <code>focus</code>, <code>npc_health</code>, <code>health</code>, <code>magic</code>, <code>fatigue</code>, <code>misc</code>, <code>weapon_fill</code>, <code>magic_fill</code>, <code>positive</code>, <code>negative</code>, <code>count</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiFontColor[])</li> </ul>"},{"location":"types/tes3uiMenuController/#helpdelay","title":"<code>helpDelay</code>","text":"<p>Read-only. Delay in seconds before help tooltip appears. Corresponds to the Menu Help Delay slider in Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiMenuController/#helproot","title":"<code>helpRoot</code>","text":"<p>Read-only. The root element of the help UI layer. The help UI layer will always be drawn after the main UI layer and therefore all elements on it will be shown in front of elements of the main UI layer. This element contains top level menus like tooltips, message boxes and more as direct children. Prefer using the <code>tes3ui.findHelpLayerMenu()</code> function to find one of this element's direct children.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiMenuController/#inputcontroller","title":"<code>inputController</code>","text":"<p>Read-only. Access to <code>tes3uiMenuInputController</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiMenuInputController)</li> </ul>"},{"location":"types/tes3uiMenuController/#inventorymenuenabled","title":"<code>inventoryMenuEnabled</code>","text":"<p>A flag that controls whether the inventory menu is enabled or disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiMenuController/#magicmenuenabled","title":"<code>magicMenuEnabled</code>","text":"<p>A flag that controls whether the magic menu is enabled or disabled. Magic menu is the menu used to select a spell for casting from available spells, scrolls and enchantments.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiMenuController/#mainroot","title":"<code>mainRoot</code>","text":"<p>Read-only. The root element of the main UI layer. This element contains top level menus like the inventory menu, magic menu, status menu, map menu, the HUD and more as direct children. Prefer using the <code>tes3ui.findMenu()</code> function to find one of this element's direct children.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiMenuController/#mapmenuenabled","title":"<code>mapMenuEnabled</code>","text":"<p>A flag that controls whether the map menu is enabled or disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiMenuController/#scriptcompiler","title":"<code>scriptCompiler</code>","text":"<p>Read-only. Access to <code>tes3scriptCompiler</code> object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3scriptCompiler)</li> </ul>"},{"location":"types/tes3uiMenuController/#statsmenuenabled","title":"<code>statsMenuEnabled</code>","text":"<p>A flag that controls whether the stats menu is enabled or disabled. Stats menu lists all of the player's current skill and attribute values, level, race, class, health, magicka and fatigue.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiMenuInputController/","title":"tes3uiMenuInputController","text":""},{"location":"types/tes3uiMenuInputController/#tes3uimenuinputcontroller","title":"tes3uiMenuInputController","text":"<p>A core came structure responsible for managing the input around menu elements.</p>"},{"location":"types/tes3uiMenuInputController/#properties","title":"Properties","text":""},{"location":"types/tes3uiMenuInputController/#lastinputtime","title":"<code>lastInputTime</code>","text":"<p>The amount of seconds that have passed since the last time the input was updated.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiMenuInputController/#menucontroller","title":"<code>menuController</code>","text":"<p>A handle back to the main menu controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiMenuController)</li> </ul>"},{"location":"types/tes3uiMenuInputController/#textinputfocus","title":"<code>textInputFocus</code>","text":"<p>The element that is currently focused for text input.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiMenuInputController/#methods","title":"Methods","text":""},{"location":"types/tes3uiMenuInputController/#flushbufferedtextevents","title":"<code>flushBufferedTextEvents</code>","text":"<p>Clears the current text input. If no text has been passed to the current text focus, this will prevent it from doing so.</p> <pre><code>myObject:flushBufferedTextEvents()\n</code></pre>"},{"location":"types/tes3uiParagraphInput/","title":"tes3uiParagraphInput","text":""},{"location":"types/tes3uiParagraphInput/#tes3uiparagraphinput","title":"tes3uiParagraphInput","text":"<p>A structure containing properties specific to paragraph inputs.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiParagraphInput/#properties","title":"Properties","text":""},{"location":"types/tes3uiParagraphInput/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiParagraphInput/#lengthlimit","title":"<code>lengthLimit</code>","text":"<p>Default: <code>1023</code>. The character limit. Inputting additional characters will not be possible if this limit has been reached.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiProperty/","title":"tes3uiProperty","text":""},{"location":"types/tes3uiProperty/#tes3uiproperty","title":"tes3uiProperty","text":""},{"location":"types/tes3uiProperty/#properties","title":"Properties","text":""},{"location":"types/tes3uiProperty/#id","title":"<code>id</code>","text":"<p>UI property's unique ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiProperty/#name","title":"<code>name</code>","text":"<p>Read-only. The name of this UI property.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3uiProperty/#type","title":"<code>type</code>","text":"<p>Read-only. The type of this UI property.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3uiProperty/#value","title":"<code>value</code>","text":"<p>Read-only. The value of this UI property.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer, number, boolean, tes3uiProperty, nil)</li> </ul>"},{"location":"types/tes3uiScrollPane/","title":"tes3uiScrollPane","text":""},{"location":"types/tes3uiScrollPane/#tes3uiscrollpane","title":"tes3uiScrollPane","text":"<p>A structure containing properties specific to scroll panes.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiScrollPane/#properties","title":"Properties","text":""},{"location":"types/tes3uiScrollPane/#contentpane","title":"<code>contentPane</code>","text":"<p>Read-only. The content element of this pane.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiScrollPane/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiScrollPane/#positionx","title":"<code>positionX</code>","text":"<p>The horizontal scroll offset in pixels.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiScrollPane/#positiony","title":"<code>positionY</code>","text":"<p>The vertical scroll offset in pixels.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: An example of updating the position of a scroll pane widget. <pre><code>--Updating position of scroll panes:\n---@type tes3uiElement\nlocal scrollpane -- Created somewhere before\n\nscrollpane.widget.positionY = 30\n\n-- This will update the position of the scrollpane\nscrollpane:getTopLevelMenu():updateLayout()\n</code></pre>"},{"location":"types/tes3uiScrollPane/#scrollbarvisible","title":"<code>scrollbarVisible</code>","text":"<p>If <code>true</code>, the scrollbar will be visible.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiScrollPane/#methods","title":"Methods","text":""},{"location":"types/tes3uiScrollPane/#contentschanged","title":"<code>contentsChanged</code>","text":"<p>Updates the scrollbar slider and scrollbar limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after calling <code>updateLayout</code> on the widget element. Only required if the content size changes.</p> <pre><code>myObject:contentsChanged()\n</code></pre>"},{"location":"types/tes3uiSlider/","title":"tes3uiSlider","text":""},{"location":"types/tes3uiSlider/#tes3uislider","title":"tes3uiSlider","text":"<p>A structure containing properties specific to sliders.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiSlider/#properties","title":"Properties","text":""},{"location":"types/tes3uiSlider/#current","title":"<code>current</code>","text":"<p>The current value. The position of the slider handle is determined by dividing <code>current</code> by <code>max</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiSlider/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiSlider/#jump","title":"<code>jump</code>","text":"<p>The change in value when clicking into the empty areas next to the slider handle.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiSlider/#max","title":"<code>max</code>","text":"<p>The maximum value. The position of the slider handle is determined by dividing <code>current</code> by <code>max</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiSlider/#step","title":"<code>step</code>","text":"<p>The change in value when clicking the left and right arrow buttons.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiTextInput/","title":"tes3uiTextInput","text":""},{"location":"types/tes3uiTextInput/#tes3uitextinput","title":"tes3uiTextInput","text":"<p>A structure containing properties specific to text inputs.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiTextInput/#properties","title":"Properties","text":""},{"location":"types/tes3uiTextInput/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiTextInput/#eraseonfirstkey","title":"<code>eraseOnFirstKey</code>","text":"<p>Default: <code>true</code>. If <code>true</code>, clears the initial value if the first keypress is not an edit action.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3uiTextInput/#lengthlimit","title":"<code>lengthLimit</code>","text":"<p>The character limit. Inputting additional characters will not be possible if this limit has been reached. Setting this to <code>nil</code> will remove the limit.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiTextSelect/","title":"tes3uiTextSelect","text":""},{"location":"types/tes3uiTextSelect/#tes3uitextselect","title":"tes3uiTextSelect","text":"<p>A structure containing properties specific to text selects.</p> <p>This type inherits the following: tes3uiWidget</p>"},{"location":"types/tes3uiTextSelect/#properties","title":"Properties","text":""},{"location":"types/tes3uiTextSelect/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3uiTextSelect/#idle","title":"<code>idle</code>","text":"<p>The RGB color of the text when <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#idleactive","title":"<code>idleActive</code>","text":"<p>The RGB color of the text when <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#idledisabled","title":"<code>idleDisabled</code>","text":"<p>The RGB color of the text when <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#over","title":"<code>over</code>","text":"<p>The RGB color of the text when the text select is selected and <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#overactive","title":"<code>overActive</code>","text":"<p>The RGB color of the text when the text select is selected and <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#overdisabled","title":"<code>overDisabled</code>","text":"<p>The RGB color of the text when the text select is selected and <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#pressed","title":"<code>pressed</code>","text":"<p>The RGB color of the text when the text select is pressed and <code>state</code> is set to <code>normal</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#pressedactive","title":"<code>pressedActive</code>","text":"<p>The RGB color of the text when the text select is pressed and <code>state</code> is set to <code>active</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#presseddisabled","title":"<code>pressedDisabled</code>","text":"<p>The RGB color of the text when the text select is pressed and <code>state</code> is set to <code>disabled</code>. An array of 3 floats with values ranging from <code>0.0</code> to <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3uiTextSelect/#state","title":"<code>state</code>","text":"<p>The state of the text select. Controls which color set to use for text. Maps to values in <code>tes3.uiState</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3uiWidget/","title":"tes3uiWidget","text":""},{"location":"types/tes3uiWidget/#tes3uiwidget","title":"tes3uiWidget","text":"<p>A UI widget is a special interface to an element that offers functionality in a more friendly way.</p> <p>Some core widget interfaces offered by MWSE include: * tes3uiButton * tes3uiFillBar * tes3uiParagraphInput * tes3uiScrollPane * tes3uiSlider * tes3uiTextInput * tes3uiTextSelect</p>"},{"location":"types/tes3uiWidget/#properties","title":"Properties","text":""},{"location":"types/tes3uiWidget/#element","title":"<code>element</code>","text":"<p>Access back to the element this widget interface is for.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiElement)</li> </ul>"},{"location":"types/tes3vector2/","title":"Tes3vector2","text":""},{"location":"types/tes3vector2/#tes3vector2","title":"tes3vector2","text":"<p>A simple pair of floating-point numbers.</p>"},{"location":"types/tes3vector2/#properties","title":"Properties","text":""},{"location":"types/tes3vector2/#x","title":"<code>x</code>","text":"<p>The first value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector2/#y","title":"<code>y</code>","text":"<p>The second value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector2/#methods","title":"Methods","text":""},{"location":"types/tes3vector2/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the vector.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3vector2/#length","title":"<code>length</code>","text":"<p>Calculates the length of the vector.</p> <pre><code>local result = myObject:length()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector2/#normalize","title":"<code>normalize</code>","text":"<p>Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns <code>true</code> if the vector was successfully normalized.</p> <pre><code>local result = myObject:normalize()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3vector2/#normalized","title":"<code>normalized</code>","text":"<p>Get a normalized copy of the vector.</p> <pre><code>local result = myObject:normalized()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3vector2/#functions","title":"Functions","text":""},{"location":"types/tes3vector2/#new","title":"<code>new</code>","text":"<p>Creates a new vector. If no parameters are provided, an empty set will be constructed.</p> <pre><code>local vector = tes3vector2.new(x, y)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>vector</code> (tes3vector2)</li> </ul>"},{"location":"types/tes3vector2/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3vector2/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector addition."},{"location":"types/tes3vector2/#division","title":"Division (<code>/</code>)","text":"Left operand type Right operand type Result type Description tes3vector2 number tes3vector2 Divides the vector by a scalar."},{"location":"types/tes3vector2/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 The per-element multiplication of two vectors. tes3vector2 number tes3vector2 Multiplies the vector by a scalar."},{"location":"types/tes3vector2/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector subtraction."},{"location":"types/tes3vector3/","title":"Tes3vector3","text":""},{"location":"types/tes3vector3/#tes3vector3","title":"tes3vector3","text":"<p>A simple trio of floating-point numbers.</p>"},{"location":"types/tes3vector3/#properties","title":"Properties","text":""},{"location":"types/tes3vector3/#angle","title":"<code>angle</code>","text":"<p>The angle between the vector and the water plane.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#b","title":"<code>b</code>","text":"<p>The third value in the vector. An alias for <code>z</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#g","title":"<code>g</code>","text":"<p>The second value in the vector. An alias for <code>y</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#r","title":"<code>r</code>","text":"<p>The first value in the vector. An alias for <code>x</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#x","title":"<code>x</code>","text":"<p>The first value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#y","title":"<code>y</code>","text":"<p>The second value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#z","title":"<code>z</code>","text":"<p>The third value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#methods","title":"Methods","text":""},{"location":"types/tes3vector3/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the vector.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vector3/#cross","title":"<code>cross</code>","text":"<p>Calculates the cross product with another vector.</p> <pre><code>local result = myObject:cross(vec)\n</code></pre> <p>Parameters:</p> <ul> <li><code>vec</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vector3/#distance","title":"<code>distance</code>","text":"<p>Calculates the distance to another vector.</p> <pre><code>local result = myObject:distance(vec)\n</code></pre> <p>Parameters:</p> <ul> <li><code>vec</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#dot","title":"<code>dot</code>","text":"<p>Calculates the dot product with another vector.</p> <pre><code>local result = myObject:dot(vec)\n</code></pre> <p>Parameters:</p> <ul> <li><code>vec</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#heightdifference","title":"<code>heightDifference</code>","text":"<p>Calculates the vertical distance to another vector.</p> <pre><code>local result = myObject:heightDifference(vec)\n</code></pre> <p>Parameters:</p> <ul> <li><code>vec</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#interpolate","title":"<code>interpolate</code>","text":"<p>Calculates the interpolated position against the target vector using the <code>distance</code> parameter.</p> <pre><code>local result = myObject:interpolate(targetPoint, distance)\n</code></pre> <p>Parameters:</p> <ul> <li><code>targetPoint</code> (tes3vector3)</li> <li><code>distance</code> (number)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vector3/#length","title":"<code>length</code>","text":"<p>Calculates the length of the vector.</p> <pre><code>local result = myObject:length()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector3/#lerp","title":"<code>lerp</code>","text":"<p>Calculates the interpolated vector between this vector and another, given a transition.</p> <pre><code>local lerpedVector = myObject:lerp(toVector, transition)\n</code></pre> <p>Parameters:</p> <ul> <li><code>toVector</code> (tes3vector3): The vector to interpolate towards.</li> <li><code>transition</code> (number): The interpolation value. Must be between <code>0.0</code> (closer to this vector) and <code>1.0</code> (closer to the other vector).</li> </ul> <p>Returns:</p> <ul> <li><code>lerpedVector</code> (tes3vector3): The calculated value.</li> </ul>"},{"location":"types/tes3vector3/#negate","title":"<code>negate</code>","text":"<p>Negates all values in the vector.</p> <pre><code>myObject:negate()\n</code></pre>"},{"location":"types/tes3vector3/#normalize","title":"<code>normalize</code>","text":"<p>Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns <code>true</code> if the vector was successfully normalized.</p> <pre><code>local result = myObject:normalize()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3vector3/#normalized","title":"<code>normalized</code>","text":"<p>Get a normalized copy of the vector.</p> <pre><code>local result = myObject:normalized()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vector3/#outerproduct","title":"<code>outerProduct</code>","text":"<p>Calculates the outer product with another vector.</p> <pre><code>local result = myObject:outerProduct(vec)\n</code></pre> <p>Parameters:</p> <ul> <li><code>vec</code> (tes3vector3)</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (tes3matrix33)</li> </ul>"},{"location":"types/tes3vector3/#tocolor","title":"<code>toColor</code>","text":"<p>Converts the vector to <code>niColor</code> object.</p> <pre><code>local result = myObject:toColor()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niColor)</li> </ul>"},{"location":"types/tes3vector3/#functions","title":"Functions","text":""},{"location":"types/tes3vector3/#new","title":"<code>new</code>","text":"<p>Creates a new vector. If no parameters are provided, an empty set will be constructed.</p> <pre><code>local vector = tes3vector3.new(x, y, z)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> <li><code>z</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>vector</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vector3/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3vector3/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector addition."},{"location":"types/tes3vector3/#division","title":"Division (<code>/</code>)","text":"Left operand type Right operand type Result type Description tes3vector3 number tes3vector3 Divides the vector by a scalar."},{"location":"types/tes3vector3/#length_1","title":"Length (<code>#</code>)","text":"Result type Description number Evaluates to the vector's length in game units."},{"location":"types/tes3vector3/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 The per-element multiplication of two vectors. tes3vector3 number tes3vector3 Multiplies the vector by a scalar."},{"location":"types/tes3vector3/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector subtraction."},{"location":"types/tes3vector3/#unary-minus-","title":"Unary minus (<code>-</code>)","text":"Result type Description tes3vector3 Swaps the sign of the vector's components."},{"location":"types/tes3vector4/","title":"Tes3vector4","text":""},{"location":"types/tes3vector4/#tes3vector4","title":"tes3vector4","text":"<p>A set of 4 floating-point numbers.</p>"},{"location":"types/tes3vector4/#properties","title":"Properties","text":""},{"location":"types/tes3vector4/#w","title":"<code>w</code>","text":"<p>The 1st value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector4/#x","title":"<code>x</code>","text":"<p>The 2nd value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector4/#y","title":"<code>y</code>","text":"<p>The 3rd value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector4/#z","title":"<code>z</code>","text":"<p>The 4th value in the vector.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector4/#methods","title":"Methods","text":""},{"location":"types/tes3vector4/#copy","title":"<code>copy</code>","text":"<p>Creates a copy of the vector.</p> <pre><code>local result = myObject:copy()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3vector4/#length","title":"<code>length</code>","text":"<p>Calculates the length of the vector.</p> <pre><code>local result = myObject:length()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vector4/#functions","title":"Functions","text":""},{"location":"types/tes3vector4/#new","title":"<code>new</code>","text":"<p>Creates a new vector. If no parameters are provided, an empty set will be constructed.</p> <pre><code>local vector = tes3vector4.new(x, y, z, w)\n</code></pre> <p>Parameters:</p> <ul> <li><code>x</code> (number): Default: <code>0</code>.</li> <li><code>y</code> (number): Default: <code>0</code>.</li> <li><code>z</code> (number): Default: <code>0</code>.</li> <li><code>w</code> (number): Default: <code>0</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>vector</code> (tes3vector4)</li> </ul>"},{"location":"types/tes3vector4/#math-operations","title":"Math Operations","text":""},{"location":"types/tes3vector4/#addition","title":"Addition (<code>+</code>)","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector addition."},{"location":"types/tes3vector4/#division","title":"Division (<code>/</code>)","text":"Left operand type Right operand type Result type Description tes3vector4 number tes3vector4 Divides the vector by a scalar."},{"location":"types/tes3vector4/#length_1","title":"Length (<code>#</code>)","text":"Result type Description number Evaluates to the vector's length in game units."},{"location":"types/tes3vector4/#multiplication","title":"Multiplication (<code>*</code>)","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 The per-element multiplication of two vectors. tes3vector4 number tes3vector4 Multiplies the vector by a scalar."},{"location":"types/tes3vector4/#subtraction-","title":"Subtraction (<code>-</code>)","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector subtraction."},{"location":"types/tes3vfx/","title":"Tes3vfx","text":""},{"location":"types/tes3vfx/#tes3vfx","title":"tes3vfx","text":"<p>A managed visual effect, attached to position, reference, or arbitrary node. These can be created through script with <code>tes3.createVisualEffect</code> and destroyed with <code>tes3.removeVisualEffect</code>.</p>"},{"location":"types/tes3vfx/#properties","title":"Properties","text":""},{"location":"types/tes3vfx/#age","title":"<code>age</code>","text":"<p>The VFX's current age, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#attachnode","title":"<code>attachNode</code>","text":"<p>The node the VFX was created to attach to, if it was created for node attachment.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode, nil)</li> </ul>"},{"location":"types/tes3vfx/#beginkeytime","title":"<code>beginKeyTime</code>","text":"<p>The start of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#effectnode","title":"<code>effectNode</code>","text":"<p>The cloned node of the associated <code>effectObject</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3vfx/#effectobject","title":"<code>effectObject</code>","text":"<p>The object responsible for this VFX's appearance. Its scene node is cloned into <code>effectNode</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3physicalObject)</li> </ul>"},{"location":"types/tes3vfx/#endkeytime","title":"<code>endKeyTime</code>","text":"<p>The end of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#expired","title":"<code>expired</code>","text":"<p>A flag controlling if the effect is expired. This can be set to cause the effect to remove itself on the next update.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3vfx/#id","title":"<code>id</code>","text":"<p>Read-only. The unique numberic identifier for this visual effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#keytime","title":"<code>keyTime</code>","text":"<p>The VFX's current keyframe timing. When this value exceeds the <code>endKeyTime</code>, the effect will either loop back to <code>beginKeyTime</code> or the effect will expire.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#maxage","title":"<code>maxAge</code>","text":"<p>The VFX's maximum age, in seconds.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#position","title":"<code>position</code>","text":"<p>The position the VFX was created at.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3vfx/#sourceinstance","title":"<code>sourceInstance</code>","text":"<p>Read-only. The the associated magic source instance.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3magicSourceInstance)</li> </ul>"},{"location":"types/tes3vfx/#sourceinstanceserial","title":"<code>sourceInstanceSerial</code>","text":"<p>Read-only. The serial number of the associated source instance.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfx/#target","title":"<code>target</code>","text":"<p>The reference the target is associated with, if any.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3reference)</li> </ul>"},{"location":"types/tes3vfx/#verticaloffset","title":"<code>verticalOffset</code>","text":"<p>The VFX's vertical offset, at the time of creation. Changing this value will not automatically readjust the VFX's visual node.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3vfxManager/","title":"tes3vfxManager","text":""},{"location":"types/tes3vfxManager/#tes3vfxmanager","title":"tes3vfxManager","text":"<p>A manager for VFX lifetime and rendering. VFXs can be created through script with <code>tes3.createVisualEffect</code> and destroyed with <code>tes3.removeVisualEffect</code>.</p>"},{"location":"types/tes3vfxManager/#properties","title":"Properties","text":""},{"location":"types/tes3vfxManager/#data","title":"<code>data</code>","text":"<p>A collection of active managed visual effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vfx[])</li> </ul>"},{"location":"types/tes3vfxManager/#worldvfxroot","title":"<code>worldVFXRoot</code>","text":"<p>The root node that general VFXs are attached to.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weapon/","title":"Tes3weapon","text":""},{"location":"types/tes3weapon/#tes3weapon","title":"tes3weapon","text":"<p>A weapon game object.</p> <p>This type inherits the following: tes3item, tes3physicalObject, tes3object, tes3baseObject</p>"},{"location":"types/tes3weapon/#properties","title":"Properties","text":""},{"location":"types/tes3weapon/#blocked","title":"<code>blocked</code>","text":"<p>The blocked state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#boundingbox","title":"<code>boundingBox</code>","text":"<p>The bounding box for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3boundingBox)</li> </ul>"},{"location":"types/tes3weapon/#chopmax","title":"<code>chopMax</code>","text":"<p>Chop damage inflicted at maximum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#chopmin","title":"<code>chopMin</code>","text":"<p>Chop damage inflicted at minimum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#deleted","title":"<code>deleted</code>","text":"<p>Read-only. The deleted state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#disabled","title":"<code>disabled</code>","text":"<p>Read-only. The disabled state of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#enchantcapacity","title":"<code>enchantCapacity</code>","text":"<p>The object's enchantment capacity.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#enchantment","title":"<code>enchantment</code>","text":"<p>The enchantment used by the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3enchantment)</li> </ul>"},{"location":"types/tes3weapon/#flags","title":"<code>flags</code>","text":"<p>Access to the weapon flag bitfield. Known flags can be accessed via other weapon properties.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#hasdurability","title":"<code>hasDurability</code>","text":"<p>Read-only. Whether the weapon type has durability. Thrown weapons and ammunition are used once fired, and therefore do not use durability.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#icon","title":"<code>icon</code>","text":"<p>The path to the object's icon.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#id","title":"<code>id</code>","text":"<p>Read-only. The unique identifier for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#ignoresnormalweaponresistance","title":"<code>ignoresNormalWeaponResistance</code>","text":"<p>Access to the flag that controls if this weapon bypasses the \"Resist normal weapons\" magic effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#isammo","title":"<code>isAmmo</code>","text":"<p>Read-only. If true, the weapon is a type of ammunition.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#islocationmarker","title":"<code>isLocationMarker</code>","text":"<p>True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#ismelee","title":"<code>isMelee</code>","text":"<p>Read-only. If true, the weapon has a melee weapon type.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#isonehanded","title":"<code>isOneHanded</code>","text":"<p>Read-only. If true, the weapon is a one-handed weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#isprojectile","title":"<code>isProjectile</code>","text":"<p>Read-only. If true, the weapon is a projectile.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#isranged","title":"<code>isRanged</code>","text":"<p>Read-only. If true, the weapon is a ranged weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#issilver","title":"<code>isSilver</code>","text":"<p>If true, the weapon has a silver material flag. Silver weapons deal double damage to the Undead and Werewolf creatures.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#istwohanded","title":"<code>isTwoHanded</code>","text":"<p>Read-only. If true, the weapon is a two-handed melee weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#maxcondition","title":"<code>maxCondition</code>","text":"<p>The object's maximum condition.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#mesh","title":"<code>mesh</code>","text":"<p>The path to the object's mesh.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#modified","title":"<code>modified</code>","text":"<p>The modification state of the object since the last save.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#name","title":"<code>name</code>","text":"<p>The player-facing name for the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#nextincollection","title":"<code>nextInCollection</code>","text":"<p>The next object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3weapon/#objectflags","title":"<code>objectFlags</code>","text":"<p>Read-only. The raw flags of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#objecttype","title":"<code>objectType</code>","text":"<p>Read-only. The type of object. Maps to values in <code>tes3.objectType</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#owningcollection","title":"<code>owningCollection</code>","text":"<p>The collection responsible for holding this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3referenceList)</li> </ul>"},{"location":"types/tes3weapon/#persistent","title":"<code>persistent</code>","text":"<p>The persistent flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#previousincollection","title":"<code>previousInCollection</code>","text":"<p>The previous object in parent collection's list.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3object)</li> </ul>"},{"location":"types/tes3weapon/#reach","title":"<code>reach</code>","text":"<p>The weapon's relative reach. A value of <code>1.0</code> is the standard reach. It is multiplied by the GMST <code>fCombatDistance</code> to find the attack reach in world units.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#scale","title":"<code>scale</code>","text":"<p>The object's scale. The value range is (0, 10).</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#scenecollisionroot","title":"<code>sceneCollisionRoot</code>","text":"<p>The scene graph node for this object's physics collision, if its mesh has a root collision node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weapon/#scenenode","title":"<code>sceneNode</code>","text":"<p>The scene graph node for this object.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weapon/#script","title":"<code>script</code>","text":"<p>Read-only. The script that runs on the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3script)</li> </ul>"},{"location":"types/tes3weapon/#skill","title":"<code>skill</code>","text":"<p>Gets the skill data for the attack skill used by the weapon.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3skill)</li> </ul>"},{"location":"types/tes3weapon/#skillid","title":"<code>skillId</code>","text":"<p>Gets the skill ID for the attack skill used by the weapon. Maps to values in <code>tes3.skill</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul> Example: Print the name of the skill the attacker's weapon uses <pre><code>local function showMessage(e)\n    if e.mobile.readiedWeapon then\n        local id = e.mobile.readiedWeapon.object.skillId\n        local name = tes3.getSkillName(id)\n\n        tes3.messageBox(name)\n    end\nend\n\nevent.register(tes3.event.attackStart, showMessage)\n</code></pre>"},{"location":"types/tes3weapon/#slashmax","title":"<code>slashMax</code>","text":"<p>Slash damage inflicted at maximum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#slashmin","title":"<code>slashMin</code>","text":"<p>Slash damage inflicted at minimum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#sourceless","title":"<code>sourceless</code>","text":"<p>The soruceless flag of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#sourcemod","title":"<code>sourceMod</code>","text":"<p>Read-only. The filename (including the extension) of the mod that owns this object. It has <code>nil</code> value if the object was anything other than loaded from an ESP or ESM file.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#speed","title":"<code>speed</code>","text":"<p>The relative attack speed of the weapon. Controls attack timing and animation speed. Standard speed is <code>1.0</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#stolenlist","title":"<code>stolenList</code>","text":"<p>A list of actors that the object has been stolen from.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3baseObject[])</li> </ul>"},{"location":"types/tes3weapon/#supportsluadata","title":"<code>supportsLuaData</code>","text":"<p>If true, references of this object can store temporary or persistent lua data.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#thrustmax","title":"<code>thrustMax</code>","text":"<p>Thrust damage inflicted at maximum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#thrustmin","title":"<code>thrustMin</code>","text":"<p>Thrust damage inflicted at minimum weapon swing.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#type","title":"<code>type</code>","text":"<p>Read-only. A number representing the weapon type. Matches values from the <code>tes3.weaponType</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#typename","title":"<code>typeName</code>","text":"<p>Read-only. The player-facing name for the weapon type.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#value","title":"<code>value</code>","text":"<p>The value of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#weight","title":"<code>weight</code>","text":"<p>The weight of the object.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weapon/#methods","title":"Methods","text":""},{"location":"types/tes3weapon/#__tojson","title":"<code>__tojson</code>","text":"<p>Serializes the object to json.</p> <pre><code>local string = myObject:__tojson()\n</code></pre> <p>Returns:</p> <ul> <li><code>string</code> (string)</li> </ul>"},{"location":"types/tes3weapon/#createcopy","title":"<code>createCopy</code>","text":"<p>Creates a copy of this object.</p> <pre><code>local newObject = myObject:createCopy({ id = ..., addToObjectList = ..., sourceless = ... })\n</code></pre> <p>Parameters:</p> <ul> <li><code>params</code> (table)<ul> <li><code>id</code> (string): Optional. The new object's ID. If one is not provided, a randomly generated one will be used.</li> <li><code>addToObjectList</code> (boolean): Default: <code>true</code>. If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications.</li> <li><code>sourceless</code> (boolean): Default: <code>false</code>. If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless.</li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>newObject</code> (tes3weapon)</li> </ul>"},{"location":"types/tes3weapon/#getmaterialflag","title":"<code>getMaterialFlag</code>","text":"<p>Access to the material flag bitfield. Known material flags can be accessed via other weapon properties.</p> <pre><code>local result = myObject:getMaterialFlag(flagBit)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flagBit</code> (integer): <code>0</code> corresponds to the <code>ignoresNormalWeaponResistance</code> field, <code>1</code> corresponds to the <code>isSilver</code>.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weapon/#setmaterialflag","title":"<code>setMaterialFlag</code>","text":"<p>Access to the material flag bitfield. Known material flags can be accessed via other weapon properties.</p> <pre><code>myObject:setMaterialFlag(flagBit, value)\n</code></pre> <p>Parameters:</p> <ul> <li><code>flagBit</code> (integer): <code>0</code> corresponds to the <code>ignoresNormalWeaponResistance</code> field, <code>1</code> corresponds to the <code>isSilver</code>.</li> <li><code>value</code> (boolean)</li> </ul>"},{"location":"types/tes3wearablePart/","title":"tes3wearablePart","text":""},{"location":"types/tes3wearablePart/#tes3wearablepart","title":"tes3wearablePart","text":"<p>A container class that maps a body part id to its male and female body parts.</p>"},{"location":"types/tes3wearablePart/#properties","title":"Properties","text":""},{"location":"types/tes3wearablePart/#female","title":"<code>female</code>","text":"<p>The body part object used for female actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3wearablePart/#male","title":"<code>male</code>","text":"<p>The body part object used for male actors.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3bodyPart)</li> </ul>"},{"location":"types/tes3wearablePart/#type","title":"<code>type</code>","text":"<p>The type of the wearable part. Maps to <code>tes3.activeBodyPart</code> namespace.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/","title":"Tes3weather","text":""},{"location":"types/tes3weather/#tes3weather","title":"tes3weather","text":"<p>A structure that contains base weather information shared by inheriting weather structures.</p>"},{"location":"types/tes3weather/#properties","title":"Properties","text":""},{"location":"types/tes3weather/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weather/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weather/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weather/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weather/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weather/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weather/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weather/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weather/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weather/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/","title":"tes3weatherAsh","text":""},{"location":"types/tes3weatherAsh/#tes3weatherash","title":"tes3weatherAsh","text":"<p>A structure that contains weather information for the ashstorm weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherAsh/#properties","title":"Properties","text":""},{"location":"types/tes3weatherAsh/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherAsh/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherAsh/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherAsh/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherAsh/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherAsh/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherAsh/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/","title":"tes3weatherBlight","text":""},{"location":"types/tes3weatherBlight/#tes3weatherblight","title":"tes3weatherBlight","text":"<p>A structure that contains weather information for the blightstorm weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherBlight/#properties","title":"Properties","text":""},{"location":"types/tes3weatherBlight/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#blightdiseasechance","title":"<code>blightDiseaseChance</code>","text":"<p>The weather's blight chance value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#blightdiseases","title":"<code>blightDiseases</code>","text":"<p>Read-only. The weather's blight diseases, provided as a table of <code>tes3spell</code> objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3spell[])</li> </ul>"},{"location":"types/tes3weatherBlight/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlight/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherBlight/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlight/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlight/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlight/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherBlight/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/","title":"tes3weatherBlizzard","text":""},{"location":"types/tes3weatherBlizzard/#tes3weatherblizzard","title":"tes3weatherBlizzard","text":"<p>A structure that contains weather information for the blizzard weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherBlizzard/#properties","title":"Properties","text":""},{"location":"types/tes3weatherBlizzard/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherBlizzard/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/","title":"tes3weatherClear","text":""},{"location":"types/tes3weatherClear/#tes3weatherclear","title":"tes3weatherClear","text":"<p>A structure that contains weather information for the clear skies weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherClear/#properties","title":"Properties","text":""},{"location":"types/tes3weatherClear/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherClear/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherClear/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherClear/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherClear/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherClear/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherClear/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/","title":"tes3weatherCloudy","text":""},{"location":"types/tes3weatherCloudy/#tes3weathercloudy","title":"tes3weatherCloudy","text":"<p>A structure that contains weather information for the cloudy weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherCloudy/#properties","title":"Properties","text":""},{"location":"types/tes3weatherCloudy/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherCloudy/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherCloudy/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherCloudy/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherCloudy/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherCloudy/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherCloudy/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/","title":"tes3weatherController","text":""},{"location":"types/tes3weatherController/#tes3weathercontroller","title":"tes3weatherController","text":"<p>A data structure that handles the weather.</p>"},{"location":"types/tes3weatherController/#properties","title":"Properties","text":""},{"location":"types/tes3weatherController/#ambientpostsunrisetime","title":"<code>ambientPostSunriseTime</code>","text":"<p>Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between <code>ambientPostSunriseTime</code> and <code>ambientPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#ambientpostsunsettime","title":"<code>ambientPostSunsetTime</code>","text":"<p>Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between <code>ambientPostSunsetTime</code> and <code>ambientPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#ambientpresunrisetime","title":"<code>ambientPreSunriseTime</code>","text":"<p>Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between <code>ambientPostSunsetTime</code> and <code>ambientPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#ambientpresunsettime","title":"<code>ambientPreSunsetTime</code>","text":"<p>Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between <code>ambientPostSunriseTime</code> and <code>ambientPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#currentfogcolor","title":"<code>currentFogColor</code>","text":"<p>The current fog color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#currentskycolor","title":"<code>currentSkyColor</code>","text":"<p>The current sky color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#currentweather","title":"<code>currentWeather</code>","text":"<p>Read-only. The current weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weather)</li> </ul>"},{"location":"types/tes3weatherController/#daysremaining","title":"<code>daysRemaining</code>","text":"<p>The days remaining for the current weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#fogdepthchangespeed","title":"<code>fogDepthChangeSpeed</code>","text":"<p>Controls the speed of how fast the fog comes in. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#fogpostsunrisetime","title":"<code>fogPostSunriseTime</code>","text":"<p>Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between <code>fogPostSunriseTime</code> and <code>fogPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#fogpostsunsettime","title":"<code>fogPostSunsetTime</code>","text":"<p>Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between <code>fogPostSunsetTime</code> and <code>fogPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#fogpresunrisetime","title":"<code>fogPreSunriseTime</code>","text":"<p>Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between <code>fogPostSunsetTime</code> and <code>fogPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#fogpresunsettime","title":"<code>fogPreSunsetTime</code>","text":"<p>Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between <code>fogPostSunriseTime</code> and <code>fogPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#hoursbetweenweatherchanges","title":"<code>hoursBetweenWeatherChanges</code>","text":"<p>The hours between weather changes. Stored as a float value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#hoursremaining","title":"<code>hoursRemaining</code>","text":"<p>The hours remaining.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#lastactiveregion","title":"<code>lastActiveRegion</code>","text":"<p>Read-only. Provides read-only access to last active region object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3region)</li> </ul>"},{"location":"types/tes3weatherController/#masser","title":"<code>masser</code>","text":"<p>Read-only. Provides read-only access to the Masser moon object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3moon)</li> </ul>"},{"location":"types/tes3weatherController/#nextweather","title":"<code>nextWeather</code>","text":"<p>Read-only. The next weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weather)</li> </ul>"},{"location":"types/tes3weatherController/#particlesactive","title":"<code>particlesActive</code>","text":"<p>Read-only. Provides a list of active weather particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherControllerParticle[])</li> </ul>"},{"location":"types/tes3weatherController/#particlesinactive","title":"<code>particlesInactive</code>","text":"<p>Read-only. Provides a list of inactive weather particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherControllerParticle[])</li> </ul>"},{"location":"types/tes3weatherController/#scenerainroot","title":"<code>sceneRainRoot</code>","text":"<p>Read-only. Provides read-only access to the scene rain root NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#sceneskylight","title":"<code>sceneSkyLight</code>","text":"<p>Read-only. Provides read-only access to the scene sky light directional light.</p> <p>Returns:</p> <ul> <li><code>result</code> (niDirectionalLight)</li> </ul>"},{"location":"types/tes3weatherController/#sceneskyroot","title":"<code>sceneSkyRoot</code>","text":"<p>Read-only. Provides read-only access to the scene sky root NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#scenesnowroot","title":"<code>sceneSnowRoot</code>","text":"<p>Read-only. Provides read-only access to the scene snow root NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#scenestormroot","title":"<code>sceneStormRoot</code>","text":"<p>Read-only. Provides read-only access to the scene storm root NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#scenesunbase","title":"<code>sceneSunBase</code>","text":"<p>Read-only. Provides read-only access to the scenesun base NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#scenesunglare","title":"<code>sceneSunGlare</code>","text":"<p>Read-only. Provides read-only access to the scene sun glare NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#scenesunvis","title":"<code>sceneSunVis</code>","text":"<p>Read-only. Provides read-only access to the scene sun vis NiNode.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherController/#secunda","title":"<code>secunda</code>","text":"<p>Read-only. Provides read-only access to the Secunda moon object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3moon)</li> </ul>"},{"location":"types/tes3weatherController/#skypostsunrisetime","title":"<code>skyPostSunriseTime</code>","text":"<p>The sky has one color for day and night states each. The day color will be used when the game hour is between <code>skyPostSunriseTime</code> and <code>skyPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#skypostsunsettime","title":"<code>skyPostSunsetTime</code>","text":"<p>The sky has one color for day and night states each. The night color will be used when the game hour is between <code>skyPostSunsetTime</code> and <code>skyPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#skypresunrisetime","title":"<code>skyPreSunriseTime</code>","text":"<p>The sky has one color for day and night states each. The night color will be used when the game hour is between <code>skyPostSunsetTime</code> and <code>skyPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#skypresunsettime","title":"<code>skyPreSunsetTime</code>","text":"<p>The sky has one color for day and night states each. The day color will be used when the game hour is between <code>skyPostSunriseTime</code> and <code>skyPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#starsfadingduration","title":"<code>starsFadingDuration</code>","text":"<p>The stars will fade in <code>starsPostSunsetStart</code> hours after the sunset. They fade out <code>starsPreSunriseFinish</code> hours before sunrise. This value represents the duration of the fading. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#starspostsunsetstart","title":"<code>starsPostSunsetStart</code>","text":"<p>The stars will start to fade in (appear) <code>starsPostSunsetStart</code> hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#starspresunrisefinish","title":"<code>starsPreSunriseFinish</code>","text":"<p>The stars will start to fade out (disappear) <code>starsPreSunriseFinish</code> hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunglarefaderanglemax","title":"<code>sunglareFaderAngleMax</code>","text":"<p>The sunglare fader maximum angle.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunglarefadercolor","title":"<code>sunglareFaderColor</code>","text":"<p>The sunglare fader color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#sunglarefadermax","title":"<code>sunglareFaderMax</code>","text":"<p>The sunglare fader maximum.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunpostsunrisetime","title":"<code>sunPostSunriseTime</code>","text":"<p>The Sun has one color for day and night states each. The day color will be used when the game hour is between <code>sunPostSunriseTime</code> and <code>sunPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunpostsunsettime","title":"<code>sunPostSunsetTime</code>","text":"<p>The Sun has one color for day and night states each. The night color will be used when the game hour is between <code>sunPostSunsetTime</code> and <code>sunPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunpresunrisetime","title":"<code>sunPreSunriseTime</code>","text":"<p>The Sun has one color for day and night states each. The night color will be used when the game hour is between <code>sunPostSunsetTime</code> and <code>sunPreSunriseTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunpresunsettime","title":"<code>sunPreSunsetTime</code>","text":"<p>The Sun has one color for day and night states each. The day color will be used when the game hour is between <code>sunPostSunriseTime</code> and <code>sunPreSunsetTime</code>. This corresponds to the setting of the same name in Morrowind.ini file.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunriseduration","title":"<code>sunriseDuration</code>","text":"<p>The sunrise duration.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunrisehour","title":"<code>sunriseHour</code>","text":"<p>The sunrise hour.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunsetduration","title":"<code>sunsetDuration</code>","text":"<p>The sunset duration.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#sunsethour","title":"<code>sunsetHour</code>","text":"<p>The sunset hour.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#timescaleclouds","title":"<code>timescaleClouds</code>","text":"<p>The timescale for clouds.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherController/#transitionscalar","title":"<code>transitionScalar</code>","text":"<p>The scalar transition.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwatercolor","title":"<code>underwaterColor</code>","text":"<p>The underwater color, represented as a vector. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#underwatercolorweight","title":"<code>underwaterColorWeight</code>","text":"<p>The underwater color weight.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwaterdayfog","title":"<code>underwaterDayFog</code>","text":"<p>The underwater day fog value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwaterindoorfog","title":"<code>underwaterIndoorFog</code>","text":"<p>The underwater indoor fog value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwaternightfog","title":"<code>underwaterNightFog</code>","text":"<p>The underwater night fog value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwatersunrisefog","title":"<code>underwaterSunriseFog</code>","text":"<p>The underwater sunrise fog value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#underwatersunsetfog","title":"<code>underwaterSunsetFog</code>","text":"<p>The underwater sunset fog value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#weathers","title":"<code>weathers</code>","text":"<p>Read-only. Array-style table for the different weather types. Each object in the table is a tes3weather. The indices in the table map to the values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weather[])</li> </ul>"},{"location":"types/tes3weatherController/#windvelocitycurrweather","title":"<code>windVelocityCurrWeather</code>","text":"<p>The wind velocity for the current weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#windvelocitynextweather","title":"<code>windVelocityNextWeather</code>","text":"<p>The wind velocity for the next weather.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherController/#methods","title":"Methods","text":""},{"location":"types/tes3weatherController/#calcsundamagescalar","title":"<code>calcSunDamageScalar</code>","text":"<p>Calculates the sun damage based on the current weather.</p> <pre><code>local result = myObject:calcSunDamageScalar()\n</code></pre> <p>Parameters:</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherController/#switchimmediate","title":"<code>switchImmediate</code>","text":"<p>Immediately switches the weather to the provided weather parameter.</p> <pre><code>myObject:switchImmediate(weatherId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weatherId</code> (number): Maps to values in the <code>tes3.weather</code> table.</li> </ul>"},{"location":"types/tes3weatherController/#switchtransition","title":"<code>switchTransition</code>","text":"<p>Transitions the weather to the provided weather parameter based on the weather controller settings.</p> <pre><code>myObject:switchTransition(weatherId)\n</code></pre> <p>Parameters:</p> <ul> <li><code>weatherId</code> (number): Maps to values in the <code>tes3.weather</code> table.</li> </ul>"},{"location":"types/tes3weatherController/#updatevisuals","title":"<code>updateVisuals</code>","text":"<p>Updates the weather controller visuals. This should be called after any weather transitions.</p> <pre><code>myObject:updateVisuals()\n</code></pre> <p>Parameters:</p>"},{"location":"types/tes3weatherControllerParticle/","title":"tes3weatherControllerParticle","text":""},{"location":"types/tes3weatherControllerParticle/#tes3weathercontrollerparticle","title":"tes3weatherControllerParticle","text":"<p>A data structure that represents a weather particle, such as a rain drop or snow flake.</p>"},{"location":"types/tes3weatherControllerParticle/#properties","title":"Properties","text":""},{"location":"types/tes3weatherControllerParticle/#diameter","title":"<code>diameter</code>","text":"<p>The diameter of the particle.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherControllerParticle/#object","title":"<code>object</code>","text":"<p>The visual used for the particle.</p> <p>Returns:</p> <ul> <li><code>result</code> (niAVObject)</li> </ul>"},{"location":"types/tes3weatherControllerParticle/#rainroot","title":"<code>rainRoot</code>","text":"<p>Read-only. A shortcut to the root rain node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3weatherControllerParticle/#remaininglifetime","title":"<code>remainingLifetime</code>","text":"<p>The remaining time before the particle becomes inactive.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherControllerParticle/#velocity","title":"<code>velocity</code>","text":"<p>The velocity of the particle.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherControllerParticle/#weathercontroller","title":"<code>weatherController</code>","text":"<p>Read-only. A shortcut to the weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherFoggy/","title":"tes3weatherFoggy","text":""},{"location":"types/tes3weatherFoggy/#tes3weatherfoggy","title":"tes3weatherFoggy","text":"<p>A structure that contains weather information for the foggy weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherFoggy/#properties","title":"Properties","text":""},{"location":"types/tes3weatherFoggy/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherFoggy/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherFoggy/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherFoggy/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherFoggy/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherFoggy/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherFoggy/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/","title":"tes3weatherOvercast","text":""},{"location":"types/tes3weatherOvercast/#tes3weatherovercast","title":"tes3weatherOvercast","text":"<p>A structure that contains weather information for the overcast weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherOvercast/#properties","title":"Properties","text":""},{"location":"types/tes3weatherOvercast/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherOvercast/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherOvercast/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherOvercast/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherOvercast/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherOvercast/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherOvercast/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/","title":"tes3weatherRain","text":""},{"location":"types/tes3weatherRain/#tes3weatherrain","title":"tes3weatherRain","text":"<p>A structure that contains weather information for the rain weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherRain/#properties","title":"Properties","text":""},{"location":"types/tes3weatherRain/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherRain/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherRain/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#maxparticles","title":"<code>maxParticles</code>","text":"<p>The weather's maximum particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherRain/#particleentrancespeed","title":"<code>particleEntranceSpeed</code>","text":"<p>The weather's particle entrance speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#particleheightmax","title":"<code>particleHeightMax</code>","text":"<p>The weather's particle maximum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#particleheightmin","title":"<code>particleHeightMin</code>","text":"<p>The weather's particle minimum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#particleradius","title":"<code>particleRadius</code>","text":"<p>The weather's particle radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#rainactive","title":"<code>rainActive</code>","text":"<p>Read-only. The weather's active rain flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherRain/#rainloopsound","title":"<code>rainLoopSound</code>","text":"<p>Read-only. The weather's rain loop sound object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherRain/#rainloopsoundid","title":"<code>rainLoopSoundId</code>","text":"<p>The weather's rain loop sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherRain/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherRain/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherRain/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherRain/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/","title":"tes3weatherSnow","text":""},{"location":"types/tes3weatherSnow/#tes3weathersnow","title":"tes3weatherSnow","text":"<p>A structure that contains weather information for the snow weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherSnow/#properties","title":"Properties","text":""},{"location":"types/tes3weatherSnow/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherSnow/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherSnow/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#maxparticles","title":"<code>maxParticles</code>","text":"<p>The weather's maximum particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherSnow/#particleentrancespeed","title":"<code>particleEntranceSpeed</code>","text":"<p>The weather's particle entrance speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#particleheightmax","title":"<code>particleHeightMax</code>","text":"<p>The weather's particle maximum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#particleheightmin","title":"<code>particleHeightMin</code>","text":"<p>The weather's particle minimum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#particleradius","title":"<code>particleRadius</code>","text":"<p>The weather's particle radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherSnow/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherSnow/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherSnow/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/","title":"tes3weatherThunder","text":""},{"location":"types/tes3weatherThunder/#tes3weatherthunder","title":"tes3weatherThunder","text":"<p>A structure that contains weather information for the thunder weather type.</p> <p>This type inherits the following: tes3weather</p>"},{"location":"types/tes3weatherThunder/#properties","title":"Properties","text":""},{"location":"types/tes3weatherThunder/#ambientdaycolor","title":"<code>ambientDayColor</code>","text":"<p>Read-only. The weather's ambient day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientloopsound","title":"<code>ambientLoopSound</code>","text":"<p>Read-only. The weather's ambient looping sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientloopsoundid","title":"<code>ambientLoopSoundId</code>","text":"<p>The weather's ambient looping sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientnightcolor","title":"<code>ambientNightColor</code>","text":"<p>Read-only. The weather's ambient night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientplaying","title":"<code>ambientPlaying</code>","text":"<p>Read-only. The weather's ambient playing flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientsunrisecolor","title":"<code>ambientSunriseColor</code>","text":"<p>Read-only. The weather's ambient sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#ambientsunsetcolor","title":"<code>ambientSunsetColor</code>","text":"<p>Read-only. The weather's ambient sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#cloudsmaxpercent","title":"<code>cloudsMaxPercent</code>","text":"<p>The weather's cloud maximum percentage.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#cloudsspeed","title":"<code>cloudsSpeed</code>","text":"<p>The weather's cloud speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#cloudtexture","title":"<code>cloudTexture</code>","text":"<p>The weather's cloud texture path.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#controller","title":"<code>controller</code>","text":"<p>Read-only. The weather's weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3weatherThunder/#flashdecrement","title":"<code>flashDecrement</code>","text":"<p>The weather's flash decrement value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#fogdaycolor","title":"<code>fogDayColor</code>","text":"<p>Read-only. The weather's fog day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#fognightcolor","title":"<code>fogNightColor</code>","text":"<p>Read-only. The weather's fog night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#fogsunrisecolor","title":"<code>fogSunriseColor</code>","text":"<p>Read-only. The weather's fog sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#fogsunsetcolor","title":"<code>fogSunsetColor</code>","text":"<p>Read-only. The weather's fog sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#glareview","title":"<code>glareView</code>","text":"<p>The weather's glare view.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#index","title":"<code>index</code>","text":"<p>Read-only. The weather's index ID. Maps to values in the <code>tes3.weather</code> table.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#landfogdaydepth","title":"<code>landFogDayDepth</code>","text":"<p>The weather's land fog day depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#landfognightdepth","title":"<code>landFogNightDepth</code>","text":"<p>The weather's land fog night depth value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#maxparticles","title":"<code>maxParticles</code>","text":"<p>The weather's maximum particles.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#name","title":"<code>name</code>","text":"<p>Read-only. The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be <code>\"Ashstorm\"</code>, <code>\"Blight\"</code>, <code>\"Blizzard\"</code>, <code>\"Clear\"</code>, <code>\"Cloudy\"</code>, <code>\"Foggy\"</code>, <code>\"Overcast\"</code>, <code>\"Rain\"</code>, <code>\"Snow\"</code>, or <code>\"Thunderstorm\"</code> as appropriate.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#particleentrancespeed","title":"<code>particleEntranceSpeed</code>","text":"<p>The weather's particle entrance speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#particleheightmax","title":"<code>particleHeightMax</code>","text":"<p>The weather's particle maximum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#particleheightmin","title":"<code>particleHeightMin</code>","text":"<p>The weather's particle minimum height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#particleradius","title":"<code>particleRadius</code>","text":"<p>The weather's particle radius.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#rainactive","title":"<code>rainActive</code>","text":"<p>Read-only. The weather's active rain flag.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherThunder/#rainloopsound","title":"<code>rainLoopSound</code>","text":"<p>Read-only. The weather's rain loop sound object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#rainloopsoundid","title":"<code>rainLoopSoundId</code>","text":"<p>The weather's rain loop sound ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#skydaycolor","title":"<code>skyDayColor</code>","text":"<p>Read-only. The weather's sky day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#skynightcolor","title":"<code>skyNightColor</code>","text":"<p>Read-only. The weather's sky night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#skysunrisecolor","title":"<code>skySunriseColor</code>","text":"<p>Read-only. The weather's sky sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#skysunsetcolor","title":"<code>skySunsetColor</code>","text":"<p>Read-only. The weather's sky sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#sundaycolor","title":"<code>sunDayColor</code>","text":"<p>Read-only. The weather's sun day color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#sundiscsunsetcolor","title":"<code>sundiscSunsetColor</code>","text":"<p>Read-only. The weather's sundisc sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#sunnightcolor","title":"<code>sunNightColor</code>","text":"<p>Read-only. The weather's sun night color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#sunsunrisecolor","title":"<code>sunSunriseColor</code>","text":"<p>Read-only. The weather's sun sunrise color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#sunsunsetcolor","title":"<code>sunSunsetColor</code>","text":"<p>Read-only. The weather's sun sunset color. The values can range from 0 to 1.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vector3)</li> </ul>"},{"location":"types/tes3weatherThunder/#threshold","title":"<code>threshold</code>","text":"<p>The weather's threshold value.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#thunderfrequency","title":"<code>thunderFrequency</code>","text":"<p>The weather's thunder frequency.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound1","title":"<code>thunderSound1</code>","text":"<p>Read-only. The weather's thunder sound 1 object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound1id","title":"<code>thunderSound1Id</code>","text":"<p>The weather's thunder sound 1 ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound2","title":"<code>thunderSound2</code>","text":"<p>Read-only. The weather's thunder sound 2 object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound2id","title":"<code>thunderSound2Id</code>","text":"<p>The weather's thunder sound 2 ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound3","title":"<code>thunderSound3</code>","text":"<p>Read-only. The weather's thunder sound 3 object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound3id","title":"<code>thunderSound3Id</code>","text":"<p>The weather's thunder sound 3 ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound4","title":"<code>thunderSound4</code>","text":"<p>Read-only. The weather's thunder sound 4 object.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersound4id","title":"<code>thunderSound4Id</code>","text":"<p>The weather's thunder sound 4 ID.</p> <p>Returns:</p> <ul> <li><code>result</code> (string)</li> </ul>"},{"location":"types/tes3weatherThunder/#thundersoundcount","title":"<code>thunderSoundCount</code>","text":"<p>The weather's thunder sound count.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#thunderthreshold","title":"<code>thunderThreshold</code>","text":"<p>The weather's thunder threshold.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#transitiondelta","title":"<code>transitionDelta</code>","text":"<p>The weather's transition delta.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3weatherThunder/#underwatersoundstate","title":"<code>underwaterSoundState</code>","text":"<p>Read-only. The weather's underwater sound state flag. This value will be <code>true</code>, while the player is underwater.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3weatherThunder/#windspeed","title":"<code>windSpeed</code>","text":"<p>The weather's wind speed.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/","title":"tes3worldController","text":""},{"location":"types/tes3worldController/#tes3worldcontroller","title":"tes3worldController","text":"<p>A core game object used for storing world simulation data.</p>"},{"location":"types/tes3worldController/#properties","title":"Properties","text":""},{"location":"types/tes3worldController/#aidistancescale","title":"<code>aiDistanceScale</code>","text":"<p>A value in the range [0, 1]. The (relative) maximum distance setting for AI simulation. Corresponds to the AI distance option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#allmobileactors","title":"<code>allMobileActors</code>","text":"<p>Read-only. The list of all active mobile actors. Mobile actors expire after 72 hours if they have not been in a loaded cell.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobileActor[])</li> </ul>"},{"location":"types/tes3worldController/#armcamera","title":"<code>armCamera</code>","text":"<p>Read-only. The access to the first person arms camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCamera)</li> </ul>"},{"location":"types/tes3worldController/#audiocontroller","title":"<code>audioController</code>","text":"<p>Read-only. The audio controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3audioController)</li> </ul>"},{"location":"types/tes3worldController/#blindnessfader","title":"<code>blindnessFader</code>","text":"<p>Read-only. Screen overlay fader for the blind effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3fader)</li> </ul>"},{"location":"types/tes3worldController/#characterrendertarget","title":"<code>characterRenderTarget</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderTarget)</li> </ul>"},{"location":"types/tes3worldController/#chargenstate","title":"<code>charGenState</code>","text":"<p>Read-only. The <code>charGenState</code> global variable. Indicates progress through character generation. Has a value of <code>-1</code> when chargen is complete.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#countmusictracksbattle","title":"<code>countMusicTracksBattle</code>","text":"<p>Read-only. The number of available battle music tracks.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#countmusictracksexplore","title":"<code>countMusicTracksExplore</code>","text":"<p>Read-only. The number of available explore music tracks.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#criticaldamagesound","title":"<code>criticalDamageSound</code>","text":"<p>The sound played when an actor takes damage from a critical hit. It plays instead of the normal health damage sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#cursoroff","title":"<code>cursorOff</code>","text":"<p>If the target crosshair is disabled. Corresponds to the \"Crosshair\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#day","title":"<code>day</code>","text":"<p>Read-only. The <code>Day</code> global variable, indicating the current day. Day numbering starts at <code>1</code> for the first day of a month.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#dayspassed","title":"<code>daysPassed</code>","text":"<p>Read-only. The <code>DaysPassed</code> global variable, indicating the days passed since the game started for this character.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#deadfloatscale","title":"<code>deadFloatScale</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#defaultlandsound","title":"<code>defaultLandSound</code>","text":"<p>This it the default sound played when the player lands, after a jump or a fall.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#defaultlandwatersound","title":"<code>defaultLandWaterSound</code>","text":"<p>This it the default sound played when the player lands in the water, after a jump or a fall.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#deltatime","title":"<code>deltaTime</code>","text":"<p>The time interval (in seconds) between this frame and the last frame. Useful for calculations that involve movement or damage over a period of time.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#difficulty","title":"<code>difficulty</code>","text":"<p>A number in the range [-1, 1]. Corresponds to the \"Difficulty\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#drowningdamagesound","title":"<code>drowningDamageSound</code>","text":"<p>The sound played when an actor takes health damage while drowning. It plays instead of the normal health damage sound.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#drownsound","title":"<code>drownSound</code>","text":"<p>The sound played when an actor is losing health by drowning.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#enchanteditemeffect","title":"<code>enchantedItemEffect</code>","text":"<p>Read-only. The animated texture effect that is applied onto equipped enchanted items.</p> <p>Returns:</p> <ul> <li><code>result</code> (niTextureEffect)</li> </ul>"},{"location":"types/tes3worldController/#enchanteditemeffectcreated","title":"<code>enchantedItemEffectCreated</code>","text":"<p>Read-only. If the enchantedItemEffect is available.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#enchanteditemeffecttextures","title":"<code>enchantedItemEffectTextures</code>","text":"<p>Read-only. An array of textures used for the enchanted item effect, 32 elements long.</p> <p>Returns:</p> <ul> <li><code>result</code> (niSourceTexture[])</li> </ul>"},{"location":"types/tes3worldController/#flaglevitationdisabled","title":"<code>flagLevitationDisabled</code>","text":"<p>If levitation is disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#flagteleportingdisabled","title":"<code>flagTeleportingDisabled</code>","text":"<p>If teleporting is disabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#globalscripts","title":"<code>globalScripts</code>","text":"<p>Read-only. A list of active global scripts.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalScript[])</li> </ul>"},{"location":"types/tes3worldController/#handtohandhit2sound","title":"<code>handToHandHit2Sound</code>","text":"<p>A sound played when a hand to hand attack hits. For each attack, <code>handToHandHitSound</code> or <code>handToHandHitSound2</code> are randomly chosen.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#handtohandhitsound","title":"<code>handToHandHitSound</code>","text":"<p>A sound played when a hand to hand attack hits. For each attack, <code>handToHandHitSound</code> or <code>handToHandHitSound2</code> are randomly chosen.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#healthdamagesound","title":"<code>healthDamageSound</code>","text":"<p>The sound played when health damage is taken.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#heavyarmorhitsound","title":"<code>heavyArmorHitSound</code>","text":"<p>The sound played when a heavy armor piece is hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#helpdelay","title":"<code>helpDelay</code>","text":"<p>A number in the range [0, 2]. The delay in seconds before a tooltip appears. Corresponds to the \"Menu help delay\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#hitfader","title":"<code>hitFader</code>","text":"<p>Read-only. Screen overlay fader that pulses when damage is taken.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3fader)</li> </ul>"},{"location":"types/tes3worldController/#hour","title":"<code>hour</code>","text":"<p>Read-only. The <code>GameHour</code> global variable, indicating the time of day.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#hudstyle","title":"<code>hudStyle</code>","text":"<p>No known effect.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#inputcontroller","title":"<code>inputController</code>","text":"<p>Read-only. The controller responsible for player input.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3inputController)</li> </ul>"},{"location":"types/tes3worldController/#instance","title":"<code>instance</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (HINSTANCE)</li> </ul>"},{"location":"types/tes3worldController/#itemrepairsound","title":"<code>itemRepairSound</code>","text":"<p>The sound played when an item is repaired.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#lastframetime","title":"<code>lastFrameTime</code>","text":"<p>Read-only. The value of <code>tes3.worldController.systemTime</code> at the start of the previous frame. Measured in milliseconds since the program was started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#lightarmorhitsound","title":"<code>lightArmorHitSound</code>","text":"<p>The sound played when a light armor piece is hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#mapcontroller","title":"<code>mapController</code>","text":"<p>Read-only. The controller responsible for the world and local maps.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mapController)</li> </ul>"},{"location":"types/tes3worldController/#maxfps","title":"<code>maxFPS</code>","text":"<p>Maximum framerate target for the engine's FPS limiter.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#mediumarmorhitsound","title":"<code>mediumArmorHitSound</code>","text":"<p>The sound played when a medium armor piece is hit.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#menualpha","title":"<code>menuAlpha</code>","text":"<p>A value in the range [0, 1]. The alpha value of the black background of menus. Corresponds to the \"Menu transparency\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#menucamera","title":"<code>menuCamera</code>","text":"<p>Read-only. The access to the camera used to render menus.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCamera)</li> </ul>"},{"location":"types/tes3worldController/#menuclicksound","title":"<code>menuClickSound</code>","text":"<p>The sound played when a UI button or other control is clicked.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#menucontroller","title":"<code>menuController</code>","text":"<p>Read-only. The controller responsible for the menu system.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3uiMenuController)</li> </ul>"},{"location":"types/tes3worldController/#menusizesound","title":"<code>menuSizeSound</code>","text":"<p>Unused sound. Not used when a menu is resized.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#misssound","title":"<code>missSound</code>","text":"<p>The sound played when a weapon fails its to-hit check.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#mobmanager","title":"<code>mobManager</code>","text":"<p>Read-only. The manager responsible for mobile objects and collision.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3mobManager)</li> </ul>"},{"location":"types/tes3worldController/#month","title":"<code>month</code>","text":"<p>Read-only. The <code>Month</code> global variable, indicating the current month. Month numbering starts at <code>0</code> for the first month, Morning Star.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#monthstorespawn","title":"<code>monthsToRespawn</code>","text":"<p>Read-only. The <code>monthsToRespawn</code> global variable, used by the game to count the time left until containers are respawned. This is decremented at the end of a month (or end of a day with the appropriate MCP option). When it reaches <code>0</code>, containers are respawned.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#mousesensitivityx","title":"<code>mouseSensitivityX</code>","text":"<p>The horizontal camera rotation sensitivity. Corresponds to the \"Horizontal sensitivity\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#mousesensitivityy","title":"<code>mouseSensitivityY</code>","text":"<p>The vertical camera rotation sensitivity. Corresponds to the \"Vertical sensitivity\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#musicsituation","title":"<code>musicSituation</code>","text":"<p>The kind of music being played. Only updates when music is not muted. <code>0</code> Explore music <code>1</code> Combat music <code>2</code> Main menu music</p> <p>Note: These values are available as <code>tes3.musicSituation</code> constants</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#nodecursor","title":"<code>nodeCursor</code>","text":"<p>Read-only. The scenegraph node for the target crosshair.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3worldController/#parentwindowhandle","title":"<code>parentWindowHandle</code>","text":"<p>Read-only. Handle to the parent window.</p> <p>Returns:</p> <ul> <li><code>result</code> (HWND)</li> </ul>"},{"location":"types/tes3worldController/#projectiondistance","title":"<code>projectionDistance</code>","text":"<p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#quests","title":"<code>quests</code>","text":"<p>Read-only. A list of all available quest objects.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3quest[])</li> </ul>"},{"location":"types/tes3worldController/#quicksavewhenresting","title":"<code>quickSaveWhenResting</code>","text":"<p>Controls if auto-save on resting or waiting is enabled. Corresponds to the \"Auto-save when rest\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#rechargingitems","title":"<code>rechargingItems</code>","text":"<p>Read-only. A list of enchanted items that are recharging. Items in the list may not all belong to the player.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3rechargingItem[])</li> </ul>"},{"location":"types/tes3worldController/#shaderwaterreflectterrain","title":"<code>shaderWaterReflectTerrain</code>","text":"<p>If pixel shader water reflection includes terrain. Not functional with MGE enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#shaderwaterreflectupdate","title":"<code>shaderWaterReflectUpdate</code>","text":"<p>Period between reflection updates for pixel shader water. Not functional with MGE enabled.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#shadowcamera","title":"<code>shadowCamera</code>","text":"<p>Read-only. The access to the camera used for shadows rendering.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCamera)</li> </ul>"},{"location":"types/tes3worldController/#shadows","title":"<code>shadows</code>","text":"<p>An integer in the range of <code>0</code> to <code>6</code>. Controls the amount of actor shadows drawn. Corresponds to the \"Real-time shadows\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (integer)</li> </ul>"},{"location":"types/tes3worldController/#showsubtitles","title":"<code>showSubtitles</code>","text":"<p>If subtitles are shown. Corresponds to the \"Subtitles\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#simulationtimescalar","title":"<code>simulationTimeScalar</code>","text":"<p>A scalar used for simulation time. At the start of every frame, the <code>deltaTime</code> is multiplied by this value. Doing this here is safer than doing it in another event.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#splashcontroller","title":"<code>splashController</code>","text":"<p>Read-only. Access to the splash controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3splashController)</li> </ul>"},{"location":"types/tes3worldController/#splashscreencamera","title":"<code>splashscreenCamera</code>","text":"<p>Read-only. The access to the camera used to render splashscreens.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCamera)</li> </ul>"},{"location":"types/tes3worldController/#stopgameloop","title":"<code>stopGameLoop</code>","text":"<p>When true, the game simulation loop will stop. Not normally used, and may have other unknown effects.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#sunglarefader","title":"<code>sunglareFader</code>","text":"<p>Read-only. Screen overlay fader for sunglare.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3fader)</li> </ul>"},{"location":"types/tes3worldController/#systemtime","title":"<code>systemTime</code>","text":"<p>Read-only. Time in milliseconds since the program was started.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#timescale","title":"<code>timescale</code>","text":"<p>Read-only. The <code>timescale</code> global variable. Used to convert real time to in-game time.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#transitionfader","title":"<code>transitionFader</code>","text":"<p>Read-only. Screen overlay fader for cell transitions.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3fader)</li> </ul>"},{"location":"types/tes3worldController/#usebestattack","title":"<code>useBestAttack</code>","text":"<p>Automatically choose the best attack direction for attacks. Corresponds to the \"Always use best attack\" option in the Options menu.</p> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldController/#vfxmanager","title":"<code>vfxManager</code>","text":"<p>Read-only. Access to the VFX manager.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3vfxManager)</li> </ul>"},{"location":"types/tes3worldController/#viewheight","title":"<code>viewHeight</code>","text":"<p>Read-only. The height of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use <code>tes3.getViewportSize()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#viewwidth","title":"<code>viewWidth</code>","text":"<p>Read-only. The width of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use <code>tes3.getViewportSize()</code>.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#weaponswishsound","title":"<code>weaponSwishSound</code>","text":"<p>The sound played when an attack with a melee weapon is performed. It always plays when a melee attack is released, irrespective of hit or miss.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3sound)</li> </ul>"},{"location":"types/tes3worldController/#weathercontroller","title":"<code>weatherController</code>","text":"<p>Read-only. The weather controller.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3weatherController)</li> </ul>"},{"location":"types/tes3worldController/#werewolffader","title":"<code>werewolfFader</code>","text":"<p>Read-only. Screen overlay fader for werewolf vision.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3fader)</li> </ul>"},{"location":"types/tes3worldController/#werewolffov","title":"<code>werewolfFOV</code>","text":"<p>The camera FOV when the player is a werewolf.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldController/#worldcamera","title":"<code>worldCamera</code>","text":"<p>Read-only. The access to the world camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCamera)</li> </ul>"},{"location":"types/tes3worldController/#year","title":"<code>year</code>","text":"<p>Read-only. The <code>Year</code> global variable, indicating the current year.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3globalVariable)</li> </ul>"},{"location":"types/tes3worldController/#methods","title":"Methods","text":""},{"location":"types/tes3worldController/#applyenchanteffect","title":"<code>applyEnchantEffect</code>","text":"<p>This method applies an enchantment's effects to a scene node.</p> <pre><code>local result = myObject:applyEnchantEffect(node, enchantment)\n</code></pre> <p>Parameters:</p> <ul> <li><code>node</code> (niNode): A scene node to which to apply the enchantment's effects.</li> <li><code>enchantment</code> (tes3enchantment): The enchantment's effects to apply.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (boolean)</li> </ul>"},{"location":"types/tes3worldControllerRenderCamera/","title":"tes3worldControllerRenderCamera","text":""},{"location":"types/tes3worldControllerRenderCamera/#tes3worldcontrollerrendercamera","title":"tes3worldControllerRenderCamera","text":"<p>A core game object used for storing camera objects.</p>"},{"location":"types/tes3worldControllerRenderCamera/#properties","title":"Properties","text":""},{"location":"types/tes3worldControllerRenderCamera/#cameradata","title":"<code>cameraData</code>","text":"<p>Read-only. The additional data of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (tes3worldControllerRenderCameraData)</li> </ul>"},{"location":"types/tes3worldControllerRenderCamera/#cameraroot","title":"<code>cameraRoot</code>","text":"<p>Read-only. The root scene node of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3worldControllerRenderCamera/#renderer","title":"<code>renderer</code>","text":"<p>Read-only. The renderer of the camera.</p> <p>Returns:</p> <ul> <li><code>result</code> (niRenderer)</li> </ul>"},{"location":"types/tes3worldControllerRenderCamera/#root","title":"<code>root</code>","text":"<p>Read-only. </p> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/","title":"tes3worldControllerRenderCameraData","text":""},{"location":"types/tes3worldControllerRenderCameraData/#tes3worldcontrollerrendercameradata","title":"tes3worldControllerRenderCameraData","text":"<p>A core game object used for storing additional data for camera objects.</p>"},{"location":"types/tes3worldControllerRenderCameraData/#properties","title":"Properties","text":""},{"location":"types/tes3worldControllerRenderCameraData/#camera","title":"<code>camera</code>","text":"<p>The camera scene node.</p> <p>Returns:</p> <ul> <li><code>result</code> (niCamera)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/#farplanedistance","title":"<code>farPlaneDistance</code>","text":"<p>The distance of the camera's far plane.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/#fov","title":"<code>fov</code>","text":"<p>The camera's Field of View.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/#nearplanedistance","title":"<code>nearPlaneDistance</code>","text":"<p>The distance of the camera's near plane.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/#viewportheight","title":"<code>viewportHeight</code>","text":"<p>The viewport height.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"},{"location":"types/tes3worldControllerRenderCameraData/#viewportwidth","title":"<code>viewportWidth</code>","text":"<p>The viewport width.</p> <p>Returns:</p> <ul> <li><code>result</code> (number)</li> </ul>"}]}